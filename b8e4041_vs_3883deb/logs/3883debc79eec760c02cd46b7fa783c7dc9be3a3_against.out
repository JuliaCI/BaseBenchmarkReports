cset: moving following pidspec: 5295
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.988018239 seconds)
loading group "string"... done (took 0.519435258 seconds)
loading group "linalg"... done (took 9.642203593 seconds)
loading group "parallel"... done (took 0.17400418 seconds)
loading group "find"... done (took 4.103738471 seconds)
loading group "tuple"... done (took 2.068261893 seconds)
loading group "dates"... done (took 1.398106142 seconds)
loading group "micro"... done (took 0.197233531 seconds)
loading group "io"... done (took 0.520786547 seconds)
loading group "scalar"... done (took 57.563959916 seconds)
loading group "sparse"... done (took 14.311065394 seconds)
loading group "broadcast"... done (took 1.332030421 seconds)
loading group "union"... done (took 10.531825521 seconds)
loading group "simd"... done (took 3.640474603 seconds)
loading group "random"... done (took 13.663709681 seconds)
loading group "problem"... done (took 2.250622024 seconds)
loading group "array"... done (took 24.540442399 seconds)
loading group "misc"... done (took 1.167688992 seconds)
loading group "sort"... done (took 3.856128144 seconds)
loading group "collection"... done (took 22.344751104 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.697394759 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145765953 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203233316 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.206849558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279487846 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.171315431 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157857015 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.171332612 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.682986014 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210699629 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138378142 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439331077 seconds)
done (took 6.250322475 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.322566159 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061790749 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170423278 seconds)
  done (took 0.932231256 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093424381 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159790222 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110875272 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095338101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095255828 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.172820231 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095637511 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11035761 seconds)
  done (took 1.533923692 seconds)
done (took 3.577538317 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.504906665 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.972815747 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.546673918 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.183369617 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312280703 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.315298056 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272205775 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222886724 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093366272 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087520697 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.19250807 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.437425318 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.421709283 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.00614303 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071019366 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094496374 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154155637 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.825728118 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081899521 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111673558 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.540563293 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215904341 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116805985 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107468764 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18704725 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134499576 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.146627095 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104071335 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.708012311 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133387562 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.218789065 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083254721 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143313336 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166006655 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.224989994 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111689342 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.740462527 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200525639 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100433093 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100889226 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.730573001 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.128241308 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20672531 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106408713 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070158991 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.167411931 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.104524256 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094424647 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09489447 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087688316 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.176255444 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.649562769 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10757199 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19581729 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093676927 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.756121013 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098933112 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.293305246 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12540659 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097944298 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090970367 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090753021 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.176651165 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096534692 seconds)
  done (took 20.9641812 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.174275932 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.193368026 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080110956 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.164097194 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.129312812 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099069023 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090205814 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08033326 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.132108001 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185795623 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144197248 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.195663918 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076164574 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092523637 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172432611 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24085493 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128705962 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105852846 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090219224 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113122347 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129278102 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098754039 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114168638 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.100559296 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174499495 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209486067 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113817755 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127284622 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090230818 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101546642 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144817578 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151009706 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094230489 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09065238 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177817026 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124005923 seconds)
  done (took 5.448256165 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.237668561 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104639633 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251959344 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199597239 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134263931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.202667602 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178423247 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.307623896 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.242922302 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162560476 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129687441 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09765788 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079319025 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08168427 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096805467 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.832435814 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.173133259 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167710224 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166846846 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117251362 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098182318 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 1.095331956 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105266878 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08777855 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094937701 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08193493 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225271524 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096937117 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.494021132 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084442512 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118433147 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115953083 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209881298 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.18319662 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14435013 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123150158 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115047382 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086247071 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219581345 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10246317 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101347036 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08083514 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079579393 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13493301 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117030524 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108998218 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125869917 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.139511107 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088719662 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112664257 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.163174102 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197262934 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.150034582 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105130058 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.272640955 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12998727 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102028827 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112286486 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.870160026 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139478631 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084272797 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099481087 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098087963 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079905483 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.860896975 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108665425 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.916072987 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083863947 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160475784 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097546902 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118369383 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087746494 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101700712 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113407438 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085359318 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.104681189 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081007159 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087200265 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096594336 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091066888 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114470143 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101787734 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081423343 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148845255 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111955368 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109797412 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125636926 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0906741 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087439472 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130371607 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083927363 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105163374 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168686116 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119649364 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114099146 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11610827 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144136346 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089554684 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086087483 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.355075949 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084964296 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124646507 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101935589 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127775326 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100420172 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082176651 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102728147 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080607597 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081797204 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16194252 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088332183 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082940994 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107890535 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094869816 seconds)
  done (took 29.484435696 seconds)
done (took 56.590965165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.418077327 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083868905 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083644016 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103746643 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084343408 seconds)
  done (took 1.544399396 seconds)
done (took 2.289656387 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310025877 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205436599 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088811084 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192734426 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089789072 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198330947 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185684157 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103039569 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210922213 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086515401 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194703251 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08708789 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106834325 seconds)
  done (took 2.833198691 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105659386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107784656 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103560795 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121603941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086993674 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102307912 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121167992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111230067 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102471062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114698035 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088451541 seconds)
  done (took 1.911231379 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102423779 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10694237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093707866 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119702512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088006791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100515576 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117458512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108450314 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100607417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114626238 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087296925 seconds)
  done (took 1.889303381 seconds)
done (took 7.379827072 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.227694806 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.119093636 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.19423273 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247179896 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.348878234 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300891545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.620126903 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.206297882 seconds)
  done (took 16.146390124 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.119697344 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096920984 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.110105552 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.172069227 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118556347 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097307905 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090920221 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.117249407 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092830171 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093478857 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090832082 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.11066959 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09781202 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092038938 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115249432 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099264369 seconds)
  done (took 2.534882893 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138056941 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118041058 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117717972 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101339982 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095385454 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120507922 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103516656 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097455689 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.115834633 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097470844 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103834712 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.118092252 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099191524 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094800114 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11775429 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119667103 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097925232 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118100912 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.1181241 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100411861 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11856808 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099167499 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117253598 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101470655 seconds)
  done (took 3.470945992 seconds)
done (took 22.903779525 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148871026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103036077 seconds)
  done (took 1.01066651 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165059886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.183757166 seconds)
  done (took 1.110857812 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113270549 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092239942 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140239831 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10479077 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092646349 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109200199 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118197083 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111064403 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094009441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092794761 seconds)
  done (took 1.835839459 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097136514 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097279061 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124252253 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169422871 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11956709 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096136178 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095991607 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113625692 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097932356 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091571421 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115207248 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110220581 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096527638 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130586019 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096635124 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09743306 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119214322 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095993841 seconds)
  done (took 2.7327913 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092443249 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093651016 seconds)
  done (took 0.955333426 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095783759 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092147403 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094277142 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111709387 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092342609 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091787371 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109392333 seconds)
  done (took 1.456589207 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.535807172 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.244839236 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380317777 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074181849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125515542 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.328216319 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107255329 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074379082 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092790431 seconds)
  done (took 2.767943605 seconds)
done (took 12.63571911 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09335852 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.446473117 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.636905014 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133714839 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091603548 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.149145502 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.336054466 seconds)
done (took 2.661298759 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359700001 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166702483 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08534521 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093174069 seconds)
  done (took 1.473867732 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083365908 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100936788 seconds)
  done (took 0.963286952 seconds)
done (took 3.215953649 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091850996 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113180035 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.109171425 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091261815 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.091429364 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091395561 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.110136212 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090110481 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090462761 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090023039 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.111666784 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091274526 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.091860564 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108207754 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092373967 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.21498963 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089124112 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107876148 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090817625 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089791866 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108321456 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091714596 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089290056 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089299345 seconds)
  done (took 3.248289674 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114032308 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09254012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112801216 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096830819 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095566203 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113634492 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095714267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093788882 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113667737 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094520819 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096672908 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095797517 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.110825266 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095803314 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092428513 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.114348619 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0964828 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092393103 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110950841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095880908 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094813104 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11101698 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096893047 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095231384 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112908283 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096992991 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093945327 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112971629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096932997 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095424216 seconds)
  done (took 3.812828433 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099049187 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08871205 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09149697 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117893134 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08818335 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091626666 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105783633 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093249847 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09212638 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089902564 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110700739 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091601942 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090525198 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110367107 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092942894 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094812127 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099270864 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.109873609 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091241701 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092695586 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112488397 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092409447 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090695611 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090733954 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.11023853 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090230608 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092076933 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109003107 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093641237 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090856177 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094765263 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113317343 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09201191 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101900109 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113099089 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091357847 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097201467 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.1069071 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094005111 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087731617 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088584728 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109275977 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091275224 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09714699 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110686002 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091774519 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091530634 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091903097 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110299641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09495167 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089466056 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10953893 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095495454 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093409854 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.113395425 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090073674 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092282755 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088202766 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111089476 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092590615 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088633338 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088036754 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.115115547 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093316545 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106889081 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.117935947 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09227584 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093174139 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110614695 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098540744 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093323459 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.120058214 seconds)
  done (took 7.863454843 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118879503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101245486 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111443362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094318978 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092711091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091508634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11663655 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094203739 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093575517 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116049324 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094644228 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09459506 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112062714 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094819879 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092676171 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09251826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11692702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092062056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092290507 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111240892 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093233155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096101187 seconds)
  done (took 3.001220895 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.243540258 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09867428 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142086504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125113117 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112287533 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124659218 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098161505 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098020425 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114927883 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103597392 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101928744 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11569942 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112639533 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100770007 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120916424 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10494938 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11581766 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104600033 seconds)
  done (took 2.929272012 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107640364 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094728666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157748621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094222177 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093572304 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113181152 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100193258 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113735692 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113273133 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096080165 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101691912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112430569 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095310095 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093607783 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112000067 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095925187 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093593815 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094744241 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119835699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099626426 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117304233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101720058 seconds)
  done (took 3.114634899 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108958269 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093968095 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130552146 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098308102 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094303752 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093694107 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.119129464 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096198755 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099213874 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112644003 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096056769 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093375143 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.128015022 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095421841 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099997633 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113440334 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095476247 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094029276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113509128 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09446746 seconds)
  done (took 2.862888151 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197315594 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12995626 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11149679 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11814603 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130194978 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.1113386 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137688179 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112378676 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112670543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141454999 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111259121 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110389806 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137531456 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116011959 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128142203 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119473712 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117543858 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137449532 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110302505 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127713797 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123423586 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109478098 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137030135 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111597152 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109412935 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128408858 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110901882 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134239207 seconds)
  done (took 4.277280232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093356075 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093404545 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09213539 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112086949 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092592291 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091965605 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092313205 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110196625 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09258866 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091775707 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111615311 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093222539 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092455472 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092273186 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11179166 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093703466 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092923967 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109975647 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093933035 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092467135 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091322367 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11151921 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093008755 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091958411 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091893669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.111519977 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093042907 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09287431 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110937362 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093389879 seconds)
  done (took 3.721736542 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106541621 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102363296 seconds)
  done (took 1.006430706 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101266649 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107598738 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092267948 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112266232 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10204936 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094005041 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120017636 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100324001 seconds)
  done (took 1.628576162 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169333475 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192130997 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098517766 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12413939 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170573018 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182922703 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132114565 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119279763 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093204101 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085711528 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.1837381 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085731293 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112655248 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090620043 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093110793 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120024969 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095640863 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103771646 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119548443 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096526031 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098146839 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117601058 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09702861 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104471316 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107547126 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097500666 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096858685 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124698958 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092290227 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094835594 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111502937 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095376444 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097080921 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098398197 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114624283 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170268231 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121253059 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090992646 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095110139 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120648304 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127685371 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094099816 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116079216 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09386459 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099128528 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117130817 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100599035 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094056025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10565289 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090666139 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093636768 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108683094 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095260647 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094654984 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113479584 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102571912 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095298012 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109188187 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091695389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088917522 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092175688 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109220593 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096622133 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096294508 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114784988 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094710717 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092677916 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.114957356 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09627607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095256038 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112450612 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110427101 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094631866 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.119646081 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099674198 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095935384 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111389933 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101040991 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092550107 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113879635 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099067905 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123187034 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114789946 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091820266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090475052 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.119576449 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097686445 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097994235 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086116397 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12259946 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097179607 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095178584 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106870154 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093955523 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089813656 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116450912 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088364379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094699683 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.113359947 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101324198 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100643664 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091980621 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115993381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100004477 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100106725 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113128073 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157836132 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111831121 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090422532 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096993061 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121531167 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089460887 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094200107 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.113431603 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092983123 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090840043 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099748649 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113772708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097542012 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098988705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116894683 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097057873 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09586233 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.113129889 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091695809 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098055975 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123669288 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097640699 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096222572 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.11642507 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095955568 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094464387 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098804813 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.11232399 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100177892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09154558 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.1151314 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097528115 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100397823 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11442328 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.093051288 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094352431 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.116192708 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095697714 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096990406 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11620933 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091562691 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086200906 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114730581 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091993542 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096711391 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123492869 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092571339 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097140496 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091500463 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124356666 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093205987 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099658692 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116678246 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101600141 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099783499 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106259183 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093883168 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096651257 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116101426 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091870412 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095704629 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094795364 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.122505034 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089202964 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098541791 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106794376 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09261499 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100143042 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115886524 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099199207 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090408424 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153708164 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107914281 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099565943 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113802251 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095754286 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098734483 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09336739 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119890455 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100542115 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09982708 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113862594 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09386466 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099904743 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110689145 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098539556 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09349925 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11626716 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088764989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096462196 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086910983 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120261731 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097404705 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098225409 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120005414 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097654038 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092926203 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125096425 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09299758 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09886767 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107977907 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101964643 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105276516 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120501008 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102406179 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096049575 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112185495 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098435982 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103913773 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097662 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115335407 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096751969 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08815716 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107822929 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10226929 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098193632 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.113031692 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096402902 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095927841 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116031235 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094061961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087870252 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098848184 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119312379 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090971973 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09482819 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.112785082 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093357472 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103118071 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.108459602 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092859923 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096941797 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120201668 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096057606 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095427149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117261839 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101772299 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097386267 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097336679 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113761254 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103193849 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092603815 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.115643756 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091527142 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099292305 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.120659757 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097805804 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.096049714 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112066765 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093275758 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098747264 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122835313 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101480223 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093014342 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098758648 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.121036969 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101030096 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092988989 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120663668 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091477624 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087752081 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110956707 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08950831 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098009251 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111098904 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101244089 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094470184 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094356133 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119812931 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097182051 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093159403 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.12090036 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107158809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.109260472 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090428818 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094446158 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095515219 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.112449635 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092118138 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098317391 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117301719 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099560146 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10844717 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.112649451 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096784165 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10157849 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.111742632 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103383887 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102120948 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101030655 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.111726359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10072894 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092596132 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119633509 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089257999 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095251359 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114502061 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095939225 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092452399 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.115009527 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091783389 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088726786 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111495114 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102515829 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094216451 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.12097942 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095609225 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093353212 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092764939 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112518288 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101180465 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094377504 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122670697 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096538115 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089180196 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.109483755 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102251271 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09504847 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.122181668 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093576215 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098718489 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10102423 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.121593465 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096795898 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103600605 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124943472 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101731722 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101533512 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.110314866 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095010545 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100429391 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.116943712 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099463277 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097663955 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089475205 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118867071 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100528775 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095972539 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.115315711 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089415351 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097146362 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.121660723 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098687201 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099072305 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118161954 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098650743 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090468767 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09972155 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121487516 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096648952 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103790084 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115993102 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099403702 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093237695 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122115529 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097568692 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090474913 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.109405742 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094973181 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102463588 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089628786 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.12110304 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100809119 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093060647 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.115674486 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100600572 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092975022 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119042931 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102504655 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093447289 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126622946 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097357771 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093983739 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100750381 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122145491 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089428761 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094660152 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115494785 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102783183 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095731028 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.122569637 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096869791 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100965981 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119112982 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101364426 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10114296 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102022051 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110394486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102456813 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098351892 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120339186 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093015529 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095275663 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112249679 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096254489 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10261696 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.115322696 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106675087 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102969938 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114494727 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095933358 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101770623 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095186616 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125168012 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092804469 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098760604 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.11003152 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098469715 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095084089 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.125174437 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092563586 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089243681 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121850062 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101807918 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099996584 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119309026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103033842 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088746272 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090086596 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119853579 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093336799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106437767 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120523846 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094432888 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094591288 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.119651528 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097926559 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10317129 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.111391819 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094799206 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097367759 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117878956 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095810158 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091124926 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100380083 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116382607 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098041798 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095599308 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112084924 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095467727 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103188541 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.115463147 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092928647 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094021803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12481273 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096408419 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093267377 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111353337 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1029647 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097683092 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123608596 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09372826 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097255105 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094486038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.120641948 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102824598 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094849911 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117614607 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.096113269 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101885721 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122930157 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090131852 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095262603 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.129799397 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101570458 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097279899 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.120559605 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096063892 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103432217 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124276209 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100383646 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091252526 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091434882 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.116503433 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091068145 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099252914 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123691917 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097143918 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09480193 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123444887 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102353169 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099072096 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099763106 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111795152 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104421798 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09328358 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121250335 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091503326 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090715726 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.119625618 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104262072 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095305206 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118499636 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099939873 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09976087 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092028253 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.116135649 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100589817 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100146534 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.12445151 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099602121 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095644845 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.122707853 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107681291 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097462324 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.117164481 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104265983 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10248915 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117879166 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096754482 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099512165 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.12457499 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100396496 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103718706 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094998673 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.117654557 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102818313 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103459525 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127364241 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095021301 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091497948 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122230627 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095836279 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09090318 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122014888 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105826866 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103969157 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117321554 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095460184 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105897125 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122482126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097785898 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094855568 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095810019 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.12323718 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093563365 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100740743 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115487731 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104760598 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103314395 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124483707 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10688112 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090754488 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124141834 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100607905 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103656198 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.118650703 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093646825 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090870005 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100977366 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126324514 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103018268 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100277556 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.122034513 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102122973 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098151308 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118393827 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095636882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10365075 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102121506 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11978695 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09882807 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095911847 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119475528 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098531105 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103593202 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124488176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099009797 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107039171 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124119834 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096432584 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093689009 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11924191 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100488687 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098438286 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101517449 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116391058 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092245319 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102257417 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.125773676 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097497035 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103830662 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125947301 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096839689 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099658622 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12724153 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102857703 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098692159 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098408534 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122084449 seconds)
  done (took 63.097064859 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149458182 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106092123 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119558989 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0987884 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118744988 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122528291 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099459994 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099837347 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121069516 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108952612 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099197531 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119573097 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115714295 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118979097 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138856345 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109686015 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12009537 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101984757 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097916991 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100151772 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136225703 seconds)
  done (took 3.256289994 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116634803 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112210079 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131357207 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113957159 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106127462 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133020268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109481031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131076166 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113035742 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106901094 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134683887 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110589482 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129014521 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108023373 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107481895 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129628496 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113807978 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105919126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132016159 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111136479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128994057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112150295 seconds)
  done (took 3.451160445 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129388591 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101892147 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097321174 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120885274 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102315804 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098952178 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122809821 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099437714 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106821126 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115513782 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091582596 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09426499 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098631886 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121096824 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092855524 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099181816 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12855748 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103043341 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104000097 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120543331 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091424964 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099618534 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100423246 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111524378 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106441119 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104606528 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120377668 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103698941 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090831034 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101458014 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120994158 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093429967 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091178006 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11189293 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092386399 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.1012663 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101297728 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121355656 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100524235 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089840196 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121586202 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103054934 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090253028 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120369217 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100788026 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093447358 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102522395 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.121063021 seconds)
  done (took 5.915910326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129397321 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158044958 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103665068 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127649054 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136414484 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110121056 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101799817 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130485867 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101516261 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125555561 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11512309 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113196168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126787701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10585564 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10534056 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128112521 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105020827 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102313709 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12879487 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102143645 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108297431 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127932539 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113906175 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134055874 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106930008 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103136998 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123231732 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107834034 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114811318 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130635327 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108126529 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10820112 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135093855 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105884624 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103652776 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125928305 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.429837691 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107310504 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126873536 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102307772 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104052827 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127970184 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106636326 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137179526 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106400611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105869538 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124022405 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103344356 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112235711 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12550772 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110798517 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114301406 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128574521 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105160091 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106006218 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134999639 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105290694 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103031957 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127783917 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113309451 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102202173 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12816553 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113451508 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103885906 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.13344148 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114417902 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.126822971 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107288643 seconds)
  done (took 9.206825393 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134963182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107191285 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137609608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115738461 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107743031 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128823645 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107878453 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107268808 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129963455 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112193177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128810654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226585448 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.129390895 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11250879 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106734243 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131247417 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109467342 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107533577 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130432647 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107703919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130406806 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11644707 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107411424 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138496243 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120182322 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104789443 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130375797 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108768999 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137249157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108951354 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118507668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129668793 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110794326 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116060499 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141392352 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108865171 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123379027 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109795806 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106948796 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129527016 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106951449 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116171198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130699651 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105423741 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107886904 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129546362 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117037369 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119114449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.135097906 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11303714 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130720882 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117716297 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108410503 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129720407 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116757585 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144570759 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117608392 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115293013 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129452495 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115990867 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137576014 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123524018 seconds)
  done (took 8.413378964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102266217 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099472217 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100077041 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123015992 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10253322 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101191639 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099986388 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123112653 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101018014 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100988191 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122510202 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100978413 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099672591 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101438737 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12354993 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100701772 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100452998 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121018252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10106362 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099556375 seconds)
  done (took 2.996421473 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110672942 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118488252 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124542444 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110308301 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103145938 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130459328 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103324592 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102646852 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103345334 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125988717 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111352149 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132923537 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103433544 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109425298 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131634547 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110360682 seconds)
  done (took 2.704773212 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120948132 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119394233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211376181 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104525722 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126014698 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110869755 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103091462 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127519079 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102340529 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107714745 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129291581 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106269728 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103531811 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103274236 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125142729 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105976396 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10230896 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127697943 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104945957 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216038436 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107274466 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104789513 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128980298 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107095532 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105869678 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130827391 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10940672 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103011842 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127349993 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107326707 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105079144 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133005461 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102418052 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108112281 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103676661 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126841689 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104113309 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103140979 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.128780063 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103898199 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105516561 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126338691 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104027265 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105521449 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.12333831 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105791316 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101524572 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10916025 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.127085923 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104416421 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105057634 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130701747 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108892479 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112180187 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.133427232 seconds)
  done (took 7.287447098 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115482004 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104599265 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136868592 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102412605 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104144319 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104747887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128353612 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106011526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104928218 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124400386 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10543303 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106100015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127427518 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105515373 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105066434 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127366127 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102081207 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104686706 seconds)
  done (took 2.892224702 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109060656 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104083837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107251767 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125813904 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103836319 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103459595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124835847 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103167728 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101754699 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103339467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128000146 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103586846 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102777176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125692031 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104260465 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103407843 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125377047 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103401137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103936192 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102089588 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127027467 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103214871 seconds)
  done (took 3.301290618 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115648715 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213382931 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109794968 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.22445899 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099867309 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121661142 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110951679 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101185842 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13983091 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100654979 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100117411 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.121077477 seconds)
  done (took 2.440680411 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131116324 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141238631 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127291537 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10556042 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113092035 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131358114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109155431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108556891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140671101 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121046329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130805949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117065096 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117344321 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140106504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112935171 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133907392 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108657812 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1080951 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126029295 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125476571 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108364618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138985132 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108202726 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108787716 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130902121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117299833 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138200605 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119972449 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108859514 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14007759 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11337168 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108283044 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140213501 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118940335 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12722351 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116476614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107581558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14474634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113122765 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138374719 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105900548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114329971 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138902999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114928372 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138241183 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11021206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114252168 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131151245 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109429209 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130156985 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135477773 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117557407 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137266269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118073324 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117292779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151151134 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120360487 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139221056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113753293 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143039488 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116559864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11290067 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140265393 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121027262 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135677798 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116742289 seconds)
  done (took 9.02421956 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144145215 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10508117 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131309226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121931427 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13932044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108795399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109246574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131138883 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109592498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106221958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175172485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109135317 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116190962 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139909482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109728409 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132044236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110502041 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117136265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128831956 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131999048 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130907429 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117891738 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11749902 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139057418 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120623929 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136502135 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109706548 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10936279 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131094603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110174345 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113845832 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131597949 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117306188 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105236357 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139523189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109378643 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110951679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137210535 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10955597 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13649529 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119115077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123446075 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131859855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109815989 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141788631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11216615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10994331 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127157162 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109873678 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106425196 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142037266 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120947643 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143502536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118908487 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109793431 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131540959 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108576307 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109168771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132394839 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114731419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116846981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133055258 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131376692 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132445473 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110809901 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117988816 seconds)
  done (took 8.970286864 seconds)
done (took 171.204345682 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176007158 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216356214 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198226953 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.192821238 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09529459 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.16818235 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138786923 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.198885766 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095548952 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095537498 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093830228 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121391345 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.19658261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096375245 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.12033737 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098058838 seconds)
  done (took 3.187266412 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196659994 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34752436 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110465165 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123574304 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101706159 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100666712 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122759466 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102356592 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100697721 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131071346 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099988413 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096345702 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130881727 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097093911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100778458 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123557681 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106946561 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100062026 seconds)
  done (took 3.190367295 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121693827 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.193526705 seconds)
  done (took 1.215616734 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130851695 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218329509 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298559684 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173573889 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121207034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141380618 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152436912 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134967233 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192413644 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136015481 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113491178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098046616 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148883738 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107603348 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140344803 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099044997 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128935879 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136713545 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114837997 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102215722 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147519108 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105061196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106339361 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138246421 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182341693 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137495068 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104917951 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103560865 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125905885 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114003673 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107650841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.14080366 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113225292 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181932772 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103748249 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178880639 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107028205 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124365186 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114621489 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100517671 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127204864 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104597728 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136292471 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099751861 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104160732 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129399416 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104963278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103552274 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131741892 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108747768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108611926 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131217873 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175533145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109467901 seconds)
  done (took 8.006605449 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.916113424 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149096962 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100395588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.035870833 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149307674 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113180734 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.880790427 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148750899 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.262468782 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875993379 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117948239 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107251907 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.266744744 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260890718 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.29819651 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363410179 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.746725683 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114226676 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132545696 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165388071 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106204148 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142648657 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117433439 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517865225 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100931829 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099684883 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12927922 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109801532 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182492829 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101302198 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10336077 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19921409 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295875823 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214073172 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100609093 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122745846 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10109449 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.188025935 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281683167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224917568 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174907508 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120438779 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099610991 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104918998 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138221139 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097451988 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182337363 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19239793 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169082116 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128758552 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109949946 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108536427 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127842025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179790322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099292235 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364758675 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364106357 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12284104 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107195196 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112516752 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275510385 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126058279 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241825374 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123357028 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220712145 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123463046 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.890688893 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164856928 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122243268 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105854732 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106963811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130359734 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104604084 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190925536 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.478098577 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131448629 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106276922 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100976807 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237706485 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100961163 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124391587 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183676081 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103069531 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107172637 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132350769 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108135469 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189499936 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249008621 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131438712 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107177037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128903613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11311641 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101856458 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.241055863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233103945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.178659172 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.238088935 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106711195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18246622 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186551446 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107947736 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190924069 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106746675 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113432372 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128100088 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229436229 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136040973 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125829968 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107131431 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107781723 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160790628 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105579418 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131436547 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166829176 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.556425716 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188334913 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098194051 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128799409 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107944174 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183101846 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107986567 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272021463 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108594675 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187331224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128437213 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099781055 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106879374 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182150467 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108498224 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130550121 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105185373 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110930587 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.284404532 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225728286 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133403137 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257933289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18054775 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130104324 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172721126 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13212155 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171629577 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134666846 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105476751 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102931595 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.90358327 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114421533 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106630669 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129690863 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185273491 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101263575 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127967669 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101235918 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101258756 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.854040657 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129163073 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104946586 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104497226 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129311277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107707622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107137367 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130608019 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156997478 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270091119 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110541361 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106173767 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126132031 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159344146 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125504018 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102409322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102280604 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12718426 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108294637 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106335799 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127945669 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169778573 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178038701 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232690414 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.657056878 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124763631 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101661601 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246388664 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124272926 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331189042 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108871457 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237455196 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18690603 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098795594 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36438216 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18800163 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209778632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104571468 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194570413 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099398743 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107250649 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182062118 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12578471 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111473393 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177597794 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110668193 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108849456 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.306674683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102909944 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257103853 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100581296 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191675981 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103921106 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108145805 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330467024 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124785911 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114514562 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180520931 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106597215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12516019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.613233918 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127020552 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112537286 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129521568 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237732955 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16339494 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131599975 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110086206 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133888674 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158914342 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.238764231 seconds)
  done (took 48.217919403 seconds)
done (took 64.713818149 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261590178 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171602757 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.378251452 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15261843 seconds)
  done (took 1.959787694 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272171413 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169999481 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.255631949 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098494788 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.261645003 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098252159 seconds)
  done (took 2.085475465 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.180089661 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17180865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148994156 seconds)
  done (took 1.430732986 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211922061 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210280721 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350390437 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260284356 seconds)
  done (took 2.047543826 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.285245421 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118131363 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12560871 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.240291171 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252896405 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209098588 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12353638 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177363826 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130870552 seconds)
  done (took 2.630546733 seconds)
done (took 11.080510658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.220181491 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.253806717 seconds)
    (3/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.257821194 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.307565019 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103633291 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.238681748 seconds)
    (7/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.231515194 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.224747993 seconds)
    (9/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.286073041 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.341411013 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11204686 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.200404395 seconds)
    (13/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.259507093 seconds)
    (14/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.330612224 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191122489 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.145122924 seconds)
    (17/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.210330168 seconds)
    (18/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.242651317 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111157013 seconds)
    (20/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.133591988 seconds)
    (21/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.215163116 seconds)
    (22/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087523211 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.227294477 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.237318656 seconds)
    (25/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.372229806 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129081778 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106784459 seconds)
    (28/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.226104381 seconds)
    (29/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.173799126 seconds)
    (30/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080702441 seconds)
    (31/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129672425 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.383029365 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172159672 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111725591 seconds)
    (35/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.263349271 seconds)
    (36/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.162348019 seconds)
    (37/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.179806175 seconds)
    (38/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081451699 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.160082787 seconds)
    (40/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.254480964 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.359671785 seconds)
    (42/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.11173453 seconds)
    (43/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113468689 seconds)
    (44/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122441758 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.128897257 seconds)
    (46/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.134173697 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112309533 seconds)
    (48/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07817705 seconds)
    (49/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.264818033 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196717613 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.262308356 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107424345 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.277337433 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090082126 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107719424 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125682952 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.139643735 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159369498 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104457767 seconds)
    (60/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112642396 seconds)
    (61/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.271596549 seconds)
    (62/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079051324 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108109977 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.147822499 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086796652 seconds)
    (66/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195185016 seconds)
    (67/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.10459235 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.134420236 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08771716 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086546201 seconds)
    (71/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.175651527 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10493178 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.273739768 seconds)
    (74/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.14811688 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220216901 seconds)
    (76/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087256417 seconds)
    (77/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.150163509 seconds)
    (78/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.146583236 seconds)
    (79/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103194687 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.1090022 seconds)
    (81/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.175712079 seconds)
    (82/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078600498 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173903749 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.134108535 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130756432 seconds)
    (86/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198877944 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110920809 seconds)
    (88/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110741597 seconds)
    (89/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.107440757 seconds)
    (90/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112987203 seconds)
    (91/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.1190833 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148523496 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083454537 seconds)
    (94/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080942695 seconds)
    (95/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.145661051 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086171014 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.132595353 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11896883 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124366863 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.112238644 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082032219 seconds)
    (102/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.08117827 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114232823 seconds)
    (104/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127092139 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101676478 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111441476 seconds)
    (107/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086162004 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.160673225 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080875229 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081052207 seconds)
    (111/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082945185 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.112982105 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130030921 seconds)
    (114/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.139556504 seconds)
    (115/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136144897 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086698805 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086940664 seconds)
    (118/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081287712 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082025165 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130937251 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106787043 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09588873 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103259919 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129846889 seconds)
    (125/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.151085135 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113040003 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.155059941 seconds)
    (128/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104677347 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087095014 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081938912 seconds)
    (131/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13713343 seconds)
    (132/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083845788 seconds)
    (133/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111351031 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.110067977 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080632042 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10518258 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101223696 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128690876 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.201181658 seconds)
    (140/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083133546 seconds)
    (141/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.105397831 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107130034 seconds)
    (143/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.0866481 seconds)
    (144/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.087182525 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086600817 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129768178 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081421457 seconds)
    (148/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115625178 seconds)
    (149/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149467261 seconds)
    (150/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126360761 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104595703 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.102563811 seconds)
    (153/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.138777145 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087940442 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102416725 seconds)
    (156/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.138644306 seconds)
    (157/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080893597 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.084275172 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083670486 seconds)
    (160/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.132817588 seconds)
    (161/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113946893 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.088352995 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103198599 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110899787 seconds)
    (165/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.084124454 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10266948 seconds)
    (167/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086304201 seconds)
    (168/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081057235 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.137012395 seconds)
    (170/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111630885 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126391352 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.111849699 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081189445 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106296059 seconds)
    (175/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086438226 seconds)
    (176/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080857209 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130860775 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113124022 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103428376 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104633627 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107054046 seconds)
    (182/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.139287125 seconds)
    (183/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.086444512 seconds)
    (184/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.109087546 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.089352493 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125894152 seconds)
    (187/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111345933 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.108196999 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113015 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083660639 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106377284 seconds)
    (192/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.139715672 seconds)
  done (took 27.61605355 seconds)
done (took 28.552655544 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226258451 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132878699 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113765793 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112100847 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234154078 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120410843 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155621955 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114819629 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123211967 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138267234 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103223951 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125986272 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.139367862 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206363602 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.140964504 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105413126 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103598439 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148733439 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12915532 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128177543 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233676503 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1052219 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149590251 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103559888 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235300732 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106293615 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111687317 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140312675 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125908749 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113419939 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139504612 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104939811 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127992044 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.15258742 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104212694 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112498733 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102689665 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111623971 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113906454 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114153902 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.149943858 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114776816 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111948244 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129962197 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115405807 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111943984 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127789364 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.1187357 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102258604 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138032078 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107215589 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128945099 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111721051 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.127537587 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102830954 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103352668 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.149048772 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104773868 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12652454 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127310393 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105487157 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10342223 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.139349145 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104612465 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112668658 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102913227 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138756401 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114997445 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111888111 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130101251 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103674986 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112225863 seconds)
done (took 10.167001963 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108958548 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14884309 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235609919 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.238007711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133957747 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146223902 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119783249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126225479 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143000517 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123752399 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141056765 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.1614412 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240843546 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121554773 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120423903 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141575197 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115518601 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11287874 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238602269 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131475797 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156066076 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12041231 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156403548 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122505033 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107165024 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166969417 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112958289 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116201648 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132374375 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118021223 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128808628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131858877 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112163286 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125934032 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149333515 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118635408 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120113808 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140793602 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109282752 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108004516 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141158453 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123603288 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107378808 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146505921 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116316956 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122070761 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140607126 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121707656 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108341291 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139311081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111817641 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133434915 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146826981 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12509398 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119907776 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.147050753 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120572386 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1206365 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136610389 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121438487 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107300446 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132153257 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11042312 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129411499 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137429697 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12079483 seconds)
  done (took 9.855992791 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128082978 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138148015 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143120365 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119283465 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115018606 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126668482 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102456744 seconds)
  done (took 1.851855044 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104133354 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246471147 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217092411 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245980162 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.243274861 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.255787835 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126767098 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.129654337 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.140270142 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113923495 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246311141 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274300384 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113451229 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146486016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22294546 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130785206 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.2483577 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.105022363 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118338373 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249695788 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122129497 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163319861 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117992589 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103314954 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239664346 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105041011 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.294566649 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151141147 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114245394 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118311693 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146415966 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186375027 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.241939426 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119063464 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139757996 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217642062 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.244347413 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145737248 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.231717385 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.13680322 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.216362081 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.147080366 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119412322 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145543299 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11991071 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.232302795 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124530711 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119592233 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143585787 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.225697276 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.143244752 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.2177705 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142884022 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119442912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114521546 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.149101642 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126186298 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118712512 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.252723338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.149554912 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.219065637 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.248136932 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246054194 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.24971744 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129550273 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248946252 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234045055 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117754569 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113193095 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146398366 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.221911739 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.144792086 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117474995 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238714923 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122112456 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251067262 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.25005645 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116644791 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116789502 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.135053836 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117515921 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104987024 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.240966746 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118205465 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143706193 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123578494 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11829067 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.146483991 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109482708 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152828164 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120882411 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117075851 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149369274 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119657814 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121260253 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.250483738 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115736715 seconds)
  done (took 17.168582332 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107824536 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105739215 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110498409 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133170566 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107032885 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105451468 seconds)
  done (took 1.680279594 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14437632 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120289668 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153051935 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121273801 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16729376 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.252683738 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260057861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112961921 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166986318 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132397283 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255116939 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257565086 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256386793 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125335911 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.25896701 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123032265 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264084211 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117647293 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128221543 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144565031 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120028392 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122616221 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144865559 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245783141 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122183275 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120611357 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140467303 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129272584 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126944425 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.142305108 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123339427 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119387249 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138113373 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115049756 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262704705 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111254162 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142200066 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12266057 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123173135 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146632194 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.231713055 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146620181 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127603657 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121625732 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.143194326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112078708 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122213516 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141070244 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262399639 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123232501 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122928691 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147989909 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121121897 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123451033 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.140614808 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115269756 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122831122 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260197264 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.15223556 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114454988 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119419097 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.147565553 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137039913 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123578913 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147346601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123490214 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112505298 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14657667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118040499 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120560024 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.148013585 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122524869 seconds)
  done (took 11.909960827 seconds)
done (took 43.440136487 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.62422498 seconds)
  done (took 2.628052072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.161126356 seconds)
  done (took 2.168748554 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.762342125 seconds)
  done (took 19.80020518 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.444085382 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.485478006 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.179121451 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149594233 seconds)
  done (took 3.262114617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.856383622 seconds)
  done (took 1.887091019 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347954792 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258900731 seconds)
  done (took 1.620551677 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811720541 seconds)
  done (took 1.835987314 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.572107039 seconds)
  done (took 2.589621627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295865068 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.251011878 seconds)
  done (took 1.573013789 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.651843437 seconds)
  done (took 1.675704991 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.541327218 seconds)
  done (took 20.569080189 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263737728 seconds)
  done (took 1.292045867 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296467448 seconds)
  done (took 1.327169468 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.753808986 seconds)
  done (took 4.7867666 seconds)
done (took 68.035640358 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121721484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124072062 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122649605 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.147144549 seconds)
  done (took 1.537111318 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125961339 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121265071 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149185592 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121078874 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126571962 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119518132 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145974359 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122959351 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119178773 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147633089 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120364049 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119974055 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150684804 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119811744 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116770296 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149605407 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124895072 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120789522 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14889128 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121373814 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122117414 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147541248 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125030285 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122602742 seconds)
  done (took 4.142338492 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117018862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110259412 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112604264 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135458567 seconds)
  done (took 1.511233866 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128648482 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134399284 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156189695 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12733812 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132839518 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157308063 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119339477 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118443973 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144550435 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129253587 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136534122 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159478869 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133373664 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121306417 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157603002 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115673368 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120516722 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157776209 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126869556 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128135219 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147817052 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126122044 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.125766273 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.157467859 seconds)
  done (took 4.294298179 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.198200973 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133303125 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178524378 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165491855 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.182469432 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119821941 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149631109 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.152972595 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128164901 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.121833858 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150117553 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16715757 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154130354 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122798926 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12057071 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153591668 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.135180807 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125536983 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.193270597 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125311117 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154884849 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13272428 seconds)
  done (took 4.300593392 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123399281 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111344885 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.134664121 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109030415 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123022209 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.1395799 seconds)
  done (took 1.786442605 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109305799 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10492256 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.105487785 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130375098 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108008358 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104340782 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102734293 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133204509 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104880655 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103303849 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130125695 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104938205 seconds)
  done (took 2.377100328 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208297717 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147428734 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258727174 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40180773 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190024374 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163461639 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.316496183 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19205487 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179660347 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165871442 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216643751 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16496574 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182688036 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188464678 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168944878 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161699333 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193665619 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210834352 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170309926 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242467565 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159295955 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20335931 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192357632 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179056079 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140681228 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191986216 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119579452 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129476242 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19720769 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194981149 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179390829 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179243115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143838892 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222169104 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265329691 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207326085 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27394161 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135161671 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200685715 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193683289 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26514503 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171206828 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195092686 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183875338 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130278578 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217406627 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155907186 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.216636138 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135487271 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174949412 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215131966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182451902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203346599 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137855658 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332606053 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136343665 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170301195 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17910441 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218352906 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229643798 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206401108 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124886621 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201894598 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192514845 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242613883 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172383722 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.167010135 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152797363 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168606287 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235749462 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183448049 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189749618 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241640644 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131702083 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202041195 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19714162 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1583744 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236576732 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174075628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148624836 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154205713 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163117251 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127030958 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191183879 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14934008 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245591635 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133839436 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344724423 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180140575 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185829497 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19126245 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163884178 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192718082 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150626767 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103359513 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17398218 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162792909 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189715116 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128613911 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185348151 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140694847 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126465174 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183568385 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123498875 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201327627 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136645379 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193432978 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174080936 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.162025143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180495299 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179383636 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162327556 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200615245 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221973619 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131845467 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131684064 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249688316 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199207874 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137927805 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204229044 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196703575 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181135115 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135616896 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196149524 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222440647 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14486053 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229754147 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139335317 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163138064 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142427679 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200023551 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161967734 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.19025017 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128945029 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193616172 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194880299 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15465563 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141861754 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210915298 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134657697 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124602158 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167027036 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136712427 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171230084 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150974087 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139403272 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185891585 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19572908 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167858846 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187793014 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135626255 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204765145 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130686871 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196760357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150423877 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118650004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204832402 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228217219 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129962127 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211554905 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164497734 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211725807 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201832719 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130467987 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213280055 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129610826 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120434239 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192275079 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169678979 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195282654 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217674608 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180832702 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194224768 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192087625 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150207998 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200399646 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183706322 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185983427 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143714015 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205164707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197951499 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122604068 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124576875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155726297 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138514611 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131608077 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169375799 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183455661 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194737822 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204788752 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169398217 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168282922 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191643295 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.156107281 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162701206 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205016224 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139702891 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220241065 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219502006 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179899483 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170013729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163515486 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148982702 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127765898 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135621506 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192425238 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137394008 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164199861 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142085596 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222242228 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174742752 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179261483 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2185713 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16794908 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230871259 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121519154 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.191099511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169903031 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198052001 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187765497 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161773504 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163931741 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222149828 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143563088 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224953676 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168383004 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209921946 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228487575 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164743226 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16004619 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14919956 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190103923 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138641723 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190083181 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14657248 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131118209 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183131807 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138345945 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169653418 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187780932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174754485 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209731977 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158263701 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202557043 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125805034 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169803157 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176275698 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175203215 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.107169564 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171858796 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225774381 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180571915 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159145307 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204447647 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131339118 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348473294 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189191237 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20890359 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137155361 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168873151 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173283488 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190341034 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163356318 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21456674 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141911203 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238387647 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203443888 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142807127 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160315987 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149774773 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150745636 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170244135 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180536994 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163562769 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143445895 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219896888 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168253729 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171135729 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209298263 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146437197 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179023324 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140851151 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257914013 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16855684 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205165545 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192342825 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.166946648 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213262874 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123739059 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126850907 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.16279661 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187147682 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157695263 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179098683 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194011263 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211996931 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17770507 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193059676 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141611094 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156989516 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169278998 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179403051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185296818 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163828584 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139652955 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222473193 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128636958 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161152476 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162762457 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320863079 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1490186 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20271216 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108118288 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.315834297 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129844514 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162055594 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163249112 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202152941 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13436115 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186592652 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201993912 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142669539 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193539415 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135769709 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208691412 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213816086 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167981348 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208193723 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146561654 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194011543 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192489702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176791755 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176180574 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150285033 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189086545 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196892496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207820352 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133942801 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199574541 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170724713 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20268611 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177325203 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170351062 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183559445 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158420635 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168145824 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169239678 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125583916 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191824463 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.168015989 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160203472 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177937782 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201625081 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13249569 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157315256 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148510156 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19707087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141355057 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13142621 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218038201 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130738343 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213269788 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244967255 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131036845 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197484261 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148205438 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131319771 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16927404 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144643882 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161733136 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176198384 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212179216 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133161277 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20933493 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167695907 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198524268 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159733511 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175521552 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265804192 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127955588 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22397499 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181730582 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198546058 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181849451 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176859222 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199985277 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152246945 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196606356 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149335191 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252267135 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167572496 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198110039 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131222763 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174104124 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140271748 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.164030636 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154065472 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198708788 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144461318 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13754263 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198005486 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14610992 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179713845 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143269266 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231406732 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153351973 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222805009 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218190666 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139138713 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207320638 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176632657 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16201341 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.166887703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204263545 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145248638 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184436024 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135137785 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.170137069 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214725979 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.156582622 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162843962 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205410059 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17131997 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202161602 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13684324 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210028943 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141844713 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207622282 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128947194 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182482772 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171419633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134078991 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.157539167 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173228174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19246414 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165844134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173943139 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177848035 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225602711 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124056628 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134228451 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319127383 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194971093 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195522839 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168611944 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137315436 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177704302 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161017123 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.198128756 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171539691 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159457778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130921956 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146362117 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188938621 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144551134 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199570211 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182020842 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193481657 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186803853 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.165581043 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255218488 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173002097 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174064104 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.148735954 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130082673 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140628498 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165376127 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143621266 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212425337 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247811681 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165213956 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178100372 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138327158 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126172749 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161329385 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165437239 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181759635 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169897234 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179604474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105179087 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14097023 seconds)
  done (took 86.497391395 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175828085 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.27431114 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.199471246 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.31909351 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252735211 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.314217891 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.287865866 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267160021 seconds)
  done (took 3.220496475 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123054056 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162902349 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145221191 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146619902 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11099519 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.494973977 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162370857 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124079326 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16420496 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154222545 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138164008 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.585389804 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11893342 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14921255 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.152337878 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.142923552 seconds)
  done (took 4.194808083 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.484992051 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.564722023 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.409997039 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.29329833 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.274353534 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.216446099 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.81642938 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.212540226 seconds)
  done (took 13.395893779 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.177371857 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.172984428 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.465170815 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.317909631 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185811408 seconds)
  done (took 2.450176031 seconds)
done (took 130.732250103 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127109181 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125419719 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124591961 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15854118 seconds)
  done (took 1.657059043 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197098109 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094263034 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095499225 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122691719 seconds)
  done (took 1.641519148 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.473400424 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093246704 seconds)
  done (took 1.72854928 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151374137 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144656594 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170731558 seconds)
  done (took 1.61309633 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137191469 seconds)
  done (took 1.269767127 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119957154 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.133383233 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.282078119 seconds)
  done (took 1.672620031 seconds)
done (took 10.724596193 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122856685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.939303594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438505413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135590077 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716026388 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43139613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.428081043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180752524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178162181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140352065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134925259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693754772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.438666258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.887654289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.394737697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.913710117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699083731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113853235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150927921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11406248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.40746655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141489152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113940956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112823775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.724784975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423455455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111995248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.926743269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111486872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115909852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432274872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113194073 seconds)
  done (took 21.113825789 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114872988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171252503 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150045966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114532651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115900283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143105418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124962399 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125222697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207625914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11247799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164887868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112666004 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118336557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141308053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138377932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112286416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114158861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147246518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121005192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114252238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164291562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111526752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114099774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145496155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112410245 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134325322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142894149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125440673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111465921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146660271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11767516 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113219495 seconds)
  done (took 5.346795008 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161233004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180845134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1515669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151368969 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194005397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115320112 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229133747 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153263833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209847215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114173178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134288097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142120866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155706253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113341089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169035881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113218168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116165401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145497273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122358856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11598996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166148712 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112021438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115206969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144803958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113654188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136746928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142955889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127417041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112510117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147283185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119488239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11324387 seconds)
  done (took 5.687297526 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128235092 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127962641 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13564602 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166908027 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122446157 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12564377 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15702758 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123102805 seconds)
  done (took 2.237220739 seconds)
done (took 35.525016764 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138794326 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129838928 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134035131 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158038882 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.224297238 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.152800366 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130393886 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118126684 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.158865453 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13418061 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113522746 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150632283 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133360465 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123315053 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258427626 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129332927 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.263565569 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.259670242 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121627268 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128148768 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152640989 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233218065 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158516667 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121088513 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.258442222 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117363249 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253714107 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124215796 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12277944 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142492282 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229867989 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156219307 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122012652 seconds)
  done (took 6.490037804 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.240039882 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155484088 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123471008 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121122595 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122875891 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152176964 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.245126562 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153343174 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122161066 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121356005 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151996005 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229560058 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159351618 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117354519 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124203224 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112479946 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280438874 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124463733 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145723838 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095896482 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117795985 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.12073323 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.292228223 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14930076 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123242208 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.12261252 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123753796 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159504502 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124443269 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.125514285 seconds)
  done (took 5.715626757 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128139619 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135386141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139548821 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222070488 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15176916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164557518 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142805031 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136985856 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175118079 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11554102 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131568337 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184551681 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132641239 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125749161 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145679 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135297791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138492682 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145935667 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123934196 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132878909 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16715736 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133303684 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139292853 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153843865 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114060594 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12237471 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155523688 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126308031 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122636754 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128691994 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146370778 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118859528 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116972416 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181509045 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11624495 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157113904 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143069171 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127966273 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158150558 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151397744 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119976779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146275095 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14273959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171295037 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.14651542 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128891111 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127843911 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129677314 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144467184 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134367995 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188399796 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116891471 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137821297 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11321761 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.145434346 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12299064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114685603 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149544297 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130553124 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117872043 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171316059 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122690741 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126344907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.14698133 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126919981 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113899191 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114746715 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150676842 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142966295 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122314227 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.184963744 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115549749 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126633002 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.159871168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127414806 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127680901 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144143959 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127526203 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126064355 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151138074 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129904857 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118117674 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117764207 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16276141 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136260274 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128629346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157333555 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128057835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118312042 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148220873 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1324908 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116167077 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151424913 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128710152 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11464747 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.150076138 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129294305 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127221415 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.14183752 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143423615 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119275153 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113976155 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.172760586 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118072137 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120492836 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154750405 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159412101 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113985863 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157496145 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129789061 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114520639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153869427 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119728144 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114597184 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163764191 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132527467 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122776646 seconds)
  done (took 17.277745375 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359892344 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347966246 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190177606 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436939362 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129149803 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.276472099 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.345826519 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.348168925 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116097725 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182911807 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178787401 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314560881 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115877375 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.182494297 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.348972659 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406770302 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180092524 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153398278 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184400963 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130358407 seconds)
  done (took 6.103880808 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136477551 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151182563 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169411068 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144627958 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125961758 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16338586 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116562099 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137986821 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159218711 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126232044 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117810792 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16213633 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128738229 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132510287 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.16180668 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149860747 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123181097 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151059083 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139127469 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119991027 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134522274 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142130924 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124660475 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169791285 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135441875 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126426691 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145788162 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121393859 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122855986 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.154441357 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121097382 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134643868 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153175345 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107672351 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127227632 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.1306164 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152822227 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118248347 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119929846 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14929182 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130969098 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129640508 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124051739 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13158901 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134978268 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112911705 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.130112914 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160128533 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109331222 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135503894 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159652285 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131684623 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122967173 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168853875 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.124452278 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132594585 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157751485 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130852673 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121431712 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.144013146 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115358525 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119165782 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123915199 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162161473 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12791438 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136138891 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.164705093 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116417039 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119961764 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.150599738 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120769199 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129403187 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166944483 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126025593 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122648837 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.159329619 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125844635 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09620993 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124541745 seconds)
  done (took 11.897873675 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141057114 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125844844 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.134707842 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182539134 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129497752 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121553516 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156960742 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136567296 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13056821 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168976027 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13176061 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.1285924 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168790249 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127749625 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125417904 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163123467 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130619963 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153907002 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165087265 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143425781 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161099327 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122403973 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128317784 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126294133 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176280727 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128133054 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172669723 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130938927 seconds)
  done (took 5.203096357 seconds)
done (took 53.839139113 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.34595342 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.590891901 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.27989509 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.280002715 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.288369911 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.315870545 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.2811009 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.281923142 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.882275882 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.25426732 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.280865605 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.280046716 seconds)
done (took 29.541869536 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.591153317 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.499062276 seconds)
    (2/2) benchmarking "String"...
    done (took 1.649748547 seconds)
  done (took 4.337401425 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.271836733 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.270732472 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.600026861 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.271478378 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.270405895 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.273723006 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.280118094 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.285356539 seconds)
  done (took 16.422065613 seconds)
done (took 26.796400367 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.311354538 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.593009418 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.54306864 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.254261104 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.292482585 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.276094746 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.273190397 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.349671072 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.288323816 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.249742024 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.80489565 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.574392107 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.283209199 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.706389758 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.253601593 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.290574591 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.290252483 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.828532245 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.279651135 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.315669472 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.252316862 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.252683808 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.297647278 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.291962197 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.288439263 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.282925084 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.284565656 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.275965051 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.594511635 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.29805515 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.317767295 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.278062944 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.288797269 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.281031548 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.300549113 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.288499746 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.597616219 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.288479422 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.249977738 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.288936184 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.596838257 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.302656085 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.28757847 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.291484762 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.256935397 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.329405087 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.263085131 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.48339059 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.314872024 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.289128667 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.363192903 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.688590358 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.286138831 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.278246557 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.280120468 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.648086115 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.285183053 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.398513875 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.314267268 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.279032271 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.287497873 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.280323008 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.311551839 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.286824532 seconds)
  done (took 149.932912422 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.277565394 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.281314963 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.28099949 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.286037351 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282397992 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.282954977 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.276469166 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.277144741 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.282668208 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.285875948 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.283166735 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.282740843 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.28218344 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.292880191 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.288015955 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.302941037 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.283266468 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.278346429 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.29331209 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.27720641 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.288551218 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.284169027 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.283715618 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.283620354 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.307910594 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.378132094 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.298408478 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.309932569 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.29449548 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.277708569 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.300299151 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.290924216 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.043860606 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.238641241 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.29354536 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.285736895 seconds)
  done (took 83.312915912 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.278795439 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.279570258 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278471515 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.316206551 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.281511148 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.917252536 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.925696068 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.350230221 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.410634272 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.949727686 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579181543 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.279852905 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37650989 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.293560375 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.281842125 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.379427301 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.308863509 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.281426849 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280522195 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.919539698 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.299653468 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.834763555 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.467183012 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.298342757 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317168056 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.677412679 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.28001396 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315821446 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.629654512 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.335820637 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.281713967 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.721405215 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.623853634 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.286659358 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398738415 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.283969212 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318242425 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.283871084 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.571432722 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.282565891 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.282325776 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.283304113 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.284758278 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.01291959 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.28638984 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.921170423 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.287047606 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.30302778 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.282589218 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.283232106 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.411388837 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.191415962 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.287889194 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.282108989 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.285482603 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.282741891 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.28306351 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.319342006 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.286037561 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.204798739 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.285653853 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.287691961 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321713606 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.284402856 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.285117403 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.289190476 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.42300868 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.342260911 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.390577112 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926730277 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.289105199 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381058234 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404778987 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.284295929 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.284445808 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.283990164 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.283826805 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.285771186 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.399882764 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.284554691 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.03673009 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.46973201 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.304651381 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.936888623 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.391798706 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.285041066 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.715813443 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.28969473 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.285411085 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.136606687 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385673765 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.286182132 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.284887695 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.286494253 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.034415899 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.931282462 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.649315392 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.290907873 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.287104387 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.897657307 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.288860545 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.213573179 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.902125473 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.035929989 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.291451098 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399867399 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.473356284 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.305382899 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.286779205 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.934496139 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.291000762 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.341080245 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.292497182 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.688851495 seconds)
  done (took 389.670656942 seconds)
done (took 624.090182783 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.264336757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.26565145 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.265185748 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.264476369 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.264922865 seconds)
  done (took 12.506423268 seconds)
done (took 13.69094387 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.56701596 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571615636 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.382731072 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.570219928 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.348061231 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.586269525 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.557028935 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.338115902 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.472019242 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.403967921 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468419274 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.370842689 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.352909613 seconds)
  done (took 20.172619577 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.669154367 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.298793513 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.420827677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.639989345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.364105519 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.683615633 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.704105459 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29954717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.527556473 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337830739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336350523 seconds)
  done (took 19.465750987 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.653393983 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.299697887 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.418554552 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.645314603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.363317221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.669740754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.716312668 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.299515951 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.539791758 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337323691 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334428003 seconds)
  done (took 19.462095704 seconds)
done (took 60.285317708 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.350052755 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424140808 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.342323908 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.32830844 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.326580636 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.324270216 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.330562427 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.327371658 seconds)
  done (took 11.938074807 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.324470801 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.324867708 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.323917657 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.323500217 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.324290052 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.323862902 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.322184965 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.323973461 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.323923873 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.323663016 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.322745441 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.323798369 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.32732256 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.32392981 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.323460407 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.32402633 seconds)
  done (took 22.370344162 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.329021589 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.325451232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.323410889 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.327205925 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.325693931 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.32530296 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.327337087 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.324613766 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.325504382 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.325348356 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.329341112 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.327926267 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.325847652 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.324789416 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.323366889 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.329982675 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.325972667 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.324873436 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.331275855 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.328283296 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.326000254 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.333506656 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.324517803 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.325206299 seconds)
  done (took 33.027105961 seconds)
done (took 68.523265775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.293011702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.294707099 seconds)
  done (took 5.774147257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.428430948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.426637842 seconds)
  done (took 4.044135152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.327573289 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.325392636 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.32768748 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.326992979 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.324283766 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.326779404 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.326489703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.325196591 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.327141671 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.329358922 seconds)
  done (took 14.45650016 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.327745798 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.327401131 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.325285289 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.32583515 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.327692509 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.326820261 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.32792969 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.331267126 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.330087017 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.330099519 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.329837195 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.329690319 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.329719303 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.329266103 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.33301225 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.326044674 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.326122267 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.329009087 seconds)
  done (took 25.102300091 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.348673808 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.360105499 seconds)
  done (took 3.898555815 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.51352878 seconds)
    (2/7) benchmarking "second"...
    done (took 1.411411744 seconds)
    (3/7) benchmarking "month"...
    done (took 1.500880804 seconds)
    (4/7) benchmarking "year"...
    done (took 1.486441328 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.412031726 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.362313601 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.410966297 seconds)
  done (took 11.2875872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.324478972 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.684027697 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.868179187 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.532740092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.317720151 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.347351154 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.283925421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.351261009 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.351448254 seconds)
  done (took 15.252172012 seconds)
done (took 81.00734975 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.295783773 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.31093556 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.329747309 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.315729046 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.693417508 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.298167246 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.30371858 seconds)
done (took 16.741844966 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.274412968 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.278552601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.276032937 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.313606081 seconds)
  done (took 10.334690815 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.298761665 seconds)
    (2/2) benchmarking "read"...
    done (took 1.706150203 seconds)
  done (took 5.195338598 seconds)
done (took 16.725503293 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329973246 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.332654872 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.331725424 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.330796326 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.332700338 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.337565133 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.33487345 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.333587183 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.331527284 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.331609068 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.333964605 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.334858783 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.331376427 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334861996 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.333386669 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333221075 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332371596 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332917475 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.333928847 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334440783 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333379754 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33551599 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.334398599 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.33226823 seconds)
  done (took 33.189769524 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.332657386 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.33429258 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.333042561 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.333702561 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.335105952 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33378686 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.334100377 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.331721862 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.342398849 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.333475717 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337142524 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.337631692 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.335652809 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.33446439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340649325 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.334049533 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.338228486 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334423393 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336881387 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.333988212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.336195126 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334904879 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.334806542 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336642181 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.335271056 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.344639846 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.337844498 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.336939146 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3382794 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.336533508 seconds)
  done (took 41.273706874 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.341503413 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.346284608 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.338322701 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.334355926 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.33988114 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.340438753 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.337259088 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.3384246 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.339177559 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.33860486 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.343606893 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.341134931 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.335473946 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.343841071 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.337981667 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.33690227 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.339196765 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.336093647 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.336742403 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.341873642 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.33785686 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.337827876 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.341040855 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.341669286 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.341695756 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.339611972 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.343543756 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.338139577 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.337174441 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.340560486 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.340399641 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.338669812 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.342945845 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.341671452 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.338915515 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.341179699 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.352055943 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.34539008 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.338828073 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.340029622 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.339369134 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.340682848 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.337820124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.337595026 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.340275813 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.33894834 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.33927827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.344463426 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.342909947 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.341201001 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.340549871 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.344270106 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.342232835 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.34300549 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.341805337 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.340147794 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.344191884 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.339183984 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.339229241 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.340123768 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.339840074 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.339150321 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.341442092 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.341449077 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.342626181 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.344696976 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.343213896 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.341515565 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.339699133 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.342775922 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.342264893 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.344805789 seconds)
  done (took 97.725499243 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.341357096 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342187439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.342993058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.337241349 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341044206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.343395763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.341334607 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338752924 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33972281 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.341588968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340429953 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34198022 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.339632505 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.339623356 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338637127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340611889 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.339950702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.34204154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.342392493 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.342813775 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341147642 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.339373464 seconds)
  done (took 30.69833615 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341107622 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346401103 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.342295693 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.341229845 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.346609231 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351748292 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.3422526 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.345506926 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344369909 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.342272505 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337534124 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340596733 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.346263166 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341489096 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342186321 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34517448 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341897248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.346282233 seconds)
  done (took 25.3870488 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.340744867 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.345868633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.34344109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.341612366 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.342932785 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.341295287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341844379 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.345878132 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34147387 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.342530848 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.344111706 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342504518 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.343261528 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341698131 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347472887 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341671102 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.344246709 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341299407 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345232728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343482645 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.346717414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343922646 seconds)
  done (took 30.755808194 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343651242 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.34455876 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344847973 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.343242462 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342629046 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.347519542 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.342557249 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.343420766 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.348582736 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.344322906 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344246221 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.345449237 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.348918532 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.344618753 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.349290996 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341928118 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.346906475 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.345705345 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345158627 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.34566777 seconds)
  done (took 28.106744441 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344025033 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.345340215 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.346761554 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346044145 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345657992 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.349040545 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347461224 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.344771915 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346150023 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.346225452 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.345303966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348863428 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346724328 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.346813097 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346868202 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346562157 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346527236 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.347113833 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.345510488 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346449713 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348676882 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348856932 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346668455 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.347724665 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.346193954 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.346061954 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349169192 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.347248837 seconds)
  done (took 38.913420066 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345259617 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.344383947 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.345759122 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.345945459 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.345739287 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.348240304 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.346737249 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.348022887 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.346835865 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.34704923 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.347760354 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.346057414 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345716449 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.347743243 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.349225834 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.347666837 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347260849 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.347062709 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348093288 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348725421 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.348182615 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34972911 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.345590176 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34968099 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348321669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.346949777 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346559224 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.3481405 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351134457 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.347764614 seconds)
  done (took 41.628622956 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.3791237 seconds)
    (2/2) benchmarking "in"...
    done (took 1.378716875 seconds)
  done (took 3.965518869 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.349645789 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349791269 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.350183427 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.349041383 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.348855675 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.350869269 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350238812 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349748805 seconds)
  done (took 12.006830059 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.342160061 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.351892862 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.351004132 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.35278739 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.35508908 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.340982397 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354826197 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.3543056 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.342539299 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.346745281 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.353167606 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.349918031 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.348457859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.342685687 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.34242895 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346176074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.353249739 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.35200824 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.352078152 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.35234732 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.352738571 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346546792 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349668488 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.355412095 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.347567034 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.362426395 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.357628229 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.357331264 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34506902 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.357078788 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.348725072 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.357703308 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.35276965 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.352864006 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.351140882 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.353788216 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359944515 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351842437 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.359142807 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360775068 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353300863 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.351927085 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.350388203 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.353971828 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365453386 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.361983531 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.352618444 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.355243778 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.347211542 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.358950674 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.362495748 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344427109 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.358720896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357459283 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.353378807 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365547742 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.36820653 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.356359422 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.357197099 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364755253 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.378387223 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.364723824 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.357339715 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.36589164 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372436816 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.373269254 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366523145 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.364673818 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.359869087 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.353421759 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.363772516 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380195694 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.372548771 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.360607728 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356394762 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.355578876 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354729327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362808777 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362987849 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.365675342 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.361354052 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357723353 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.370948569 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.370608092 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.353178012 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.360905531 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.357569214 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.357629696 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.3515072 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.369822308 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.368969476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.359312662 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.35154191 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.359726122 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.357313105 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.361104369 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.350765275 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357939861 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.365769976 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362396433 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358663556 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359005919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.370489013 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.366838269 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360353715 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.367373183 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.367520619 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357525353 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.371571064 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.366607374 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364793875 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.353909879 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.365384453 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.366087406 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357998248 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.372891413 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.367987228 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.36480931 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.367563012 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.3606907 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370498511 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.38615979 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.368283635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.362643182 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.366200199 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.371913984 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36024169 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.365950726 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.369067813 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.359604319 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.358786337 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.364536021 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.367243978 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.358549366 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366444643 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.35913729 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.367107018 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.363642542 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.361061766 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.368784606 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.363916948 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.360146915 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.370356594 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.374298366 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.369993349 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.368501679 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.377190074 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.363086535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.369356327 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.370337108 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.367454339 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361846363 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.360974325 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.365273196 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.355519511 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362544776 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.355719746 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.370930968 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364115506 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.361588858 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359974547 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.355842667 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.361562807 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.36673225 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.368438053 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.363174186 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.365681068 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.361442332 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.363131583 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.355126724 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.365335285 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.355708362 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.366151729 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.370083863 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.363288237 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.364182624 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.369069489 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37242662 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367717989 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36146489 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.364684085 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.372173724 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.370292479 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.374153236 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.373140816 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.364728574 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.362558326 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.360033284 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.359455347 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.365528745 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.363642472 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.375507039 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.382966717 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380481205 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.361047798 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.370143438 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.35740795 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.369915686 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.372310194 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.376068144 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.368200663 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367606733 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.363251081 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371595229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.364362186 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.366853704 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.356898178 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.372702004 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.369487628 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.362664764 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364260986 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.364244713 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368421362 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.374277693 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371105013 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368504403 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.358936287 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.370250574 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.363075919 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.366778625 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.368068663 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.367954892 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.377960773 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.37325361 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371409032 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.378615325 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.372669387 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.362662528 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.370410651 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372565045 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.363217068 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.380840119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373169311 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.368095901 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384041155 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.368094225 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.361909569 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.378702836 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.373026277 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.366612403 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.367197323 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.37669483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.369373159 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.3719906 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.370018073 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364772923 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372164993 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.378223585 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.376181008 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.362691093 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.369555654 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.365468123 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.368961444 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.373805356 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.376146855 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.374765464 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.3796473 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.378686284 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.371733096 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.367780707 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.369266301 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.371618067 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.369994956 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366924383 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.374542182 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.38023257 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.371190638 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.379113643 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.370057393 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.375798417 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.363697716 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.373626563 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.365091119 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392839131 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.397970301 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380322037 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.374663705 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.373521032 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381383903 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.376478531 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.365409386 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.366682732 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367034453 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.367808154 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.366832891 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.372599546 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368058326 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.377777439 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378896716 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.376358264 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.372626924 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.372139991 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.365956523 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.377394639 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.371174994 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.371045718 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.362551551 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.380911078 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.371120797 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382890171 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.375899757 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.370074155 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.388295817 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.378031034 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.372048079 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.370350866 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.372345044 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.367157863 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.376294849 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.376951637 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.372429203 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.384007421 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.372542836 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.378303065 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.367463767 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.389606737 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.38594468 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.376366994 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.381827815 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.370636099 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.364246948 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.368183063 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.379857453 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386725784 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.385008247 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.368314015 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.379488901 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.374172162 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.373366753 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.374936994 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.373559166 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.373398531 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.375661388 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385044914 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.382938011 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.373223089 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388599277 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.386202952 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.375973858 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.373901108 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.367283088 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.38902922 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.385846692 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.375670816 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.376232341 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.373522499 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.378842309 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.375522055 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.376361338 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.376623382 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.373624188 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387051384 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.3866352 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.379101211 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.375759376 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.391569487 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388445695 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.389551004 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.388504013 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.373525852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.380966113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.373071673 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.374368975 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.372276042 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.372390022 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.378909218 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.366751735 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.380699948 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.375211331 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.38016196 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.386402838 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.385156869 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.367736428 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.388054375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397576117 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.375148963 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.384518171 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.375619903 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.368809819 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.381338926 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.380936779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.367952796 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.375435312 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380504182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.381009834 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.369116422 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.380482532 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.371957705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.378830088 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.375417083 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.375610893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.376315452 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.375815808 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.370321184 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.3807385 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.388863696 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.38755941 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.377730716 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.380926653 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.374852556 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.392581486 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.388296375 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.378788042 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383757739 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.378907401 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.372812144 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.383738603 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.384933168 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.373797324 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381670183 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.372261305 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379922824 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.377119744 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.389797753 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.383825205 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.380856323 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.370809794 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.372903007 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.380470659 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.377958748 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.378426754 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.384399232 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.387022819 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.372099623 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.373484784 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.380145897 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.38015791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384256545 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377397014 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.380054056 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.377656195 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.382105364 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.378948818 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.378501065 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.370439496 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.375170055 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.397572554 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.394230579 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.38663101 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.381688411 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.38452753 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.376009757 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.385625644 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.383730291 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.379052462 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.378033827 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.386063409 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.380436786 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.37944071 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.375993065 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382932215 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.395781265 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.385342228 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.377902596 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.397954028 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.398281373 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391295919 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.3750801 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.377886112 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.377470557 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.382211872 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.379196335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.379326309 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396816034 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.390958306 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.387341295 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.395331697 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.384530603 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.377962099 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.384735308 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380261834 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.389427315 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.388688883 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.393024909 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391154001 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.382182819 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.381663548 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.375290391 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.376675973 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385320298 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.382308951 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.383615821 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.392601042 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.388438502 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.390498331 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388010584 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385762394 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.378488564 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.380261694 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.375364214 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386541403 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.375856106 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.395626916 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.387128628 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.378475782 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.38615134 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386097213 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385289148 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.389761016 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.391358217 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.382413225 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.379769592 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.388138603 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.401124682 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.397977564 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.386003625 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378777217 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.384362006 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.386481759 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.384497847 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.385003637 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.38440887 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.406055686 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.399956307 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38035605 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.38406567 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399699082 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.396567469 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.384647308 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.385454812 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.390454051 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.392595385 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.39173508 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.386140304 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.398759926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.393571626 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.382320126 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.389158286 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.38810487 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.38584313 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.398249736 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399076517 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.387580082 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.392890115 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.409258678 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.399632034 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400165761 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.421138959 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.397760009 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.395373602 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.393855671 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381503192 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.38813986 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.392833335 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.393742319 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.386855899 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.387661936 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.38943807 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.381440824 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.401009025 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.405592848 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.397954935 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.385790889 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.379218615 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.382373135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.389120712 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.389811022 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.390256051 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.389129651 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.388724153 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.387725073 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.38384972 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.411085376 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.414143377 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.394263335 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.390694026 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.387987048 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.400077412 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.400387019 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.397379793 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.397119494 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.389013785 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.388093626 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.397633456 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.400002612 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.389697391 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.386232705 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.385827206 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.385205898 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.39290562 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.40945095 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415223542 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.403881527 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.393734636 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.392239894 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.389298108 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388851334 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394841411 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.389984579 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.386042038 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.393899391 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.393395976 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.393321036 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.390238592 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.390343073 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.397247233 seconds)
  done (took 820.42493674 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.389727423 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389712896 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.389221772 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.387882216 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389997987 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388854477 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39125108 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.389767582 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.389022724 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.389895531 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.388919289 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.390486877 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.389918648 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396281329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392397804 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.390471233 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388995207 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.390879804 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.390806401 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39722258 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.391866103 seconds)
  done (took 30.446874076 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.394540744 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.391062997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.393357004 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.391112934 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391755963 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.392505988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.392689532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390386864 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.393684281 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390590941 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.392201271 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.391534636 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.390884972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.390738934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391032407 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391653715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.39008061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.39046795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.390690255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.391895506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.389885893 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.392162159 seconds)
  done (took 31.858143205 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.393439068 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.399024345 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.387739181 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.394070293 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.394364115 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.393611157 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.394115761 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.390829937 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.392770059 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.38670134 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.392299538 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.389119734 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.397593228 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.402329794 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.39971312 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.398230948 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.398715996 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.394517417 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.394083633 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.397285507 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.406092842 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.40700448 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.396467945 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.389208083 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.396303608 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.394422154 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.393150903 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.394927874 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.38833821 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.39717404 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.394151589 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.389980737 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.40918276 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.398943748 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.39139195 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.397452987 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.39655811 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.393315589 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.394994643 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.408806664 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.418170356 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.395474382 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.407855426 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.409988868 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.394528872 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.398204618 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.403357159 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.396099881 seconds)
  done (took 68.298097686 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.394370751 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.394161157 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.394293925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.394149633 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.394685944 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.395865075 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.395195157 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.395549602 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.395619373 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.39500484 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.397181583 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.396956974 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.395667843 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.39622825 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.396211208 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.395423538 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.39484162 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.399834225 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.396287335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.396149748 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.396851513 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.397050212 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.395574535 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.401070276 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.397742758 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.396380922 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.396506567 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.396427576 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.396057627 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.397193037 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.396885945 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.397802821 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.396902218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.397975608 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.396783348 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.399010656 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.397729139 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.397960802 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.396542535 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.397041691 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.398569399 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.397854993 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.39813785 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.397959335 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.398720396 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400525024 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.398031482 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.397540567 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.398543488 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.399440739 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.400255158 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.397901856 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.397524225 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.397591412 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.398530987 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.398717951 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.399934796 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.398471202 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.400264726 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.398541184 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.400027475 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.399667583 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.399496333 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.398798408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.39806319 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.400191882 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.398539437 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.398602784 seconds)
  done (took 96.275341231 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.401398809 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.400550657 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.403219362 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.40159674 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3998762 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.399952327 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.401692003 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.401033051 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40300034 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.401221552 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.400960346 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.400160453 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.402244308 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.401739705 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.401149825 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.40120919 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.401490161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.402433857 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.402435533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401117907 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.401778397 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.402095616 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.401459082 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.403000549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.402603362 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.405719819 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.407618385 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.40155239 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.403239546 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.403034282 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.401770994 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.411053528 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.403509273 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.403213216 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.404531749 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.403002854 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403646581 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.403648257 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.403688556 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.403837318 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.403781515 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407143953 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.402349419 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.40285961 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.403966943 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.403299261 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.404980549 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.406013223 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.407855357 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.406146829 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.405803001 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.404364549 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404691337 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404416721 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.410553116 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.407284893 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40556086 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.405822486 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.40592194 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404313286 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.405405883 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.403900524 seconds)
  done (took 88.274452152 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.409599712 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.408165731 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.403301216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.406327439 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.410161306 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.404802175 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.402728588 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.405403298 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.405168144 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.405204391 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.404753844 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.404239115 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405560232 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.404975311 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.403574365 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406304321 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.404483349 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.404594955 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.411313827 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.405157527 seconds)
  done (took 29.371730372 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.40752822 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.408793115 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.407374918 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.411362437 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.405928715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.404121711 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.405612055 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.406144036 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406563293 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405762353 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.406568181 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.40734754 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406867731 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.40557916 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.405676378 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.407064823 seconds)
  done (took 23.765460329 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.406113026 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.407617687 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.407788309 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.408981338 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407856194 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.407371985 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.407402715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.406988905 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.407954741 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.407388817 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.40686368 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.407286219 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.406362011 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.410012824 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.40912982 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.407077255 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.407909344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.405849864 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.407961724 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.40899356 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.407803465 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.407771757 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.408947465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.410910843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.409823623 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.407990081 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.409555084 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.408930563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.408920366 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.408740245 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.408632201 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.408859605 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.407823439 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.410337446 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.413402151 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.409440963 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.409582741 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.409430417 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.410086226 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.409192049 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.410017224 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.407978068 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.412292513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.411240354 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.409920493 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.413755548 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.416593758 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.411766817 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.412323592 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.412119376 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.410192176 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.413158405 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.413726006 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.410975655 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.411324303 seconds)
  done (took 78.776051691 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.40902869 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.411234348 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.413747447 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.413585624 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.411139154 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.411010646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.412290278 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.42024087 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.411305516 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.411477255 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416392755 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.420250648 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414541193 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.410571554 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.417133632 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413866456 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.4124081 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.411521744 seconds)
  done (took 26.703120977 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.415673879 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.415457231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.41404972 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.411191884 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.413479256 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.415006965 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.413734525 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.412713516 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.411802856 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.41379452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412918291 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.417708984 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413289497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.413916951 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.417056107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.4146565 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.412901179 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.414777047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.412820793 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.413824901 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.414744431 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415150348 seconds)
  done (took 32.376011154 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.404692454 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.401201089 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.402378054 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.433661571 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.424396287 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.403690651 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.40417507 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.406012105 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.441304932 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.46487399 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.459339697 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.422321302 seconds)
  done (took 18.330438668 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414773904 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415268939 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416286247 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414935446 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414679408 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415750704 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416048577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416066735 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41734581 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416193288 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415477904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415675276 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416496958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414349758 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418509714 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415125764 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416757676 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416964196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415925308 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413922818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414361352 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418189282 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416174571 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418226578 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419349905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418526267 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416517073 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417356006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414890958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41696685 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415706285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416347707 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419396838 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41705045 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416686508 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417350768 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417360895 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416291694 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421258667 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416195244 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.417105136 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41929005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418616851 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418051415 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416438222 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41791292 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422303004 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41785593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418749479 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420845626 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419085067 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420199105 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419014457 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419352349 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419146877 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416451073 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422369144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419367854 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418970806 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421083994 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419812394 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420701194 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421410712 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419155746 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419643168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419189829 seconds)
  done (took 94.828604115 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421090908 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.419735708 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418623416 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420836407 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418488343 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418954743 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421172414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417972426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419525346 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420123607 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421509746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419750793 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419737873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421140565 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42060614 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424615658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421518896 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423466071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422411817 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420629537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420180667 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422305449 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424273366 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426062909 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423269188 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417061904 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421183937 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42202273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423392389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422406648 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422974458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423949233 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42428901 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.423679156 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424110007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422635938 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423896781 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422745099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428801805 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428637539 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426137011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421560801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421136165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422895049 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422604299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.421863423 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425944179 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421989766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422437798 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423748858 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42578068 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.422628254 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425577303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424297182 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431436777 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430869316 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428236509 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423687537 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426095875 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422120997 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426026103 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424780414 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427393246 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42579395 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423979474 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423539054 seconds)
  done (took 95.194620981 seconds)
done (took 1919.771763064 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.641719174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.614016978 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.414734304 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.476567725 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.414996279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.443517713 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.431710136 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.414919104 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.415683936 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.416820882 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.419236832 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.733640639 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.46673987 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.412900551 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.416653682 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.574962431 seconds)
  done (took 28.980050258 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.459251068 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.43756046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.575262958 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.420027366 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.457910744 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.692661616 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.505251681 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.423449868 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.638007459 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.443493827 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.410350437 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.482377054 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.425312814 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.403429375 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.452748915 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.695754048 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.794034353 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.407124816 seconds)
  done (took 31.398632815 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.036303849 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.428052338 seconds)
  done (took 5.737273224 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.452255276 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.424655956 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.426366649 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.420306032 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.39987166 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.397896967 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.42146854 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.403863788 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.407569706 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.587229424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.43207366 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.450315644 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.443274665 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.42496696 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.430019627 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.492511792 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.664488201 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.435760651 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.427927881 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.441021655 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.422892324 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.578457359 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.48555979 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.435096531 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.585553931 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.408512074 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.435019496 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.440081102 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.617451563 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.436352835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.422313759 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.423672451 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.429761005 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.401660923 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.071038433 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.411824088 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.460660885 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.441689896 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.431457869 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.622520573 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.427931723 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.438945134 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.400856561 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.076374028 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.608966545 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.599180664 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.419506349 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.430423311 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.432509888 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.511723593 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.430488472 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.428305653 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.540117567 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.346867014 seconds)
  done (took 91.325367775 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.466315514 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.402706239 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.66722102 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.424137036 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.401196549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.406961039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.402490847 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822713069 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.414096583 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.40162293 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.847299158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.178534506 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.408311211 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.472383115 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.44716266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.461130637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402818823 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423151575 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.423851874 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.401836155 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.100732712 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40333495 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.408779148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.487578692 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.473363618 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09904828 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.415759923 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.409256512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.406743413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.403317769 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.142565476 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.407603579 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.461240428 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.401925901 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.812466586 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949431209 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904517117 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.40846563 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.412997351 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.405219756 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.430769933 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097694267 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921606861 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407065801 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.402968702 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.120971878 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403958632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.410668494 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.410201116 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.76818372 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.408400468 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.406024747 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.422209696 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.410737776 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.401703248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.465810212 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.466213337 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.105131665 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40411361 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.431929019 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.442868329 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.403646651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404138823 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407567331 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.409245477 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921117483 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.748065798 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.416275911 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925216607 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.130949194 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.405325915 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.212184314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.404210759 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.420732622 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.441858424 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403233959 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.408137864 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093989606 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.422364045 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.406118194 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90931703 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.408767135 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.82133147 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.428737551 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407208416 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.142112905 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.41177038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.456472013 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.407944055 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.411037535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413084304 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.413675091 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.812958897 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.47103015 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.409568075 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.407160575 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.425485531 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408309186 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.408685909 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.410227935 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205738174 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.419614882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.408779078 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.430261557 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419977569 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.416249441 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.412953001 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.406294264 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.787635425 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.412332392 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.413280628 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.413358081 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.409444525 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.420979582 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.499099223 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.415304698 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.860192767 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.41311238 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.410092233 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.42809124 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.410316564 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457655753 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412069021 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.435257654 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.409382226 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.816647145 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.435355781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.408832366 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.409799179 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410487954 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428647596 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.431690441 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.471993191 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.411720373 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.364980282 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.453494889 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.414604259 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.40771323 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.418312971 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.421978591 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.414455079 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.411520557 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822348009 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.816614249 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.753351247 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.411240703 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.409901986 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.37663302 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.452509778 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.684017918 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.436927349 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.416494164 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.804304444 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.733045941 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.41041029 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.416788895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.412891821 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.786250402 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.418792013 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835918171 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.169488732 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413547771 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.415866152 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.3621603 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.34455855 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.411648507 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.415144901 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.824089572 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.434823241 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.411744957 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.412707999 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.414341726 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.413396215 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.418755346 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.419044977 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.413198145 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.413136475 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.757954067 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.696130981 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.434142777 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.420985029 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105318281 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440349502 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420721098 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.424753246 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.412269047 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.413740043 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.472239731 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.414179834 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.45088513 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.413640799 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.418279587 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.137584046 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.413296271 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.414738145 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.696093756 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.310348893 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.414962475 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.414454869 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.414654755 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.474821623 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.135165024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.438478594 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.86438003 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.421462254 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.481906044 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415273688 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434051845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.137050319 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.43437067 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.414809733 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.308418271 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.414170825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.855682765 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.415643078 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.417074266 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.23835112 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.415878374 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.419096241 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.414876641 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.438450029 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.816668167 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.423188731 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.464655317 seconds)
  done (took 523.759106811 seconds)
done (took 682.475861857 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.415200914 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.421265092 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.424549239 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.422129588 seconds)
  done (took 10.976447145 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.455713048 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.442380697 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.45666701 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.441375541 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.453743105 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.44110337 seconds)
  done (took 9.984679127 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.41937847 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.422564629 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.424026338 seconds)
  done (took 8.560857844 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.744005296 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.438454499 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.924473636 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.418301029 seconds)
  done (took 9.820916054 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.451709956 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.456887919 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.455159836 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.456003588 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.459710484 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.462149341 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.453839347 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.457262896 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.461026923 seconds)
  done (took 14.404837445 seconds)
done (took 55.044233909 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.553487283 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.661496269 seconds)
    (3/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.395453919 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.68705392 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.655721583 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.669015592 seconds)
    (7/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.605634068 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.557231405 seconds)
    (9/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.820743197 seconds)
    (10/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.39501357 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.488990325 seconds)
    (12/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.729894213 seconds)
    (13/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.395644237 seconds)
    (14/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.686268344 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.738420088 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.608154151 seconds)
    (17/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.573754875 seconds)
    (18/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.398774244 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.481297237 seconds)
    (20/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.825260251 seconds)
    (21/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.396393494 seconds)
    (22/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.403964289 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.627847368 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.397373646 seconds)
    (25/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.637959688 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.59380526 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.402054828 seconds)
    (28/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.728977617 seconds)
    (29/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.497232783 seconds)
    (30/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.403618016 seconds)
    (31/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.60608636 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.587439227 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.398704961 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.805119213 seconds)
    (35/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.424829652 seconds)
    (36/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.670131865 seconds)
    (37/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.699721871 seconds)
    (38/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.662218289 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.579902305 seconds)
    (40/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.495823177 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.400000028 seconds)
    (42/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.917054955 seconds)
    (43/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.5560675 seconds)
    (44/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.43684375 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.42200122 seconds)
    (46/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.712901899 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.558990847 seconds)
    (48/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.399512117 seconds)
    (49/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.623880034 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.697813108 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.115757318 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.635232106 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.601501909 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.398492154 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.866726349 seconds)
    (56/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.426571354 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.494890167 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.604491395 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.612602971 seconds)
    (60/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.55583437 seconds)
    (61/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.793669712 seconds)
    (62/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.405142232 seconds)
    (63/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.723899178 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.771169853 seconds)
    (65/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.916966257 seconds)
    (66/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.671299472 seconds)
    (67/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.402308631 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.626398511 seconds)
    (69/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.788633038 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.412006862 seconds)
    (71/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.72656069 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.424674115 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.86759727 seconds)
    (74/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.584916629 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.680217156 seconds)
    (76/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.791070359 seconds)
    (77/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.753850542 seconds)
    (78/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.693996004 seconds)
    (79/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.404424892 seconds)
    (80/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.636460684 seconds)
    (81/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.398785697 seconds)
    (82/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.438316074 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.64709388 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.67647541 seconds)
    (85/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.6036753 seconds)
    (86/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.404486771 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.513828679 seconds)
    (88/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.491559926 seconds)
    (89/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.705261821 seconds)
    (90/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.500040543 seconds)
    (91/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.460559755 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.594992562 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.585350624 seconds)
    (94/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.566656556 seconds)
    (95/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.748533804 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.677746521 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.619678872 seconds)
    (98/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.487760769 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.597973946 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.837792851 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.409198125 seconds)
    (102/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.431758954 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.639136932 seconds)
    (104/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.719566433 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.623341558 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.494932142 seconds)
    (107/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.921070969 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.443327326 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.4025426 seconds)
    (110/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.414314208 seconds)
    (111/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.681207435 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.872370363 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.59021011 seconds)
    (114/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.511019732 seconds)
    (115/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.49663606 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.794111947 seconds)
    (117/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.929248266 seconds)
    (118/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.410919782 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.61848703 seconds)
    (120/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.45593242 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.776851651 seconds)
    (122/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.883078777 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.687883005 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.638588468 seconds)
    (125/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.756543203 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.618156192 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.592170066 seconds)
    (128/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.473530957 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.415703841 seconds)
    (130/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.6201855 seconds)
    (131/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.498685622 seconds)
    (132/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.406254664 seconds)
    (133/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.502301375 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.786974307 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.407622227 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.618310471 seconds)
    (137/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.524928973 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.635281763 seconds)
    (139/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.405738467 seconds)
    (140/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.843220287 seconds)
    (141/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.589152503 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.790945972 seconds)
    (143/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.626643304 seconds)
    (144/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.630662042 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.921827141 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.689275431 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.4097373 seconds)
    (148/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.666802461 seconds)
    (149/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.646894972 seconds)
    (150/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.603306328 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.678390527 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.63979365 seconds)
    (153/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.50493055 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.838240324 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.653237678 seconds)
    (156/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.565753159 seconds)
    (157/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.421690706 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.025191262 seconds)
    (159/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.757654029 seconds)
    (160/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.592546091 seconds)
    (161/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.498765521 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.116470397 seconds)
    (163/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.6499147 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.668351891 seconds)
    (165/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.758162823 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.554053906 seconds)
    (167/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.632265457 seconds)
    (168/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.598726975 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.504558645 seconds)
    (170/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.495684123 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.623376967 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.408521084 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.584667226 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.437518347 seconds)
    (175/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.767682818 seconds)
    (176/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.570807154 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.630445254 seconds)
    (178/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.499073381 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.596312911 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.415753009 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.629355032 seconds)
    (182/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.413013275 seconds)
    (183/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.68118809 seconds)
    (184/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.437333687 seconds)
    (185/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.421442978 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.716652726 seconds)
    (187/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.49792519 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.706419231 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.507336792 seconds)
    (190/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.83912193 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.457356553 seconds)
    (192/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.569119649 seconds)
  done (took 357.012437065 seconds)
done (took 358.309978813 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.491105258 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.61536701 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.463102396 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.459229837 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.463752689 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.437530918 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.48773409 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.456287843 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.489154243 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.487304705 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.436989718 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.471705795 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.489720236 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.478539345 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.508791377 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.459877685 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.464375672 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.478684265 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.490927233 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.491334548 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466501921 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466211799 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.500137483 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.461776738 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.482759435 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.485427092 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.482311752 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.444785542 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.4770189 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.490428427 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.456772261 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.481931397 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.490416833 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.477715637 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467113521 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.478321021 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46569686 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.616831721 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.494452541 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.479628381 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.479298869 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.490336935 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.480344952 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.480347047 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.485250603 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.504470366 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.484802851 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.487013956 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.454721163 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.447503904 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.493912738 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.485991619 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.474623484 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.448918539 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.447367225 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.491206389 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.473323668 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.494418878 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.475037014 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.469130257 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.507822119 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.494672541 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.486565086 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.482216559 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.47472182 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.488169131 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.476148119 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.4919715 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.473190062 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470121445 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.468648492 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.473977312 seconds)
done (took 115.937668753 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.644091822 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.440975211 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.681036604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.472917192 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.695370689 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.64641621 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.469709801 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.475790881 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.471658093 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.336832708 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.474866671 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.471196023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.440084594 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.474823998 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.641749765 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.474614474 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.474742703 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.230624789 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.473945115 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.655904637 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.439511547 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.469999363 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.472945687 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.341022207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.437951851 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.448223619 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.65811232 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.470778512 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.240533102 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.44648038 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.439709966 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.242109838 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.658462365 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.490393715 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.485744661 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.481640857 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.698674671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.483376203 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.648905492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.645283035 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.689236111 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.517913416 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.439276531 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.441513617 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.477349948 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.477080291 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.475237528 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.505845541 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.438740849 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.474410747 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.241556276 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.486195067 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.481552997 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.477017364 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.478718977 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.495165342 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.476124024 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.478414189 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.656741405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.478166533 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.646993378 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.342385998 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.344971452 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.474476118 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.445017694 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.475695966 seconds)
  done (took 118.574158211 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.591739494 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.600168429 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.650364338 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.463929316 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.561963361 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.645437384 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.466527971 seconds)
  done (took 12.292114102 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.478128678 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.477334373 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.558865342 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.55821016 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.479188101 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.70126236 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480344882 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.48636548 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.479599885 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.562546745 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.481738495 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478309777 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.484826108 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.445971446 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.559629755 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482648317 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.644826902 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.467372143 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479108971 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.678208451 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.477014361 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.484940019 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.563751018 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.485644648 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.48034146 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.482856305 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.327257188 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475053497 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480292291 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.477453244 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.476281097 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.589392897 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.47786398 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.451552324 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.476294157 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.642747866 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.47605537 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.476613332 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.476810703 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.449949466 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.47759544 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.479062596 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.476665853 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.478507149 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.47716878 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.502374149 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.481313022 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.477191269 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.476489643 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.479380374 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.566227452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.476051249 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.477641814 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.475275312 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.570706094 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.489576154 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480287612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.476461148 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.48045551 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.476996481 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.684289532 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.561223394 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.480210297 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.56123806 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480094361 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48054819 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.479180697 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.477918875 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.622688402 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.478657656 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.563022994 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.477674571 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.717251265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.505797979 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483480756 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.474063566 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.474912277 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48093525 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.446776787 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.483425371 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.478057091 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.472323541 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.483652914 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479604425 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.480647155 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.692347889 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.643878597 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.479353136 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.491789773 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.491991404 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.482043143 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.567194194 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.482044399 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.479940851 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.565100771 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.649600972 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.569317089 seconds)
  done (took 152.689604876 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.491045824 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.490307881 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.484276248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.507137745 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.471311401 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.469636257 seconds)
  done (took 10.231935291 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.476022894 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.488467423 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.484435696 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.480357872 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.486339778 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.484358172 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.483290997 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47614763 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.487674864 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.48102339 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.485500007 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.486720483 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.484940997 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.486377911 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.483717098 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.480254228 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.484667638 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.483312019 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.483344565 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.488137004 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.450046546 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.486263721 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.487255327 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.477648659 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.491639544 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.486461721 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.505952817 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.484232387 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.486283766 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.493298414 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.487578274 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.486830832 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.477864329 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.48373393 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.491507056 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.480128234 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486361987 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.488070306 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.483705994 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.483365168 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.493714599 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.49214757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.484452667 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.494200066 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.482373632 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.483537815 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.49587898 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.50857871 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.486529188 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.49165456 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.492449913 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.485223854 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.488644261 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.491070129 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.479070768 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482842965 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.493714878 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.485721893 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.489284357 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.481593225 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.492279361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.48993835 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481624025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.489879893 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.486922254 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.488336401 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.483996254 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.490531303 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.490585569 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.490254452 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.488853435 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.489704661 seconds)
  done (took 109.343126039 seconds)
done (took 404.441135996 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.913753557 seconds)
  done (took 4.238156263 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.746170655 seconds)
  done (took 4.071051634 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.42211136 seconds)
  done (took 26.756552073 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.516209918 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.479625587 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.46354952 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.462992117 seconds)
  done (took 11.245542049 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.83563238 seconds)
  done (took 4.159704178 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.464166638 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.493219983 seconds)
  done (took 6.28481499 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.812698808 seconds)
  done (took 4.137942262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.875769608 seconds)
  done (took 4.209117166 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.471478881 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.472681687 seconds)
  done (took 6.276160118 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.436041901 seconds)
  done (took 3.760896689 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.391900116 seconds)
  done (took 22.718594454 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.485979187 seconds)
  done (took 3.816378815 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.498421273 seconds)
  done (took 3.824079235 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.734691821 seconds)
  done (took 7.064051511 seconds)
done (took 113.891483899 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.456834001 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.464306111 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.461803417 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.464527368 seconds)
  done (took 11.175761248 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.611160749 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.611896806 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.618432554 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.602654849 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.602852081 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.61461461 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.521767468 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.524441202 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.590652764 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.591297399 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.621145189 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.599255255 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.616313709 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.523303976 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.584814032 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.621270764 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.590794681 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.617259918 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.525145271 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.601458817 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.494446745 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.607379263 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.588016744 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.492904091 seconds)
  done (took 39.301458517 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.070204598 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.611892197 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.699116487 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.583052775 seconds)
  done (took 8.29308336 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.647451747 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.663712543 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.67670854 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.711015765 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.763465032 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.672865663 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.529768625 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.530278117 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.510313008 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.666277185 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.734848894 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.65420456 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.88372439 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.49161063 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.880268783 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.492759589 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.492453335 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.662696213 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.710778934 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.74019713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.491477792 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.65739973 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.665471775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.657622663 seconds)
  done (took 40.917408074 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.507764081 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.528141323 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.507176576 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.522001925 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.500537464 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.498383488 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.494185818 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.505395065 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.492890891 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.49332684 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.500197965 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.515969454 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.494789246 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.495193837 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.513852075 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.496343844 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.500606118 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.508342926 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.51469094 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.499238904 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.491677887 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.510872158 seconds)
  done (took 34.422273113 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.459671163 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.459072623 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.894750233 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.803409847 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.46508093 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.460029869 seconds)
  done (took 14.873454718 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.586318763 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.791678118 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.484569512 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.961413948 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.101928744 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.494826612 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.486291727 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.837228324 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.218053148 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.202218173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.580480591 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.590855304 seconds)
  done (took 22.665253243 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631368417 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472482639 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494089297 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544841561 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474826722 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472353083 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.552670909 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326132884 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.498196383 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826042823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477792114 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632270696 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808227778 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482515409 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481542102 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.442908697 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795466658 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120828913 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476175777 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483795112 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53472107 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474694862 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493013323 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.760771325 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475778869 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473155211 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.821299134 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47319502 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899278532 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854819876 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85963222 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477455687 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831484087 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281486982 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652284693 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756354841 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474937001 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478827021 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.451073702 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.488820262 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485146959 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478394006 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848326872 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480094081 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475603008 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493387532 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339235737 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.509631287 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.482050267 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477683021 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862649992 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640214653 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.5044425 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478904615 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471996753 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482109003 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.503160842 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695167102 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20904879 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478837078 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493556548 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.482826343 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476871745 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498880549 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314348284 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.505921598 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.501498061 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501509515 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480273295 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495093475 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530016561 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478661638 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.525516198 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479321079 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488281436 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479597091 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482116965 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185579396 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487596921 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.483429492 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792000994 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479274285 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479814018 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.47900379 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479715263 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.464071304 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506892252 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.444843929 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584038934 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335183615 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.762283179 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528453164 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534978157 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.780965373 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.446522285 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481522895 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.495975571 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482823549 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525903608 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336517793 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478567072 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.500900848 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815559367 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.775311023 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49220463 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.46471552 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093351327 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479484507 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.561899247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492757214 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.765109865 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.294823315 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874410007 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486353607 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543215027 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482370558 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483309295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486144083 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.507676988 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484589556 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878048249 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.458207779 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487251207 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631361153 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48515108 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479629916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496067762 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484702559 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484809486 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.755140371 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496269184 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868796444 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.486894388 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481039174 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.491892649 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498546498 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.48236546 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.785821996 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480347606 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858754036 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48109847 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481830755 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480788165 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.783392846 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.480894882 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.507901179 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907986973 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495866548 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507352926 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873249245 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544310627 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6767832 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53967589 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.499443819 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.824694258 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.505936893 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.509935097 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497924492 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48490908 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488654668 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.513866044 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476145186 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30188385 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48625981 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483940521 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483331784 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.525383849 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634040683 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5139824 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.764495471 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.484625594 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476575827 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.52956392 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.4854236 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808798941 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863344564 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.5051201 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735193281 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.097995562 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300926885 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525213158 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.484332401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.484980038 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.484586483 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48236588 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484848038 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484776032 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767323624 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878751761 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500270181 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303841641 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488650687 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486953893 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.511581606 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867156152 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.515329079 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489835823 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.498335508 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499554657 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488465258 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873930198 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790666607 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.531377349 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48781343 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.087447294 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51471259 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49095482 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487027575 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543793244 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487486642 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486408222 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914679095 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480609091 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872041969 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488905817 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.551747607 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.485848445 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487123677 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508791446 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.512216114 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51916113 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.769968932 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488976287 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489875144 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215830309 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487934045 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241262244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490786015 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.528135666 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496720778 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350412856 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488750909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486635556 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859597718 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351026482 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489521118 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103705925 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.487892979 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.516816209 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880021964 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809814502 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491586256 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.527459393 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894779706 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.790633432 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54429638 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506718976 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497237812 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.456294268 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18247495 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500930601 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750074154 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352120615 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490794675 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49744971 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.556633354 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.496824212 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039155188 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491420173 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490326389 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494396878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496693679 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500349172 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491124255 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492819723 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340301166 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50242695 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.11366187 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490865982 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786562314 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.895166767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.87017099 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.499099851 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.524928415 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.831008678 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877372814 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493303653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499327324 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248185471 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.441007128 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.523312287 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493757482 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512680208 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499824384 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913432218 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.494957494 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.502037026 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493603132 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492821678 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490975424 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.490982827 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502132848 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493849602 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157036799 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.509250792 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501518804 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513047294 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498235705 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.826355223 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.537276283 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309155165 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807313905 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491974782 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552904808 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.51286438 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499640422 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.466847076 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493674859 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491847042 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501511261 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801687351 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492957589 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.466351622 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.584867042 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794437756 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493439983 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492830478 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824948829 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.495402942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.491161132 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501096125 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554060121 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493375589 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50202194 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491978903 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600368804 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644184711 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773921251 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.877622357 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88655387 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059542628 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500085172 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503626963 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.536496017 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652839024 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494157253 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.510113961 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.499703908 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313085694 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495920047 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340388606 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882613145 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497982181 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498846327 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494568339 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823091959 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494912028 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846932421 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495380453 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.500696981 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546962641 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495429622 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501451966 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796396036 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843048128 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495639355 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495199355 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503501248 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.496452377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889151966 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.795177376 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157448583 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214827947 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497968143 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500173032 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366627349 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856497324 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497290821 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499391787 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496663996 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.511360768 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.499849736 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.555207195 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496727901 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828571846 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878800859 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307794798 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873816286 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.527580916 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.497403685 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506852093 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831133624 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421124292 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.779580211 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32666249 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.445611345 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834925307 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651079163 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781238242 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.498608308 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821547069 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.515906877 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503579331 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499957152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498964428 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.499563737 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87520948 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327085728 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837085708 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.520318121 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.516447378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560898771 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.78138924 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.803606101 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.48292894 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.809429118 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891180226 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503755959 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500535997 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329293551 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895718373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507293281 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.522189867 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824566728 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505978798 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564267984 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.452581365 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.500301609 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217157294 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.799217065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547366045 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511514558 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486236623 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34470822 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.522861601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160320876 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504252321 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517823461 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856878518 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.530304378 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520114674 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870204095 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.526338929 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.51726487 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792533533 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.321191683 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.507884627 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.521253576 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503442791 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.523439747 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503310233 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582180388 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50908443 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506372842 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.046224803 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502401947 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50382154 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543762723 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.511042012 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516518896 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.508159452 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504505078 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.529442117 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.47432142 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.489188535 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523279252 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727037286 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202912744 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510515758 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.204298396 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.928530716 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.841902312 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516339194 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.478788749 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.528615056 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507674056 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505261738 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50640462 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501312213 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226654311 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.515348775 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.893797249 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530076345 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.802239307 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803480457 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506029014 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799275033 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51733555 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561310974 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.47324342 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506974595 seconds)
  done (took 1060.623052791 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.508526678 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.577811675 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.544810062 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.608751783 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.5548223 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.5919743 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.610182901 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.594910358 seconds)
  done (took 21.951800435 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.503849197 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.525458161 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.496053234 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.534486403 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.500769616 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.187431796 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.515304285 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.531200022 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.550195175 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.515111943 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.513320444 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.345018875 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.533252517 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.504272296 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.513545612 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.535139979 seconds)
  done (took 35.174511788 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.796095369 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.744660267 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.314182062 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.521219843 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.530319184 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.536311217 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.925880379 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.505087204 seconds)
  done (took 29.236500815 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.535569642 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.536411788 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.537288645 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.536946284 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.53762528 seconds)
  done (took 9.045672289 seconds)
done (took 1329.010961903 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.530802276 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.531076961 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.534723585 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.531553628 seconds)
  done (took 7.490306275 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.476991942 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.482686101 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.486488401 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.518037664 seconds)
  done (took 10.327292808 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.473966138 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.248108715 seconds)
  done (took 6.085074017 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.168186053 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.164518965 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162051822 seconds)
  done (took 7.861288017 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.905137727 seconds)
  done (took 3.269927971 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.500553806 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.529412713 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.507929116 seconds)
  done (took 8.905568229 seconds)
done (took 45.30615723 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.501987649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.27668288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.662585515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.512352304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.667302316 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.664029134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.814606243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514321479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.522810199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.518018457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.51638501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.669895732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.799417789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.276695661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.798177478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.27235719 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.668397008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.501834556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.508734875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.510333193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.8105324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.516131695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.506635725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.512353003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.674909289 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.652690611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515520095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.273680682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.503394531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.504956741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.657865711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.507758633 seconds)
  done (took 87.178060635 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.503559636 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.504495789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.505331998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.502971083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.515865251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.505097541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.505612481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.504184366 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.515859175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.522682947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.503959547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.503482531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.52544531 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.504821598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.50467507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.504580087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.504607814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.504110823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.50450389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.525098199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.505000042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506487592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.504258258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.504347585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503856043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.506265637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.524017335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.505650614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504933134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.517284496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.506760951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.505140912 seconds)
  done (took 81.632535536 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.511067993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.505192176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.509606215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.527699927 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511511555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.508022214 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.53153121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.515647486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.511311389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.517629931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.506753058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.514331955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.508952221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.516812159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.507393713 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.518600026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.515779486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.512944977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.506984233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.512014761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.510935713 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.513906762 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.525904516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.509477218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.515679264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.50909763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.51187878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.508478627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.538331096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.507046741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.51116612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527003888 seconds)
  done (took 81.828207416 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.835457498 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.54049478 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.547902495 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.518783918 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.54744671 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.54093422 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.517576501 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.835233866 seconds)
  done (took 16.253559619 seconds)
done (took 268.26179482 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.524445253 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.182680354 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.572798259 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.51744087 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.564735431 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.575738507 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.827166151 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.575043517 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.818661716 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.521869716 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.559848288 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.519039118 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.520524293 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.74077374 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.487579811 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.520710071 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.526981608 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.518629219 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.264800992 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.859277635 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.576929859 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.510971891 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497751635 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.521328725 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.491107563 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.629015674 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.624941691 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.761038397 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.726786556 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.627323279 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.207888797 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.527495012 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.564950194 seconds)
  done (took 70.836932198 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.53305808 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.541038982 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.54328005 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.541857592 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.541744589 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.549385156 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.532457444 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.542033383 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.541871002 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.543766355 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.544056336 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.54489478 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.545159968 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.543511434 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.543205041 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.520343265 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.532658448 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.543654399 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.536993845 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.520177042 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.542595885 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.543930063 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.544550742 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.542239485 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.546270794 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.545927733 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.544674361 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.547906756 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.545481657 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.546272679 seconds)
  done (took 47.607070146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.544599212 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.285783758 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.515193378 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.558838593 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.534800131 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.542958082 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.947538441 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.546666164 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.542826571 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.539827446 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.179422188 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.556680357 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.584808725 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.516801194 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.546899295 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.546689562 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.54599939 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.537782842 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.267201228 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.555391646 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.945195126 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.545598152 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.946922022 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.556329126 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.543422247 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.53896756 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.548627029 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.49014096 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.566282696 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.175965533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.532115781 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.93765981 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.448471276 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.543777809 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.52562152 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.554099722 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.546983873 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.18232116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.539842671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.539416151 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.941891423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.539856012 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.515238844 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.337903654 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.563287343 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.549358267 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.534653953 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.179705185 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.868219345 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.55927091 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.520735982 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.544572323 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.556539348 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.543357085 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.868678622 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.551633067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.54090803 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.516195879 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.554590776 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.936492902 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.554084147 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.542572418 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.293499473 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.546464114 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.291826216 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.550724921 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.559872313 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.542475059 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.518229168 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.551733779 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.348679954 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.561528878 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.551921512 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.198678617 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.294484794 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.544716685 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.543956253 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.298254548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.484398539 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.96801353 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.555674573 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.470389845 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.961343897 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.550666953 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.558752618 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.559821539 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.553884052 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.695476079 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.943372827 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.280842208 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.352963809 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.559801285 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.945703779 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.559381679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.544302946 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.519541835 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.555264045 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.559080314 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.501991559 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.358798489 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.565335369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.563300054 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.340189559 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.569789496 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.943571246 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.557279107 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.525318758 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.543514367 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.69509293 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.5633546 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.560898072 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.550559956 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.952447515 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.554566261 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.554694979 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.333475507 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.242869851 seconds)
  done (took 220.657047386 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.524179786 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.524604491 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.524609659 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.52200849 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.523181894 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.547141574 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.522433125 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.522380954 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.546279803 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.52245296 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.523488008 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.550815505 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.547348026 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.522959798 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.542688354 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.52414284 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.525037437 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.544307485 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.523234833 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.524006998 seconds)
  done (took 47.989921625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.558455233 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.338883806 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.308483921 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.566766556 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.554702522 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.547499302 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.629482702 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.566149858 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.558417659 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.973330267 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.792612245 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.564117755 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.557931075 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.558846694 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.301396358 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.538533077 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.973730598 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.339134187 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.568451896 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.355117225 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.539759351 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.558845996 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.547402781 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.344936601 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.991301967 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.945180529 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.632807915 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.31678826 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.559022345 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.556906433 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.30789006 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.560171095 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.549607251 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.290942515 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.560142809 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.585060503 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.55954399 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.634609192 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.64062958 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.981484866 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.315740501 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.954469979 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.581548185 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.810669429 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.563909978 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.532772708 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.320771028 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.56026105 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.534917883 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.565804074 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.573361668 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.318155263 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.557569856 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.316372703 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.568246283 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.560820968 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.347692678 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.32649089 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.315100824 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.797937433 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.556967335 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.957837236 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.565733324 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.322533613 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.56130839 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.56025672 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.564175165 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.796347915 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.322668058 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.960244176 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.984522473 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.978779005 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.563863953 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.648798007 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.568384499 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.976121964 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.647732788 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.085616194 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.981838961 seconds)
  done (took 145.226558493 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.938907525 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.70383664 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.106864427 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.317240831 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.247308824 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.763448899 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.704393136 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.895519185 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.555714313 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.721722504 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.454390115 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.682914427 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.477338215 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.660470022 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.742750737 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.763591096 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.122412144 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.531594276 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.376797775 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.426212858 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.540152837 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.714020617 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.156334894 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.834833326 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.550518471 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.239071393 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.560955412 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.262294598 seconds)
  done (took 60.439754317 seconds)
done (took 594.1315298 seconds)
SAVING RESULT...
DONE!
