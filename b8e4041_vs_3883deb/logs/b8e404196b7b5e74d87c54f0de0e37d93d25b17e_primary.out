cset: moving following pidspec: 685
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.983995451 seconds)
loading group "string"... done (took 0.521360782 seconds)
loading group "linalg"... done (took 9.487160553 seconds)
loading group "parallel"... done (took 0.17169404 seconds)
loading group "find"... done (took 4.095280902 seconds)
loading group "tuple"... done (took 2.098997576 seconds)
loading group "dates"... done (took 1.413426456 seconds)
loading group "micro"... done (took 0.200149544 seconds)
loading group "io"... done (took 0.519891391 seconds)
loading group "scalar"... done (took 57.843753876 seconds)
loading group "sparse"... done (took 13.930108431 seconds)
loading group "broadcast"... done (took 1.291254146 seconds)
loading group "union"... done (took 10.588891507 seconds)
loading group "simd"... done (took 3.64621835 seconds)
loading group "random"... done (took 13.682481969 seconds)
loading group "problem"... done (took 2.231474338 seconds)
loading group "array"... done (took 24.240266797 seconds)
loading group "misc"... done (took 1.155804939 seconds)
loading group "sort"... done (took 3.803167218 seconds)
loading group "collection"... done (took 22.294282953 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.683683449 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145885032 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175965673 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.230013397 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278147941 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167269315 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158697695 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.169821595 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.701906088 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208487616 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137234351 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419417092 seconds)
done (took 6.239194594 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.33795778 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060910889 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170474053 seconds)
  done (took 0.943765335 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093236018 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158684145 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108391996 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094423181 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094865276 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110251241 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.154205085 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109349171 seconds)
  done (took 1.540473408 seconds)
done (took 3.628404702 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497416047 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.885931305 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505303433 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182306074 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311437159 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.310478938 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265124636 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220402329 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091195326 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086358397 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.19336188 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.405348194 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.388240781 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.971458871 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068500471 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093423402 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152975878 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773941645 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079763146 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109304822 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529293076 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213665159 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114813623 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106347182 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187389053 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132910826 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143878143 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102167322 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665922391 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133498051 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217483941 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083142836 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.142628263 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164743576 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216993376 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11046719 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66753356 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201565018 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09726181 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101701899 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669796627 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.122512647 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205776308 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105728529 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068952274 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.16165701 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102124998 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093834838 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093696412 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085252461 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174627933 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.495238536 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106441399 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191849745 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093460767 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.721234662 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096530501 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280168379 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124958069 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093215555 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091600266 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087183154 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16733301 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092367822 seconds)
  done (took 20.198774719 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168616414 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.18805904 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077406351 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157409053 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123116983 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098069175 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085697839 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07800978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127516285 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177167641 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138139354 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.173600358 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094707644 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089619357 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170914541 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.236353241 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127787479 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103969087 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088214709 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106651831 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123657484 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095905981 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107719634 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093621332 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172102262 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205575025 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110214294 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124455352 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089502094 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09598958 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142233939 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145395933 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091546697 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0883465 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172374085 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122198082 seconds)
  done (took 5.322840286 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235003418 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103009887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.247322861 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197947658 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132205848 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.200583468 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175616745 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.300143614 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.213993274 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181110671 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1285792 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094648419 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079308409 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079331248 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095520806 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.810563131 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.168658598 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165884084 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.179569413 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185490837 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116234473 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081608074 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103453589 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086297985 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112882301 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.121554354 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082609318 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.678006679 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222601073 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097237994 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.490037385 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083184181 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116133134 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116956283 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205174764 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123258202 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083187254 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1377319 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095986089 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10072468 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19813155 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118895985 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079029603 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.07794406 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133284966 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113199102 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108622542 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125285066 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.135507455 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088013287 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110686352 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.040195265 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195800318 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.144153177 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102231995 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27153886 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128628439 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101078916 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109011977 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.787773082 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135960027 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085576944 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09467433 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096237378 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078421215 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.823085464 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107040218 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.363532193 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082864867 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157346545 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097092934 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119141547 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085936068 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085480143 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12624245 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086316214 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094825955 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086931097 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078346904 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10590404 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11333208 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083771966 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095910869 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14598714 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096408838 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123023884 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108919647 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104426408 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085968823 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12661212 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0823926 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088768272 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.185987897 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097179467 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132082997 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083949572 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116367871 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142963571 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088725039 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.257574724 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096842971 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121512868 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099378141 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112938035 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115842036 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081639013 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084391737 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095659651 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081571825 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147739039 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100231251 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083043521 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087719674 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109769476 seconds)
  done (took 28.01859643 seconds)
done (took 54.251718254 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.415003682 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084149179 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082347901 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102384807 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082840004 seconds)
  done (took 1.551070287 seconds)
done (took 2.309040626 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305017489 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.20311738 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0872245 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191093714 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086337655 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196781308 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184112589 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102129677 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206796968 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086210335 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192906025 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085509268 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104609671 seconds)
  done (took 2.817450948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105401532 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108228638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102649017 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121715687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086990042 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102343601 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119262652 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108457787 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101040223 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113148886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088120424 seconds)
  done (took 1.915212612 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099710584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104837284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092326894 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117773496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086271655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097537124 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116198925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107037284 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098149842 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113659775 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086258874 seconds)
  done (took 1.880232047 seconds)
done (took 7.373188728 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.218375186 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.010981773 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.1928468 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244192925 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347426653 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.299757811 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.619030395 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202774808 seconds)
  done (took 16.02458078 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.192500038 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111344048 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092448976 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095080667 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109980606 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097460927 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09672047 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109088872 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091500602 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096643086 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09506579 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.108359799 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095716641 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094764635 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10765503 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099214153 seconds)
  done (took 2.518281549 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1356419 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115533547 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.118804773 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099287696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095176209 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.11738469 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103031188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097771581 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113218867 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09535158 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102280046 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116618252 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09875788 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09285252 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115878842 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119472246 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093793352 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116070417 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118726061 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098295391 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117264004 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097965321 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098368235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115497578 seconds)
  done (took 3.439714157 seconds)
done (took 22.743338801 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147429083 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101651195 seconds)
  done (took 1.016214283 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165150192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184276855 seconds)
  done (took 1.120525383 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11178733 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090122075 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137726871 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103410846 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090469535 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10796359 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118067737 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110326949 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091159008 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092541028 seconds)
  done (took 1.830126792 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093691244 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096087987 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123557751 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169321252 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118722011 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093457066 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09529019 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112067114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097385778 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091424615 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.114221369 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109695514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095469962 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128547631 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098007714 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096371752 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117817287 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094792222 seconds)
  done (took 2.722911272 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091273269 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092946107 seconds)
  done (took 0.961893548 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094575783 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091795053 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092415663 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11003166 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092018406 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090398996 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108132745 seconds)
  done (took 1.456215417 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.529436739 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240597565 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373774486 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073652104 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124348983 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.323607981 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106956408 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072726288 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092566939 seconds)
  done (took 2.749322871 seconds)
done (took 12.631711267 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091650132 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.446723358 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.618877513 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.128637168 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090518285 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146690232 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.33378665 seconds)
done (took 2.639998564 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351770292 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166295448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085577014 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091711872 seconds)
  done (took 1.475110766 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082332747 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098392261 seconds)
  done (took 0.967788991 seconds)
done (took 3.231032033 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089212113 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089204919 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128575917 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089145623 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090373085 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.087902309 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108278574 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088665814 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08872085 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.090331459 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109432492 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089599732 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088543523 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107473723 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089215256 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089624176 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.207844237 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10633971 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090032329 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088785312 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105215754 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089493504 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089408507 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087786652 seconds)
  done (took 3.208310359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112262041 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090420298 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111350053 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095814907 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094152545 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112936009 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094577949 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090932025 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110789507 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091838424 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094585701 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093136844 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108357354 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093590533 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090457453 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112253101 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095511866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092009745 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108506815 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095015434 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092618831 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108386199 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094350196 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093322133 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112815743 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094717701 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091375447 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109028529 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094037656 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093360825 seconds)
  done (took 3.76049168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097519454 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086918385 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088519776 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115694321 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086946671 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090384329 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105871354 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090923085 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091103136 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088449656 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110519012 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090505783 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089586323 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109636149 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092041173 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09360932 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09837075 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108214808 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090412195 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090269301 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111160574 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090223485 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.092243294 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08977231 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108726466 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086680157 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091707821 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109011488 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091952476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089776011 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092750482 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.112335095 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090495446 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100974921 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112573603 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091476298 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09573885 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106198979 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093364456 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.087605065 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08622535 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107839412 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089851789 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095807644 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108570091 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092149847 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090318748 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090750926 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108465259 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094358996 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087432278 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107081843 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09362678 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091814608 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092511065 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.107490415 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091577498 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08697775 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109429488 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09123297 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086831014 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086129738 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113902264 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09226271 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104405735 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115248595 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090686183 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092424392 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109792034 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097972165 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093040603 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119135401 seconds)
  done (took 7.777738846 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114761242 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09943513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109508758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092693561 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090637852 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090167122 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114115908 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092432355 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092867256 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116231401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092294209 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092486203 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109350916 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09338953 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092149917 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091315662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116565311 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091883473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091394862 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110522505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092091739 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095845568 seconds)
  done (took 2.97637877 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.243455889 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098512806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142498568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124405764 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111242567 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123366805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097124432 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099074191 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112818397 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102028477 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100920375 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114677013 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11086745 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101169918 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119775287 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103559468 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114033147 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104396307 seconds)
  done (took 2.923162017 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106185221 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093603593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154995339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093673854 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093760038 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113400105 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098348889 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113531965 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113005153 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093061555 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099426471 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111960327 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094483942 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092391148 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111127679 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092296793 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094257308 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092744405 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118812315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098724076 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096959258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11747709 seconds)
  done (took 3.093762203 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107786822 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092646837 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12890878 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096690927 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091460653 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09077132 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11739356 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093200399 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097547181 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112518638 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093108419 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091745815 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125969999 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09326179 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099863607 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111253393 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094451257 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093995263 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112037502 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092874031 seconds)
  done (took 2.836972844 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197004661 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127600653 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109142371 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11740655 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129789829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109517907 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136867475 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109566028 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111998879 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13993651 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108007799 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107534066 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13579995 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117267706 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126499606 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118166912 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116842232 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136143919 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10960891 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127790343 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122256608 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108045234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13612178 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109222409 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109135386 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127532349 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110581031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132122667 seconds)
  done (took 4.250036404 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093485631 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092640761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090708322 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111501679 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091990818 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092045783 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090927764 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111126073 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092802933 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091451294 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110468098 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093849016 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091676393 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091410786 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109960142 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092794342 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091162291 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110296498 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092768222 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092612126 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092172545 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111664968 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091939624 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092146844 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091878164 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110415088 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092946177 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091860075 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111595267 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092659339 seconds)
  done (took 3.71837557 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106165666 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102805322 seconds)
  done (took 1.015290003 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101225093 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107934955 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092953929 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112263927 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100971639 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092145307 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120220107 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100815194 seconds)
  done (took 1.63628231 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168224256 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192084343 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097920902 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123122431 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171869621 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184479814 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131085315 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118531134 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092267739 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084714474 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185143376 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08467634 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112786549 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091154259 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091579941 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119825992 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095421981 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101686953 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.120035446 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095257575 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097575816 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117718042 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097960222 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10245856 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10584279 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097840934 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096590425 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124692602 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091380754 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094019917 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.109511482 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095943206 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.09674673 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09705494 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.113761324 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170763126 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121107579 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090255891 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093078247 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118638621 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126670577 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092828564 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114311673 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092737631 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095999149 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.116822607 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097725276 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094171472 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104799081 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08911217 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093419212 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106890688 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095327485 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094713581 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09343751 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119868036 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096631492 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089191719 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109915094 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089744373 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091432647 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108037412 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095727746 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097019879 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114020715 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094565028 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093700323 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112542453 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095531772 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093856279 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110306765 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110573698 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093622939 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.118133248 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099227702 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093445472 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110087742 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098831004 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09213078 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112119146 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099763734 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122786704 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114516867 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09048958 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088887701 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09917602 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115195445 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097152159 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086027001 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120732393 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097109486 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094510621 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105180834 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093589555 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08902871 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.115441496 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08696455 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093900419 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093259555 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.118524988 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100212604 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093333936 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11490274 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099121963 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099698153 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111899216 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.159948342 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111528917 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090978259 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095680253 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118882716 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089439516 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09329238 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091390463 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112105876 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092208862 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097938571 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112461787 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097550673 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097077778 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114897363 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096932019 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09551026 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.112562917 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090613408 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098581181 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120697262 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097781639 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096283263 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093642774 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114492562 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094822463 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098740769 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111623482 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098976134 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09132104 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112249959 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096336902 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099905861 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112645191 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090623395 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092664228 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113902823 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094120908 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097608921 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114081127 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090865885 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085991173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094070342 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109137761 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097893035 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102087982 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109671069 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097154184 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091405618 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120859154 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092534114 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09992402 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116286226 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102076179 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099794045 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085124512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112311628 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097140007 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095200304 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110607781 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096862457 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094146399 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120069668 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087978017 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099211638 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105651074 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092296443 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099749067 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.094736698 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.116996861 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091010176 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131299658 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126877586 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099083899 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092662971 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112589946 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098475162 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093324088 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118544544 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102969728 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097950934 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110378911 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093723161 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100193258 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109874517 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098591239 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093144247 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094463898 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106891806 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096881524 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085760138 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120013027 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096786819 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098709689 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.118829426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096829631 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092180857 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121159472 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09255744 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097463023 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086653756 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.119272569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10536696 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098956927 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119745884 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096621435 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090777256 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.11481481 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102661728 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096700007 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114209286 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098020077 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086179604 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106632066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101121379 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097525461 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091831022 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.113459051 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097074705 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095673759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111072784 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088665674 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098320114 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116876246 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090635269 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095043441 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110375418 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092956304 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102758528 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106443494 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09179652 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095407733 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119942906 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095472337 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094112736 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096690787 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119408829 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098003524 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098103536 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111873444 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103067227 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092063872 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.113624854 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091924539 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099498407 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097536566 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115665895 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095635905 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091396189 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111176568 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099266394 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0999808 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.1203197 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093080202 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09984056 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118551528 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101004674 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093967187 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119766696 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092445485 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088143611 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090532043 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107743868 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097303225 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090349338 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.119154259 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094851866 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093328209 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117683052 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098222825 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092201739 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120282824 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106593024 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088868075 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107791151 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094582628 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094719238 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110992047 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093594304 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096072343 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115432975 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098840223 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106462631 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090386354 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114676874 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10063235 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091487053 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120971668 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101669842 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100608604 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109450091 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098889181 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092080564 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117200449 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090827891 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094295929 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112930632 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09587986 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092086571 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093039974 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111352708 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088409496 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090215802 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120338767 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094091016 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098219334 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113678143 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094296907 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091530424 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109878777 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102026592 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093304533 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122556297 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097226051 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088117979 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087986398 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121891758 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096319301 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100435049 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.11103961 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100078858 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101977004 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118077516 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09666725 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103902668 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103265506 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122095554 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099930026 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088123846 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113276905 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100155823 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094443434 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117854722 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097902883 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089601129 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115909083 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100846762 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096334108 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111930365 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089040234 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095830622 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09962447 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119488519 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099512305 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09628005 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116502525 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092071695 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098452603 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120701104 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097288419 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101573462 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114288486 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101102661 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09172186 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099966833 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117424848 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090437199 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089235579 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1126586 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102584414 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089049871 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.11868248 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101355347 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092170031 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092845047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120942614 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092263478 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097048095 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120914119 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094027669 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104985208 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116273864 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095053218 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100244591 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119468195 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090278031 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093289727 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093871294 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123172647 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094710996 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098481378 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115700956 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102360224 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097722412 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119905891 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103279404 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100448877 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10901093 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102392769 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098337644 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097330603 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.115861242 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093298107 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090051605 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114859787 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102347373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09320005 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123432595 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102740229 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093848666 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113259515 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101903741 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093099758 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121665332 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.095481276 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096743448 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088725249 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118402696 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095506978 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101449074 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.113484124 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089896697 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100521512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11995443 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100876725 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098076648 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.12180236 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09055097 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089055109 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097298616 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113870207 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105785519 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09622334 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.114375508 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09422965 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096895981 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116858855 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10318463 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089911364 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111888251 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097298895 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097144336 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114140842 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091340806 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099517823 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093594165 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118199458 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093830018 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088611268 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115515248 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102646642 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094448324 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113171724 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094063218 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101977703 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115301464 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093451409 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089427503 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120970272 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098736578 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103245811 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112113908 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098296927 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093492126 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096932299 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.124234373 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093729796 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094555111 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114580841 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102275855 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100045543 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109761723 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094166444 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106512916 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122365211 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097603054 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09801428 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114358048 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103091532 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102668084 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117935877 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091397796 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090885021 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094136761 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111514809 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098617708 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10124388 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114917616 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094843206 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099794184 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121211363 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098974108 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098182178 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089554894 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124565421 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093799498 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097438647 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110658206 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090866863 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097703276 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121758011 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096645809 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095790324 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117228315 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100435886 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091802037 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092616875 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119790652 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100401594 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10178117 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118492931 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096129473 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09927282 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126363904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099150806 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094676775 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122173008 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105020269 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096457378 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114451147 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100723982 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100860731 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097678763 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123667681 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09345497 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09485459 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125178069 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102393258 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104538992 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116273515 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090366659 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099343848 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11427319 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091159846 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09873574 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124012838 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103800071 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096127238 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113482168 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106071589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100012719 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115680912 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095281809 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093374235 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099233359 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114719197 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100204641 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092333249 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124849256 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102805462 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102035601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.123487491 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091861402 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101818464 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118194081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104731684 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097365524 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088627332 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112479667 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099584591 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102042305 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.124201688 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101400185 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09914096 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.121168341 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098257327 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09712101 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09261045 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124703568 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102175074 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097413086 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119531261 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096391587 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096421759 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118909814 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104044446 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103016312 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117103439 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109058003 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103047112 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115006734 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094225041 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096046292 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099164146 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118232284 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101372458 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093668685 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111157781 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102106351 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103054516 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115796988 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104764998 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102615633 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115880588 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100861359 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103681621 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101330064 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119485935 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098805721 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098693835 seconds)
  done (took 62.530125446 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146607121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105663157 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119279135 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099072306 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116758632 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120453376 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101211474 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098882407 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12009083 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109457285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099218343 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118412195 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115242867 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119005985 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136577005 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108360428 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117691433 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102268732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097948908 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099436457 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134582198 seconds)
  done (took 3.246355908 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116423255 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111075787 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130932572 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114376486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104377729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13244722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10889639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130316641 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114528111 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105995532 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134042255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109868441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126595079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108772841 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107284942 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128911853 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114658016 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104446103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133197664 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111901172 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106027729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.133453702 seconds)
  done (took 3.446288107 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129801492 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102728566 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095564666 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120798602 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103462389 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099086204 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122509014 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101945995 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107315602 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092947225 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112139888 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094879314 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097409105 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120575598 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094699682 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098800343 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12821407 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104854884 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10413042 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097938781 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111700727 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099606591 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098662337 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110755634 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105194312 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103172756 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119275782 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104502884 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090510811 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100546515 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120872843 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093249987 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090158043 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11052432 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091187155 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102268452 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100814496 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.121563992 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098870883 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09038398 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119655789 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104166878 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089824132 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098210883 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120963008 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093550025 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101068509 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120259077 seconds)
  done (took 5.903914317 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129203651 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157021085 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103758934 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12690713 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136724719 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10826719 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100900261 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130549771 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100984559 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124053904 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115085305 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112630943 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125659764 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107266364 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101055449 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126591727 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105932047 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101721455 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128359409 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104373468 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106890549 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126299022 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112821819 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13219614 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106857652 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102074432 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101348223 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128323161 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112106295 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128272318 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107188352 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107932859 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134266586 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106699393 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101992578 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125471752 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115917674 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103920198 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.37280893 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101514585 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103732884 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129367918 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105960332 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115680842 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125840513 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106414021 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102677932 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122168049 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114321591 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.102919861 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.131319702 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113913787 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126046335 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105955932 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106105881 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134534008 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105525081 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102714458 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127462368 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113764187 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099985969 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126961326 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115189368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103449608 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130730311 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113818524 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.1055475 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12686718 seconds)
  done (took 9.097557867 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135528827 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105655265 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13719077 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115761159 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106444611 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128541066 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108291564 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106609506 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128558387 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112734029 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126575383 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.228310667 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128044216 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113727242 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129118654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109089571 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106764205 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128934832 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107761818 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10688957 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128584857 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116458106 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106173069 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138287278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119453109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.125476641 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108043138 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107578135 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136727582 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108500389 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117346556 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128713994 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111799901 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112921692 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140586173 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106558802 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124007948 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10872905 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107129265 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127673079 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105170148 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116055261 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129672216 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.1055563 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10638364 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130134635 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117619147 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137761443 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113142391 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112139679 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129312394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116484575 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108436834 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.132037321 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116606099 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142762498 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117420658 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115670645 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128972686 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115017279 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135953881 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124376012 seconds)
  done (took 8.381376361 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100371143 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100793823 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098641524 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121612043 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100287404 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099746344 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098982908 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123649034 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100886712 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099984502 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122597294 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102508357 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099672661 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099305855 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121746208 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101342635 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100696395 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121633065 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102139595 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100692134 seconds)
  done (took 2.993604633 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111093527 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117404106 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123384336 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110804174 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10208023 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128647016 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104603316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102435232 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100888667 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125745809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11112286 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10963545 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123578634 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109885272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129467022 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109620224 seconds)
  done (took 2.698542392 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12073358 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117360105 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211938753 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104027544 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125473148 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110897552 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10283682 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127750882 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10265209 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108245888 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128682425 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107922104 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102188064 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103060382 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125313003 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105105964 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100466617 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128256044 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104709893 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.215076373 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10750571 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104919348 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126420965 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108069609 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102943678 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130267403 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109878987 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102155519 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127557212 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105259056 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104670084 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13110033 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103084198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107292345 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103473004 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12695546 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104753265 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103890656 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12792779 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104026147 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104339944 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125686933 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103003671 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104153957 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.12254198 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106014808 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102009131 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107441456 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.127430799 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105105684 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101920642 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130562762 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107414567 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109389609 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132253341 seconds)
  done (took 7.265388357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115457699 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104855094 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135474979 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103007163 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103480128 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104478859 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128611187 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106664192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104484027 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124815593 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106003634 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104048078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126195517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105648142 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104343088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12609299 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10314021 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104228757 seconds)
  done (took 2.892143408 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108737501 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102816776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106078434 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125889333 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10342621 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102173957 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124370355 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102994173 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101449633 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102415398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126383949 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103406725 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101475125 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123970932 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10421835 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101915195 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123677738 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103439481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102737575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101868261 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125617999 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1024323 seconds)
  done (took 3.28773659 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116519147 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.214466239 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109901266 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223665733 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101144915 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098675955 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.135308757 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100563487 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138118612 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101103011 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100124814 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120800348 seconds)
  done (took 2.448054882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131323962 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141388789 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126261656 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106029196 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112800587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131576718 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109027063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108464002 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13886724 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120743147 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12890012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11723502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115580061 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137861735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113177381 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133661131 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108935571 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107807354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125047186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125669682 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108585316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138929608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108055361 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107527152 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130209016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117301998 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136082668 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1210985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107573876 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13896425 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112444536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107803374 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138593252 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119048728 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126609048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117492595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107389075 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144966898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112364848 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138839233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104628808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112712936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13979166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11493766 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116210099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130672273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113293318 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12908108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110115749 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12872873 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134870153 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116662601 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132402591 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117987839 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114920759 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152088614 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119288145 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140025418 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11322159 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141200358 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117711407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111870301 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138983596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120186164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134546369 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11817662 seconds)
  done (took 8.993995116 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144337139 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105157507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130599359 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12031083 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137526637 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110989533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109616104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130334521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109849933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105538491 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173456345 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110051634 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11671142 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139746891 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10886985 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129681994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111418777 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116852359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128717905 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129653638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107631005 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140533374 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11610841 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140347177 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119793935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134487842 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110351603 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109422295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129139327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112503483 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113859451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131273467 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118589731 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105075722 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140098961 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110179444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108650967 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136355678 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108657044 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133984216 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118081216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124366374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130517435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108476364 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142108993 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113042937 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107871679 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12684965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110050586 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105562726 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141769075 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121228195 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143161083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119243096 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108991654 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130981112 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109504707 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109029088 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131225136 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114340587 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115983464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132129861 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129001949 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131363912 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110526555 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116441413 seconds)
  done (took 8.946149507 seconds)
done (took 170.114915246 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175922511 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216114702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196872661 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157511301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094577879 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152610677 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129318749 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197391582 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095710635 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095120895 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094223435 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121162335 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16464936 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094482824 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118613687 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099282109 seconds)
  done (took 3.094893631 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1835137 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343526087 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109834358 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12364666 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102818033 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099394902 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123220418 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102983626 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099432896 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132136496 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100710362 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094673002 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129031841 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096977346 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100105397 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121714709 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108972517 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099554489 seconds)
  done (took 3.174340187 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121341967 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15308462 seconds)
  done (took 1.179184309 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133343843 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.2160941 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294983252 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171884148 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121314449 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141158733 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15080996 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134609505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189912348 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136094052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114056334 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096941098 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148724988 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105994903 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139461031 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099952934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128578502 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136270192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114283318 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102513246 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146802328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104117291 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106341945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136880535 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181133369 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13484536 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105367519 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102487614 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12402471 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114917337 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105658338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140221742 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112080943 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182564906 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104029011 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178500283 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107385094 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123144291 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114886258 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100591144 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127553231 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104136985 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112366105 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.1208125 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104109328 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106429735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.128330774 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103552344 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13004468 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110182797 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107153012 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130176819 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152607884 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131436966 seconds)
  done (took 7.975950434 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.878473652 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.145142549 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099865074 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.022801503 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145927775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114428867 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.842146617 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149041997 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2558076 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.899809466 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116799909 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10780065 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261968438 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259264534 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.263074585 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.382049561 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.711181987 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135354782 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13119294 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162877626 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108591672 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144657711 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122409281 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520881671 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10148148 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099668051 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130679188 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109424809 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178297394 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101058382 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102717671 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194543314 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291876782 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212190322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100097296 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12111184 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102236884 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18401488 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274237946 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220764736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174124447 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118491395 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101041689 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107733113 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142874384 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098524959 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176804746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.168357024 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189064475 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126422012 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111937279 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110787622 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129525061 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15361276 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119977617 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358605728 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362330712 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099402236 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13352515 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112414504 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267464738 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122754158 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237668212 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12842073 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216035992 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.10052235 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842345804 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18556403 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121166455 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107185907 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107038263 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128588908 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108542155 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189134037 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.48343054 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133146611 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106171392 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098484032 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.237464904 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100041493 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124810914 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157636247 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123686119 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109514485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133373316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111970943 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187183371 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24830497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133786636 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109357901 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127665257 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114941782 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.1013235 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235952701 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228879035 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176308733 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228943289 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109621831 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179300663 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162593162 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130417283 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187474399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11011931 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113092873 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130056553 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229678997 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.141078624 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128818686 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106414301 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109635101 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159642228 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104563157 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131063244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165149703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.562915997 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185322938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097222001 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127931911 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11058613 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17763474 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108402333 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266164015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110664562 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184514874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107393056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122214773 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11044952 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179112093 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108943044 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132624756 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109401342 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10997439 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.281075058 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221351822 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132548979 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253973917 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177953076 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106557684 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193854888 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132917671 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166273518 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13369242 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108698041 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101863791 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834777104 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138593044 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109196987 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127398184 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185258824 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100820502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127057288 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101260921 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100682985 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817958485 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128230412 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100026617 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103156903 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128039047 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110781197 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108812789 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129723898 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156530101 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266774008 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110468797 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107519539 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123905491 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157519752 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125041739 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101731512 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100885595 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12365951 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112261901 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106205125 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127350832 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167205481 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177739013 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228792153 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.654851709 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123882793 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10239256 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241844651 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101045531 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325147632 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133760725 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237065622 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184636747 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09871374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3605719 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185350385 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207398371 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106921907 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187945688 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099438203 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109849933 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179168874 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100846973 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130423079 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.15323883 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136004725 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11149246 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281614094 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123887681 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231340312 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121761783 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16622428 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126526356 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107423856 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32824195 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123426729 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11803114 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177930587 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107182206 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102001867 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.687616351 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124855542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115547725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106740948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23359004 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186551865 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132914388 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112351577 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109222828 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179942645 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232507081 seconds)
  done (took 47.864824921 seconds)
done (took 64.19094244 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259095867 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171317736 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375534207 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.158304558 seconds)
  done (took 1.959950633 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272475222 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171141526 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.25419692 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098562953 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262337201 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099278407 seconds)
  done (took 2.091939485 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177741946 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169651741 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14693286 seconds)
  done (took 1.425602306 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204754878 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.203908193 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.341881324 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236200358 seconds)
  done (took 2.003241125 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.285119358 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117340969 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12569273 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23742279 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254571199 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209343241 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123521434 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176124142 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131368102 seconds)
  done (took 2.637340335 seconds)
done (took 11.04547799 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.405783166 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.247080792 seconds)
    (3/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.387820406 seconds)
    (4/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.345538982 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.232863062 seconds)
    (6/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.235232706 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110501063 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.227162686 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.357742 seconds)
    (10/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112414365 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.296597633 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116406632 seconds)
    (13/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140022974 seconds)
    (14/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.184747307 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.381105865 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.226545498 seconds)
    (17/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.19138118 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228575435 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131013169 seconds)
    (20/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.25833781 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103832687 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12418772 seconds)
    (23/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.106164199 seconds)
    (24/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130075968 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130993124 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.308297165 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.279831046 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10738258 seconds)
    (29/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.214275922 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113291362 seconds)
    (31/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.284718818 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.178355502 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107136599 seconds)
    (34/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.17263997 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.232182389 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102817335 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.284468018 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08649836 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137395335 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.249339528 seconds)
    (41/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.16909797 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107628841 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120643903 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.194067765 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.149212759 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07899971 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144183768 seconds)
    (48/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176550594 seconds)
    (49/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084819096 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078087374 seconds)
    (51/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136783944 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103587265 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.288625879 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173928542 seconds)
    (55/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.144035844 seconds)
    (56/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.136016388 seconds)
    (57/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082060925 seconds)
    (58/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.134082972 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.143766815 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125070024 seconds)
    (61/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111763584 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.209012542 seconds)
    (63/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084901858 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121013573 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081360765 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080119476 seconds)
    (67/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.1226341 seconds)
    (68/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19351525 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142081964 seconds)
    (70/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.19087944 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105327709 seconds)
    (72/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.216292938 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124721936 seconds)
    (74/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.17788519 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.163052229 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10803797 seconds)
    (77/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.252732907 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124714253 seconds)
    (79/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109113597 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078817146 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.105839367 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165038026 seconds)
    (83/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11798735 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158047124 seconds)
    (85/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083619781 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110509793 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223410812 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102355404 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085998576 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221283307 seconds)
    (91/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.193015816 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106720066 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127032774 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11148373 seconds)
    (95/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.140704345 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.103771018 seconds)
    (97/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.087071547 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120848538 seconds)
    (99/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135095183 seconds)
    (100/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.111022708 seconds)
    (101/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.145982949 seconds)
    (102/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086402538 seconds)
    (103/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.13585282 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130693365 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.134010616 seconds)
    (106/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15682993 seconds)
    (107/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083252067 seconds)
    (108/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.084641909 seconds)
    (109/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.145638003 seconds)
    (110/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11054639 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111698702 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132256134 seconds)
    (113/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.086278639 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.128329447 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087451972 seconds)
    (116/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112959965 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080748188 seconds)
    (118/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127414387 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102221658 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.194164426 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080380123 seconds)
    (122/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082482905 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104176097 seconds)
    (124/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.165717232 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.197699302 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110879463 seconds)
    (127/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129955702 seconds)
    (128/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087700189 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105491907 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087017979 seconds)
    (131/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112019063 seconds)
    (132/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084474849 seconds)
    (133/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113894512 seconds)
    (134/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079784936 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089847878 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130332635 seconds)
    (137/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115335895 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10154343 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12963094 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083704779 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126072945 seconds)
    (142/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084652106 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.151397674 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087923402 seconds)
    (145/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0803686 seconds)
    (146/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.082363267 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.154539904 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116388543 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081643483 seconds)
    (150/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087069522 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.106561316 seconds)
    (152/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082798657 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084541407 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104343786 seconds)
    (155/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07948846 seconds)
    (156/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.110943857 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083761699 seconds)
    (158/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083216449 seconds)
    (159/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104192299 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.110890219 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087574893 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105223995 seconds)
    (163/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080146365 seconds)
    (164/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.089407389 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.110825475 seconds)
    (166/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082455248 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103104452 seconds)
    (168/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.086461554 seconds)
    (169/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.110644587 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111781743 seconds)
    (171/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110887774 seconds)
    (172/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082915083 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.15021142 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107118859 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.088965712 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103872706 seconds)
    (177/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.106365481 seconds)
    (178/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.147669477 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081510505 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110742644 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148528734 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106009291 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087596335 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087183782 seconds)
    (185/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.139299977 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103729392 seconds)
    (187/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.081418035 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127723295 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106760294 seconds)
    (190/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111902778 seconds)
    (191/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080933686 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129842489 seconds)
  done (took 27.526612568 seconds)
done (took 28.464295705 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228198782 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131693842 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114042505 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111537228 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236237933 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119706074 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153891217 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115388696 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121420189 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138782453 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103899734 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124344583 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136833043 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206964796 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14076825 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106464796 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103174782 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148910137 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129007815 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129306597 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.236236815 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104841614 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148624486 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.1055167 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23469472 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106070611 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112439997 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139270922 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126777504 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113345628 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138411106 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10535837 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129330692 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154282888 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105616783 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114984734 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103501779 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111844669 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115735807 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114784778 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.151731096 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115873744 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112602587 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129149454 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117680886 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112641489 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103491932 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.142554161 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.104531309 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112312117 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132077061 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12988188 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111136759 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.128275669 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102859448 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104202986 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147774448 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105597436 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126697117 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12889607 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105958446 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104546954 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113248479 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128321276 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112630594 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103601303 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138196903 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116571738 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111537228 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12976294 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105315278 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112009076 seconds)
done (took 10.195383365 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108990047 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148687972 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235674104 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.238326327 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133390636 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146455286 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117915064 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12715779 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14239597 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124686945 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.143152701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162423588 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240925958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122059376 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121500996 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142630638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116510417 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112630454 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.241349197 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127869753 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156381129 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121392043 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159488996 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122215681 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10818317 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166501131 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112830619 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116410753 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132335823 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118217827 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129075841 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132241747 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113108727 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126788748 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.150747312 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119606621 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120993669 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.14124345 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109024479 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108361755 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142332275 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12526998 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10795444 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146265108 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118246741 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123122082 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141961558 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121483047 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109046408 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140127177 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10974098 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13367049 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146865255 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125701739 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120723523 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.146018429 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121972982 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120034678 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136747697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121605827 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107500472 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132364039 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110201654 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130051455 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136720808 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121631319 seconds)
  done (took 9.887373877 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128501466 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139657564 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142942549 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12027158 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113767051 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127137536 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103282268 seconds)
  done (took 1.860819383 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103188541 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246039109 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.219615008 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246100988 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.245212677 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257116635 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128629416 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10315823 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166880159 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113975946 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24997697 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276316283 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11460354 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119401427 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.251509357 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.129876222 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.224213707 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.130457093 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118486856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.24947523 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122146049 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162214343 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119215299 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104331354 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242176536 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105491348 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.295020687 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148950925 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11557161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117113077 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118403255 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212823642 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.244413693 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118396201 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138015735 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220227935 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.244393578 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11789963 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.261896712 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136572255 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.218323573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.14411721 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121931776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117993008 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.147517433 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.206890206 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150454048 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119673738 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117410112 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.254028881 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141257697 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218824405 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143311171 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119215649 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116239433 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146067737 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12612372 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120142443 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.252111738 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121639001 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249395192 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.248686931 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.248930608 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248150551 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128811772 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247887388 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206674047 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144623419 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115890715 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120761796 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.251008246 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117293128 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.144144448 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.237267811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123694291 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252596088 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.222400558 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145161895 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117608252 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108383685 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.144434638 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106090446 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.241803375 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118482943 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118494817 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150696468 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118430354 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119098735 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136762573 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128957461 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144081241 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117680607 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123700577 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144602606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121923465 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25472918 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114820886 seconds)
  done (took 17.217329104 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107330059 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107312739 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109826745 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132381988 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107665577 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106878815 seconds)
  done (took 1.684297493 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143010295 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121101643 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154404761 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121480323 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168418553 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.254016519 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262983652 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114005838 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167116014 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131587124 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.2561948 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.259752515 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.257650572 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129640578 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260694603 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122905014 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264134566 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118523033 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127794184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145186339 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119264258 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122164907 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144128453 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245955928 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122432748 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120951973 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139148561 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129137371 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127527739 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141951013 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123713218 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119330607 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.139100509 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114713331 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262247246 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111910181 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14268274 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124399618 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121829947 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147625197 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.233913335 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145472968 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126698723 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122941541 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141641894 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112159095 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122360182 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141821736 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262264775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123443421 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122522704 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.148540258 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142398764 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121874436 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.14086058 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11495561 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122997205 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.262806185 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122418291 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.141696789 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120841484 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121073846 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141580365 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123724253 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148101026 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123907447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112203724 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1468274 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118735629 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120598646 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147566601 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122089688 seconds)
  done (took 11.933750165 seconds)
done (took 43.563277845 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.679771289 seconds)
  done (took 2.68833418 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.115977667 seconds)
  done (took 2.126528101 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.295646046 seconds)
  done (took 19.339362639 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.443442214 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478908107 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.143979412 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150724753 seconds)
  done (took 3.225600685 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.837752692 seconds)
  done (took 1.871964864 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.304621908 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266815913 seconds)
  done (took 1.591320517 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.735991917 seconds)
  done (took 1.764602398 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.550007931 seconds)
  done (took 2.571485033 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.306351318 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242890105 seconds)
  done (took 1.579905936 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.649972319 seconds)
  done (took 1.68000882 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.025310761 seconds)
  done (took 21.060191314 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263709372 seconds)
  done (took 1.303601386 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288474323 seconds)
  done (took 1.32860729 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.671593224 seconds)
  done (took 4.712855105 seconds)
done (took 67.866882026 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11745055 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118629401 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117961648 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143482073 seconds)
  done (took 1.521516109 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126544304 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12064104 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149594722 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120868234 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126438006 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.119479439 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146485317 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123197509 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119269007 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147346321 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120557859 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118509833 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148667509 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118978119 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116950696 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149930519 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124537345 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120085941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14742147 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121982621 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121786925 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148064918 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12538424 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123201142 seconds)
  done (took 4.141291711 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118021084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110729164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112802892 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136824103 seconds)
  done (took 1.517525029 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129154692 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132588857 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156837751 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128650299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132045632 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157897663 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121133072 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116304874 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145932943 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12918612 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137903081 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161219942 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133264223 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121595351 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157652101 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115867388 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119631764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157942151 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127795441 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129237384 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.148527686 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127313537 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124180386 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1551837 seconds)
  done (took 4.30370559 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196985036 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.134240395 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177535076 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165105492 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.182261096 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118835293 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148433611 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153548157 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.128176774 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.12169271 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.149416207 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166710655 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15276796 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122691859 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119555567 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150832239 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133748363 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127241879 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.194212965 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125805034 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153658297 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133682572 seconds)
  done (took 4.29643176 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123469961 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110683767 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107220408 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.138112745 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123858349 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.113320696 seconds)
  done (took 1.760485534 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110070073 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10551251 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10423623 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130200356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109247761 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104420122 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103859506 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131656406 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105280148 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105444135 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130412394 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105649888 seconds)
  done (took 2.389757734 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207546504 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149296708 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260978439 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398067938 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190459694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163970363 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.318744793 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192714101 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18060488 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16718362 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218575002 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165125118 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183702691 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188168691 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168479246 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.16107607 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193846299 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212665382 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172606865 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242338359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160877651 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20368023 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193155079 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17826848 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14181971 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19291692 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12124405 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130028057 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198917823 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193892952 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179933356 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179056219 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142935006 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223082139 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264985093 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179506277 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299002548 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135504592 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200972274 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192219695 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2631255 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141738694 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221515459 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184418214 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129882369 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216949307 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156027872 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.215764659 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134947677 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173145063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215011769 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183533814 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199900421 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138003443 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329433303 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134969048 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170155786 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18110669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219799948 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233422001 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20755286 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125885212 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202284732 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193971454 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242634137 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169442287 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170101449 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124875586 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194603797 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237313488 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183394969 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189998254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.242145666 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131975023 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203937247 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170141958 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185430843 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236913647 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175124644 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.149720785 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154935903 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162313448 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127248513 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190444399 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150102956 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217111198 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160438838 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344802157 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180711947 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185272792 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163608514 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192382286 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191868602 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151175858 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102209506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17264444 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163491391 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18924711 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129689258 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183202138 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143238397 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126400152 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183216385 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122430932 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198384166 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136205309 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192824381 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175693152 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159402184 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179625495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17700079 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164823404 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19964096 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194968857 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159499891 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132183638 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250501268 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197012972 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138553024 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203486211 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199214858 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180781858 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136962319 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194888959 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193171981 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172695146 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227993797 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140425539 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135903875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17128903 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172708136 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191322724 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188746208 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129483644 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165428509 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223751778 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155152901 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140928396 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211042131 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136430199 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125959314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166639067 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13842284 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171321786 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151496989 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140769228 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185423999 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168470656 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196506064 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160273733 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16469762 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202484408 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133244248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170902529 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179696594 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120702081 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.207703368 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230099582 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131983473 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183795649 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.194102128 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212099597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177415229 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159985918 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186196163 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158702235 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122822462 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193615124 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172657431 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195379384 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191436634 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211049045 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195968775 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.165804883 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181446258 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199277436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186054944 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18773805 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145412346 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203987881 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17218691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150427229 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125200977 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128675092 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166090674 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131991506 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139057697 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213762658 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194507346 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205455735 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169738414 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167688642 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195651486 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125138539 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191796946 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204687272 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140130529 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219050551 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191999066 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209871032 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140989158 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192329206 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121168272 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155191383 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135131011 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191400596 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138069513 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135081772 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171031107 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192152997 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202389843 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178784327 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192581822 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193920051 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23045689 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121123433 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16139273 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199810953 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195155962 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185384399 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135163417 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.19292153 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193267105 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170951417 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223351936 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168552579 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209816067 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224990482 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.167001125 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130553124 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17779761 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162104552 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169261817 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163200083 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175547184 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132275481 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181212639 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139848789 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140750859 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219283542 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174365748 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180898772 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188232945 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201260719 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128300813 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142438504 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203726395 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147485934 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.133549036 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173555101 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227629295 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149610227 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186161313 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200595341 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131554439 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316876748 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217636334 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208841292 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13617395 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166718477 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174821114 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190016482 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164009962 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216575027 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141579526 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23754159 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171805786 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171946167 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131660667 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177426543 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152114246 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169428459 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153063319 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193273181 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144004206 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217981281 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136942904 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200278262 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175352746 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.176409235 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150186068 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16800642 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255665333 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169136453 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20409376 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166562033 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195423664 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184901097 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152662221 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127903765 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132799988 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216087535 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129504038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207600561 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192789879 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183772671 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201564458 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192716755 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143986676 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126469923 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19738334 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150531712 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214301274 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162759175 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139816523 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222497987 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130470642 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130492432 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191904082 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315935986 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151269236 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201803036 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108057107 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311215134 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131656128 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133165188 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192730025 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171736434 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164053753 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185575344 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202906738 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140986644 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191957232 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137345259 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205963342 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185451585 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198119886 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207511235 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147049425 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191835637 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163126121 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205337425 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147206988 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.177425495 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160310819 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225057111 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177077615 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.161789778 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170154529 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200453912 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17052811 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204179456 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140255476 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214136938 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127794673 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196139886 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138186148 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154728894 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161697098 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193877029 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132042489 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20770672 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200361233 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132758153 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129525759 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178619153 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168287113 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168317633 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129884255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219558926 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130406527 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210898956 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212762461 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159271231 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168658947 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176014352 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132121689 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138386453 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171990168 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13133807 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.202970434 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183272188 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158900583 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178383648 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196322731 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165222616 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189052392 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144399019 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.296394185 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128813587 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223471504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151014874 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229081435 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150478703 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20720959 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16854371 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181607731 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196368966 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151369248 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222524526 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195819803 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195864641 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132656674 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144053654 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167836148 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133932465 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182732246 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17025538 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170665837 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138280713 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194851454 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147024143 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147929217 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171793983 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202718097 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181249725 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220040621 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189218406 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168641138 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174832079 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207966879 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129021715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.198051652 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174137787 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174051254 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154846367 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164407848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13744632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244896855 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126878565 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192259295 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176488434 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199745722 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173710218 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164867125 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178235585 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172979609 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17781933 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157027859 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.153246024 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19851407 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135560116 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127640184 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20194223 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161806051 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194606521 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143204803 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204774713 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198294909 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153257757 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137264034 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312446506 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165481029 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22659313 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138414948 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167556363 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148482709 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189424507 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.170887443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201758198 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131112622 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129386076 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.176326333 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159503872 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170986129 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170462529 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213001946 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163765099 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216617211 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135503544 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287068279 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142113952 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202094833 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118602721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12934515 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170467627 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136548788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172702478 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181941851 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24427366 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194946928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149128881 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165298604 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128292572 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131378718 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196086248 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153324945 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199785531 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147987254 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104248802 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171961742 seconds)
  done (took 86.445252083 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202934884 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171208713 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.257107415 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.249190696 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275066264 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.313970443 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.30987076 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269096161 seconds)
  done (took 3.17654766 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12136215 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161096813 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143973964 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145421077 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110477317 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.493717742 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161641714 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121514614 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162619493 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154019027 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138219881 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.577320202 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118616341 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146974974 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124017376 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13606395 seconds)
  done (took 4.142777654 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.350027123 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54854294 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.141781368 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28342843 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.264578547 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.207536029 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.794591267 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204505545 seconds)
  done (took 12.923910645 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.168446002 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.166921436 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462609037 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.312470671 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185580093 seconds)
  done (took 2.433441083 seconds)
done (took 130.078832724 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125771161 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126879333 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124492786 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155530882 seconds)
  done (took 1.659123762 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197853232 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092991993 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09601633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121465866 seconds)
  done (took 1.644444101 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.472834779 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092831638 seconds)
  done (took 1.73077582 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.159952953 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137973271 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172293418 seconds)
  done (took 1.62088503 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137858942 seconds)
  done (took 1.275343045 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120268855 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118526176 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.274797794 seconds)
  done (took 1.655871881 seconds)
done (took 10.73186255 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121827573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.938720489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436746041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136023861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718314738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429611056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.423584592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177931844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176061634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13905211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135477074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694748753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436664747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.890136169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397155951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911921761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697900759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112735915 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146682409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114807547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.402525209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138944415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113790867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113191768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.719019786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424739067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111293902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.925256347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112374276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116330994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.43026966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113132543 seconds)
  done (took 21.08926184 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115095222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171238256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14871123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115588652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116001553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141980136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124848697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124151682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20636486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112053495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162962063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113989774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117511522 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138604846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139047431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111782301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114934657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145398168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121474386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114068486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164106203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11178712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114853712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143731615 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111894047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134823499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141882777 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126124209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110970187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145917159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117779643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11221853 seconds)
  done (took 5.34290876 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162526185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18051276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150637662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150524309 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192638394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115028035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202260986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.18271723 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208850791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114186867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135221525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140913938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15374071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112502226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167757576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114389826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116435058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14350072 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122650862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114172899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163968198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113100556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113893115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143763254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112943553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135825093 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141226897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127822679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112651197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147272219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118945503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113588397 seconds)
  done (took 5.679732178 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12883447 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126788748 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134572699 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167152471 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121877301 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125494869 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157547758 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121966487 seconds)
  done (took 2.240822593 seconds)
done (took 35.501054221 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138404402 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130701747 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133660502 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157621231 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.226075886 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.152802671 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130014648 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119096569 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.158363015 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134967652 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115323743 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150521445 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132956223 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123613625 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.259370553 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127851663 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264377335 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.26173873 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120311179 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127997282 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.151101198 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.235016338 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157745339 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122384418 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.259416718 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116181883 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253111027 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125394228 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123459485 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111000149 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.261755353 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.157167752 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123141009 seconds)
  done (took 6.505038176 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.243780093 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154330799 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122897262 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122397827 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123036456 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.15263184 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248609129 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153257338 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121976265 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119991656 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.152069268 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229455435 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159354203 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117920931 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123261834 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111767774 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280811478 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124145326 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145676276 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096271251 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117325465 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121441281 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.293187632 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148926271 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123673338 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120921592 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123207846 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15756906 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124630933 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122511948 seconds)
  done (took 5.722824809 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128058044 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136553678 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13941738 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221498209 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151665167 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164078547 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142226257 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136454573 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174591685 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115483819 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130121575 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183695846 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132700254 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125035662 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145922955 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134945652 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138172529 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146030791 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123667263 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133641226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166792789 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134834884 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137911881 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152705522 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114525946 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12212838 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155098006 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127390991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123176977 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129583098 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14852182 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118749179 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116787756 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.183150595 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11750335 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158361828 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143126301 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128438819 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128951384 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178010346 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117669293 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115446245 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.174560675 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170445767 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146326429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130108654 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128005384 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129937892 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143938485 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134957385 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158072266 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.145852137 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.1367067 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113333337 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14335999 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124626952 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114874314 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148723591 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131515677 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117930989 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.170683157 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123166221 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125803288 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.146420016 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12853939 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114116955 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113186111 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.14999163 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141742396 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122086195 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.183027954 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115313477 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127582075 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.157829638 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12706986 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126983746 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144405514 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127838463 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125465745 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120102493 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.158094266 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11802297 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118033097 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163061588 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136946465 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128162317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157564171 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128969683 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117987071 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147521692 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133062452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11585782 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.149845522 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129889353 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115334499 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147972378 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131121493 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126862362 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111780555 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172500567 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119921046 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113402479 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.17152677 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117943979 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120093833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155583961 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157289835 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114362518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156621104 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.12988153 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114554861 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152173681 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120106265 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114493261 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163791359 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.133611334 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122843066 seconds)
  done (took 17.268182497 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.35953776 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.347725364 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189544844 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.437705311 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128613562 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277977318 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.346646246 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.346900119 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114411407 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180908899 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177825127 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.316616938 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116265553 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.177512378 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.351788101 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.409223128 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178612657 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152962748 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182238048 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130362108 seconds)
  done (took 6.103879621 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135993411 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150051833 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167799411 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143371444 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126195097 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163908763 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116020061 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137861875 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158238139 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125795047 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118750366 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162197721 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129171943 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132144807 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160731333 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150353337 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122071738 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150911439 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139429532 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118940404 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134295639 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142845121 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125541174 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168716427 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13565056 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126341625 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144931209 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121885262 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121051847 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123405847 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151949491 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135046782 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152219497 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108925304 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127525155 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130105931 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152664804 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119048589 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120476913 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149121128 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133161557 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128492177 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123265535 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130851486 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136855881 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111784676 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128856889 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158456602 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110198091 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135918053 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158873276 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130918045 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122481567 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.167149886 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12373026 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133514813 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156273504 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.13183534 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119398563 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143341203 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11502615 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118300798 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123255059 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.160376191 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128439588 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135261614 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.16299014 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116426258 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120060449 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149366689 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120423973 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130304419 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167584789 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125011498 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121212411 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157028139 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125460717 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096482312 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123819796 seconds)
  done (took 11.879352116 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14091317 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125603472 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133504338 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180729826 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131155575 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122103447 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156604621 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13557604 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130081207 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168568922 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132189924 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128743606 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169485449 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126752082 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125299662 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16237407 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130956248 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153080919 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164413994 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143085235 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129935029 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151871896 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129985664 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126324165 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176839177 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127295726 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143054225 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.16265134 seconds)
  done (took 5.205193412 seconds)
done (took 53.84121724 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.334340072 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.598774118 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.292492433 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.290111473 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.330430916 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.302524714 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.290004196 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.291162515 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.731885738 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.259976705 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.29431501 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.291153645 seconds)
done (took 29.496384143 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.560588117 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.511146355 seconds)
    (2/2) benchmarking "String"...
    done (took 1.667701598 seconds)
  done (took 4.378109674 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.290566559 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.279586811 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.614489944 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.280514932 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.285678926 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.280561655 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.280870493 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.299764726 seconds)
  done (took 16.500494093 seconds)
done (took 26.915590594 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.285114679 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.599048594 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.55663538 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.25976313 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.281252874 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.290076762 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.286500748 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.332314954 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.289402584 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.268562364 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.786811507 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.580688299 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.284425694 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.706913847 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.261266045 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.294505887 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.296936713 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.654634084 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.2871164 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.318598755 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.260015188 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.266657024 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.296456972 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.294618889 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.295138579 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.295224274 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.282391357 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.286312457 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.606977536 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.32150939 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.327880871 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.287964901 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.291358279 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.30214799 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.283968443 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.28939078 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.616919581 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.298563316 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.261319125 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.293697613 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.610624717 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.301504402 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.284241593 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.292421753 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.276064715 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.297991665 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.263670401 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.487095391 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.311507839 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.290630673 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.361351049 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.704167408 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.288117575 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.300242999 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.295759886 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.623326612 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.314619338 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.368925825 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.315118633 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.297194845 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.284448393 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.284177548 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.350161078 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.297094065 seconds)
  done (took 150.062355489 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.284488272 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.284853891 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.285163707 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.292655581 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.288842596 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.28440984 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.285530583 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.283812697 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.286452209 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.291597556 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.289921365 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.286618431 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.289370527 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.29505847 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.294886871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.311997706 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.290253809 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.285593231 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.297701824 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.285960107 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.295310039 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.288940584 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.287096565 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.286087218 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.305439819 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.368172517 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.291457594 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.302484904 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.300372694 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.286286545 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.301335246 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.300460415 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.029903733 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.246927699 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.301041494 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.322442749 seconds)
  done (took 83.495103395 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.287893733 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.286240311 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.288552197 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.321231631 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.289637949 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.902476565 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906604743 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.346707288 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.374372468 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.799827898 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614422895 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.290705333 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382465396 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.299600528 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.29405101 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.384778469 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.314962957 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.292712362 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.288858032 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.288847067 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905274895 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.307304861 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.471630296 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.306498194 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3251132 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.684355322 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.288903917 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.399571133 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.289301035 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323100654 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.628583984 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.341207915 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289471238 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.693168454 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.708685441 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407799274 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.290651905 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.291248559 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325096997 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.289169105 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.577412602 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290069289 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.291680108 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.293798045 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.98883161 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.294256692 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.908064007 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.29252896 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.347663275 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.292939766 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290593238 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.525349767 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.088523688 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.290189206 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.29221202 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.293710464 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.291498381 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.290735016 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.327975017 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.499623172 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.220212361 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.294640262 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.296318826 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326462744 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.292784578 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.398656841 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.292659143 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.352656717 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.353700635 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.395852224 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.911766084 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.296059715 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389163664 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.413917789 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.293545011 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.29177146 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.293156483 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.292618147 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.407106099 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.293551785 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.023859459 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.475618094 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.312372754 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.878587913 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.395201164 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.292472877 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.683431881 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.29486962 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.293951975 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.109119393 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394457074 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.293830871 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.292967144 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.293311949 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.026040253 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.293366496 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.91268757 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.643893613 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.297866859 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.155164006 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.296207779 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.200428211 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.915309831 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.984061172 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.299438497 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408629128 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.478482424 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.313530722 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.294312287 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.860632138 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.2982843 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.349673656 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.298876344 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.69667735 seconds)
  done (took 389.945698971 seconds)
done (took 624.686996665 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.271988987 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.274918968 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.273974645 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.273530943 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.275019679 seconds)
  done (took 12.561470841 seconds)
done (took 13.754867502 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572192456 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.576239688 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.39049847 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.57367344 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361330445 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5920711 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.558051272 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.342023661 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.494664161 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.413449154 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.481063968 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.379631167 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.359258325 seconds)
  done (took 20.286410375 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.668424245 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.307470524 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.428554707 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.660506061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.370163762 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.682663416 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.722041469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.307754429 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.547441612 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348831789 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348689732 seconds)
  done (took 19.585463069 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.673338488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.309170811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.428784694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.664858918 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.372035089 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.675497213 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.709382736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.307445311 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.553468217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.351096603 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347558722 seconds)
  done (took 19.586304027 seconds)
done (took 60.651331641 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.358079683 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.433004016 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.35740313 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.337534193 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.341225445 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.338244759 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.340606721 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.337656346 seconds)
  done (took 12.037588229 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.336518562 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.335295781 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.336724174 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.337470079 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.337343736 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.335650574 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.335322111 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.33540585 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.335857235 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.336864625 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.33527399 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.337876556 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.337209361 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.337183311 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.337196721 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.337125552 seconds)
  done (took 22.57913021 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.340394194 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.334937494 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.336544054 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.335541342 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.336059983 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.337824104 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.337046771 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.334255285 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.337217044 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.33891293 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.337497736 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.336586657 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.337277737 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.337412111 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.335660142 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.339380378 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.336612009 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.337949469 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.339857673 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.337526162 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.337853578 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.337461769 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.337249031 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.345219947 seconds)
  done (took 33.297913933 seconds)
done (took 69.11084657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.299864808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.317609313 seconds)
  done (took 5.813275557 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.457318211 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.432929984 seconds)
  done (took 4.089327141 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.337877882 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.339110581 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.34065107 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.337204264 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.338223178 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.33838486 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.341819375 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.339525648 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.340017749 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.342572125 seconds)
  done (took 14.590764859 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.340024594 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.340018029 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.338936746 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.339940365 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.340583952 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.338225762 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.339467401 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.339854112 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.338656752 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.339581241 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.339104854 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.338558416 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.339261578 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.338698587 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.339960061 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.337455342 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.339047444 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.340622854 seconds)
  done (took 25.306785381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.360537537 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.36570698 seconds)
  done (took 3.924042855 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.520955143 seconds)
    (2/7) benchmarking "second"...
    done (took 1.420590216 seconds)
    (3/7) benchmarking "month"...
    done (took 1.506412861 seconds)
    (4/7) benchmarking "year"...
    done (took 1.49375825 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.422357969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.367949304 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.420508152 seconds)
  done (took 11.351208628 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.334857736 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.698149394 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.875678883 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.542008659 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.327672604 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.35258045 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.297636103 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.3536984 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.354114096 seconds)
  done (took 15.334536745 seconds)
done (took 81.607613512 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.304747552 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.372776943 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.327711087 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.329633049 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.703855707 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.355607232 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.305304187 seconds)
done (took 16.90085066 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.289665397 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.286179129 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.302944041 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.312631516 seconds)
  done (took 10.390536604 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.304996327 seconds)
    (2/2) benchmarking "read"...
    done (took 1.712651378 seconds)
  done (took 5.2177001 seconds)
done (took 16.8120203 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346659306 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.342658798 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.343541242 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.342332499 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.343573718 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.343223953 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.342451509 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.344209554 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.341812111 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.342017864 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.344181337 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.344423966 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343495007 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344273877 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345010005 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344411744 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.34400422 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3436833 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342519464 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.345631173 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347591967 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.350396793 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.348693364 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.344561274 seconds)
  done (took 33.465791845 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.346008455 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.34363022 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.345291046 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.343619395 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.34425041 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.344226036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.343310626 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.342786817 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.343616671 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.343606963 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343280106 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.343277522 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.344551426 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.34430356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344115826 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.344807814 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.345249979 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344785046 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346467243 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.344071198 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.344684055 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344796849 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.344753827 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343822702 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.345182373 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345964874 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.345303617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.344980113 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345777909 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.344555897 seconds)
  done (took 41.536684519 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.354108718 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.352891244 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.346518367 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.346154354 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.3461737 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.346431205 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.345974792 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.345455592 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.346736132 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.345970461 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.345231261 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.345345452 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.348028405 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.347688697 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.347289764 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.347545033 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.346808767 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.347107617 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.347280474 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.351259682 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.34732238 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.346272036 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.346716506 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.347051325 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.348260487 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.34719436 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.346729148 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.347500196 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.348728354 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.34681156 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.347932303 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.347847377 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.348553053 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.348473434 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.346648969 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.34889772 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.354233245 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.355946451 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.348637421 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.349509879 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.348666684 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.347339001 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.348371884 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.348687148 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.348745675 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.348253713 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.346991681 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.349297141 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.348490684 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.351033675 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.348569745 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.348623941 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.348725771 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.34912205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.349948063 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.349099351 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.349485923 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.351320513 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.349461478 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.348980272 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.350302646 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.349386888 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.351883434 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.349849796 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.351754438 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.350823314 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.349285618 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.349526011 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.349260335 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.348817751 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.350197676 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.350622938 seconds)
  done (took 98.305925707 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.351580533 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.350223935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.348964837 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348969307 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350878139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.349959447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.349510018 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350607853 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349860132 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.350572932 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35023497 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353030787 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351352082 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.350863752 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351369402 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.350266609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.350586901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351449581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.351910393 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35075033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3525764 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.350232177 seconds)
  done (took 30.923243173 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35255419 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353408768 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.351869186 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354621632 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352520038 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.353326286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352554191 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.353593568 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351745497 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.350755288 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351988825 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353216355 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353530501 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353859105 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353435657 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.353169072 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35210092 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.353048038 seconds)
  done (took 25.561190848 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.352960387 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.352751771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.352268958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.35517694 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.353557879 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.352588413 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353553339 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.351707574 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.352749466 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.354071282 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.353187092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352805619 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.353176755 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353741841 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354172203 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354579587 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.355733156 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354321594 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35377313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354348203 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.35390059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355368165 seconds)
  done (took 30.989564526 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355478724 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.354667308 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.355366908 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354290026 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353898565 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.354527276 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.354687422 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.355107587 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.355598222 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.354109974 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353405764 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.355199987 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.356563289 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.354704393 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.35430553 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357139969 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354842819 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356274636 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358148616 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.355218216 seconds)
  done (took 28.314074995 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358251842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356627333 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.357081232 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355918515 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358085969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.356589061 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.356423327 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.359206153 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363218465 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.356282737 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.357052807 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.356258851 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355979346 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.356817861 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357211626 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35600379 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357546514 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.356449309 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.357118807 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.35812096 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.35862235 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356999448 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.364471698 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.357922401 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.359393048 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359344788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358738077 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.359463797 seconds)
  done (took 39.233464676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.358654547 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.355695302 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.358871404 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.356824356 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.355789798 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.357898794 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.357611887 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.358342077 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356797817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.35761454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.356605543 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.359246591 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.359002356 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.356293283 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357800178 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.357468642 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356953422 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.357964235 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359602712 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359118503 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.359537689 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359191277 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.360005347 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.360205303 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359160966 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.359047753 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359495994 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358193385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35767614 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359140642 seconds)
  done (took 41.96080214 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.385133821 seconds)
    (2/2) benchmarking "in"...
    done (took 1.38535026 seconds)
  done (took 3.985080086 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.358866585 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359569188 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.359248826 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.358360446 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.359971125 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.360686719 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.359498578 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358557468 seconds)
  done (took 12.0900361 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.351750736 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.361060789 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.360558909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.360096979 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.362501195 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.352276292 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.368792289 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.366334435 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.355050458 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.354799937 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.368142556 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.360584331 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.359045029 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354738127 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.356211568 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357934832 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.363640027 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.36270618 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.365760548 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.362279659 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363455367 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358896896 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362151569 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.365534681 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.355192305 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.37321408 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.371475032 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.36722477 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355922006 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.367539545 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.357641638 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.36778392 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.364460034 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.363424218 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.3633615 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.361936249 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.37206547 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362120979 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.372428855 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369087857 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362726992 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.363507259 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.361277226 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.361485842 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.364900662 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.369233825 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.363429875 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.36491945 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.356265556 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.363984484 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.37034926 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355227295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.367115818 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.369022625 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.365893596 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.375774461 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.371994861 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.361452738 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.36423731 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.375498588 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.384873523 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.374127045 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368480168 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.369892638 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.377362024 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.385812889 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.378399725 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.373975699 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.366483196 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.364921056 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.373930721 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.385914996 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.380730399 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.372522651 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371425375 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.37092168 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.366118345 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368688294 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.374921699 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.373410962 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.373083477 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368647647 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375658944 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377731414 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.365728072 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.369632619 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.366704593 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.366558205 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.358199181 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.378642703 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.376468474 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.367323736 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.359994382 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.364142466 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.365021837 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.369610409 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.358119842 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364586028 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.371451216 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.367486676 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368325818 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366188047 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.376797007 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.37379907 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.368122371 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.376347649 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.376915947 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.361752845 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.381739885 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.376921744 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37038879 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.362689068 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.371882206 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.370932296 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364763285 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.375686741 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.374727959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.371173737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.3753133 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.36846606 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379259821 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.391526674 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.376937738 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.368404809 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.373346568 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.380788786 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370619616 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.37218001 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.378271567 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.369495521 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.369108041 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.372340575 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.376310424 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.365129043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.37538328 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366375431 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.372992333 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.370730314 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.369283692 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.375136042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.370246523 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.368818968 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.377059332 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.381037421 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.37757511 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.374177191 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.38687273 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.371101451 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.37717883 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.375122423 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.376326976 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371411965 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.367000231 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.375593572 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.363398237 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.3731258 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.365759431 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.374275108 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372309077 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.370616054 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.371966785 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.36525357 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369896689 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.375527083 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.377987592 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.372657166 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.375477845 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.372696067 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.372740277 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.363876859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.378422494 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.362994973 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.37283107 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.380221815 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.3733722 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.37669036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.378560151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381195751 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37339462 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37415994 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.370874397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.379208767 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.381293459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.38339624 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.383587187 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.37467041 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.373538214 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.367779939 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.36935933 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.375845071 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.371729184 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.382502063 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386270209 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.388516934 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.369815463 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.376698112 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.366669254 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.376727096 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.38191379 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.383470202 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.373770994 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373608962 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.368649602 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.378949096 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.371376416 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.379312131 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.365027634 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.375964429 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.375766849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.373845305 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375269229 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.369595044 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375045318 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.379176361 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374443007 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375307223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.368929876 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.37987638 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.366851888 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.371007514 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.380005166 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.377073649 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.385448038 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.385564603 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378839656 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.388957632 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.378649827 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.371382912 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.380345853 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381782418 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.377307757 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.390881131 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.381221872 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.374239699 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.391450826 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.38187838 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.370174726 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.386696312 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.386854292 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.37584528 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.373717496 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.386562775 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.378369484 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.376802944 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.378596399 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370946822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.382977682 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.390707646 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.392904154 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.370064028 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.384794603 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.374095686 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.380902977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.381154964 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.384063015 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.382792812 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.387926076 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387456463 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.377364887 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372695439 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.382627009 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.379361998 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.380117332 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374128302 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.384585987 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.387782692 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.382618907 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.384202209 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.375993693 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.383345396 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.37177954 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.380696037 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.373067553 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.398440472 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.403654613 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390013633 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.3883556 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.383041097 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389881353 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.386290743 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.378572792 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374945026 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377290018 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.376077643 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.37608337 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.38422386 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.374801433 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.383566514 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387804762 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.38287732 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.383666386 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.380935872 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.374219305 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.383706056 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.380246259 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.379554831 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.372834074 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.382043414 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.382511212 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.390119442 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.384843212 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.376714664 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.399214802 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388900502 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.380291586 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.379317649 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.376928519 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.374258836 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.382535656 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.386885022 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.379859897 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.389078318 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.379536322 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.385666222 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.378616023 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.394263335 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.396191932 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.381039656 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.389194394 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.382192107 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.373215477 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.377030137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.386009003 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.393993957 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.398062282 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.375959191 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.386479105 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.383809561 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.383135593 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.383865085 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.382798958 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382532234 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.382650056 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.395743411 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.39096941 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.381602157 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.394142928 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.39395715 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.38426751 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.383114291 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.376300227 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.39256675 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.394986332 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.383890159 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.384361517 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.379419478 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.386684927 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.383981022 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.383860685 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.384631942 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.384632361 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.396101487 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.394192725 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389867105 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.384024393 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.396546726 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397404587 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.396867018 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.400753196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.383471949 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.390950414 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.385853676 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.38284624 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.380452709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.382896038 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.389816261 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.379837199 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.391274616 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.385914298 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.389914179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.394882129 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.399296866 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.377789522 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398133869 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40780961 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.380812742 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.390568102 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.38703588 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.379871211 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.390961518 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.386893473 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.379184113 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.384913123 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.390412565 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.392907785 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.382123314 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.393254198 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387056343 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391246541 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.387864825 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.385749961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.38665678 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.386688838 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.379947547 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.38890141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.396079627 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.399628053 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.385163365 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393446261 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.385373028 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.401307596 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.404128346 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.388099772 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.393707049 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.387917207 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.381957719 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.390060217 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.393414554 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.382960641 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.393203633 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.38129772 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.387953175 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.385740323 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.396473392 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.395582567 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.394024548 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.379234329 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.382462463 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391555868 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.388035099 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387648667 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.392389074 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.398211323 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.382658647 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.381532526 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.391978756 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.387411626 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.397028561 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389343995 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.391852833 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390607563 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.394859151 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.390987988 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.391199467 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.382007866 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.384442044 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.403789686 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.402774054 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.392230116 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.388722057 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.395254941 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.384436457 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393475945 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.392765519 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.384442952 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.388575252 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.396637938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.388987594 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.389706191 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.387136172 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.39493891 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.402668314 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.399424955 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.385044914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.408656296 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.410264671 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.40022799 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.384530673 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.393245887 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.390031861 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.397016059 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.39464376 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.385122507 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.409564932 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.405018892 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.39682204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.398414771 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.395334141 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.385155193 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397625075 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394495138 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.39745124 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.402345368 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.3981595 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402610346 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.392600135 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.396441265 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.387354076 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.386264133 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.393157049 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.392625836 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.394684897 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400024752 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.400177495 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.394886738 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40120507 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391820845 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.391428966 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.391990071 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.388499683 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396630955 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.385751708 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.404996194 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.398715437 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.38873868 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.39629404 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.393451081 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391899416 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.397327202 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399947158 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.395500084 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.389710381 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.396056091 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.40648975 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.406359077 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.393682255 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390477518 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.394607932 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.402521298 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395007145 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.395161354 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.392640852 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.417333029 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.412066227 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393919995 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.39502244 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.409069617 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.40882189 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.399932072 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.397274052 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.398347234 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.401228466 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.403620251 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.394873818 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408916734 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.409235071 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.39546663 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.40105959 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.396663361 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.400552403 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.405709762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.418060774 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.398800574 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.40272314 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.419173765 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.416233377 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409475954 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.429943361 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.408380213 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.408663839 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.407870513 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.391609086 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.400995406 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.400431577 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.406271915 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.397460529 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.400253762 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.399287088 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.392769779 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.414195828 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.417357124 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.415408272 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.406006099 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.39604331 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.402245006 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.404438441 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.403046226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.4018518 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.40330841 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.404676041 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.401252492 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.39691025 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.423578235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.430591488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.407413471 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.402478486 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.401430028 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.408122919 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.410768018 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.407722588 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.412121611 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.406616651 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.402407248 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.407910531 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.410690983 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.403440479 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.40119152 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.400855165 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.397329297 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.405583909 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.420731505 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.431346682 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.413659656 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.410503947 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.407900893 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.405779394 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404906028 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.407743261 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.40634029 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.400781622 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.407808353 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.409989497 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.406381775 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.404140149 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.400503164 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.408657274 seconds)
  done (took 826.167771216 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.403950321 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.403844093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403518143 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.403415127 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.402125857 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.402170695 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.405915585 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.403187235 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.402452085 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.402461584 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407045896 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.405637477 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.406320385 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.407152265 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.404576448 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.403391311 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408736823 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.405393521 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.405621204 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.405813896 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407263522 seconds)
  done (took 30.759350405 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.406476131 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.407032347 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.404260905 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.405497864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.407006226 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.409005153 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.404580289 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40564942 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.405582582 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406653737 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.409545516 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.405524334 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.40520907 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.406118194 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.405326962 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.409809027 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.408043788 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.404663889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.403863438 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.406226169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.404296943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.40498921 seconds)
  done (took 32.193830515 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.405057445 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.407259819 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.399144124 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.412057706 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.407762607 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.405639781 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.405892049 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.408396417 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.409265173 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.398293805 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.400169183 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.403986568 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.412228608 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.414006348 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.412327014 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.413124951 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.405274163 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.407891116 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.411380526 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.406783013 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.422069245 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.424881195 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.411008202 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.400087958 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.415014507 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.408686398 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.414153713 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.409356455 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.40693394 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.415381872 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.41774586 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.406556448 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.42340901 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.415316641 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.405832613 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.414181929 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.414204977 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.409026455 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.417987232 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.421673943 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.433281635 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.413127675 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.425134579 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.426148116 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.409384811 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.409435865 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.415001796 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.410763617 seconds)
  done (took 69.020846228 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.409923147 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.412069091 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.41076676 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.409441522 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.410113186 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.411819199 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.410866634 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.410373554 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.413686406 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.412824424 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.41008944 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.411029573 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.408152951 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.412792786 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.413322672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.410479713 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.412336024 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.411812704 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.411009877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.411917605 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.414023389 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.414288996 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.413504189 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.41160311 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.411945751 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.41345579 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.414345009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.413973103 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.411652906 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.409680938 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.414151409 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.410669192 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.412192011 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.414910514 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.413844038 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.412634945 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.414584844 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.418381206 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.414129827 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.413135637 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.412340284 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.413475345 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.414218386 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.415481815 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.414977631 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.413835795 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.411196773 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.415305047 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.412354881 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.411392329 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.41100422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.413161059 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.412992183 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.412250609 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.414011656 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.417818425 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.413980646 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.418989104 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.413919536 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.412547434 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.413477091 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.413518786 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.413407948 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.414847656 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.414320424 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.415704679 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.413299136 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.415436628 seconds)
  done (took 97.349002483 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41503085 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.410165287 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.413172164 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.412973466 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.412854246 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.41286598 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.414684996 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.41282645 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.414586101 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.414259942 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.413954875 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.414929441 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.417471942 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.417218768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.418254723 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.415770609 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.413602666 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.415070031 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.415174793 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.41459553 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.412933516 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.41364939 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.415663263 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.416360278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.418450419 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.416128895 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.416762844 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.41622325 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.416331504 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.414146869 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.415993402 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.415974685 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.414943897 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.415671714 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.416260406 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.416185397 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.413767561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.413982253 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.415970006 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.418616362 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.417794539 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.414201555 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.414442576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.415864266 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.414737307 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.416133644 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.415073104 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.417400285 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.415478533 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.416853777 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.415750145 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.416367193 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414973231 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.416262641 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.414752183 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.41717826 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.420140298 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.417329536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.415371116 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.416466787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.418948946 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.416288412 seconds)
  done (took 89.032707723 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.419327416 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.418016215 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.418294743 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.418134597 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.415762996 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.414931605 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.415861612 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.414359326 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.419609435 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.422391702 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422567074 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.422962515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.424051481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426976992 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.423936452 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.426919373 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.426147766 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.42309228 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.422143347 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.420052718 seconds)
  done (took 29.686713164 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.419217486 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.419018368 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.417481022 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.419456064 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.420171378 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.421872851 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.421078127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.419729212 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.419754076 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417687054 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.419803315 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.417403009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418061542 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.418799276 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.419753517 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.418591708 seconds)
  done (took 23.98334048 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.421021067 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.419375816 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.419771537 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.418750248 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.419714686 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.420704896 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.419551956 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.420180108 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.420323562 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.419345295 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.419328743 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.422475652 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.421041112 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.419988463 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.419660489 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.420006692 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.421896737 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.421055988 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.41932532 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.420446273 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.42011781 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.419998381 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.419299759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.421009613 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.420328102 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.422701308 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.419794375 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.420806584 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.421357911 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.422006109 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.419716012 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.420760559 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.420637708 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.420071924 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.42241489 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.421291632 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.420730807 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.421634483 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.419812324 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.420118299 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.421956451 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.420115365 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.420806026 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.422934858 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.422423969 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.422228553 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.421195042 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.423045766 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.421349531 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.421176115 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.422002826 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.421734146 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.42153433 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.422403086 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.420723474 seconds)
  done (took 79.414385938 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.423117143 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.422488642 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.424481493 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.423073004 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.420928946 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.421101036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.422990521 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.424815614 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.422461753 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.425012845 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.422525309 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.424358223 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.422380807 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.423383658 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.423050515 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.42281962 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.423118052 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.423289442 seconds)
  done (took 26.888351236 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.423473404 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.424796757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.425411779 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.42318901 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.422616451 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.425172922 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.424211277 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.424407251 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.423587525 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.423529487 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.423207238 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.424520884 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.425232356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.42711444 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.422760743 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424256953 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.423934636 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.428651367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.425335722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.427372992 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.424442242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.426429786 seconds)
  done (took 32.613333232 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.414945992 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.415395002 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.412544361 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.440722036 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.433829819 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.416880666 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.416344565 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.415742952 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.4478008 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.471725489 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.4666782 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.434148155 seconds)
  done (took 18.458905564 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426433137 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426151399 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.427553462 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429374434 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426731291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425489862 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425620046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425933214 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427246789 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427287506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426950732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428103392 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428666732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431257494 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429346288 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428632929 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430400542 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431652238 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427754605 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428120853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426851278 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432562548 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433515253 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429390078 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429237754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43201178 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431561793 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428912574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429926739 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4290635 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429106522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430622637 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432827456 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433302307 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435101768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429957469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429992529 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430401031 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43207345 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436417019 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.432624149 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432290727 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430974777 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430708403 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431430281 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429152478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428838542 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429035913 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429415222 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431177666 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42787536 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428892598 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428727006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433053044 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432173323 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430938739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430434275 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432596631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432253431 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43092023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431613964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432012758 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430573539 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435789216 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429635291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433594314 seconds)
  done (took 95.663599054 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427545291 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.429596739 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433778765 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433218149 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428074617 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432518339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431736396 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433494999 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431116276 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430424986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430009641 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430658675 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430316034 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433524264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433389749 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431268808 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429667906 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430290542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431308479 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431482243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431452352 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430952637 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431324612 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430669361 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431737025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432611158 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431712301 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4332046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431952835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433611215 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431950181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435512924 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433382066 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.435161901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430410948 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432599494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432162219 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435006574 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432787647 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437692042 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433179666 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431532599 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433838339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435839851 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436362753 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436229496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435603787 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435616079 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435781254 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438187914 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436278594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434608898 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435811565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43662382 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437223127 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436151483 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436105457 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437642594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.438895407 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43721754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.440709534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434568111 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436000765 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43643008 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.436746251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437539159 seconds)
  done (took 95.899964725 seconds)
done (took 1934.701551134 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.655098809 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.605576309 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.425631499 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.425316097 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.424171677 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.408766785 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.422810261 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.423951957 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.427047951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.428798243 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.425994744 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.685544789 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.440136347 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.422323816 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.42394127 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.581371626 seconds)
  done (took 28.91189159 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.470449769 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.442437198 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.580926667 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.429892028 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.469628784 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.694113686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.503370366 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.437329565 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.640526704 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.461411678 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.408494963 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.464171736 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.433775343 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.404853788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.52056927 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.691614695 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.794592036 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.414756862 seconds)
  done (took 31.553995171 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.006520243 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.432097476 seconds)
  done (took 5.723937311 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.463247177 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.439067217 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.439706613 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.436572067 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.406456086 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.401927368 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.436917781 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.406116449 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.406315356 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.590894065 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.440887839 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.458737665 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.438394436 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.438635108 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.445075313 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.497882727 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.670561249 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.448209511 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.445126367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.45383781 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.437817197 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.597433794 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.49080075 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.447753587 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.585425703 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.41293617 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.44270504 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.451525994 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.620871341 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.445340571 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.436671521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.436348155 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.437886619 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.405700683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.097755099 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.410247491 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.469495667 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.453086387 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.444199643 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.636142138 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.439064702 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.452855283 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.41001897 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.078490498 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.608781396 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.608552806 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.42670489 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.439101299 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.440304455 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.518340076 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.439056741 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.441338944 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.533675826 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.345450144 seconds)
  done (took 91.800584769 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.431225857 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.406407407 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67689746 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.428907685 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405684969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.410450868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.411499744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793551331 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.43323072 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406914524 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.833624863 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.161522845 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.418218127 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.476848767 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.444325707 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.464555794 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.408691496 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.424260934 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.407605185 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.413159104 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.092657174 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.408319382 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.426614865 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.500620505 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.479397834 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.095028146 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.408142614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.4112509 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.410273611 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.408323502 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.131957842 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.414008443 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.45755183 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.409428462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.806996616 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936468877 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894107275 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.413054551 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.44759833 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.406960481 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.434767578 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088764291 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.911040503 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.408063902 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.416560234 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.089791935 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.408574862 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.421664026 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.411594449 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.773586083 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.412501618 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.411679237 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.40827224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.412446792 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.409190582 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.463807583 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.466662695 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.091351561 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418800603 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.408551186 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.43489413 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411183782 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.409657471 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407630747 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.409795268 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.917778161 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.66940363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.409874049 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.916616631 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.122139345 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.409506404 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.209623304 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.412221484 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.452397474 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.459676332 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.409501865 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.443689243 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086039153 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.434535006 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.410357141 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89610278 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.412054843 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.81884966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.430799615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.411112125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.118504036 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.412792158 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.454844782 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.411726729 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.410516659 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.429493443 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.41794386 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.803667492 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.484852788 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.412476614 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.412880437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.445861586 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.411405598 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.413183618 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.415056202 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219169142 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.42171494 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.411974456 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433225832 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424827697 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.415266006 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.415099504 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.412227002 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.789276137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.416170729 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.413878608 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.411158151 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411533199 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.418788381 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.510326139 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.42046562 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.849361221 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.414109784 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412321148 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.436872804 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.412358862 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431666625 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412334697 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.431582536 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.416671422 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.821918486 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.434319196 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.413755618 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414731161 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.417853207 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.42279755 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414134926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.472810753 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.41786019 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.355393378 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.456827576 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.41785139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.412437993 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.428799849 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.414277542 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.415988584 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415663752 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822572479 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.808510426 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671584774 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.421636648 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.414662088 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.367904815 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.430440282 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.68562783 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.435984701 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.41477132 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.806679467 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.648251988 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.416420342 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.414350317 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.420664388 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.786937501 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.418397409 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83936882 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.161240686 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.416901759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.419865054 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.365914897 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.346641846 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.422220522 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.42136762 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.819917183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.435579832 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.416850914 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.417288539 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.417910266 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.417458533 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.423738521 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.419736825 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.417602756 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.41671654 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.762793788 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.703262615 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.43712982 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.422639988 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09568214 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.444010373 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418052672 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.450527403 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.421691752 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.41605207 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.472556531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.422369981 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.421928794 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.420256166 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.421383892 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.1540529 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.423099404 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.420504521 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.701757954 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.321528457 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.423556725 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.420207975 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.420075416 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.477478177 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.1500621 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.467679514 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.875911734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.429179018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.493350306 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.420988521 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.438272423 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.156641427 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427268649 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43902203 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.314693928 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.41994146 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.910533735 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.418832591 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.420956953 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.237052421 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.420811543 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.422962446 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.428334008 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.419329092 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.819902936 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.426175493 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.425882928 seconds)
  done (took 524.009986409 seconds)
done (took 683.291711415 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.419238927 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.425333487 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.424446782 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.430101481 seconds)
  done (took 10.995955631 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.463908225 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.448913021 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.4589335 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.449161657 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.458943208 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.451122032 seconds)
  done (took 10.04074296 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.420943264 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.42696882 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.426366021 seconds)
  done (took 8.57262163 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.742053721 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.454036718 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.916223006 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.421486419 seconds)
  done (took 9.840276407 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.46073324 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.460680789 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.458897183 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.460374465 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.462693754 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.461970339 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.461515183 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.462235386 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.462134955 seconds)
  done (took 14.457316046 seconds)
done (took 55.206922614 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.422695162 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.566764949 seconds)
    (3/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.416635523 seconds)
    (4/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.402227127 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.639553605 seconds)
    (6/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.582499911 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.487926782 seconds)
    (8/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.624864517 seconds)
    (9/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.901078622 seconds)
    (10/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.494329063 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.696032575 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.428251386 seconds)
    (13/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.608238101 seconds)
    (14/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.614216026 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.827024442 seconds)
    (16/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.603483865 seconds)
    (17/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.402821476 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.409847649 seconds)
    (19/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.595759558 seconds)
    (20/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.401224625 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.630480594 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.669598417 seconds)
    (23/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.852341628 seconds)
    (24/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.590273665 seconds)
    (25/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.604319586 seconds)
    (26/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.405507851 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.781551272 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.569590169 seconds)
    (29/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.406210035 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.563412568 seconds)
    (31/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.488917062 seconds)
    (32/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.78551211 seconds)
    (33/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.708054286 seconds)
    (34/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.501844124 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.405720238 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.672635675 seconds)
    (37/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.090398506 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.415288006 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.614832096 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.608459777 seconds)
    (41/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.448806654 seconds)
    (42/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.632648049 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.424946985 seconds)
    (44/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.60825584 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.403741076 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.745808667 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.605654881 seconds)
    (48/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.782531563 seconds)
    (49/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.421510026 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.409286125 seconds)
    (51/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.508334126 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.614314432 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.752845107 seconds)
    (54/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.70431226 seconds)
    (55/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.746831424 seconds)
    (56/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.487350312 seconds)
    (57/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.605576729 seconds)
    (58/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.701190284 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.782557335 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.604299261 seconds)
    (61/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.499353374 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.696059814 seconds)
    (63/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.630362423 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.679078604 seconds)
    (65/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.404361197 seconds)
    (66/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.438432359 seconds)
    (67/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.56000564 seconds)
    (68/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.921494207 seconds)
    (69/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.619320097 seconds)
    (70/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.567743845 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.774178197 seconds)
    (72/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.598272728 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.590285049 seconds)
    (74/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.40656881 seconds)
    (75/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.437012207 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.629277718 seconds)
    (77/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.68503809 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.596067559 seconds)
    (79/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.494407564 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.406052613 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.832202545 seconds)
    (82/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.920057292 seconds)
    (83/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.459839621 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.82795836 seconds)
    (85/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.629891482 seconds)
    (86/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.49549632 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.438708861 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.559921481 seconds)
    (89/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.780818287 seconds)
    (90/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.682327061 seconds)
    (91/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.754931476 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.592573888 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.624119241 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.493923703 seconds)
    (95/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.570032754 seconds)
    (96/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.407599458 seconds)
    (97/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.935717524 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.434309069 seconds)
    (99/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.696642918 seconds)
    (100/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.750167113 seconds)
    (101/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.747586966 seconds)
    (102/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.672332076 seconds)
    (103/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.565487762 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.584821785 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.594167247 seconds)
    (106/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.752779736 seconds)
    (107/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.686854313 seconds)
    (108/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.010752624 seconds)
    (109/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.637312398 seconds)
    (110/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.497911921 seconds)
    (111/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.663265419 seconds)
    (112/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.681969823 seconds)
    (113/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.639745809 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.649343398 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.748508453 seconds)
    (116/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.508070196 seconds)
    (117/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.410281573 seconds)
    (118/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.455401766 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.599015839 seconds)
    (120/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.413526678 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.655477837 seconds)
    (122/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.61203635 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.6170087 seconds)
    (124/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.707939746 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.712128337 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.506245522 seconds)
    (127/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.475602729 seconds)
    (128/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.103526642 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.434931425 seconds)
    (130/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.453081918 seconds)
    (131/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.793249896 seconds)
    (132/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.409200848 seconds)
    (133/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.53764316 seconds)
    (134/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.412915637 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.416199016 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.624015387 seconds)
    (137/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.663283788 seconds)
    (138/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.637986297 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.431701894 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.693471286 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.669080125 seconds)
    (142/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.703794386 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.612295042 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.925041795 seconds)
    (145/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.416652984 seconds)
    (146/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.591086828 seconds)
    (147/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.596558892 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.588750078 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.415865803 seconds)
    (150/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.788780892 seconds)
    (151/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.636356201 seconds)
    (152/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.596389317 seconds)
    (153/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.740098584 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.682874966 seconds)
    (155/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.412813599 seconds)
    (156/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.84926931 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.864398539 seconds)
    (158/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.62549232 seconds)
    (159/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.482275225 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.876361652 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.932080469 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.448802952 seconds)
    (163/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.418161905 seconds)
    (164/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.413281744 seconds)
    (165/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.707208089 seconds)
    (166/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416829053 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.555079595 seconds)
    (168/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.758102409 seconds)
    (169/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.444646557 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.506335268 seconds)
    (171/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.503810505 seconds)
    (172/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.842933169 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.630300683 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.624305646 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.415826272 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.691822472 seconds)
    (177/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.413147999 seconds)
    (178/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.642176565 seconds)
    (179/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.415514082 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.510288215 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.723050048 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.687072776 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.416066037 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.847513151 seconds)
    (185/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.578945339 seconds)
    (186/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.619984776 seconds)
    (187/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.522497938 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.730841889 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.641301454 seconds)
    (190/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.500280867 seconds)
    (191/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.518311721 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.782287259 seconds)
  done (took 357.665300255 seconds)
done (took 358.966074396 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.496968783 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.622732053 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.469733617 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.468773718 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.468021108 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.441085071 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.500590613 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.467340645 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.491253741 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.495839938 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.440459922 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.479129992 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.493978738 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.481965688 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.515209022 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.468193057 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.467865571 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.479213034 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.498257844 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.496900968 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475565852 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.47417636 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.51003504 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.471338708 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.484711219 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.487493486 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.485461035 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.443984811 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.477981313 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.496133761 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.458740109 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.483431447 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.494032587 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.483419574 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.473203331 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.481852825 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.474005738 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.621606281 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.5002838 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.484390927 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.482105301 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.498254841 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.484551562 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.484179447 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.482028545 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.509708602 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.487403251 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.492104128 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.454005918 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.451337632 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.498274467 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.493946193 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.483362165 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.452624737 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.448885224 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.494837297 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.483586006 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.500922429 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.479100101 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.481686044 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.511575459 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.500077 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.491978903 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.48936656 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.480729149 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.495835259 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.483033213 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.497800663 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.483614851 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.47757323 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473517966 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.48171 seconds)
done (took 116.333927802 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.647774832 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.441311706 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.705239612 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.479292374 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.701618202 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.649860502 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.479479828 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.482727377 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.480941466 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.334546593 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.48194753 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.481204908 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.442631357 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.480595263 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.650244769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.48049539 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.482556965 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.232895608 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.483287225 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.663565457 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.453317632 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.483265714 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.483567848 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.337458764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.444226183 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.454338782 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.666109077 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.483416432 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.233852294 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.452236978 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.443977338 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.233576002 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.66722144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.503196321 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.494637412 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.493409252 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.701820253 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.489211373 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.655262796 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.651149493 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.691714708 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.523257811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.452454115 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.446996646 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.486355702 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.487652724 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.484178819 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.514675644 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.44882146 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.485456286 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.236988866 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.498266505 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.495879469 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.484855511 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.486178585 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.505734493 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.487320559 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.491873023 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.666406043 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.489467061 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.654041831 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.340606582 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.342848696 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.488395976 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.449771371 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.487194985 seconds)
  done (took 119.051115651 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.603896068 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.615271397 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.651212909 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.477558564 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.570658392 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.656524129 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.47672452 seconds)
  done (took 12.379496024 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.491329589 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.485377365 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.570347668 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.567648861 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.48436327 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.737032203 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487089455 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.501874156 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.487314972 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.571731293 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486345994 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.486213925 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.496183977 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.452909969 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.56870123 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.497553564 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.654471564 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.478826672 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487575899 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.687999152 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.486347391 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.501403216 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.570982805 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.494384587 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.486514591 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.490790414 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.386210565 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486611181 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.487514998 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.491340763 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.48824449 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.601122741 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.488067652 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.452957461 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.487842693 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.651288687 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.486480438 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.487321677 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.488837232 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.457098769 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.486817563 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.486047772 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.486777823 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.488057175 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.488266559 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.511641739 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.489231906 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.489997646 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.489898122 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.492117887 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.574741872 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.489706338 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.490124407 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.489051645 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.576870285 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.497267355 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.489494998 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.488362661 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.490910052 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.490583405 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.692225456 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.569551896 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.488149157 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.572341776 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.487294998 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.490152623 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.492693869 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.494076237 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.632251211 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.48770343 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.572390385 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.488224445 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.720216517 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.514764483 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.490680484 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.48696367 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.486131372 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487732483 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.452145416 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.495523139 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.488477829 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.481548527 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.494790923 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.490403633 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.489441709 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.700692665 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.650429849 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.490682718 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.507184049 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.496968085 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.489365303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.572267814 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.488354629 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.489815151 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.573489059 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.656079589 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.574557282 seconds)
  done (took 153.701940383 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.501154512 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.501471102 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.490767786 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.517142229 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.482583645 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.48148986 seconds)
  done (took 10.297943056 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.490652408 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.497857025 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.493563741 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.491420034 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.495725399 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.495592561 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.494204396 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.486060693 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.497384898 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.49311578 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.495285748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.492169011 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.493016885 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.494317958 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.493235208 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.491823646 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.496071184 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.490999728 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.495922981 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.49647312 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.457049391 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.494982497 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.495348466 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.48786567 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.498613685 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.492469119 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.516922019 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.492154485 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.494516237 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.497952218 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.499034759 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.497358149 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.487662153 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.495266053 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.498362606 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.486933919 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.502167908 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.499115914 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.492858834 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.498685832 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.499309095 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.494490116 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.493302605 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.495567488 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.487546077 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.491384624 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.499370276 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.517089778 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.494162352 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.496907952 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.496516561 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.493670879 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.494659132 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.497769444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.489076299 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4895383 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.498953953 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.496531088 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.496196269 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.490943436 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.499589508 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.495878631 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.489144744 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.500874517 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.495753475 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.498423438 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.489386046 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.500667368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.496585914 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.496760866 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.499560315 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.495330866 seconds)
  done (took 109.966762676 seconds)
done (took 406.714792723 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.860993496 seconds)
  done (took 4.19174247 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.711737645 seconds)
  done (took 4.053982213 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.764614831 seconds)
  done (took 26.106176003 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.482109142 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.565508924 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.466869007 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.459958002 seconds)
  done (took 11.304525248 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.821422961 seconds)
  done (took 4.151343338 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.46685392 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.48283228 seconds)
  done (took 6.289744387 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.852404485 seconds)
  done (took 4.18184603 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.936453651 seconds)
  done (took 4.273018447 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.493790097 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.478843714 seconds)
  done (took 6.309967769 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.437911204 seconds)
  done (took 3.769091866 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.531806105 seconds)
  done (took 23.86499212 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.469743673 seconds)
  done (took 3.805216781 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.498549851 seconds)
  done (took 3.827759941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.619472001 seconds)
  done (took 6.949412492 seconds)
done (took 114.414481062 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.459627583 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.466484949 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.464516821 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.466361959 seconds)
  done (took 11.187937726 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.618245659 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.615576813 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.619710788 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.607374304 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.60480603 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.620941393 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.529174276 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.5323406 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.592819799 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.591872262 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.621381811 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.607401681 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.620318268 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.532874746 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.592217139 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.622447729 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.595179387 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.620266656 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.533773743 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.606862647 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.499528397 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.608856825 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.59271797 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.500878499 seconds)
  done (took 39.420962541 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.049237686 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.619297817 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.701619808 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.584160947 seconds)
  done (took 8.287480063 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.665658601 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.670145834 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.682041131 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.727195826 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.770006088 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.676282229 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.536559573 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.530089196 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.516306787 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.668698582 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.754646732 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.661875369 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.883805964 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.499418676 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.88183225 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.50156441 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.500801813 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.665805058 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.715318757 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.746246153 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.499919647 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.663816467 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.67203092 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.661692663 seconds)
  done (took 41.085062843 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.517540813 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.526921266 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.503949489 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.526918053 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.502914372 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.50178888 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.503093096 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.518358305 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.501635159 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.502229788 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.502833915 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.523558199 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.502604906 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.529032637 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.51892367 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.50306914 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.503841934 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.517119461 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.518676083 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.504040981 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.503858975 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.517833518 seconds)
  done (took 34.585214573 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.464855063 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.464683951 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.902424324 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.838210432 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.467317876 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.464087926 seconds)
  done (took 14.936096204 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.592448802 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.783811126 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.495942257 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.931193345 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.056317287 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.497001958 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.496927577 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832280976 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.198714306 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.172257729 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.57676245 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.591522148 seconds)
  done (took 22.564058181 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629985978 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476295275 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497400822 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548257568 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476415401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476999414 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.546917803 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375569268 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.509610405 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837003854 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476741141 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662385839 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.815766306 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490554979 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483429912 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.459876776 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79159815 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116140327 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481090717 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49091997 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544806082 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477321033 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480581365 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.792228746 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486061251 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477143916 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.827602519 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476734996 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894062856 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85043105 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850826771 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481150571 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841092083 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299782046 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665191852 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764374017 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493100136 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47933379 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.472423553 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.484380311 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516202304 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488074776 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848272325 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488195671 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480327561 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498266923 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39585879 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.517930387 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.479847263 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481382165 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859213801 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645585309 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.510692806 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478607021 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575360946 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479306273 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.507573205 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694634213 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207362752 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480816939 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507112462 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.480302767 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47388617 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491446293 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288275904 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.511984729 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.507974792 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508936995 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481002298 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480421218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558618732 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481985803 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.533199508 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481964082 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468074397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488656344 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489980046 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178581298 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4921431 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.48599141 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797332259 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482535244 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482266565 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.481416527 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48189913 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401617552 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513044711 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.450573847 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586714135 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381053485 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.780867385 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538235204 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542283974 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.786842377 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.452488965 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484044514 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.491121951 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489633773 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533240505 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398053831 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489349519 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.512792514 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.823143222 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.783308199 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493072548 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.458917576 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128687454 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499920835 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.537617807 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502905572 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.771933358 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.280846259 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861485249 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496843209 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553921207 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485536394 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464405774 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492183398 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.513988685 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504941655 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88178399 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.457880293 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486311912 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636506081 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487771595 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485557766 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493682961 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489477049 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485224134 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.769143338 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508562856 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85994029 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.493393399 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486139403 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.492027373 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48525661 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.494906231 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.787366256 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499127369 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842328274 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486173836 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486573397 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485782515 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.793458372 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.488230172 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.516010171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916920581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486714826 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492392993 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866195066 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554505919 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683306097 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54929946 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.487524636 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.848489602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.514882444 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.516205098 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503187731 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495656815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494829126 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.518384985 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500110105 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281284792 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492932447 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488243372 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489101233 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.533797978 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640520278 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520528414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778141899 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.495727354 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496450351 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.51814913 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.494711723 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795584132 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85649048 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.490138865 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742164419 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.138374789 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285810507 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534878353 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.489623157 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.488710681 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.48834988 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490540382 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488392484 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490029563 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777078287 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875205639 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493108446 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288408533 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49370084 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500929273 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.521906732 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860627947 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.522251468 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491373868 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.496603444 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507187191 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496927856 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858614004 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792415432 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.535998956 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493717393 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.141461285 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522577697 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491023894 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491208484 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547069428 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494067646 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493784789 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925221357 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483868864 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860559712 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494260967 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.537623325 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.492067462 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493071989 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509040361 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.508267986 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525334752 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.782431062 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503402074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495417679 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220272145 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458582687 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218235154 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501039623 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.499218581 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4989374 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406782804 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500517349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493457792 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857549902 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401875546 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501296429 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142533628 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500027553 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.488789392 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869377523 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808126717 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503519197 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.508165808 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868975098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796338417 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550465461 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499009616 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500846232 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.462344059 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233635158 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514729422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748188789 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404224378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502179502 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495895253 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.555143849 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.494897431 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087875561 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501045489 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496109457 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506107376 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502480937 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499568415 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511942057 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496006581 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.310908532 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504320347 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.152543769 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502573756 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787660078 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875131468 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.842877505 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.497695622 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.498519888 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.828641477 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871150374 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501967325 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504033998 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231740084 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.449050259 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.529448682 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49773145 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472935909 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509002297 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917072555 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.521404363 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.518789296 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499674575 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497547977 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497713641 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.497254924 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500494162 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497057482 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134869106 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.508784881 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488912102 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504832353 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504181363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.837224901 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.543094691 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.292690013 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811174871 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500200829 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561402815 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.525668034 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497368555 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.468181743 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498165933 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498794086 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501234131 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802317948 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.499355819 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.496745711 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.58436642 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.799107414 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498341724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498164536 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832576684 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.505427611 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.516796794 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467073013 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560187018 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500634543 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501635717 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497792352 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600838138 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651830934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790319215 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.885369361 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885450727 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065920953 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513673981 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509279148 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.544133371 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659673343 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508948799 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.507578792 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.519027315 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295189075 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503087509 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317485554 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890748048 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507886722 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503317705 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500358111 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827704347 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50069314 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857735471 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501034035 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.497349489 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575511103 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514898368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509804424 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805486857 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856476791 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504355547 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507954887 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507213802 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.502066638 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888286911 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.805338375 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142628473 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203483138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506293153 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.5162396 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427657456 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871343136 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502342302 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504977205 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502373591 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.528176034 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.503673826 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.537850868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51178666 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820115114 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87624795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345757586 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.882738441 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.537260918 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.502635077 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52062682 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.846841697 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427240852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794819718 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315558634 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421621004 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844540427 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656982707 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799227611 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.510742393 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828812658 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.514781175 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503440976 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504941935 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50530057 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.504860499 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.876514953 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314648881 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84729825 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.533785826 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.514458857 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565793458 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.797355306 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.815530523 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.435974784 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.813710528 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88878474 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514156235 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506767865 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31500123 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886024054 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509548735 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.53667914 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838046514 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513851587 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570647077 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.466625051 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.506305236 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211690467 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.806580432 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557825405 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506757668 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433729806 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313299268 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.511255796 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157677593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509005929 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523409296 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874069181 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.535547502 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513683618 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879351138 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.535919756 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509037707 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808967956 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.310184207 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.491901239 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.507484925 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530545609 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.514808203 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50629029 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553050496 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505575953 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510342132 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.070772337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512565529 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507207376 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551260953 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.521667664 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508376868 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.514296057 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508787675 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.540054709 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.48335539 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.478877516 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.543026596 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728561223 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254761028 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521554731 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.211770156 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.934834521 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848377786 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.518270795 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.483915658 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.53887048 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51267057 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511253561 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511055212 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500954975 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21373095 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.514443631 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.886635654 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541968151 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.810141569 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811268389 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.510261535 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807639435 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519477861 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566756359 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.479462158 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511825072 seconds)
  done (took 1062.873644784 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.534955527 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.534188879 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.521632186 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.527109558 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.52390077 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.562147114 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.591805075 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.599203852 seconds)
  done (took 21.762469934 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.501145921 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.5343822 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.519732433 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.535923039 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.506930106 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.149609597 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.517759277 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.537262874 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.556891558 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.523894624 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.518327226 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.31945445 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.537851846 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.511331155 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.515918121 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.536944608 seconds)
  done (took 35.203950587 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.643615924 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.71364997 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.915390288 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.58649609 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.505589642 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.531263299 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.888529959 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.506884918 seconds)
  done (took 28.660408702 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.548591549 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.547356825 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.548790457 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.54840165 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.548227676 seconds)
  done (took 9.110180352 seconds)
done (took 1331.013078164 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.542885936 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.542404031 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.542476595 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.543320488 seconds)
  done (took 7.540269541 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.484255505 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.484456159 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.483625606 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.525034713 seconds)
  done (took 10.346082697 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.441634513 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.210664778 seconds)
  done (took 6.021647167 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.174270694 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.168745132 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160445403 seconds)
  done (took 7.873220331 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.903606317 seconds)
  done (took 3.276787642 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.50583716 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.531034708 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.512927307 seconds)
  done (took 8.92039679 seconds)
done (took 45.348109282 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.505721364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.282138252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.673041733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.517991638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.671858412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.665973167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.778741766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.522356509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.521033436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.510703631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.518529626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.695621909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.76522189 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.283412576 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.766191148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.274098543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.671057821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.522587474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.515286197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506054157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.797735242 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.517818362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.508878399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.507525293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.670992589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.671099656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.519968985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.280285084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.516991162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.51010537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.660740378 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.524839507 seconds)
  done (took 87.225886968 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.508894252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.526321888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.527907425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.52873218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.508777129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509603001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.52723618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.507171548 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.517261239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.520957449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.509741009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.51047986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.509566545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.50877203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.509125497 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.508242354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.508338944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.510489288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.527838002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.528425507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.513349079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.50977949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.508475624 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.547137523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.507819885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.51124092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.5140308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.508833211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.509670189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.509250164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512035993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.509587567 seconds)
  done (took 81.848938125 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.528623367 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.509277681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512275059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.510458139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52901825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.511839878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.513852006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.510316152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.510178145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.511169054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.509010329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.510328443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.512863752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511035027 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.512685447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.510194069 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519342229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.521460795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.511387028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.510994031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.514885727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.511814596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.515831588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.511259498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.522675474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.512892666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.537893401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.523697951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.510756571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.515197847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512909079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.546582984 seconds)
  done (took 81.887171618 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.840342127 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.549859378 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.552976045 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.520674312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.55097593 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.549787301 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.520923855 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.845600757 seconds)
  done (took 16.306411801 seconds)
done (took 268.639774869 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.522813201 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.177407127 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.580830495 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.539639573 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.569923941 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.580960261 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.824949667 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.579793492 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.823978244 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534362575 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.568266537 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.537646094 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.523641309 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.750619336 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.508455021 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.525903957 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.554205531 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.515593638 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.260047803 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.854072994 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.581882864 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.52642665 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.521843106 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.526124656 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.495532917 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.626115305 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.62744627 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.762360772 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.727493839 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.625202339 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.175059203 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.52539244 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.537683738 seconds)
  done (took 70.96840576 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.542126551 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.552391264 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.553676763 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.553251919 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.554158878 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.553798077 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.544763339 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.554447252 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.554889766 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.553499506 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.553503906 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.55424562 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.562244962 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.559358282 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.556229462 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.526031627 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.541434424 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.553748839 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.543540279 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.527537476 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.552293766 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.554951227 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.554761957 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.555399817 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.553550629 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.554087709 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.554432306 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.556471532 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.555820192 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.556225131 seconds)
  done (took 47.922025631 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.55621277 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.247920353 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.482007733 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.563712187 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.544040552 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.550998908 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.938894604 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.557331138 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.550695378 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.549987397 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.171862568 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.560715158 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.593537767 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.475811204 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.551943931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.556598643 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.558560345 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.548921968 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.26058202 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.566015483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.941655569 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.557309837 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.939020877 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.566439699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.551939321 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.550037822 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.562153329 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.495005475 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.57403864 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.172111482 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.522329202 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.932562653 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.421844147 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.532327121 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.5297182 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.564343831 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.55740091 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.182464823 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.554465271 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.549114311 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.936115619 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.550915239 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.478243987 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.334715819 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.571811122 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.560770612 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.537361909 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.180145185 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.852283101 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.563745501 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.520471074 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.554942287 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.562299787 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.553116636 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.854229158 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.55575496 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.551548769 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.522332204 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.587096376 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.928687649 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.560863221 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.552690674 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.265846586 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.554125633 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.258981327 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.555180725 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.569055814 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.553828179 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.487208464 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.556410072 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.349495352 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.573628462 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.562044447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.176216543 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.257696666 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.539607027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.554261614 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.274150574 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.455183792 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.950867635 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.560090707 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.47630638 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.954823655 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.558155685 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.563949019 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.564427781 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.563111203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.68461597 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.927844176 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.26898658 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.349077421 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.551237276 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.936127492 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.568743553 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.5563447 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.543586024 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.563233844 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.562944282 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.480447409 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.35308219 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.575616983 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.569503356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.340832309 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.575760996 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.938110286 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.567126029 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.527685748 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.556314319 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.688275862 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.564285863 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.570467376 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.560077018 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.934630793 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.559872454 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.565994042 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.337439977 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.214062417 seconds)
  done (took 220.624866967 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.528149494 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.528343095 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.52753559 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.546712051 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.527947653 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.558462288 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.527268168 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.527282764 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.554765589 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.526571849 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.526289342 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.561870892 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.555325436 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.526382929 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.539442132 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.528124073 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.527963926 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.537544963 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.528547939 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.52733752 seconds)
  done (took 48.100457748 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.565056702 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.288210184 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.256202133 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.566635045 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.565705597 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.557127132 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.632100353 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.567091108 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.56617081 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.965841047 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.783635964 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.567481312 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.568182728 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.566626594 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.255493663 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.540035434 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.964770102 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.288116666 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.56726641 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.286925244 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.539483268 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.567325985 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.555700903 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.288084819 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.97637416 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.935134559 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.636541071 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.290198565 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.567687553 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.573103744 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.288302165 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.569432817 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.560337037 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.275373915 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.568748652 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.589214243 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.570498525 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.635653528 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.635900068 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.967027441 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.293997791 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.946471266 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.589248884 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.816305272 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.569722797 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.53969782 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.30012811 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.569562512 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.541031579 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.571362462 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.582712927 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.270958968 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.560688898 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.27156491 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.569564258 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.569367795 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.291279987 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.270272009 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.260676515 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.784422028 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.55926232 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.940448991 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.57011335 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.303781717 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.572033078 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.569968849 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.571558018 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.787955926 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.293169403 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.941702572 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.9681544 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.96897748 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.570361985 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.649726058 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.572991091 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.973446902 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.646827156 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.036681829 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.971517398 seconds)
  done (took 144.539078612 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.937522083 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.706233872 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.087858588 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.297601951 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.227291892 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.774337924 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.706486628 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.88839768 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.562148092 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.730605128 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.435116295 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.73632052 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.438179814 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.654703996 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.696131471 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.755297514 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.109363139 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.544557098 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.383401269 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.410739872 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.549071848 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.717129741 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.193886387 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.834101041 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.534823597 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.225671435 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.574211567 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.25512553 seconds)
  done (took 60.362164771 seconds)
done (took 593.894615804 seconds)
SAVING RESULT...
DONE!
