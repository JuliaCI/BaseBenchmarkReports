cset: moving following pidspec: 22084
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.964763782 seconds)
loading group "string"... done (took 0.566451575 seconds)
loading group "linalg"... done (took 9.205589668 seconds)
loading group "parallel"... done (took 0.175577805 seconds)
loading group "find"... done (took 1.370734297 seconds)
loading group "tuple"... done (took 2.242153604 seconds)
loading group "dates"... done (took 1.406555132 seconds)
loading group "micro"... done (took 0.235202248 seconds)
loading group "io"... done (took 0.651047555 seconds)
loading group "scalar"... done (took 43.916472982 seconds)
loading group "sparse"... done (took 13.933038819 seconds)
loading group "broadcast"... done (took 1.218937672 seconds)
loading group "union"... done (took 15.59081865 seconds)
loading group "simd"... done (took 5.229103365 seconds)
loading group "random"... done (took 10.726104918 seconds)
loading group "problem"... done (took 2.324828392 seconds)
loading group "array"... done (took 27.24201947 seconds)
loading group "misc"... done (took 1.267336029 seconds)
loading group "sort"... done (took 3.988493336 seconds)
loading group "collection"... done (took 24.23416502 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.734543775 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.153394161 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175796049 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.220499757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.235667964 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158778452 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.182544651 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.625835826 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.129359841 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.260639524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.165883616 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.685889665 seconds)
done (took 6.471898604 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.323406968 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088570107 seconds)
    (2/2) benchmarking "String"...
    done (took 0.15436322 seconds)
  done (took 0.918223435 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090210387 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.21613793 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.12135662 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.135599233 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.135919978 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.120331944 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.136008333 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.135831939 seconds)
  done (took 1.667585474 seconds)
done (took 3.67281824 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 1.000191201 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.937706585 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.55651948 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.151364144 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.189901421 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.166871242 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.385549537 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.184581878 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12743025 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.136055899 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.207353698 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.382473122 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.584668849 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.098468228 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.117547841 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.14494914 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.099541355 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.78013481 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.098075994 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128198224 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.650179583 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.135282436 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.134126248 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141821797 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.223384812 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137418514 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.202874156 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.133053687 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.75059955 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.122298523 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.207621974 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.116568571 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.180740419 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.297884493 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097613916 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.124348436 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.747404863 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.214055938 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.132957308 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.112275594 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.756084352 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.098757859 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.227190245 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.134785561 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.134485791 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.22263529 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121802456 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.113765621 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.122167936 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106839233 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.191427483 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.631642 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.122515493 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.165593441 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.11119378 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.792464167 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11431554 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.174865032 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.144101821 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.125129908 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.116805474 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.117826343 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.200369593 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120338169 seconds)
  done (took 22.221580929 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144943272 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168899515 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.109409095 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163677171 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.171885133 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095512347 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.118263407 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093389076 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.152482616 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.217694449 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.166440395 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171858693 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09188986 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.111337973 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.123150446 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.274952254 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.141817971 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127425751 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113618365 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110932839 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.163205891 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115124802 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.131111282 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.132825321 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.19065451 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222107108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.126271474 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.139280937 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.110718636 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.123150141 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.159550504 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.185487235 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091228841 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.109694376 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.214984878 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12218531 seconds)
  done (took 5.886125101 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242957963 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116572307 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.264106767 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.191800098 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232567895 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.186933127 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.215183803 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142950193 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.317445842 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.259919041 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.119260447 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.199153394 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131920667 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.133168621 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095494096 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.113715257 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093652039 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.126796102 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163468809 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.218290505 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154364322 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124914747 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099566098 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.755078531 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120672974 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098562127 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123834781 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086729135 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.235450666 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105811008 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586511 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119426635 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1330477 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148328733 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210523335 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100899546 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152323704 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.169198283 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107449227 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.118577606 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.269354174 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133407771 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092795733 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.147476642 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148439553 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136159832 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.12020902 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140659383 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.274094378 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.118994982 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128529286 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.345995754 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.118150922 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.221363502 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.115614188 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.115738592 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.417337257 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119238213 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128704522 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.116390844 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.369335312 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.165819379 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.115786841 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094811548 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123751794 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094110761 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.438316599 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135120869 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.408491771 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097077562 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203801998 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119511663 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.130725924 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104857975 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11866266 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122488689 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.114481493 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094658351 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.113416943 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094854859 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101717449 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.136607835 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119656885 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094444261 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.180374537 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.126095889 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.137983434 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140822307 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104693967 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095911638 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14616804 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113509151 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102312177 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173966658 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126070737 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118037752 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120522458 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.159069884 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101177799 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.236353409 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.115841945 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126817424 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.119211197 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14505812 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.145798121 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095616633 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119026922 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093432205 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115399687 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164805096 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.114220516 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095587137 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.118936214 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.116748991 seconds)
  done (took 28.138604158 seconds)
done (took 56.907949162 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.460213099 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.141724294 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.142346165 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.14116907 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.141088796 seconds)
  done (took 1.775088889 seconds)
done (took 2.491084555 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.428711334 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.256347427 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122644589 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.247080867 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109054471 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.256991164 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.217835395 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123500692 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.27541502 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101580846 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.242050461 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103079455 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.125923922 seconds)
  done (took 3.358825241 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.112277622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141304916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097547429 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11052113 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108316685 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109889373 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126714223 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.134009548 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127910061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101906036 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10977803 seconds)
  done (took 1.990991498 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109224935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115264532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.11363585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107733926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108001795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107255443 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124498902 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120302275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.12509547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104075871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107557679 seconds)
  done (took 1.954628605 seconds)
done (took 8.010414875 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247111217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.260201968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122613776 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.19840104 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.408733128 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.23180445 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.662726578 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139380246 seconds)
  done (took 13.224904992 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134046103 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116141077 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11559062 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11795364 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097695448 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.118770808 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099079195 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113868397 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100018815 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112812239 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097902725 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095234014 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.117141109 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099079725 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.112968223 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098949336 seconds)
  done (took 2.529953289 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139918459 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138485805 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.124374415 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113387435 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.12179769 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102673133 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.124633301 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105230721 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118681665 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.118715598 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114603053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.128812487 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.112007503 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.118830945 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106324122 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.131807985 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.101466762 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123718505 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107432226 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.123697552 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.130567512 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105204791 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.128830502 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112783029 seconds)
  done (took 3.691220557 seconds)
done (took 20.158938912 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.207224964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104404944 seconds)
  done (took 1.028729296 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.121640311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.139598762 seconds)
  done (took 0.986132254 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.132452757 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.113020311 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.162468435 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118406748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.115481479 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095981222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.155365546 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.115188453 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097843056 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.114356283 seconds)
  done (took 1.944672594 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.10304113 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102875357 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125771241 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139606775 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.1122382 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.117122857 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103669673 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.120103304 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104155852 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.114290396 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107299816 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.140283523 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.122218825 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125654848 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.121473561 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121781711 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110487405 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.119995139 seconds)
  done (took 2.834884941 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.097117251 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098761676 seconds)
  done (took 0.920315894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.10071459 seconds)
    (2/7) benchmarking "second"...
    done (took 0.11165987 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100769943 seconds)
    (4/7) benchmarking "year"...
    done (took 0.117330425 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095118498 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.111195161 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096418324 seconds)
  done (took 1.459471703 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.608838282 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27858166 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.408946738 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.14238487 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.181831385 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.438891338 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.182790626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.138877097 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.137432174 seconds)
  done (took 3.292998184 seconds)
done (took 13.191674134 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.11122268 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.159891012 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.619701616 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133475835 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094713388 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.176850985 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.331826227 seconds)
done (took 2.357099368 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.408869021 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141955783 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.10083588 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094402696 seconds)
  done (took 1.470667448 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.096103544 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105164874 seconds)
  done (took 0.932711364 seconds)
done (took 3.135292089 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094586175 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093413063 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.108744028 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093447109 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.231080988 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091618404 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093258349 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110837519 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.147031249 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.093957204 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.09471234 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113432106 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091451627 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109789751 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091339816 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092923299 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.110734507 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091998459 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111085631 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091319193 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091067775 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111080173 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090939148 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108655662 seconds)
  done (took 3.332986127 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.121642249 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.113257643 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102459594 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.120060228 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100544227 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.119652401 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102335034 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.112959986 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102550315 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.114436035 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099660439 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116890976 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097367119 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.117244137 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09815363 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.118020177 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.119224324 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095691936 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097176624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.118712247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.119284069 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097476776 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.117274842 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102747007 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.117572766 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100096319 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.115497869 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09602939 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119714058 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100072282 seconds)
  done (took 4.008700833 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.107149652 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09119503 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.110324543 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105493601 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.108998071 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095939972 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.110576526 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09348672 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09265597 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.110682475 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094813691 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.109594649 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09144392 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11117707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093803078 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099887014 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.137049008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091473905 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.11000697 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09360018 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115845057 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092001779 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.112390879 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091420709 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091087267 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.109822079 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092290018 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109342311 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092753 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091020974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.116318092 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100014336 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.108933918 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109782762 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.11849513 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091593993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.121383036 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091452933 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.110676426 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091264624 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090155028 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109913609 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092884599 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.124644167 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096036708 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0923298 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.109766981 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093385806 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110943343 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095842513 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.109472952 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092358347 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094886982 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.112258636 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098977888 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.108896626 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092908685 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.108625863 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094697196 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0910257 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10947423 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090831147 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.11908911 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093315002 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.144716701 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.1074957 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.110109478 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095108191 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.113716782 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.105280112 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.113443339 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119237201 seconds)
  done (took 8.1980494 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100397751 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12368915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095059692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094582289 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109473791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093057315 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119236851 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092374655 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112666962 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11352283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111283551 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094760448 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112723277 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097938251 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111025996 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09538111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122806563 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091575333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092315158 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115467729 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093376788 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119267936 seconds)
  done (took 3.05466269 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288661104 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.123686738 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.179857747 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115703154 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.140491802 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.134197599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102693248 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121757854 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102333507 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1255729 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107413005 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120446745 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.140618874 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108042836 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126491442 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108475732 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120966879 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.127487999 seconds)
  done (took 3.135956147 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.11333361 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.114682048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125533259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.114141233 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096817021 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.116864617 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106004209 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.133662393 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.098795702 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.114933657 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110319211 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1167889 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098582905 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114739453 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099396848 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11495126 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098703473 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11524502 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110406247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122433961 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105724854 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128986711 seconds)
  done (took 3.213859625 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117602964 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116743431 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123414588 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12258062 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091426273 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116318122 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106305352 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.115063549 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107593757 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.116172591 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097634819 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111615698 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107149079 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114099707 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106157221 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114997202 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098336303 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114327259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099998891 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109006647 seconds)
  done (took 2.95209019 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.149489248 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134641186 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116871394 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.151164981 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134848792 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118213026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148983006 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117428834 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135781414 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136379313 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.136361078 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134487848 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131611742 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14429684 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116591214 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149185803 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14778233 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130374533 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135362818 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115973692 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154354324 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13447674 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13084023 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.134029296 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115538511 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13505591 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116447811 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143478407 seconds)
  done (took 4.496258303 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096189919 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093819324 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.110640694 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.092077228 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.110161641 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092308924 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092478115 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.11065663 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094564295 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109488662 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095716719 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095104607 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112695791 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09488404 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112577083 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09530754 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095387897 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111104322 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092549593 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110191982 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095248335 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112520338 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095572849 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092076955 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110357347 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096182613 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110455159 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09338049 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094334921 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110362995 seconds)
  done (took 3.779361317 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10969022 seconds)
    (2/2) benchmarking "in"...
    done (took 0.122649674 seconds)
  done (took 0.982596293 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095040971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134710842 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092757354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099109154 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122850418 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096124845 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.127621411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122999942 seconds)
  done (took 1.641766693 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.126458098 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.137878049 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.103990127 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.13115224 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.118062953 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.136908985 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.20350232 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103584765 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.123465664 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097697492 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137426051 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097526287 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125536036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104762921 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.125478023 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117629081 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.11185435 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108157035 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123223142 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099158156 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103563878 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138606874 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129663344 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107995065 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.11863574 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112748799 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.13621819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110960637 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.123184288 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115608278 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.123769012 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08894791 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.119927993 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10332875 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.112202491 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.117243132 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141139805 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104179211 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.12658466 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103925821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128573833 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091442202 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.131466578 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106152559 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.132373597 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102611982 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121043645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092629638 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097288644 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.120741926 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092396977 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.121180311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090816516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.129160613 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111321935 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144932374 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098894507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.122157698 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102761608 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.119419329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107067775 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.122365237 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111666609 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.119194018 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111085228 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.128724026 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108668925 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111687968 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089983613 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113657754 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111832221 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14669599 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115969194 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.123570087 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104021224 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113591225 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105372162 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122475779 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109165271 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.13328356 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101904906 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125244564 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110560652 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120985536 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102738168 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.124356599 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099789622 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.119286944 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098222117 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149374008 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100169036 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.1135584 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098577842 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.13304099 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103944124 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.119217692 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099011372 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.128732334 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090791128 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104045111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123975078 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105800721 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.138187479 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122874431 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105374775 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.128995446 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111594861 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.123148885 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102914568 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092789403 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122817608 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099243045 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.127371181 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090366381 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.123564036 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10444791 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.122382197 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.117172997 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.118121244 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102690793 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130128082 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114624411 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.118194073 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093261328 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.121903485 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10302092 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126441766 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116216723 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.118165226 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092268258 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091747785 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.130303405 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102065402 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.128383956 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103417843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.124304952 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090545359 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114295648 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103791752 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.134928155 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102011331 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.126134363 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112978771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.126921015 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100199612 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.13167319 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100895207 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.117619798 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112635015 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.12422274 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09307254 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128212331 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103122997 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.118443238 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103804069 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127891312 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104779321 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.122820812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101056759 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.122809883 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105183718 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.115636805 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106984953 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099217877 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.136832508 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.122719256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092972421 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094292328 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.125857845 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100075592 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.120632985 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099822129 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.122066735 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104220711 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.1231326 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101748955 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.120973025 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120010953 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.130780998 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105272575 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.127329611 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114029273 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.120468428 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107053231 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119977961 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104608164 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.122088728 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111511758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.124913397 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10548627 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10243501 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112655008 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106727439 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.129927353 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098314121 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114704404 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098804171 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.1216064 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116003717 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.121624572 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103989031 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11887115 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108302257 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12806081 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103897031 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.119854846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098992449 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10295355 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.128468959 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104455974 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124113226 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115211404 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.126089954 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092334479 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128542044 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099759782 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.12795414 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092560351 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.118278434 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099728491 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.123138994 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103296569 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.12009208 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091150838 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112038021 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132579236 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105281436 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.11797476 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103011847 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137598738 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101238357 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.128522125 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103595119 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128807727 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147152575 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099528301 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.122385828 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118447302 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.121355237 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091702041 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107867872 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.12024568 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097503978 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.120248385 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099881191 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.125448518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108140246 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.126809047 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091516746 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.121954079 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100557337 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099731159 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11340005 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114474879 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.12699877 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106362157 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.138561007 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1249179 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105205247 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107118326 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122359155 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104162006 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.124085882 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105464357 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.123019646 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101787403 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.118627818 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106401378 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.118420561 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09719717 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.121596783 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104028967 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.125950656 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107363397 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119739746 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114919943 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.123543443 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105223726 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164479263 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100791992 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.117993676 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106532087 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.126800324 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103577899 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.123098375 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093701999 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.130978118 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103425765 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.132058512 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103937145 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11300935 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105998252 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.121821021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105948013 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104001095 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.125092222 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101697756 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.121728397 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104252294 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.138424536 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099205319 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.13561031 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108050569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12783212 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103937009 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.126759524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102003675 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.118045266 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10575025 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.124397356 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107094487 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.121547683 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108220399 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.125436169 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102983982 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.121231387 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105963552 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.124765481 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10684285 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.110950355 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099893917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098956638 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.123516569 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112319944 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.124943058 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101460521 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.120185897 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105733137 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.120759445 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094230701 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.128212504 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109244204 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123716486 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119603162 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.118238024 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105560414 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140542763 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091798835 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.11855035 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097142416 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099037253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.133623659 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103819264 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.132371651 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105520083 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.119136298 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095013971 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.124615186 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100533647 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110515028 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096967103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128199005 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101536207 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101044681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.123639466 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107619036 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125891135 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11169228 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.122607496 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105564477 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.123701547 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096041551 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.118964779 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10082791 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.124905111 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106109917 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.119113176 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096309039 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102105232 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.127564281 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10581458 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.122698302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10303504 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.132399829 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103514765 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.12567577 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110787024 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.113235578 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106776266 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.122822865 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103145738 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.119620633 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107734716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12632913 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106303029 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.132188337 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103898061 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126727598 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104433735 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095451779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.123572471 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10268464 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.123168985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099312759 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.12492151 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113434971 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116579192 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106965096 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125140767 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101927485 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.127141796 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105159178 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.125907583 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109916547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.124255631 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106544253 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.129368455 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104202911 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.126749693 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106344941 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.122023971 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111631088 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097697189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.135989534 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.125753271 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105209923 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102547393 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.120255409 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102090105 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122027684 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101063974 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.133606156 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104951457 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.119639907 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099041493 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.115885167 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107388874 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128682743 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113125987 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.124525399 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106873955 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11325868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095732965 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123885053 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101071242 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102395899 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.127067871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110975986 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.125212321 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100270846 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.120447022 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11370402 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130798039 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109595117 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.120477422 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110403076 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.125069694 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104394036 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.121220524 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103472927 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125004153 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10994836 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.12199264 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099595212 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137667621 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11324639 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126073349 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102840594 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.1283726 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104786728 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113246474 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106269799 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.12519782 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111474696 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.125231011 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103977231 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14159935 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098872143 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.122966638 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110950928 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122092059 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116170739 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.112780554 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106545249 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124494451 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106426439 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093764578 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.120236666 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100943974 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.124841442 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09917694 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.113248674 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122052121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.133413329 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107552163 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122408837 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101876182 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.113180206 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.094837561 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.119188231 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106700856 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.1032621 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.139535917 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.118508495 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100220214 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094469375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123738289 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106865281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.128614042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096388796 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113804982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101133785 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.128119471 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117890632 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121897494 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105554661 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.126363641 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106874409 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096897435 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.131479134 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095223873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.126864413 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.141396597 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10614458 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127800872 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113252384 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.132679869 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10598629 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093595669 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126266157 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107076488 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.127552011 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105938577 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.127753613 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150373626 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107580485 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.118711384 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102797431 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10633747 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.12217032 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118579442 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127194803 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105674734 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.128179008 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.102504082 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128975944 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11519751 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131241041 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107694023 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.129110575 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101734664 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125579758 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10135832 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.122802589 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107629862 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.126535271 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105388764 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127882509 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101129124 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142965909 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117889558 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.128590927 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095993263 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.119810283 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101462441 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094900704 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.126877226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.097121637 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.121450185 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101554125 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122207555 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109826554 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.128322149 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108614777 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125638778 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105285426 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092838373 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.131099513 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10594021 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.130734258 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095432233 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.124878459 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106261237 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.134985237 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111011888 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123627757 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106318793 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.12503472 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109662984 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.114531196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108972651 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121882118 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103824486 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.120686283 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105077551 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105026268 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128200689 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105496711 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.128824272 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104852519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.130887422 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107527373 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.116907287 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095798067 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.129869255 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098163984 seconds)
  done (took 68.935287435 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186980362 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103051638 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094627628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114944777 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.150787315 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096757148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113271607 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096795728 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.095312599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135757274 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112934931 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094972925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.144008547 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.154666442 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129270609 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135898905 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093047661 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117563082 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093114893 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115893279 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143829557 seconds)
  done (took 3.326436103 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.125531496 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.138435714 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136436694 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123326867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129209263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116823229 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.136906286 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137939625 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142740586 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111754863 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.142546573 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136593879 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112042535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.131385347 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111730017 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134107538 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.141987534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109861704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.139595664 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137350928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11464629 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.138163196 seconds)
  done (took 3.646574107 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.1103003 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102663776 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.13171092 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.096681664 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.123353157 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097685086 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.130078246 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100215406 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.131156596 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105705681 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.121613388 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105536373 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110968705 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11753582 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102378018 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.119388695 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112442169 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.123828191 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10655398 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116971977 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.149210576 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.11736546 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098769785 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.121836496 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11421327 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.126012561 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104434277 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123872895 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102547611 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103377288 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120079974 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108549875 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.132366821 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.102199959 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.122355807 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104341617 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123861331 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097634172 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099515522 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.132506606 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.097865177 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125391179 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116301177 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121594398 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100206054 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.12874857 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103715218 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117440705 seconds)
  done (took 6.284229578 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133630773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168343649 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.125323367 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.16642366 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.143722012 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116592035 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.126730914 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.165578906 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098874127 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.119493711 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12529647 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.14448394 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122918081 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109938045 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.123896954 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101374316 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123481701 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099711886 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.132329023 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103514624 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.132484425 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108412649 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.143289436 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.141010673 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108057212 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121914024 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100464485 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128645718 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.139528794 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112743779 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128831062 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129585434 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124347397 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.127450142 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102800519 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125042214 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.145404366 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102804612 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123887352 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099182799 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123361365 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108952443 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.129333511 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125634108 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126486336 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.127105893 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101909567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.116786377 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121318896 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124868512 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116107102 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.144343935 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12710986 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102666933 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128752843 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.142707558 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103303334 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118589548 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10731305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.138907273 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097859208 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129854447 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.142952 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105225566 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.135808419 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12305947 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129126322 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129401032 seconds)
  done (took 9.39803425 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123590388 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.150313822 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126750719 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148864329 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132688902 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113899328 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.134065106 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112238341 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133280133 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14132474 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112906396 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195978736 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123592049 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121128348 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134036297 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111992714 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133396252 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111577479 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.134301193 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132184617 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113373227 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.147607238 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111882026 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.147222411 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151804444 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103538991 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135590099 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132305452 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127580487 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133418831 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15190553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113313013 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133241338 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.146391117 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131704126 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.133668468 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099667834 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134655362 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112226903 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134063857 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10278892 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.148017745 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132424003 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10440064 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133560677 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112885707 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.148325716 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.153140892 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.140034943 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122257001 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.133694856 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147393977 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113326418 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.134174246 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127408144 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.158624648 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147670608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.146990921 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112959421 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.148496798 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146863482 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.159715541 seconds)
  done (took 9.010780623 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101055229 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099895043 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119801441 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098323982 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12047165 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098296776 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099297762 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122515212 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100699378 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119593283 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101269951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096760423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118515261 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099954177 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118372927 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098347562 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09717357 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119923729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102511134 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118377263 seconds)
  done (took 2.966694123 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112083675 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.147078996 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.103172341 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.133192463 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105183196 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132969416 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103856909 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125544125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103008512 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125330809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120169426 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.139328987 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122282407 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114370097 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13918676 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112665001 seconds)
  done (took 2.756734634 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.129437687 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.141888031 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.15327251 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107774127 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0974606 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.133259521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100612571 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.120379365 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096347744 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.133501516 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108438435 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.135413192 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101489766 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.120792938 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103207951 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.129115628 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.097443512 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127253822 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102159261 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.152754842 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108346969 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.125755858 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102710057 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12742221 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105440964 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.130072513 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111356212 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.12080848 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101086417 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123910622 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106531891 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133643187 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098310935 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.129008609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100155462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.119609099 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102435574 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12350777 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109897697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.122872303 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101467248 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125139301 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102396958 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.123841237 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097556117 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101566484 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118773129 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10977395 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125557969 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105633046 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123550975 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111002774 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.131729971 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115734366 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.137172547 seconds)
  done (took 7.24728333 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120597835 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127240032 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.110023945 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118865827 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10687832 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.131040256 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107467726 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103976806 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126998592 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098633439 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.126481667 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106171694 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125939363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106140475 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.125627861 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105838066 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116580005 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104598091 seconds)
  done (took 2.892775143 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109439833 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100354968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.132995741 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.101803416 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.123327849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104384919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118233406 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100079974 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120940855 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102670473 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121979423 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105432449 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099338931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124910256 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101439403 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123572381 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104757545 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119768324 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102830006 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117889369 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105218938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098551288 seconds)
  done (took 3.266414748 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.126348049 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.164687093 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.122052503 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.176437339 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.131742037 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.10905824 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.142623494 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11071747 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.151826831 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108204304 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.12804361 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109091943 seconds)
  done (took 2.408303861 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135571645 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172215605 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099213542 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126675609 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118370369 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133567648 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110508696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132519488 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144789554 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150587759 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110618441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145076712 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124086335 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145900011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139804723 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119097047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132688271 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130949985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104209914 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158998733 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109269838 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148552937 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130494832 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1106643 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131329765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145299224 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124950921 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151357303 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131016996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126264679 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141412922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109564693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147560378 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151525088 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10509533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147920831 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130023161 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137431792 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141318091 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146029466 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104896042 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141256731 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145072533 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119236261 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147597689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130928927 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119567601 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131526304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110821384 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1690538 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140774285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145552782 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12020476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146990581 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146018499 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170496575 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130296717 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14660312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140360048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151227222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124493279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141569047 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145702358 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129636418 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141542283 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144901445 seconds)
  done (took 9.719727906 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155953441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122325186 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109631607 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15251898 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145717931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109358204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132364922 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130854282 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111246355 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124096884 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191090247 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111537645 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14565124 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144837737 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112054162 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130753914 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111215754 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147129184 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104143399 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170814776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132061927 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145226378 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125685227 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146408526 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150868316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1400982 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111589396 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130528262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111483386 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131640005 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11917763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132546963 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146955234 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101967511 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145562817 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109997379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133050668 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140069829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111465235 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140663963 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145707998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139688944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133885639 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109645036 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15216799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131403087 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110190924 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126523775 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110476056 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126626772 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152705848 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131985256 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153805907 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147623119 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130920283 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111853366 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131793109 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111601229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132714933 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119199619 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146195639 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131373032 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170330017 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111619798 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131267631 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124710582 seconds)
  done (took 9.529933671 seconds)
done (took 180.920540046 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.126231957 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.168312452 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.11940389 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.189753163 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10208044 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.160373287 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140942895 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.141453528 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102440332 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100352401 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.125147938 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107157331 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.19428606 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101887657 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.123685439 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108298839 seconds)
  done (took 2.943680414 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.220324989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.338633088 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130706257 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.132519642 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112333546 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.129537591 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110898543 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.132969336 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105517703 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.144817625 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106584245 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.129636854 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123716004 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.129471776 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104547264 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.128475019 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123515556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.128193836 seconds)
  done (took 3.371961994 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.144352032 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.22961166 seconds)
  done (took 1.21251493 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.148277307 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.228320229 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.359566125 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175890505 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.162482764 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.160569867 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.200289722 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128221685 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.231780078 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.158794803 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.157753222 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11140191 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.166463188 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.141718079 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119127211 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.132488349 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145421347 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136433221 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112635991 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.136522796 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140396371 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.136795198 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.142043724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115914135 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.221860556 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.157646925 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114070785 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.137300543 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113870201 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.135006463 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.142727012 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138492425 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.156128974 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.220091221 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.142999799 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.218195463 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.146485899 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112815404 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.135033885 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112414788 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.140106899 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.138531497 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13367837 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.133592003 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114279479 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.14644655 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114286486 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.136593533 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124978141 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.149455223 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.147315601 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123181958 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236148594 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127675036 seconds)
  done (took 9.061437669 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.968727423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.183401362 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109197288 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.140161249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147287565 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152441665 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.271781363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136210739 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.320821469 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.952180359 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.154179032 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127200521 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.310082032 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.302973215 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.23219966 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418166259 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.813535743 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.150113467 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141429717 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.192054187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143441079 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16964326 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13641526 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.470777363 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.135999449 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108654252 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141824013 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.145346161 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.211472863 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107729932 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.135670034 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.235440182 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.314554485 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.269625304 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110642723 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.131053377 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106748468 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.24018791 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.321688371 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.285100328 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.21127066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103837172 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.129955212 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125562495 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.161819264 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.125755074 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.215487311 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.224792657 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.22430443 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.137575385 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123509521 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145555975 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146143856 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.213024908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104814688 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416016925 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.4219818 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106140667 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146020595 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.154397342 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.314462755 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131481733 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302761616 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143729573 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281853232 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107178087 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.905629242 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.216397775 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.131481422 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119838285 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.142455782 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139039737 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125132189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.207748968 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.43944608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150726578 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114920349 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130717698 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264877649 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130183364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108040636 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.214588066 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135757491 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120088264 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.152019243 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.150397105 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.223308037 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.300993492 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.151303047 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120653088 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.138856447 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146697086 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.112616554 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.263800115 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.294681562 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.207767428 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.288602296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126893345 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.215511294 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.238797806 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123342201 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.243218056 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121332037 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.153317734 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126211758 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.292219862 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.180011967 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129151679 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116016261 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141699919 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.182060328 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11262759 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141304339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.219393207 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.514555432 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.215945165 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.127778256 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111343155 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14507647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.212584222 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141177099 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.308678636 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146425164 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.219589184 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141697044 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10478784 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143580555 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.217249962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148437391 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121950936 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150015031 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118891628 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.324235141 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.265754993 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.150437785 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.302284953 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192942756 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.143683845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223402479 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145684855 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.219690616 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.144756282 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124640304 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135647325 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.899765195 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126359712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.143468791 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114649432 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.228176597 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130904841 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109581873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128686966 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105479049 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.883749506 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111371372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.127060057 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109284309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.141967774 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121140099 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141946893 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115299987 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.211615289 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310239252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.147247873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141597452 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108831992 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.211286331 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.135148778 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.109261395 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.129602419 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108719389 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143801129 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115053587 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.131190133 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.224926439 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.208319604 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.29725242 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.59481994 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.132110875 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107570514 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308507252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10753651 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.385382204 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144322776 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.302780336 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.21963027 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104818916 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.419665987 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.220625703 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.230341478 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.133980733 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.22321926 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104049033 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143397819 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.213108158 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130973965 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12044881 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.209721536 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.154873876 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150791904 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.222916552 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.131891433 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.286202301 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.1267935 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.221438292 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112011033 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147738272 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.383646382 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10826325 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.158563381 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212828738 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136684751 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109352332 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.891387092 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.132138852 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122571024 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.144305084 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.304202284 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.217485466 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143957239 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121368906 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.147360101 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.212922856 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.26598334 seconds)
  done (took 53.193529381 seconds)
done (took 70.62193157 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408319155 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.344168378 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.380188192 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.257799042 seconds)
  done (took 2.348683261 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.225419765 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.195882316 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.157790319 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.130680435 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.190772436 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108418292 seconds)
  done (took 1.875551792 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.651871914 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.571821714 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.441119925 seconds)
  done (took 2.536454026 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.308059583 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.33649556 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378134706 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.577177361 seconds)
  done (took 2.589316982 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.255386086 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127200477 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.144741694 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.164078643 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.2140841 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254796151 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.17419787 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205153307 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136713234 seconds)
  done (took 2.596647384 seconds)
done (took 12.815825564 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.320510178 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.298095955 seconds)
    (3/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.30670806 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.228752375 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.28277126 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.177830964 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.159903077 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130335317 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.140477748 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.227096839 seconds)
    (11/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.22708622 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.151506873 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11620498 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.141023469 seconds)
    (15/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123035474 seconds)
    (16/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.267437375 seconds)
    (17/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229556118 seconds)
    (18/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.140854435 seconds)
    (19/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119542451 seconds)
    (20/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.135052306 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.236932128 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.324267003 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.288617593 seconds)
    (24/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.232761711 seconds)
    (25/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.14604185 seconds)
    (26/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.236865857 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.152002358 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.301090585 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122338266 seconds)
    (30/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.286759395 seconds)
    (31/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.152589237 seconds)
    (32/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.099353314 seconds)
    (33/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.114052193 seconds)
    (34/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.161234934 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.150407686 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.199389453 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.183394689 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.262092712 seconds)
    (39/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.223031495 seconds)
    (40/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.211586455 seconds)
    (41/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.138781336 seconds)
    (42/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.254926676 seconds)
    (43/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12802329 seconds)
    (44/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.144651687 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.171442269 seconds)
    (46/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.151039726 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134260029 seconds)
    (48/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.206055001 seconds)
    (49/286) benchmarking ("sort", Int8, true)...
    done (took 0.261368968 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.149374892 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115059462 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.149210607 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.176908131 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.237572684 seconds)
    (55/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.128144526 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135210347 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149236492 seconds)
    (58/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.237191291 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.143267835 seconds)
    (60/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.246963951 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113776311 seconds)
    (62/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.149873681 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117410232 seconds)
    (64/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.145395202 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.09110687 seconds)
    (66/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.137432654 seconds)
    (67/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113299878 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.139355966 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138126751 seconds)
    (70/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.180406178 seconds)
    (71/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114840663 seconds)
    (72/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.152715995 seconds)
    (73/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091019769 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.136263003 seconds)
    (75/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11872693 seconds)
    (76/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.16295957 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.105070756 seconds)
    (78/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.13674148 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.171798003 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.127489496 seconds)
    (81/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.217922968 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.231962007 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116725865 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.139917322 seconds)
    (85/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.268852373 seconds)
    (86/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113074855 seconds)
    (87/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.285982844 seconds)
    (88/286) benchmarking ("sort", Float32, false)...
    done (took 0.208154296 seconds)
    (89/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.176872775 seconds)
    (90/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092894884 seconds)
    (91/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100606251 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.153825081 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144595774 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.150195767 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.115913394 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.201261929 seconds)
    (97/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.139846061 seconds)
    (98/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.096939183 seconds)
    (99/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.129575302 seconds)
    (100/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.233532733 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.238465953 seconds)
    (102/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.15195362 seconds)
    (103/286) benchmarking ("sort", Int8, false)...
    done (took 0.24143089 seconds)
    (104/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.138519832 seconds)
    (105/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091855177 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.137119484 seconds)
    (107/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165729628 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148170305 seconds)
    (109/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116024873 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.138363582 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.114394532 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.17777522 seconds)
    (113/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.102229529 seconds)
    (114/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.216381257 seconds)
    (115/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.11498845 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.1380925 seconds)
    (117/286) benchmarking ("sort", Float64, false)...
    done (took 0.2048092 seconds)
    (118/286) benchmarking ("sort", Float64, true)...
    done (took 0.271960298 seconds)
    (119/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.094580813 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14123574 seconds)
    (121/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.114329501 seconds)
    (122/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.131459545 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.231859848 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121346185 seconds)
    (125/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.162638827 seconds)
    (126/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114395519 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147807782 seconds)
    (128/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173736227 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114020383 seconds)
    (130/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115296525 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124201701 seconds)
    (132/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.212539421 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.17272577 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117402204 seconds)
    (135/286) benchmarking ("sort", BigInt, true)...
    done (took 0.293358822 seconds)
    (136/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.239952368 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.09294472 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.127515495 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092274735 seconds)
    (140/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.120953251 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.148456452 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.146680757 seconds)
    (143/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091000568 seconds)
    (144/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.172688473 seconds)
    (145/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092936333 seconds)
    (146/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.11667013 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10805413 seconds)
    (148/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.235530169 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13986236 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.095291958 seconds)
    (151/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109688028 seconds)
    (152/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.137457153 seconds)
    (153/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111618944 seconds)
    (154/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.215307569 seconds)
    (155/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.114687832 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.093406582 seconds)
    (157/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.09124937 seconds)
    (158/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.18113676 seconds)
    (159/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090885187 seconds)
    (160/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.190462443 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139425792 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122672825 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.179133118 seconds)
    (164/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.089495534 seconds)
    (165/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.242591965 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.143143999 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.20563991 seconds)
    (168/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.147677018 seconds)
    (169/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.122401265 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.177117349 seconds)
    (171/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.180165753 seconds)
    (172/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.093184992 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.193757531 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.116803382 seconds)
    (175/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.145646564 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116322421 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.116057747 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126953918 seconds)
    (179/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.117775603 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115416342 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.14042787 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.093205719 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.140425271 seconds)
    (184/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091878334 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.146594828 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.093499971 seconds)
    (187/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.144612347 seconds)
    (188/286) benchmarking ("sort", Float32, true)...
    done (took 0.272807524 seconds)
    (189/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113491787 seconds)
    (190/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152676643 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.262398852 seconds)
    (192/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11591765 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.137687168 seconds)
    (194/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091624103 seconds)
    (195/286) benchmarking ("sort", BigInt, false)...
    done (took 0.280766284 seconds)
    (196/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.137272812 seconds)
    (197/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11811294 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.13243337 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116619645 seconds)
    (200/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.158049125 seconds)
    (201/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.125238406 seconds)
    (202/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.139775518 seconds)
    (203/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.214440346 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127520254 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148922923 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090481325 seconds)
    (207/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.147165889 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118446995 seconds)
    (209/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.116562414 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.125973437 seconds)
    (211/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.135222653 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112499337 seconds)
    (213/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090703748 seconds)
    (214/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.146126299 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118425476 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.136603078 seconds)
    (217/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107968658 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.131708167 seconds)
    (219/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.151524392 seconds)
    (220/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.217222429 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.115222785 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132327449 seconds)
    (223/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.124216443 seconds)
    (224/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16943276 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.141206301 seconds)
    (226/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.127153292 seconds)
    (227/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.1503647 seconds)
    (228/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090618977 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.152440998 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136597765 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143688582 seconds)
    (232/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114807647 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.1635503 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.093318212 seconds)
    (235/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.115448978 seconds)
    (236/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.114481181 seconds)
    (237/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.131760129 seconds)
    (238/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111766971 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.162378005 seconds)
    (240/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091944103 seconds)
    (241/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.116064633 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108110351 seconds)
    (243/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.136951508 seconds)
    (244/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104121557 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.091468694 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.115866078 seconds)
    (247/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092325251 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139473254 seconds)
    (249/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108508229 seconds)
    (250/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091503162 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151143826 seconds)
    (252/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.098305083 seconds)
    (253/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.136099318 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116822106 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.116719166 seconds)
    (256/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.09942765 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.115486852 seconds)
    (258/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115616115 seconds)
    (259/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.097542015 seconds)
    (260/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.122840281 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.139702727 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.142691993 seconds)
    (263/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174855036 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109296522 seconds)
    (265/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.092817347 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.134196986 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.095612437 seconds)
    (268/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.117663868 seconds)
    (269/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112391519 seconds)
    (270/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152084042 seconds)
    (271/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115795214 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.150033359 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099437316 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.148678136 seconds)
    (275/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.117869778 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.137062506 seconds)
    (277/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191447352 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.143213049 seconds)
    (279/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092181766 seconds)
    (280/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.123812576 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090695769 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.135489894 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109405735 seconds)
    (284/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.090504843 seconds)
    (285/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.139845203 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119639464 seconds)
  done (took 44.239681001 seconds)
done (took 45.119064091 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.12359229 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179728177 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.120596086 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.167806819 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125407239 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.15189029 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.144013039 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.122824666 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.147700631 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126446091 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.151765971 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.10257633 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.145660675 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122403252 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.14606847 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143956644 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.149541358 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.117391694 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.136507066 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114351739 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.137413832 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113888304 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.140238713 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102546791 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.143778367 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120240157 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.139481283 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121872192 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.138995199 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109408279 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134485737 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117048093 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.13402741 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123506981 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.137004858 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112464632 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.145624036 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118856468 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.139959128 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115108728 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116111859 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.140551586 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115151149 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.141764572 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113229721 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136517394 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11278554 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.150643406 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166559693 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111783963 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115444583 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.145760177 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123374818 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.141431832 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110086169 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.137045228 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115868307 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.167727729 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111651734 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.137635879 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116967116 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.141392552 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112615298 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.136557198 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112975154 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.144808186 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120138462 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137435133 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119597301 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.139801902 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.127254867 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.137365333 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110996834 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.132825514 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119916801 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.143416291 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106594233 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112850428 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.141661983 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114518232 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137770449 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108548105 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.14086902 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11401376 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133692762 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103345925 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.134126479 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115612076 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138293352 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.113342146 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.138141695 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115366752 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115854319 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145409864 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137182379 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115526895 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.138928167 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.115337733 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139841496 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111180789 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105434196 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134658639 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115955635 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.133829222 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11536225 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.149737525 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110081262 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.139131046 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.113813567 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.138032834 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128470384 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.144593491 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114638824 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136315528 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108958358 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.141706626 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110977459 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.133894298 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110384541 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.139059266 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114286101 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.138699859 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110287245 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.142369264 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124216027 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107122132 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.136307233 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108540553 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.140055325 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115135173 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.139509523 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109267056 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.135947345 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105884546 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.133521266 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109955657 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142793627 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109757457 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111971971 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138845333 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111704063 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.139256805 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11393303 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.140385762 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110318915 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.126891085 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112027422 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134069004 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115890858 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.139418675 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114717848 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.130966936 seconds)
done (took 20.354877642 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.124875323 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.223087865 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.177933227 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.15795564 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191251071 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.168122329 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.152407792 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.158915666 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.150646616 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179765948 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.154423137 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.16734881 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179741337 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126868215 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.16738447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.14648787 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121489991 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.164291518 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.188428325 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14790889 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176279367 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.151069499 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149356102 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.177677342 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119517049 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.178862089 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.155434981 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120931995 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.152771735 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138846361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.166647766 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.152305062 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127864672 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.161835652 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127486358 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143991965 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.167835558 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114956476 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.148682282 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.124143522 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.163810793 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133361948 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.143789884 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.160690424 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121969991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.152065392 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.120531867 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145932263 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12126296 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13968381 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130120587 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.173511169 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146452571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127213957 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.152128802 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120992247 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.152454127 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.151910395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128012872 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.152736672 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123892467 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.152299852 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130569053 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.172430802 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.147070012 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126668446 seconds)
  done (took 10.820997299 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.142771401 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.18461591 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127661288 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.153914465 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.152882396 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106637006 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.13200461 seconds)
  done (took 1.938344229 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109110227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.169909992 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150825173 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.175808837 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134225334 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.181364445 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156437498 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109894391 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164703692 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124128522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168155094 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.204167246 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110231031 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.15190707 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.154215342 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.134733423 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180653494 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109184219 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144512218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151017711 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141990952 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136982084 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.15532039 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111381215 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.160546241 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112637568 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.220058398 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1511165 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108587643 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.145962739 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119069717 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.233525309 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.164052591 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123675022 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132559805 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.171754666 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135259544 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143423007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141911389 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.142788574 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13624396 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145209251 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120619226 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145332103 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120807427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.151854514 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127527296 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.148043158 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117880967 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169939988 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.15137382 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136803692 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137642958 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115155494 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.15034709 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119014276 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152498614 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118741349 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.168430598 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121423055 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.170273172 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.168811975 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135848306 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.170257209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134268292 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.162285656 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.161223543 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118668767 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145918377 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121369948 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.17004732 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116894916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.152074559 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126821755 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148334184 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.140579048 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167585962 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115784349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.151318598 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115924955 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140947315 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10919173 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.153799171 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113953843 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139483745 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134607695 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152919412 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118949363 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.142984239 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.167725493 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118499983 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.153712158 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127235616 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141527387 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134791587 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.172396472 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.152916998 seconds)
  done (took 14.898243715 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114412174 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111088395 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.144045673 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112544027 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.137168707 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112233082 seconds)
  done (took 1.677820047 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151424556 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.14163173 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130592524 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.145774851 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.188246963 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137651526 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.162889006 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124514636 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161061226 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128950647 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.162257259 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.164666829 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147780523 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.146706374 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137791678 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.14742304 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13871862 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140918962 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128403817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140564753 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129865185 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147773199 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113767637 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.16411632 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143633628 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122264706 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144748224 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130573631 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.156220289 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125249459 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145870582 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118251651 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.14703727 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123957594 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.16390071 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145812305 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113386262 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.146483014 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121574748 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145372618 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139676239 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138577901 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129175624 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146697579 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.1251912 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.147698788 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120824826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144375855 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136776282 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.14675118 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12017665 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.1467415 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11864253 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14690458 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120310158 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.151259067 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146910255 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139439434 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145781323 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121816412 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.143110032 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119650437 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.151693987 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118351431 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144005227 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120079616 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146913933 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113726898 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140289339 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120501594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147093209 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116383418 seconds)
  done (took 10.945445114 seconds)
done (took 41.206492507 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.72768546 seconds)
  done (took 1.672733369 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.042367148 seconds)
  done (took 1.989083367 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.321887865 seconds)
  done (took 19.302177816 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.658578328 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.803204804 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.262100191 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.196421258 seconds)
  done (took 3.868114647 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.034039996 seconds)
  done (took 1.998694745 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.367906378 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287657448 seconds)
  done (took 1.605733268 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.950745796 seconds)
  done (took 1.913612275 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.712435976 seconds)
  done (took 2.673275596 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.443176647 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228284086 seconds)
  done (took 1.638918443 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.668337947 seconds)
  done (took 1.628617672 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.097098482 seconds)
  done (took 16.063861441 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.285781669 seconds)
  done (took 1.259421542 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.348519594 seconds)
  done (took 1.310373434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.914942532 seconds)
  done (took 4.879094359 seconds)
done (took 62.761005215 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122966044 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125723614 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.152860409 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122622506 seconds)
  done (took 1.482708161 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131912116 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.148355336 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.127821752 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147415058 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132424223 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.148840445 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119205441 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.155787714 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120960169 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150263168 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122265756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.147513526 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123875897 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.145249665 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117899112 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.151477185 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125335651 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.149602978 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121160263 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.15113421 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118176589 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150980196 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.151619867 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122979418 seconds)
  done (took 4.255492112 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122585161 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.115172149 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.143996889 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115747976 seconds)
  done (took 1.468806048 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129010717 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.166175174 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139650517 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.154735349 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139963166 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.165203094 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115624262 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.142254521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118594462 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.155021209 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118220771 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.169508207 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.16616872 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111586261 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157534349 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107252854 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.140403719 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140359793 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.155152272 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.130573631 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141091192 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128376716 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150205756 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133314804 seconds)
  done (took 4.349020316 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.221750614 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.161067367 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.172046462 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.126159091 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.207224432 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.173522199 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.1144019 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.173912724 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116438396 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.169198164 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119862473 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.207778935 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169229965 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122230472 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.145473808 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15403221 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141660036 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.174260612 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118337676 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.158561115 seconds)
  done (took 4.121882329 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126054854 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114843394 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.137485775 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115573584 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.150381007 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.117878327 seconds)
  done (took 1.737724299 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111462181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10844862 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.135990282 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.108527126 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.139375363 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109301306 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106424752 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.135358186 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108928333 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.134689474 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.109082458 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107418084 seconds)
  done (took 2.393507528 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517429109 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116759262 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.161143302 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.117284875 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.168139738 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.139961017 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135086242 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.139807257 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.209800179 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127463149 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.161515477 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.207057152 seconds)
  done (took 3.180169238 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274918255 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120735057 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.349265419 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.498478605 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196617499 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212560003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.378203973 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210857967 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.2420125 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170064769 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251958219 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197299415 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188649613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224380215 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148682335 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.220654759 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226346344 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267944023 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189253733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26942049 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217312396 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213447436 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234088386 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188666383 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173974788 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208399728 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115985102 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157573998 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229048674 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21964994 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239994387 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19378297 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145011562 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297831961 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295546498 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244101246 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.468724085 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167949239 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.227344068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.235052266 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308163703 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176633615 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269375986 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196385041 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133156332 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263681888 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173119434 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.23177052 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.162255941 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175375968 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25917583 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225429984 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.240950656 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175237623 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.42388766 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159191073 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178429715 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238177673 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260512212 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249288809 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213713946 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149733628 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27246445 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259348283 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237820731 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152205445 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.219031463 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15512865 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226484275 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25485137 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236066499 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213841124 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.309657918 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140085686 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212667343 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217824315 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191540911 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220228399 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202725401 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118106591 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186653593 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170918917 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128105576 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219668749 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120565157 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301862442 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141560845 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.323119381 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311259833 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172464086 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210472091 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21273273 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218482541 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180767444 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.145805011 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159389014 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.206036595 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196441122 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164498459 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171687873 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183320342 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.15561255 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188057212 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121053846 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201335683 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.164145197 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214134036 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180187614 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159325938 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21086616 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18505201 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174393878 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221473537 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26780858 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135053861 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16191806 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253489162 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198426235 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139160752 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225842967 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242718128 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209611255 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171980732 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226048049 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260235328 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177544008 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248240523 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181127183 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138168356 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.197553748 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202645984 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204519929 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.193019747 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129635187 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.196286761 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252407937 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153603386 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138537868 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225005828 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155282152 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12746454 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181865572 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170440581 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.146417195 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.18925489 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.169671147 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199439485 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198716603 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164020381 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209338582 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186065248 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271851265 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164006836 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.202185681 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151895355 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.144095254 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.233280313 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241274405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156571806 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238708764 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.216180322 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288492083 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209896543 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160261919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235153056 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130619079 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.144241233 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219692535 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208291071 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210321047 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.235905444 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313873291 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.218356384 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163247966 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186002272 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222116533 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.223666214 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213206349 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.18061729 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209185206 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221819401 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118985304 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149779022 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126952464 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175967953 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132736009 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162621764 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246721009 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212973291 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30557148 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207183257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147007235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234938411 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153043999 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211185656 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.224930468 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170408728 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.23938675 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232384435 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215440093 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149151447 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225588745 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144801101 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123395145 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.164859325 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.214736779 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13265943 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167842249 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189251235 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236747062 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228701359 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186936349 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329872363 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218497095 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247669207 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120528275 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.19544361 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217544253 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199093209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198347525 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165238563 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.207185533 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229271536 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155255985 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291717763 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177846089 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220747366 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306020472 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.196275006 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131412962 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188686324 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214068973 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178303134 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175980293 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18245175 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168518407 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194111864 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.141906147 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155521224 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249201746 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176002927 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249877217 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.19641259 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241055713 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122490893 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189443649 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204561399 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178805889 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115264858 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218660433 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250416677 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185667136 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202668927 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224760784 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158583062 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.410639532 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250768713 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246699411 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173170773 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180159922 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204248247 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17225399 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212576729 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236119086 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186504354 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236108379 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200251133 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.176915902 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14044649 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182805558 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188614489 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168544309 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.168058285 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195245223 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.17376692 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255415013 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179363105 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170744515 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216044724 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.176920192 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.192574033 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14767527 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263669082 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19977825 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231752582 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195602801 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.210527173 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24033863 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14983725 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1281694 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154123323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235452487 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132340973 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204996515 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.299108028 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30328145 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202029737 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215771971 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169298803 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121626345 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205331548 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186481843 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321632934 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157302101 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166633167 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248913263 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185384959 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128544734 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209892881 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403265415 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177165732 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225811213 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118074863 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.38760201 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126890317 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159660033 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172682335 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219699114 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163003799 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.221850365 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214140933 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154900381 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20270299 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171531681 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277103196 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313163783 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227773197 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231827028 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.180659255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174860195 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212399887 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226630383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180722282 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179639218 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201368281 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23576543 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.239111839 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133439702 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208511759 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207477509 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205702695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246100576 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162799329 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240831141 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130205584 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219294684 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179676159 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121563212 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197177319 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.295748746 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164782616 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225505959 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169908411 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161341582 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123301757 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198690992 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199123221 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18290704 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126117192 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272950882 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124664519 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209517226 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220702324 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128871284 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195587893 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182018695 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130009452 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180293484 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185598835 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137396758 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.204699462 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241285454 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161489164 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229628558 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227738983 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212864851 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205903205 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148922429 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.700958265 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124530043 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23369258 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180959706 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251993239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183416661 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217512184 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207195643 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154883166 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222840942 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190117819 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.258430443 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21820558 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.203940122 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130034722 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184630375 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182378367 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131437985 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189911201 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207196856 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172179642 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138409277 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199203119 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184727084 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.183273119 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139267465 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242650406 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182165216 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249436687 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237456969 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174827866 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216547459 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247378985 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128925698 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.210040655 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222811534 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178516582 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198682837 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127640356 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165844464 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221055994 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119064328 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205853778 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204454118 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208936183 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210291684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.138698766 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205057932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182781076 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205388067 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12210202 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.195896278 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199623863 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160489371 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124881362 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196108772 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208297511 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.201513567 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125268004 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.206144772 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235154304 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121055425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16614573 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378116436 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194675645 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255553631 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.195739167 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166257113 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145371609 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199933707 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194000369 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201911539 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126402216 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161137817 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.162942564 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.216820442 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167006036 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200137602 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245793595 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204756906 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241907831 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163149009 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.304337587 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141677292 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194838755 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135454053 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156976396 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17689225 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136973972 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185744658 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.307763796 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220860466 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.16032387 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.183751716 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156425989 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123984334 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161995005 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202237263 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167270803 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197874232 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18499946 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113533065 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182359392 seconds)
  done (took 97.727170338 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222994565 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.194442891 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.23699992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.243610246 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224971792 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.297029276 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.256487599 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274696793 seconds)
  done (took 3.015402763 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128975518 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.167308815 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.175940528 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126077689 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.143132008 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.453252872 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.170732764 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.154658203 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150765382 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.196291875 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.11633946 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.757400565 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.1218359 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154725212 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.138581969 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138968484 seconds)
  done (took 4.354608843 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.899189216 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.618476106 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.398192372 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.308501454 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.292502607 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.210580013 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.842536526 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.249535742 seconds)
  done (took 13.881409072 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151049218 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.16611613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171177046 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195614692 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150927348 seconds)
  done (took 1.907059483 seconds)
done (took 144.835274412 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.118802508 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123603436 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.149346143 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.123100652 seconds)
  done (took 1.571879482 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.13147383 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100100668 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.132400454 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.09923792 seconds)
  done (took 1.534150488 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.53052203 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.13069143 seconds)
  done (took 1.768616542 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14847327 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.160973361 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.134054525 seconds)
  done (took 1.514744876 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.128648942 seconds)
  done (took 1.204393948 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120999291 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12316353 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.166846252 seconds)
  done (took 1.485241631 seconds)
done (took 10.150611179 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134589483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.565326857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410613419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.164586783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722679246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431886336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070685454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165834847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20252022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141602522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135672691 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.720617961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026788088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.490417624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.007881635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.491322974 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697032132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145118536 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123494542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142794472 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014595268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14058198 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115664716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143359871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.694732585 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42039307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144471927 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.50998873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11334684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120491613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.433919772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112706294 seconds)
  done (took 18.017091218 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116139215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.217778609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124362776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144624892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119721628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143571381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127490987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16440355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.221207854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11259456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166340852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112274977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148533037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113854403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168062369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113269941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145100023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117577454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150782181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117231743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135976178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141231036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115360228 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145629908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112208738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158162212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113110292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.163073694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112170963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150760482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120491825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143263116 seconds)
  done (took 5.536742016 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.168477042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.230597177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.153505373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152033458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.209020816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115224992 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.245800997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.198419576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223635703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140361722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136906312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112405645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.186721177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141947777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139980378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.14231337 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118322852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145482709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124796955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145144828 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138206398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140598101 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116512871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116244805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143628216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129762036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144489006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162482047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114369134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121302823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.150905139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113465522 seconds)
  done (took 5.901681021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125329448 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.154347296 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135975813 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165552919 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.116370934 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.152433551 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125143093 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.116234247 seconds)
  done (took 2.177959335 seconds)
done (took 32.704097683 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132907479 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.119570118 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.159722938 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130064734 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.154492427 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139662352 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141328216 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.12640813 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.157995914 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123717208 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.160789502 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.1129621 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.114940739 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.141844232 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128942388 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.148682754 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131777709 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.153292559 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140162889 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.161072857 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.114416608 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.15613039 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12492885 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.169383449 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140995823 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.170506627 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132826232 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.15218849 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114331526 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.14436638 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133143488 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.173011361 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116455257 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.163397735 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118669 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14806938 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115465097 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115298796 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.161389365 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.12616691 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.151355023 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126658273 seconds)
  done (took 6.922803828 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.149008727 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.195705769 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.111608224 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.141588215 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.11233206 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.191339671 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.185367589 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.11281771 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.111418756 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.17526185 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.17631824 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.112009377 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.111085174 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.14164253 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.11143081 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.141447712 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.14469348 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.174609481 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.151098398 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.179291358 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.199150255 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.15361825 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.183839316 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.17418881 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.165195916 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.187550741 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.140666705 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.18650989 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.176883042 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.111410173 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.182121285 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.150224683 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.141605353 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.110844686 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.192867578 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.186976177 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.149031963 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.193066346 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.179968687 seconds)
  done (took 7.187063496 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127041107 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131990453 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.171539603 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.226111023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162724563 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160308383 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.127302707 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.169585323 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.13608003 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.146317756 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12548454 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184924091 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134013929 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.154791582 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.12107939 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.16358984 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139634581 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.149005967 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121743578 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.168893162 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136381821 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.163481964 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131153575 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.157143482 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11625756 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.16250767 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12026605 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.162261173 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121915865 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154264301 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123746265 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.150516585 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12477941 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129624462 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.150896564 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128421378 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.172739163 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15502604 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127542403 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.18744207 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131295261 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.153379889 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144609029 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.192901918 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117655961 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.156007611 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122553623 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1557794 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114106263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.167189375 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129463619 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116075067 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.172023893 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.145794546 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114483153 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131780528 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147701348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118870538 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.154996163 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123651093 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.173260714 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121175942 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162712173 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117405984 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152915244 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116191773 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.144816923 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.127435769 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.172370123 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121145078 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.194321731 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115044116 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.155090776 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125297985 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.15240498 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126493517 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114986499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163361713 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126633342 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.152324849 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127674371 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.151359669 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120708298 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.167497744 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.140572016 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.160442539 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124177837 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15428648 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12013676 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147140265 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132684041 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147796681 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120434533 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.165500168 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117972708 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14849199 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125477527 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152286507 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114470607 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161306338 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123023125 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113992172 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.15756038 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117974854 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.151077554 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12679694 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152454213 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11631641 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152657431 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124944754 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.145032866 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122577034 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119775891 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.151008524 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133402768 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.156495693 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118934408 seconds)
  done (took 17.723069531 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.295857418 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.263850436 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.246368151 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.371784101 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.176654157 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.148410394 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.260467754 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.210709062 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115704285 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.204255923 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.223680665 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.229840595 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.215132168 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.22546069 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.222679481 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115440752 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.17561153 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.211966793 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.263415758 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.332292247 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.174949541 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.167017253 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171784555 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.201826975 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.171299647 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.168057501 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145717103 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.176324316 seconds)
  done (took 6.99229849 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138761734 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.197509159 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.124810517 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.185293341 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.180047156 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116717004 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.152998865 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116716506 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.166753143 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139270443 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.149976256 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125881871 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.154309198 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128297673 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.145917901 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128296033 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.158209825 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.130145955 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.149668829 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.122108114 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.17020337 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136112219 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.154159739 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12472884 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.170098365 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125411367 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.151028654 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177175094 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.130471231 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.183594678 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.111615365 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.158243905 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132949578 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146320214 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126025546 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.149811327 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.117405888 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.147685123 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120669128 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111745223 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.146665144 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.103220815 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.156527643 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135733344 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15698418 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118981926 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.15438484 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.120678303 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.152479734 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111547983 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148764074 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118570019 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151439548 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.138207851 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.150151286 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.111563977 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.11992802 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.136200733 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.1287796 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.150674321 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109098802 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155940113 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109187646 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.154348736 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127757826 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139581064 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125506464 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.149017003 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.122149382 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155282934 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119991615 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132895321 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.144682254 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.118274896 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162445251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132688712 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.152217584 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125438384 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.157696832 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114225853 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.134080125 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114993327 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.099309599 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.152464847 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.114882285 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155383051 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118531816 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154109363 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.169233907 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130935131 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.156375355 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11641216 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125977573 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.153232083 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112783578 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.152332936 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137812836 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.175451811 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113223649 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.143884805 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.14060292 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.148819777 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.11288379 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136284041 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128418359 seconds)
  done (took 15.68551502 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.176134042 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.219180883 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.148167805 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139113228 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.19024451 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.207725657 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.134052191 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125312355 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.14862226 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.13940224 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.159747734 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126800309 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.15818252 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134181527 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.20652348 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.158925666 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117463693 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165667428 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124266508 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.224079541 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139090332 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.205593703 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.213419973 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162120541 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122613331 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.203484641 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.210800938 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.131829034 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.160517649 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.183130375 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.163606656 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.210507489 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215577788 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123479132 seconds)
  done (took 6.772782226 seconds)
done (took 62.368004019 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.211988554 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.419238207 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.186577742 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.18504026 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.241255002 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.212363588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191458386 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.380325571 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.019461988 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.175623863 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.18515332 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.183899351 seconds)
done (took 27.696858038 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.384192067 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.342160076 seconds)
    (2/2) benchmarking "String"...
    done (took 1.485820612 seconds)
  done (took 3.947154833 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.186297345 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.186797747 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433345541 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.187993859 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.186165398 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.203922674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.194022741 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.197546511 seconds)
  done (took 15.692066855 seconds)
done (took 25.311699202 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.222606114 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.50411276 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.466793217 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.213210173 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.185807393 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.206588319 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.188569974 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.223180686 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.196156707 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.185306193 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.197273016 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.477198473 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223135179 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.60139463 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.186945562 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.189685141 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.205308095 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.474010794 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.187452168 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.230458336 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.1706305 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.193845092 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.195493341 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.210557803 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.200040859 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.193083008 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.261630128 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.195854137 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.436689703 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.213031492 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.230639772 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.192547736 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.241700259 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.189966652 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.30876781 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.22587544 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.37869259 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.198990754 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.175063907 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.192823998 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.399162893 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.620672008 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.189167226 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.203539038 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.191310731 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.283853184 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.180540561 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.924974479 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.201261688 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.190116575 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.239031615 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.582073556 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.194409274 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.193772349 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.204091078 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.483098508 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.195540012 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.239133124 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.219430468 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.218032643 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.190353541 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.190061172 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.225064794 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.191644429 seconds)
  done (took 143.226014585 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.191548294 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.193127067 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.192457909 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.200050756 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.194850184 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.194875674 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.1942475 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.194032304 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.191686288 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.216902852 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.194746305 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.19104924 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.197763269 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.154593244 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19322985 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.200580727 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.195239492 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.213634964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.192624105 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.193619778 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.192765573 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.198057819 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.212261508 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.195631074 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.237572513 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.266397235 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.205106639 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.194595711 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.193796429 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.193222257 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.201950715 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.194727683 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.877145621 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049574093 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.20334585 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.235588249 seconds)
  done (took 79.84973911 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19344769 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196130693 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194172533 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192820401 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22849897 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196719394 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.800652412 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.826906035 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.940972604 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.47459607 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200531422 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.773134893 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497879946 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19537886 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289240775 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209632827 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200906303 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210919517 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221532647 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195813486 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195149294 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829859787 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213527734 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.475691119 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.379472437 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213382787 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229201389 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594646557 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194125845 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228159694 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535728742 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.249624747 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195846025 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627934855 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.46625392 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201688421 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310277504 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200771698 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23076796 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197547713 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.482635812 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194553086 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199096992 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200577256 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912943386 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197974411 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.802697023 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195569844 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191944156 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198270307 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196500262 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.325446957 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199763717 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.001010097 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200491785 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198619254 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200111897 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19625417 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197084565 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231652447 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.304631283 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302563281 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201091311 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202586147 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231846681 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.199824622 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.260850546 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201839383 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.423523918 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.257978603 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314673801 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.823443232 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200424814 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298937312 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321874283 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197866212 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196881002 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199893737 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197621659 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311790804 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199032 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.63463424 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.382238591 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.218744619 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.732310972 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303238537 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200808716 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.667132935 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19867808 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201472214 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.998050089 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298611361 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199658274 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200417223 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199910926 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.63508461 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808844134 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.528479742 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.201334966 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.475965216 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202826508 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.648269805 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.805777593 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.894752426 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202270757 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315992055 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.384041002 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219254739 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199518825 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.73745943 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.204805718 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260211854 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204895349 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.603883088 seconds)
  done (took 366.4640468 seconds)
done (took 590.643131131 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.972692398 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.875409678 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.017806411 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.906335579 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.869993066 seconds)
  done (took 10.756174241 seconds)
done (took 11.870482691 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401713512 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.400264473 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265294639 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.403703399 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236340452 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.422704454 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390670527 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221350823 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309614911 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290139557 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309196622 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259184892 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237454081 seconds)
  done (took 18.262027765 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487738341 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.202910404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28549126 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459286203 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242664465 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.480050433 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.524912538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.204137684 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339276618 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235269307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215108285 seconds)
  done (took 17.793838626 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486513589 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.202426819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272826637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488269249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245977199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.475256915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53573014 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.203855948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.340566879 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218062709 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216561051 seconds)
  done (took 17.801632884 seconds)
done (took 54.973562463 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247385591 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.378824256 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.236716913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216539981 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.210958751 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.215365829 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.217553262 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220799366 seconds)
  done (took 11.062070443 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.20886658 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208422557 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211524692 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212033973 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209554604 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212629897 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212818273 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208641947 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212817127 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208411811 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209662145 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209335024 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210807852 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212275662 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208697157 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213355364 seconds)
  done (took 20.489207097 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212765712 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209468491 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20846037 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208405642 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209327872 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209624376 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210888057 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208726291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208069763 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.209884303 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211131697 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208692571 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208950498 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209520264 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20887987 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210405527 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209809188 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210708641 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214153326 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209565964 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210237414 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210230619 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209585629 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210422955 seconds)
  done (took 30.159205539 seconds)
done (took 62.825894648 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.216724697 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.210022204 seconds)
  done (took 5.547278483 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.271667646 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.273887845 seconds)
  done (took 3.666377082 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213657879 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213956589 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215372147 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.214682257 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.214881941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213817894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215502662 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.213785843 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213759681 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213590799 seconds)
  done (took 13.262653139 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.215001644 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215214331 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211212849 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214652162 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214376953 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.212159629 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214702249 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214243749 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.216435257 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212346576 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214978372 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212346102 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215413389 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212012417 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215587154 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212270064 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211813397 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213652639 seconds)
  done (took 22.96944506 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228218681 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.236364836 seconds)
  done (took 3.585799572 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.341986846 seconds)
    (2/7) benchmarking "second"...
    done (took 1.255014745 seconds)
    (3/7) benchmarking "month"...
    done (took 1.322012689 seconds)
    (4/7) benchmarking "year"...
    done (took 1.310377863 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.254484092 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.232999133 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.254124747 seconds)
  done (took 10.092655363 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.216687233 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40406972 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.518600543 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80016113 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216394639 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220317732 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.063476015 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.2202714 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221086933 seconds)
  done (took 14.003893561 seconds)
done (took 74.247742849 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.212343382 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.227938214 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.239845694 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.222179352 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.509081621 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.261429995 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.214507158 seconds)
done (took 16.010008305 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.20528622 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.21456652 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.206101641 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21551265 seconds)
  done (took 9.963637798 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.226867582 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562862937 seconds)
  done (took 4.912321359 seconds)
done (took 15.998651052 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2185324 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218378471 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.213956137 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.215935764 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.214063412 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214140764 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217877445 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217288022 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.215511084 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.218411621 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.218442954 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216732715 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215188708 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215312921 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214196854 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218021836 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.218748725 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215997959 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21909768 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215879339 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214918911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218416567 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.214875013 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215793899 seconds)
  done (took 30.320748907 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219378557 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215878309 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219029297 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220741233 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.215728994 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218882996 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218267135 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.216239445 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218544265 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22019457 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216234461 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21753976 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220997397 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.217258155 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221704671 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217705766 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220119355 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216650444 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220967461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217328471 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.220582213 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217391126 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.217488617 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220682759 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217971604 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217504644 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220041503 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218656049 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221668452 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217290922 seconds)
  done (took 37.684438981 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226186376 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.226634119 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220866981 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220650395 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.221346874 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.220538272 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.2219348 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220711662 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.221237497 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.221533115 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220365836 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220350136 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220950243 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220285507 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.220907717 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22067443 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221116574 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221356959 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.221569689 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222651376 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221275056 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222422113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221478286 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.221370514 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221795402 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.220934774 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.222564842 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22306129 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222048394 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223190081 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.222676529 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.222434051 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.221598498 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.221975434 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223000683 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223185076 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227883326 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.228661292 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223107725 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222755174 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.221032361 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.222471074 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22369189 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222465702 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223167308 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222680196 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222057471 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223044374 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223543982 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221854584 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22366812 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22256776 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223895687 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223941385 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222943601 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223622422 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223254663 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224040326 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22376368 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224016807 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224133913 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22354833 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223832202 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223716257 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225494865 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22297644 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224075183 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225016818 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223772633 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225000076 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225117818 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.223696138 seconds)
  done (took 89.170749089 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.224542864 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222665209 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221711177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223558569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223540594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224818891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222776054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225655609 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223491296 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.226656535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225268747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223368347 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222222418 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225252956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22450834 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.222851555 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22557229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223771479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227249228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226117575 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227004614 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.222140929 seconds)
  done (took 28.066533992 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227419498 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227200711 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224120635 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226605395 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225050331 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228431262 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226711312 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22890662 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226395997 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224132055 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224420772 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227418148 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226167323 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224416769 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223946389 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22492008 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227558483 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225716434 seconds)
  done (took 23.201925313 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.224493135 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225187049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227300343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224380973 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224642875 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228401906 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224645953 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229168896 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228338105 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225517053 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228604398 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227628112 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228682834 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225345118 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227838505 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224702074 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.22805549 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225804328 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226861812 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22653867 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227318165 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22888989 seconds)
  done (took 28.121488606 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229520527 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228771188 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225969201 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227259438 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226027706 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227638594 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229439589 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226570404 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230518727 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.230301991 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227344797 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229763104 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229395362 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226191014 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22649811 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22736313 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230185909 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227564615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230535605 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227013048 seconds)
  done (took 25.698264723 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240911206 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239875218 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240713601 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241456578 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241241368 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239398026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240219135 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.241253619 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241106448 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242068396 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241111777 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240863238 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240049457 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240901231 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241615624 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241252731 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24150725 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240799022 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241190385 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241104818 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243214292 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241182971 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242305635 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242253756 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242312213 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242546212 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24090328 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241442645 seconds)
  done (took 35.891223996 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233326473 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232078072 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.228780635 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228432584 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229652867 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228846102 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.2297707 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230401827 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232220938 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230721651 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.232955499 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233245888 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233539708 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233130377 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232728555 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232955271 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233388218 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231158626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231289633 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231333038 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233649985 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233438449 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.23414203 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230885979 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230924459 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234512829 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231968911 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231864385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234830273 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232102239 seconds)
  done (took 38.097000882 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.279244323 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278473903 seconds)
  done (took 3.69723484 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23149682 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234505518 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233216464 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232625825 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23263734 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234886272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234789063 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231961995 seconds)
  done (took 11.005459139 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234712964 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235382004 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.235511233 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236494853 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235841927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234445016 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246656245 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.259278086 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236616017 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237838513 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.764555307 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244279587 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236949015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236382286 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234799646 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237615188 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236427444 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236856057 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237654118 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236155163 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236466995 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238698559 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237444237 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234391395 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239363715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24942121 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.241394701 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237683398 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23675855 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24147365 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23815029 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235386866 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238364064 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239087885 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237504252 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238819953 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248547689 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259618889 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243653411 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237356197 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240049764 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23529766 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23854735 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.239169124 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238370659 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238781699 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239486458 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233939918 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238062839 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242416241 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243766603 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237556879 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235688286 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24160235 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239382275 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246506335 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.2613503 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243066771 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249958875 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250592091 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.253675339 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.264338404 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240632157 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239413713 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251427206 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263495981 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248645404 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.256709357 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236479631 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240141447 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24828837 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253295114 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267201885 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240487836 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238995542 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240508183 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240850922 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240653032 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248918805 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264945469 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24062368 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240159102 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251966463 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26533899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241315064 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.240495876 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241224921 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241382606 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24399421 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251613429 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263128944 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242009729 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241241505 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241184774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24148918 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241802477 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240337324 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241729155 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239965691 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242254425 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241509168 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245943175 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250271692 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242250757 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242517929 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248348912 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.242683311 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242231508 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248793674 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242636614 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242348612 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24386042 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248931514 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239614515 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247321959 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250574814 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242969245 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244210313 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242524639 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243028143 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253209537 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270651141 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243569199 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.24371164 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248189541 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255883317 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243737932 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246117355 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243892904 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239951072 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241063861 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244965106 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244274141 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244057115 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244666683 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244456426 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242223371 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.245149436 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.245786865 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245026206 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246171527 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244580718 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.244362914 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244885219 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.24461128 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246286588 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251755529 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.244142595 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.245999115 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244082684 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241996994 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246183956 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245355714 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245745056 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.245269377 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246916282 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246878513 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.245336827 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247122395 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247188758 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247674572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247417727 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250835298 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248709715 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249777832 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246488968 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244427303 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246754455 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246665123 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247615439 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.247657084 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246379302 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249671574 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256782767 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.247419546 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246624425 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249727999 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247484597 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246029903 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247765205 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250893455 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.256891322 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246987972 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253780333 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24867857 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248032568 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24884726 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247426972 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.247646015 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248536869 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.25201477 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.256979211 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262208936 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275792558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24962558 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252510909 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.2501517 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.253048163 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252941646 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249163182 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249357137 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249513338 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247481714 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248368288 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250021442 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249422182 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247980745 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248784199 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249612674 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249268707 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250548336 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249149554 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249501277 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24678356 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24902286 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25060465 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249582102 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245660802 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249327758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248292474 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.250473651 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249455998 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256304369 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.24737031 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251239697 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250803153 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251349485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249231675 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.251119343 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251773882 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249825887 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258966247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272010995 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251400002 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257129397 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272103215 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251195874 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253643059 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251158645 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247718051 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255166786 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261301251 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251399154 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251557881 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252404135 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251654188 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252032607 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259821028 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248948838 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.251110243 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252428262 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252630366 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249471818 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253871484 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253281789 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252326503 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254191681 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252840296 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.253300173 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253991912 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.252709206 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253863916 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253306065 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256621192 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.263014101 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259006181 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253106572 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254914615 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254977834 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257681481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253152436 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253850202 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253415331 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265735155 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281722802 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259882725 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255305602 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.255070134 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261478925 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.256562845 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258183737 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254585288 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253950432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253718771 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254426423 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251618853 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254719414 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255596669 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257369109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257811365 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.2599854 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.25545053 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254834935 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255320177 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255930295 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256588583 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255025114 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.255523763 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257445927 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257382957 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255771589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.254634343 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265057995 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277402086 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.255883012 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256544831 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255543668 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254591005 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256872091 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257061128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259512609 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.266090091 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26013249 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26569557 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.259253657 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267912676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257286733 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260457455 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266871647 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254548087 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255347209 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25725578 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256392634 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265584625 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278973764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259664874 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262916742 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257922051 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257373609 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25789531 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257870503 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258434935 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.257612801 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26876083 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282101327 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262269578 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258801986 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.254555965 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25717874 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.258254314 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256994301 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260695506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.258459345 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258978726 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257788901 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259109389 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.258086647 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258886424 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258653977 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256689919 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259980282 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267970678 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282865279 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263981754 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259517315 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26613724 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258770257 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268290467 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281992953 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258610439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.259596941 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.258363011 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260934028 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258725889 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260212858 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.260253368 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261280291 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.263353652 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260649142 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262720561 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.25987556 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260226078 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259716153 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270071263 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285744661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261649368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266089951 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257705339 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262242948 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.265359771 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261327633 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260025441 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263711495 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273025241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270482525 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260862246 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261028081 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261114268 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261740742 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261068121 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261640749 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26170206 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262713073 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263508261 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262312282 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265317768 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262216316 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262716542 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262940447 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263155014 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272702294 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.26306566 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263376645 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262078036 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263894931 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262865792 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263417713 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262150698 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262879599 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262814607 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265729871 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271254676 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.271140784 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26657645 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263133353 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263827147 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262488634 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264128148 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26367706 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264224431 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264429216 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.2639263 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.263809411 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265293507 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263635598 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264047394 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264631658 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263702752 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266400105 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.273578823 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26448168 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260633965 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.264426414 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265075716 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263032447 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26437727 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.272996448 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267847076 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.277661611 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274715248 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270475325 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266314779 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2693551 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273816953 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265607547 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266458602 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266884037 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265587903 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265243233 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.269659476 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266744969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273672737 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.264488872 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.265294709 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277278313 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290708816 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265749386 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267533548 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.270472235 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265153055 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262311383 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.266327953 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.264677047 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275223361 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288587709 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266253568 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267183218 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.265238776 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267541147 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271649607 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268115306 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.266617512 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263664455 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26658831 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26663115 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26765435 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.265435331 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.266245618 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266875974 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270859956 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27570577 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264774286 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26896533 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.267300141 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26826043 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26781287 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268083265 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.263251646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.264196209 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.26669638 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2685971 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267636136 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.271657145 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26722411 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269678314 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270067443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268215841 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271396834 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.278901536 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27794615 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.264520653 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267914198 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.268437051 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270251464 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268768721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268982641 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269814661 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269067352 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269508006 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269717861 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268960673 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271943621 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289117701 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293626623 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270418693 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.270160268 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271450931 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.269014135 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268204823 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270112183 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272651168 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273983569 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279995759 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271593489 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276529463 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292569931 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.271396439 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275270327 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273913296 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279685199 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273625736 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27098736 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.269955287 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275291107 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.289046592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272546497 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282174944 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304341323 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293096205 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.271189588 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.271364588 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27062597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272031776 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272471824 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271787242 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.270268852 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273553749 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273040196 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273943146 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277524519 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273596072 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274504064 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272893914 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272337864 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274371771 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270282597 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273646895 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.27230744 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27383208 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272719256 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274312172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272953534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285537756 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301954832 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27345704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274346497 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270982635 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277639125 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.277554218 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286200911 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281590354 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275079207 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273744846 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274645589 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274086532 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272966422 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272882214 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273186024 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274290032 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271186281 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287679142 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302834703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.279833318 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275867933 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275681901 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274419924 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276378193 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276352542 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276934127 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274791135 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278792235 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27820857 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277367741 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276400929 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27944709 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282213453 seconds)
  done (took 751.542888239 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273217 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2718647 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273309301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273495017 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272888683 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27248413 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272752444 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273572128 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272045724 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273411667 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273348755 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273097468 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27342306 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273527319 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273189738 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272808564 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272869825 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275060188 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272971108 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271711287 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272079238 seconds)
  done (took 27.909888411 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27497055 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.272775289 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273346159 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276004445 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274157936 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275985365 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272838047 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276218761 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27602617 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274228157 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276411089 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277318886 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.276017819 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274636502 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274518402 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278017712 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27905006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274191118 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27883202 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275931776 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277828153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275221036 seconds)
  done (took 29.240936292 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279643488 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27896256 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277886037 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.27520567 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278472725 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.275163487 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279378877 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.27768177 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278705823 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.277785336 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.277397234 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.27981138 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.286058211 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.284090645 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.279865597 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.278323891 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278919118 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278978419 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278843027 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.2755066 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285140743 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.276702118 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.276646738 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.27896476 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.279470494 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279562707 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.281063617 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.279763807 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.280470321 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.284176805 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.27946637 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280724125 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28146949 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.278892232 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.281168178 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286423933 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280333757 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.277239826 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.280694182 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291307832 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.30365818 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.281209009 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286503618 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.281870556 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.281727057 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.285296478 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289465583 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.277788338 seconds)
  done (took 62.663757859 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.281224066 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281247462 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27853549 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281596675 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.280828628 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.281143749 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.28172345 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281799597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277736405 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278450624 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282033829 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.279698971 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279897271 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282233947 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283400298 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280065205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280543505 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281093737 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281486335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278650533 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280589313 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282211868 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283368311 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280828775 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284579375 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280754388 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280052067 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283293933 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.28096216 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281297439 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283261523 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284088076 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286942953 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280711963 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282029935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.284405884 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283877187 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281699521 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283428372 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.281056856 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283736803 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283973487 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.284357814 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283722176 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281287386 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.28213767 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280914034 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282088669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281644706 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284356351 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283603081 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282457597 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283238131 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.281758724 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283363515 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283670857 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282747554 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281584602 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.283674836 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282650353 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281501229 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284475574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281555537 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283648845 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.283807891 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282445009 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.2813856 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285476715 seconds)
  done (took 88.367209085 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284408575 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285697098 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284434323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284226361 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287107841 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285988534 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285480447 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285161766 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286221503 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285345695 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285236957 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286706804 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285952817 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28678254 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286099908 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285741153 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286091055 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285933829 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28657514 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285787276 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287197882 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287436712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286945467 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285575172 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286750569 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285944128 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288068504 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28759412 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287249889 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287051514 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287250727 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286735031 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289040579 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286925453 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.287952107 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.287605783 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286874327 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287734013 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288088762 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287118602 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285499457 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286530978 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286920078 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288067659 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287746589 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288201292 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288359445 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28873876 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289100654 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289269937 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289685022 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287896901 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289785525 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288906346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288647396 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288689607 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28829141 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288188478 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289336349 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288643586 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288728661 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289606261 seconds)
  done (took 80.992451884 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290933977 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288924868 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286567842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287519425 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290119793 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287805306 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290249811 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290091523 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2897926 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290141595 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291298694 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286323432 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289567351 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290607488 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286422713 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289115793 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28733647 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287910547 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290854004 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288274115 seconds)
  done (took 26.969994665 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287799094 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290946184 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28847368 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288411949 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290679973 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288358602 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290726844 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291230513 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288642648 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291168236 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292400323 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291017581 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287927152 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288652725 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291804323 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288913184 seconds)
  done (took 21.827279161 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288070239 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291234018 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291017287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290869936 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.289176523 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288401703 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291511055 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289459883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287891815 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293305136 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292424741 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292086527 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293078547 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.291955708 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290023971 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292426024 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.288600494 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290109551 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292396019 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292900038 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290349105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291030331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293339059 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.29329437 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292060673 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290101208 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291062049 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290940907 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291013498 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292408497 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290117314 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.291190627 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290969396 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291319429 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294510345 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291824427 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293464801 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.294504333 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.295349372 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29443119 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292766363 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.29138508 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294476085 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293653505 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291881937 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293547737 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292544288 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293426459 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291272675 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292893064 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293821405 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295061382 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295585799 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295377906 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294631503 seconds)
  done (took 72.255226128 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294924275 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295685938 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292876702 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296234141 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296089824 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292845131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2957921 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293569822 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292451218 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294908746 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293940234 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297771448 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293598575 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296683826 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293395222 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296580946 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29489859 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294448434 seconds)
  done (took 24.502175465 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295123613 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294707515 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295995498 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294980203 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294006129 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297891712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294451464 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297227008 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297410668 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295609627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294971048 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298887825 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297893459 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298051795 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296848356 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296100536 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298676346 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298974937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294866869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294802336 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300507389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298456849 seconds)
  done (took 29.722690223 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.296952149 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.296496019 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.296079329 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.314671392 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.318056206 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.298285743 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.296858675 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.296284483 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.319822708 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.353831072 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.346125099 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.317429524 seconds)
  done (took 16.948046716 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295526119 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299489232 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295555254 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299415148 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299597366 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296110934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295885254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29680961 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298911247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297119328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29698919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299522144 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299737553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297501875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298003086 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299122265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297252515 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29667524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298251515 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300320771 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295803717 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299191058 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296361491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296829703 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296327073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297721241 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300661291 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29758928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297250143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300157797 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299227543 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296173311 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30032308 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298787996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299744518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300739912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298273196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299371312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300056356 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298353397 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300998164 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301203742 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301391717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299244677 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300258989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297881766 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297944784 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299071467 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299116851 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302848385 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301754616 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299664594 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302164574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301396772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302205085 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302742889 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299792235 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299400097 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302335264 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30086435 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300369231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301644131 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299741411 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298867775 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302986605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300351718 seconds)
  done (took 86.940107054 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300830649 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299549549 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300505515 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300188603 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300213514 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300711514 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301590516 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300751804 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300721737 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300496094 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303327009 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299696874 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299830704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300826459 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300363078 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300775479 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300544183 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300844681 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30053718 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303218924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301126749 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301780055 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301563237 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301240426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300921102 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305696994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302646257 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304229807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302426974 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30186021 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301809956 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302331754 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302112692 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302600499 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303473896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302161889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304839973 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302202057 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304233546 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305726691 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303454792 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305613346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302851991 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303623888 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303289417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304115791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303372907 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301967072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302772188 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302655087 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303549127 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303923013 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304192765 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303718283 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303991532 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304745763 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304287105 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304061941 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303538968 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308169075 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304502598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303347239 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307499599 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303387211 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304444984 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305035363 seconds)
  done (took 87.18044275 seconds)
done (took 1759.142369169 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.474697887 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.430852569 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.305704582 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.329330104 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305713361 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.330484364 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.324061973 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.308599258 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.309515282 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.309131713 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.306795073 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.502214671 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.321393574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306895854 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.307930137 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40668702 seconds)
  done (took 26.786498721 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337382898 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312652101 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441205909 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330946386 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337685597 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.524923003 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373221692 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312311194 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.509106781 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.357895984 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.305913556 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.336673873 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.312744688 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.307529064 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332322116 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.522591556 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.597063135 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.308752119 seconds)
  done (took 29.067693088 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.843761607 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.369123051 seconds)
  done (took 5.420433665 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.333854134 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311868229 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.312740891 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309922911 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.302104028 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.302844598 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.310689773 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.307466491 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.307091407 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.457173841 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.314096114 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.324523766 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.335419528 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313262817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309142324 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.35450579 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472842747 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309430484 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.307550259 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317632571 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312828387 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.425390043 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359310355 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309861628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457847374 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.308222698 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315721065 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321352429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.46240767 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.310953033 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312938515 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312653274 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.315272068 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.2920291 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.872653859 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.304410018 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.34001031 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322759336 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.31005075 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.475339799 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.314609164 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.321063163 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.305137258 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.863669087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457583408 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.445547331 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.3306915 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.314650069 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.31501906 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.382800559 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314220156 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.315931502 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.362218771 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166316751 seconds)
  done (took 84.486136112 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.349828017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.30535822 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489706384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.328098157 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305407743 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.327674999 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305372395 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.639913714 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.347318614 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306902498 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.622434936 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935556426 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329091549 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.373357746 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.223372302 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.383906663 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308921545 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.326784119 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.306699784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.311901258 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88927957 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308235123 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.326821483 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.468378372 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.351824834 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.871130798 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.312461916 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.307883083 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.328665313 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.308230642 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.885929892 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.337737815 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.373707535 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.310826553 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.606499736 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.738438677 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696498081 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.311759993 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330860436 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.310380271 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.332788866 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855097726 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.715582269 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.309103591 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.309206534 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.864802506 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308124769 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.312594558 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.310575151 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569317953 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.309283448 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.309635353 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.332629357 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.309347622 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.308140333 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.316939475 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399035402 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.899826226 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314526007 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.309969353 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.366662124 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.310103212 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319175453 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311082604 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.33098897 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.720408272 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560560962 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315033295 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.739920533 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.898391912 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.333907436 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.953871271 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.334703151 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311325791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.362485373 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311531163 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310678635 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889207613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.323546646 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.311499816 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.702666243 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.309690133 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.627131298 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.345160771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311707298 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903713528 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.31366378 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.324240138 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312790988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.311863494 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.310538561 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315084669 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.636345389 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.374857632 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.31196025 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.313392897 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.354233658 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314246289 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.313082891 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316501347 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942939525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.341794615 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.312654719 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31530349 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.318118943 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.313492071 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.315513763 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.314049295 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590227928 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.3133738 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.340208121 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314663081 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.317822162 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.324682545 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.457385171 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.318191773 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.672306115 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316355119 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314083709 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.333543941 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313426755 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36614899 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314548788 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315106541 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.238991942 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.57890534 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.336590437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.315108147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316197474 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315958671 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.315401843 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315973784 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.368070065 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.319809869 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129072569 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348463849 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.320615734 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.314071126 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.316247534 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316102743 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.344536477 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315964243 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.626288195 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.615332794 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.567859715 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335587535 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.320559689 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.121329972 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.334276896 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499712998 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339555937 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320837847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566373801 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.582710252 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.315851369 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.314921195 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.319477551 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581598321 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.31641138 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641866588 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918417604 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.336448598 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320440145 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.143683566 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.07585269 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.317640637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.322392941 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.629222826 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.337596024 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318359343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.31691334 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317877586 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31679072 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32040164 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.318316615 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.31821447 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.316561873 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377601925 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513803094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.3377975 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323259713 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879895047 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349391588 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331448718 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.317776943 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.323106811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317873731 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.401517532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.318063717 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.3620542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.31925328 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319129041 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895345471 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318771942 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.319680983 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513635815 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065580608 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.337839543 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.318859591 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.337997868 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.250660678 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903930803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.374775086 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.680949023 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.324094472 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.361659023 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319689739 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.383546531 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903379503 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.32508885 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.342225986 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.039520301 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.341290691 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.949528343 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.318870936 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.321725399 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991520093 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.340600638 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.324704673 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.318955327 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327005421 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.62131313 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.321132761 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.321218833 seconds)
  done (took 496.650458348 seconds)
done (took 643.614830935 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.321045875 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322829508 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.308729191 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.328160774 seconds)
  done (took 10.504655028 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331541628 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.32832784 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.338782319 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.326662986 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.331855624 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328777243 seconds)
  done (took 9.210993027 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.32236185 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.325479387 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.329163597 seconds)
  done (took 8.202169466 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.565370178 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.357315857 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.724332183 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.353958662 seconds)
  done (took 9.226010448 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.338360122 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.339963294 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338474866 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.331456992 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.333196758 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.334288385 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333148465 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.332803739 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334873068 seconds)
  done (took 13.238390056 seconds)
done (took 51.604659569 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.382172016 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.342898483 seconds)
    (3/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.413138451 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.330413378 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.092135834 seconds)
    (6/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.354643418 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.329400394 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.363491193 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.331316287 seconds)
    (10/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.476860521 seconds)
    (11/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.512331066 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.334120405 seconds)
    (13/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.326330771 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333040537 seconds)
    (15/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.337367303 seconds)
    (16/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.467052851 seconds)
    (17/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.311728259 seconds)
    (18/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.333127748 seconds)
    (19/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.392460798 seconds)
    (20/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.33711267 seconds)
    (21/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.148631204 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.638747813 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.409594986 seconds)
    (24/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.493208323 seconds)
    (25/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.353906146 seconds)
    (26/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.388718276 seconds)
    (27/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.344787167 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 1.761325636 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.336331367 seconds)
    (30/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.976830523 seconds)
    (31/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.332216178 seconds)
    (32/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.388120886 seconds)
    (33/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.171551185 seconds)
    (34/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.345610121 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.39230524 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.554591735 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.414753661 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.434670973 seconds)
    (39/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.326667128 seconds)
    (40/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.441062031 seconds)
    (41/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.333901146 seconds)
    (42/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.33252308 seconds)
    (43/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.327897369 seconds)
    (44/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.323581165 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.383820365 seconds)
    (46/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.394087747 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.33759108 seconds)
    (48/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.06826691 seconds)
    (49/286) benchmarking ("sort", Int8, true)...
    done (took 1.700244746 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.344069584 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.340573508 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.359248191 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.327172604 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.353110361 seconds)
    (55/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.343637476 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.337278894 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.402967999 seconds)
    (58/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.382499114 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.345927816 seconds)
    (60/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.480301537 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.441789984 seconds)
    (62/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.342622361 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.333809276 seconds)
    (64/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.393116423 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.477944996 seconds)
    (66/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355108888 seconds)
    (67/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.393816064 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.336885168 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342713731 seconds)
    (70/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.47114131 seconds)
    (71/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.355870361 seconds)
    (72/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.45565726 seconds)
    (73/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.343847859 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.403847044 seconds)
    (75/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.348680841 seconds)
    (76/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.334460077 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 1.546542497 seconds)
    (78/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.386002973 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.377975267 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.344661358 seconds)
    (81/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.116578365 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.382922396 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.385485107 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.379146337 seconds)
    (85/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.323649449 seconds)
    (86/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.340446762 seconds)
    (87/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.328534241 seconds)
    (88/286) benchmarking ("sort", Float32, false)...
    done (took 1.512159165 seconds)
    (89/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.695331903 seconds)
    (90/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.098966363 seconds)
    (91/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.412163452 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.553261435 seconds)
    (93/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.415527272 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.439333348 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.482576822 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.371869414 seconds)
    (97/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.346733137 seconds)
    (98/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.475745577 seconds)
    (99/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.336340612 seconds)
    (100/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.415543337 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.31569882 seconds)
    (102/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.39472498 seconds)
    (103/286) benchmarking ("sort", Int8, false)...
    done (took 1.481879248 seconds)
    (104/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.423341987 seconds)
    (105/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.330206658 seconds)
    (106/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.369410755 seconds)
    (107/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.330806667 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.373668962 seconds)
    (109/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336591396 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.346750747 seconds)
    (111/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.337503707 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.516032723 seconds)
    (113/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.388617478 seconds)
    (114/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.462729838 seconds)
    (115/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.432915526 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.357194385 seconds)
    (117/286) benchmarking ("sort", Float64, false)...
    done (took 1.537823845 seconds)
    (118/286) benchmarking ("sort", Float64, true)...
    done (took 1.941729677 seconds)
    (119/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.000519418 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.520339636 seconds)
    (121/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.343757065 seconds)
    (122/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.426441385 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.364322072 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.339773666 seconds)
    (125/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.545510423 seconds)
    (126/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.348998005 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.365275967 seconds)
    (128/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.349055107 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.427279155 seconds)
    (130/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.989899368 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.365331913 seconds)
    (132/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.139726995 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.463482127 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.388770397 seconds)
    (135/286) benchmarking ("sort", BigInt, true)...
    done (took 2.333608429 seconds)
    (136/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.233150487 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.153841213 seconds)
    (138/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.512999498 seconds)
    (139/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.31858943 seconds)
    (140/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.365975591 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.335059652 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.348709202 seconds)
    (143/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.385266422 seconds)
    (144/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.34062156 seconds)
    (145/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.317464551 seconds)
    (146/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.32266777 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.457672359 seconds)
    (148/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.04930865 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341662672 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.979516228 seconds)
    (151/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.333588449 seconds)
    (152/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.557566403 seconds)
    (153/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.351081173 seconds)
    (154/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.070616949 seconds)
    (155/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.391116707 seconds)
    (156/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.101825073 seconds)
    (157/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.377354978 seconds)
    (158/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.372184044 seconds)
    (159/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.559052861 seconds)
    (160/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.535481284 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.47027311 seconds)
    (162/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.342664056 seconds)
    (163/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.473764615 seconds)
    (164/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.381061001 seconds)
    (165/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.579288599 seconds)
    (166/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.540648722 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.504632162 seconds)
    (168/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.376168279 seconds)
    (169/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.357059161 seconds)
    (170/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.350720887 seconds)
    (171/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.366269561 seconds)
    (172/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.106358086 seconds)
    (173/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.340552804 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.405818369 seconds)
    (175/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.347470465 seconds)
    (176/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.337560283 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.323435978 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.628910154 seconds)
    (179/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.318947109 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.342688816 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.448226088 seconds)
    (182/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.256907935 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.470363911 seconds)
    (184/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.505711598 seconds)
    (185/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365720691 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.049138728 seconds)
    (187/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.347294536 seconds)
    (188/286) benchmarking ("sort", Float32, true)...
    done (took 1.907218111 seconds)
    (189/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.360960324 seconds)
    (190/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.348709835 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.520477077 seconds)
    (192/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.344618538 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.347688483 seconds)
    (194/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.346120315 seconds)
    (195/286) benchmarking ("sort", BigInt, false)...
    done (took 2.337998253 seconds)
    (196/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.348794405 seconds)
    (197/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.349080653 seconds)
    (198/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.360558352 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.391035344 seconds)
    (200/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.352938285 seconds)
    (201/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347240811 seconds)
    (202/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.352697097 seconds)
    (203/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.016888391 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.43601529 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.361185054 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.420648863 seconds)
    (207/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.365428867 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.353214153 seconds)
    (209/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.478789635 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.548164862 seconds)
    (211/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.346640171 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.344756677 seconds)
    (213/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.454418948 seconds)
    (214/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.352017842 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.419723236 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.347696777 seconds)
    (217/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.399979108 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.426819444 seconds)
    (219/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.383523236 seconds)
    (220/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.126279232 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.343197376 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.354696864 seconds)
    (223/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.321423185 seconds)
    (224/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.499514506 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.435780546 seconds)
    (226/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.357616184 seconds)
    (227/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346145268 seconds)
    (228/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.338356157 seconds)
    (229/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.566531893 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.339202719 seconds)
    (231/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.414212981 seconds)
    (232/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.430151445 seconds)
    (233/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.47375372 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.288572763 seconds)
    (235/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.480206695 seconds)
    (236/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349992831 seconds)
    (237/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.377677842 seconds)
    (238/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.338149045 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.357343214 seconds)
    (240/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.415253824 seconds)
    (241/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.455285225 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.3781599 seconds)
    (243/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.407068863 seconds)
    (244/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.238863201 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.495194009 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.492305869 seconds)
    (247/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.532597867 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367478124 seconds)
    (249/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.505542472 seconds)
    (250/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.425974536 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.399307712 seconds)
    (252/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.543070799 seconds)
    (253/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.373486194 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.45572327 seconds)
    (255/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.475299903 seconds)
    (256/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.508578467 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.656316238 seconds)
    (258/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350678484 seconds)
    (259/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.433500078 seconds)
    (260/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.375099096 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.361273164 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.356617697 seconds)
    (263/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.430699907 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.374562942 seconds)
    (265/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.01607825 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.362930728 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.987775572 seconds)
    (268/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.438911877 seconds)
    (269/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.379796414 seconds)
    (270/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.696409821 seconds)
    (271/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.354251715 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.518736279 seconds)
    (273/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.626217773 seconds)
    (274/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.431399141 seconds)
    (275/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.359325341 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.349934685 seconds)
    (277/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.414153124 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.530882586 seconds)
    (279/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0124091 seconds)
    (280/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.516747537 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.349163181 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.35134274 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.42954293 seconds)
    (284/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.407482643 seconds)
    (285/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.377917845 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.566461076 seconds)
  done (took 471.960559668 seconds)
done (took 473.184744961 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.387697403 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399775702 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.353836447 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.388157659 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.469627343 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.528208622 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.36483893 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.393341199 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402436935 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403164484 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359957402 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.528049753 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356341426 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.35608915 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.35782833 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397462959 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.342739313 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355547526 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.37175303 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.388675054 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.371248395 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360975307 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.404563422 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.527008219 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.3589908 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35759121 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358291624 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378656752 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471021044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.359101626 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358894829 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366820001 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.345593032 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.360972493 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.35030454 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.378232293 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368860207 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366236598 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.390157684 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.469874258 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.347971353 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.362914352 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358853562 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357565541 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.356789254 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.395512067 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35929058 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.413796592 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39989804 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399208309 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.360154203 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.371956279 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.364619892 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358819604 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368615853 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.355940892 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.414142437 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402467182 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.37824022 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402739964 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.360693392 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.361163497 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.397220695 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374616414 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.36979029 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360277428 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356986525 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.398521529 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.35133265 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.363841949 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.359131039 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369098408 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36042332 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.372842069 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.393970253 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.349010405 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.353045185 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.358215296 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369482501 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.358294801 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.406727189 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402730249 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.409935535 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360239647 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402517728 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.533020908 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.369440296 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.359792741 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.396544521 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.378055662 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.369990016 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.372616015 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.394327091 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361276028 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.408826439 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.418274668 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.366943859 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368282573 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.411247388 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37200714 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.354070083 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406317511 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.357826087 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.356687141 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.359153103 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.482408019 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.353392672 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.362429299 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394169801 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410107284 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.421737461 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.350083583 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.374267626 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407651426 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372599001 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.421145782 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.362612102 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.367785234 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.366923881 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.484459145 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363866743 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.36742625 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408433086 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.422268195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361530683 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.350736049 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363689678 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405644887 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.485102439 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372817394 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.477340964 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.361450746 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.366890177 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.392914288 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40754921 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.397527355 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.423962954 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408654676 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379876421 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363388163 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374775945 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37455328 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365165163 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.421160199 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359949323 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39450977 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405993133 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406393438 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.395706248 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.484469265 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.369152935 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.3690667 seconds)
done (took 227.955553453 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422203533 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.36040186 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.468650693 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362516627 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462769566 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.46370344 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.359858439 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.359534674 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35807525 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.73176446 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358639166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.357990801 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.359367262 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357787858 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.441553736 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361933566 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358751214 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694628179 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364764607 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.431467764 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.361465257 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.357851698 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.360966859 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.731626334 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.360982855 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.354340755 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.43124537 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.361589415 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.698357479 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.355461344 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.357846842 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.69528966 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.450244234 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.378541747 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.3712796 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368896257 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.465070288 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.38333038 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445316561 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443706698 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.469678415 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402509304 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.357461931 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.360933494 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.365307282 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364690064 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359837494 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.38915993 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.361628407 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.360230445 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697308327 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.373603791 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.359920866 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.362624165 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360210395 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.391786002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36133831 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363728919 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.452011423 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.364729055 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.425529703 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733331321 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.737068273 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.366799282 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.36141719 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.361312286 seconds)
  done (took 106.287265222 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429330184 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.440939526 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.487373749 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365246375 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.417033788 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.489300159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.365299731 seconds)
  done (took 11.251281923 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372483178 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366738483 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415000213 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41537681 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365847472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.577893118 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365277646 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376227445 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362620274 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.444828155 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.377812068 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365447911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370915044 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.363296201 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413775233 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377248827 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483562503 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367315246 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367475235 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519857555 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363289633 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.371717681 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.442918763 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377913152 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377912246 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.374681647 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.312660796 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367445377 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363667905 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.365964163 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363935053 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.475045171 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368475378 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.366513239 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364499422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525686363 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368295552 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364003283 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.367569711 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.368010487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.365782918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367687208 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.368741179 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365700563 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.367536053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393162628 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366831143 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366826967 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368508932 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368439778 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.447393536 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368624086 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.365854912 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.365118813 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.446953249 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375360424 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369047693 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365177006 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369899718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36527401 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.523248426 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415746834 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369449812 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416810907 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370526018 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371348933 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.368384841 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.36971884 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461611004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.369422878 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416880546 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367326509 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.593243754 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393123547 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372816757 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373197091 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373247365 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370113937 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368522569 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379020222 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367891474 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371139966 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.3759858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366762377 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36689395 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.555375308 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.527336249 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367557717 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38190482 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376849901 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.368396545 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.446970229 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37098213 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367741908 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422203694 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.485987347 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.451059422 seconds)
  done (took 141.531334139 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375898657 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379538469 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.373824837 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.394278093 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372357542 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370618569 seconds)
  done (took 9.528476545 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374729744 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373381891 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.371185348 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372349933 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372963542 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.38303254 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.382482011 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373568085 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375765155 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372282455 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.38411609 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.375877425 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.3760605 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.374519287 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382358965 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372914632 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.382494212 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370690655 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.372595576 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388804003 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.371320121 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.374134638 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37525509 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375764889 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.389394688 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.373784519 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382239745 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373947676 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3747824 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382832496 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.398216834 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.386197745 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376425328 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381394259 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.391114955 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.378397133 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379732247 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376213351 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.374306659 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.386058846 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.377696148 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376376874 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375264911 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.379268304 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.378963211 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38267995 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382223874 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383185746 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.386078129 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.377550274 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.377777247 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376128367 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.386370306 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.377120053 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377895621 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399623165 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.381823965 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.38643896 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376209918 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.37809139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377831282 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.386914343 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379015471 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.392467625 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.374807628 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.378607653 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379513745 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381499739 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375941451 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.377106825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.37856407 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.375347815 seconds)
  done (took 101.572056151 seconds)
done (took 371.421688026 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.39068202 seconds)
  done (took 3.658105169 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.657725645 seconds)
  done (took 3.92656579 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.598886613 seconds)
  done (took 25.876018436 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.433761937 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.417220266 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.385740835 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.373654543 seconds)
  done (took 10.878722778 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.769986812 seconds)
  done (took 4.03731549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.370422225 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.373615397 seconds)
  done (took 6.013967976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.736033809 seconds)
  done (took 4.003420958 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.818162813 seconds)
  done (took 4.095168335 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.393569991 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.383835349 seconds)
  done (took 6.054631159 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.354344225 seconds)
  done (took 3.622526967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.521963926 seconds)
  done (took 17.791932595 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.380565899 seconds)
  done (took 3.651942079 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.387669253 seconds)
  done (took 3.65567073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.577502381 seconds)
  done (took 6.845552094 seconds)
done (took 105.377577408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.373828182 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.380409498 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.381331047 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.380041172 seconds)
  done (took 10.783882817 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.413209093 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.412587602 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.414345483 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423157285 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415718327 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.412607258 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404408786 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.40535548 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423930676 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.421192945 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.416325376 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.414914609 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.413224436 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.405055227 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414923662 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.417471956 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.423536643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415405911 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405260176 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.416206606 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.381222109 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.425097195 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417966196 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380450229 seconds)
  done (took 35.164766463 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.900252813 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454476008 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.53611134 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433916263 seconds)
  done (took 7.595099934 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.449463433 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.451399419 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.466058951 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500128405 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.530350757 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.460233928 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408203727 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403825496 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389206139 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.452747949 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514568294 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441473302 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527702696 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381632685 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572226794 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381527766 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.382587101 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.460899959 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499073719 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.511415382 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.382616324 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459996072 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.465146158 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.438085383 seconds)
  done (took 36.202576214 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381663483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.400373582 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.381334209 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.380690977 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389685871 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381675609 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.382009846 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.382881202 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.38128096 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.936621376 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.384898841 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.394629529 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.915430814 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388170439 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388108237 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.383162846 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.922807883 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.919153876 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.388619933 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.388662568 seconds)
  done (took 31.144721509 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.377039955 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.376086535 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.729568344 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.63570687 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.379003703 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.377909647 seconds)
  done (took 14.147890546 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.473684285 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.63422208 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.387986307 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.818445539 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.895956883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388630224 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389385449 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.677384414 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.065191618 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.061432428 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.456336865 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.469824041 seconds)
  done (took 20.994032868 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.382480261 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.37877428 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.39962748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39794333 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450724995 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389048542 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.394018302 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.378188003 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.452266898 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.457719126 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391629324 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.455041901 seconds)
  done (took 22.202845675 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477702554 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378920912 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390803948 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481414734 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380256054 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231264289 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49401648 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152749707 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.406803373 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653863204 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390783702 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481313225 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639030705 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395350776 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385704464 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.36832859 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617085089 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962100647 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381847943 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393069526 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419066853 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378678669 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390173533 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637233073 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382255403 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381025058 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642465005 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381139047 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721610672 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396529451 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392206056 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380547912 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656604797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096393734 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510167053 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629341302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402428756 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383410323 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.40304504 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.401383877 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388528353 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386768887 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3930949 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382117686 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382281206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387133332 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159032942 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410955709 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.379922108 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38221069 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699643479 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481942056 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.387911942 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382812672 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51017751 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383001792 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386260774 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.382896028 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989328861 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392945564 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39310792 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.383481946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399703897 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398503316 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105017819 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.389374089 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386426613 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388538565 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383578037 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395961242 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406987571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383969683 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408948286 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384533776 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329075455 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406119242 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387413338 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032248838 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392688584 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.39188544 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619096987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38587215 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385655637 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.385112639 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385068888 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196454547 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394497683 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.384424038 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400040839 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16214567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658795007 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405074614 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418409903 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611622651 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.368349462 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385958167 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.397384097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388362733 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408286384 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167284593 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409132671 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.39147611 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649505226 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599565943 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39642006 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.374923275 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928704057 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417482001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405172199 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404751312 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638500289 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.06778546 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406725673 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407797897 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425525914 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386892516 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236952936 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407906692 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.493675652 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403843902 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68727792 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.282974215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389885909 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452201129 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395237693 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389918205 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404264432 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3963069 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387636433 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.625579597 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410047831 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.400552876 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.398622551 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389977664 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.391760944 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398445882 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.394713305 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614695149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397006303 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663308022 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387669805 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388216295 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389221458 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.612534478 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.385791994 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.726315759 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65594596 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389764785 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405457153 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401432565 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408833096 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494986676 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421159477 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.394850831 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649502848 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393668987 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394240618 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409352013 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395762256 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395887287 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.397853563 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422332506 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074617604 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392396422 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398450617 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286927792 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.404621465 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455526892 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397605391 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643468374 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390401478 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413120976 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395647422 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.395301354 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619569679 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402297898 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.411079168 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470849249 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.928588429 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102389707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406449938 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.391853999 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.38944873 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.389921972 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393256697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391737688 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393108054 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643081787 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408990242 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41483985 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.077750867 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395374477 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411575453 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.402942312 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407307027 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.398799381 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393113111 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.390337157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400520161 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404835196 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406297912 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531664938 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407921326 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394713969 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.9119195 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40070351 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394571016 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394186453 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425801698 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394083934 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325672638 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659042951 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429230686 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714986519 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412603724 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.415093987 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.392113645 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405175064 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401297498 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.406331213 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425157667 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407101119 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415706645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40220545 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970180408 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285961351 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031171674 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398860633 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.399430852 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395252525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183550003 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417383514 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396908022 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674002963 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177630307 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419227922 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936159187 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.418521589 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.300959701 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717533501 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633183255 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396343969 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.403147583 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721992929 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611503279 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431878418 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413615093 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396546586 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.380225759 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030242749 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434141548 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481404403 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181742316 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434437228 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405050192 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.407212413 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401739921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863230068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419473619 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397254054 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397290287 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413048552 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303357999 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40111552 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396873965 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120615704 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406730063 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.935259285 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420828788 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653490149 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411342948 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.401913969 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.396927425 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.399474678 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655370763 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719116855 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401889137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405246431 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034229814 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.271488734 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.404202054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400495481 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251806476 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411935675 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741575532 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.402391227 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398865671 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402632231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399016936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400759971 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.396287184 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403438168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400433471 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986306929 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.425848606 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433824797 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407213094 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420974192 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658629658 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.414178579 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091270608 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635735552 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436509271 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427818702 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404727631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401162353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.413502517 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400221878 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401231829 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413866336 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626130279 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421030135 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.386148559 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516205961 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616455585 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401709352 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41500439 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686834506 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.400236387 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.420421203 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3021385 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435656036 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412886696 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40913784 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433951109 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403019418 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499777908 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656458911 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.417177443 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.415515849 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869720767 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437380146 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409775197 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.415515745 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499725876 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409622114 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409759105 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.178507899 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099772398 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379954414 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105331381 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725215753 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407266004 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405727234 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402945788 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540397329 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405210655 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678695218 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40334124 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.432160816 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42692768 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423450586 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410382151 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618462801 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679054479 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404936918 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424115479 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404513778 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.403018346 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415639963 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616957703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996009957 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061246743 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406694249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41461431 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187627104 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701577584 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406441348 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405893911 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405688988 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.425973428 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.439163576 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.413306015 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407054468 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547014955 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726945061 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144961245 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.4387247 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.443814105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.924205318 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406023233 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670590648 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403565604 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.663889241 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101542471 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268378597 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68125386 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475058734 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662486667 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.407088528 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547865382 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.415736308 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407561424 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408046867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40750204 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.40556285 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.419644048 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124994252 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682438822 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.410041226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.414471093 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438012903 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.418337612 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632954961 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235273597 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634698754 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418370553 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411117464 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406987144 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10971494 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732929204 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410140298 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.413145195 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685653614 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409862874 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433352519 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.926419649 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.405504433 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069580279 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.307051305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430779646 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412313069 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276529019 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132904111 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.422212676 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999187121 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412035082 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409952745 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689574454 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.416222367 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410162427 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690638555 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.413615295 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420529408 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666130894 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.132437115 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.326026423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.429647178 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434399505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.417940739 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410573801 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552710748 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410241601 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419089285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.891387037 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43435949 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411711125 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422744405 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.421314448 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41120393 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.409274682 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411805767 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.417165784 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.448518761 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.41392948 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436972418 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411567193 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080167178 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441396295 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.08233212 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.738228472 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672277378 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42360025 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.395484913 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.416340164 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413160076 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414312691 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413203246 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429577983 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073406529 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.422480853 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.426401183 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417212004 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632571442 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625974981 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429291782 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676984936 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434457441 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427729741 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.396938641 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413852968 seconds)
  done (took 998.625952552 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425599495 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.457206245 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.467197763 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.487922215 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.460488332 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492205195 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.455440646 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.470892284 seconds)
  done (took 21.024850714 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416899453 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.424222096 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.417398328 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424406881 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.42633606 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.961859365 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.437071783 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.425421988 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.426506644 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.43494527 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.415150368 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.243824224 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.423661536 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.431782999 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.413563037 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.424186787 seconds)
  done (took 33.463701758 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.768382004 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.730656556 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.146040581 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.456632423 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.47250302 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.426705432 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.875274983 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.438021551 seconds)
  done (took 28.623865322 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426933097 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433001779 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.427621645 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.427535484 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.428252691 seconds)
  done (took 8.452210643 seconds)
done (took 1269.69367351 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.420655094 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.424922455 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.421113248 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.423284027 seconds)
  done (took 6.999225008 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.401351734 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.401210057 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.401612752 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.413584159 seconds)
  done (took 9.926741386 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.278473071 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.160155441 seconds)
  done (took 5.746860107 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.418019961 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170817176 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.164511196 seconds)
  done (took 8.06146662 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726967272 seconds)
  done (took 3.036538475 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.84347068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.786717823 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.609314024 seconds)
  done (took 6.550927865 seconds)
done (took 41.630286979 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.431643038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.759438265 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.576074593 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415947735 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.577472121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.576094823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.193521785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.428688868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422441905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42165532 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417285196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.578912394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.182007633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.761105678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.181790552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.762564203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.57893218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42004112 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417310171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425271498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.194077539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417228913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.447777936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.417639358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.579660033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.564994629 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422288362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.762512179 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417062443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426575581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.565675111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.42401835 seconds)
  done (took 84.477409001 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.438731124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417815373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.443196197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.440200591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431444997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421840678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.451408519 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417253995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.438119083 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.451922616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417994946 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.434412402 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.437034714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417168755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.420190686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.440971958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418999213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421582889 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.440679255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420074365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.43536712 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.419785023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.434363041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418766325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423535094 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.424028915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.442508082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418993242 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419982383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.423279711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.422326793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.457453215 seconds)
  done (took 79.073782258 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.432123964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418768858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.423307704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.442918774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431030331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.443129238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.423386221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421212318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419775703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420042488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419738314 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.433990087 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.422602687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.427029096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.421077381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.439076745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420149227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.441909743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420711509 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.438716697 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.419506409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421086949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.457150872 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420479819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431425544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.425227519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.444934594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.438227761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.436085554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.428200166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.426147323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.442416506 seconds)
  done (took 79.064962864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.703410415 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.429949422 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430827061 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.415912894 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430833826 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.428466936 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422576525 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.705733002 seconds)
  done (took 15.282714033 seconds)
done (took 259.208688885 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.422865547 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.443309077 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.638876599 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.450081004 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.422512148 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.452924219 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452804021 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.674196043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.451949456 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.675903304 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.45656006 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.450045944 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.42349692 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.453646618 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.728592979 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.585069377 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.427888168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.424224386 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.801609591 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.444471948 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.715925566 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.446736289 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.72653126 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.427582708 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.426447872 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.425536173 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.453986904 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.408560324 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.471332419 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.816330569 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.445542977 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.415591003 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.523617246 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.548410225 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.66084746 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.600855003 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.425275063 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.523259476 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662198063 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.426288861 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.453191272 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.262686793 seconds)
  done (took 85.864985966 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.432240776 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.548161126 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.432465748 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.432835418 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.432490595 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.549975637 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.526458587 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.43258863 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.434967704 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.433226966 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.432709342 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.433737053 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.433473908 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.432933429 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.433703088 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.434264378 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.433334442 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.446321103 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.44708517 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.475527018 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.55419089 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.462815342 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.424355894 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.434716026 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.534645998 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.571654798 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.434915223 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.424619684 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.47453461 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.436378229 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.439620795 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.477171738 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.435651271 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.43657743 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.55131429 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.532913608 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.446887544 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.431339585 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.546521861 seconds)
  done (took 58.429567332 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.435800782 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.703738301 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.926626069 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.444055749 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436928715 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.440986895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.531557265 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.438435258 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.441738549 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.441923167 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.620577463 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.440480446 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475982114 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.960336688 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.4408927 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.437632981 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439008751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440014327 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.71500142 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448486156 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.555485876 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440201189 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.533303812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.4496967 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.466425148 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440244105 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.444983072 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.021941882 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.44229148 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.622485417 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.432367636 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.550984249 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.976192109 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.943946858 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.447027009 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445396177 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441166206 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.629850309 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442312011 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440037568 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.533765033 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.441577805 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.9432119 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.135710243 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.461826632 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439665139 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.050477341 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.6272271 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.738452034 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450123795 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.972932836 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.444185477 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.442012661 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441198046 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.737779079 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449812315 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.440007853 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.060977686 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.466422729 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533466039 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.444081764 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441253948 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.720891108 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442819095 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.709600252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.443305419 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.450724834 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.466035935 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.943374009 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445925602 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.161053022 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.463450843 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.441569052 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.622988768 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.706990612 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.086050905 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.44530833 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.724730022 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.991160352 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.535481558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.447573018 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.011937942 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.538009385 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.446739962 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445547743 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445026675 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.444055296 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.492360429 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.533335604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.090084704 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.154618733 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.095772276 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.560164413 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.455972522 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.444780477 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.065395113 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463447576 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.443237953 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.940440875 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.165754249 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.465451303 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.450402306 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.169002462 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.467787923 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.540660871 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453099846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.951172508 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.446829049 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.496610086 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.483048082 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451040585 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.471376905 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.537071661 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.448811691 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443790953 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.136715555 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.654150102 seconds)
  done (took 191.400275451 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.454611785 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.436897314 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.447745999 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.437970165 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.437092592 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.445711742 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.436836855 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.437258057 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.444528233 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.438427538 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.43962311 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.438317708 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.440162156 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.442975486 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.451899339 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.446974502 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.439056596 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.438420628 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.440667367 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.440705034 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.438563267 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.461117578 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.439162669 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.440883946 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.440767047 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.438044211 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.445620758 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.44172326 seconds)
  done (took 65.711516756 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446407337 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.121680773 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.449862496 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.603764548 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.472809793 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.444141834 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.603213026 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.513785299 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.448768069 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.443515691 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.444047293 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.808933871 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.447351134 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.063757313 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.68147671 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.602113732 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.064460809 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468300645 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.444947243 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.446037029 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.606202161 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458658444 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.810635979 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.12383221 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.449664308 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.124196585 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43573345 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448641034 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446724094 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.125666412 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.44762474 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.810638864 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.540183402 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.518827534 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.127588874 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.06968016 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.087469177 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.63330197 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.452964376 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447527613 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.445817963 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434655868 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.131705205 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.451521719 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.449626453 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.122472503 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.471698355 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.451114119 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441414789 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.449035033 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.520844936 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.524416171 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.817612685 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.212607323 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.542847159 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.449233781 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.618228006 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.76893803 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453192256 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071411507 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436975224 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.183609701 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462213465 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437444604 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.45054572 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.440866456 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.631917013 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.617483003 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.077735804 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.474319627 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072838594 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.656020625 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.452052407 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.448754605 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.452385088 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.159964414 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078607425 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.659073092 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.623405383 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.693607992 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.44004427 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.450941097 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438219094 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.549201626 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.453800131 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.135046447 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.094910001 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.473518504 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452572234 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452581598 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.453664533 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.669563871 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.138243088 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.545073286 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.067236778 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.841082129 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.821120132 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454711267 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.522933442 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471974308 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.891730093 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.454779628 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.522884282 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.820905324 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.823345279 seconds)
  done (took 175.297740412 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.735747916 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.471836356 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.555190229 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.623572804 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.127423031 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.102177118 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.454364358 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.593776033 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57765973 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.742314585 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.449824844 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.558230971 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.698922517 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.546262377 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.211023502 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.53243116 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.555584969 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.621321548 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.616154779 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.449506046 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170989911 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.810132458 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.669324635 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.475554535 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.594258612 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.38551475 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.118497046 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.005664301 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.648520367 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.46315874 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.006395818 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.464970319 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.466977203 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.211893364 seconds)
  done (took 68.052321652 seconds)
done (took 646.070615704 seconds)
SAVING RESULT...
DONE!
