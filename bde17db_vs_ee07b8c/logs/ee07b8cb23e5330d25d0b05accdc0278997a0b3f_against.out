cset: moving following pidspec: 15272
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.993802586 seconds)
loading group "string"... done (took 0.575960637 seconds)
loading group "linalg"... done (took 9.320885711 seconds)
loading group "parallel"... done (took 0.178810836 seconds)
loading group "find"... done (took 1.398544305 seconds)
loading group "tuple"... done (took 2.278361721 seconds)
loading group "dates"... done (took 1.433505725 seconds)
loading group "micro"... done (took 0.239956305 seconds)
loading group "io"... done (took 0.653594281 seconds)
loading group "scalar"... done (took 45.498297377 seconds)
loading group "sparse"... done (took 14.222468881 seconds)
loading group "broadcast"... done (took 1.209760508 seconds)
loading group "union"... done (took 16.431074834 seconds)
loading group "simd"... done (took 5.299234612 seconds)
loading group "random"... done (took 10.910430218 seconds)
loading group "problem"... done (took 2.335168147 seconds)
loading group "array"... done (took 27.353262857 seconds)
loading group "misc"... done (took 1.274988082 seconds)
loading group "sort"... done (took 4.014315279 seconds)
loading group "collection"... done (took 24.42577648 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.743011587 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155656404 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175578867 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.224862702 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238721812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159685506 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.18626806 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.632823523 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.139862911 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.259544863 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.16938043 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.694196559 seconds)
done (took 6.522712148 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.291942322 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08945247 seconds)
    (2/2) benchmarking "String"...
    done (took 0.155048218 seconds)
  done (took 0.908651362 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090777689 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.220810742 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.1235746 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.137746224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.13883497 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121841989 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.137548567 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.138423583 seconds)
  done (took 1.684562588 seconds)
done (took 3.646957045 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.964329878 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.901353855 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.583740681 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.151699474 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.193176725 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.16828395 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.391321443 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.180133221 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128490311 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.13749631 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.21026357 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.377709684 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.589619846 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.083147971 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.119531498 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.145212514 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.100464322 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.727390092 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.099995121 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130731075 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.659145312 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.137054242 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.134652061 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141873284 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.231795376 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138282665 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.203966813 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.136430605 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685971605 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.121198484 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209159235 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.1191482 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.185132098 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.301796656 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.101391198 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.126483746 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.695949863 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.21389091 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.134637392 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.113187515 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.699805375 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.101527929 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.233035528 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14082767 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.136271105 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.210369671 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.123401765 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.114604288 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.123905811 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.108539522 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.179393639 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.485299747 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.123340173 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.165498812 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111907357 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.724275715 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.117592924 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.175353719 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141857426 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.124272841 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.117123991 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.119204091 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.188245049 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.122889576 seconds)
  done (took 21.781176474 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146019616 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170414438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.110957637 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.165087057 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.172023974 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096783063 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.119177518 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09483853 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.154051551 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.221077636 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.168064412 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174299715 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091878617 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.113129513 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.123420253 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.278187851 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.143963421 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.129769511 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.114356657 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111931834 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.165029377 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116241073 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.132380231 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.133542885 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.192843481 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220644516 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.127273937 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.141245179 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.113264048 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.125642486 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.160814298 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.189510951 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09327908 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.11114279 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.2178731 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122650522 seconds)
  done (took 5.941436601 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244737701 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119048101 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.268229016 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.234523892 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.186624787 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.215907855 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.143432664 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.317731541 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.137507247 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.270069502 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.203629486 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145894912 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11583531 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113144274 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097784276 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094443582 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.162384772 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165182787 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217968855 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154909838 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129512396 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098473445 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.401829726 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12328367 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100685814 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127325209 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088679742 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.242701851 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106251029 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.60763549 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118037813 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.137303337 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150363338 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214456622 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154629822 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136273274 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.171221823 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124787117 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102484302 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.270787615 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134788551 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098884295 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.113078171 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13075523 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153818698 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.157097463 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.120715982 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125552382 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.293961202 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.102452457 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148244073 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.352356084 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.225271084 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.119127438 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.118220563 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.424484943 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118783688 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128810949 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.117419476 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.364647813 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166874561 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.119236734 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096808072 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126555626 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096403079 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.421495551 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138514299 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.921282995 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099024746 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.210158656 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122421641 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.131882993 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104478087 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124390422 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125131635 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.11750627 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096285784 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.11674937 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097185988 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105370357 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.140730504 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121190572 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095295853 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183021342 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.130374386 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.140215654 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14294261 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107143544 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09827852 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150067787 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113939152 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101977022 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.178696932 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12827285 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118659708 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120916966 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.158969143 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099859476 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.239517478 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.115527724 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130160591 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.121391334 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14930013 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.150917166 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098039516 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121604794 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100963763 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.113018713 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098985103 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.182344226 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101096629 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.115525642 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.105338566 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.13708022 seconds)
  done (took 27.565904962 seconds)
done (took 55.953282813 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.467753154 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.144972881 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.143818869 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.143581395 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.142674776 seconds)
  done (took 1.792192143 seconds)
done (took 2.506791305 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.43335359 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.260191223 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122733205 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.248822896 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109171214 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.25888717 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.218099818 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124651418 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.277948621 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102552004 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.24556538 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103903785 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.127174945 seconds)
  done (took 3.382553628 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.112970195 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.144067838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097392589 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112682766 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110466879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112433104 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128615705 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.141553603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127569489 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102908246 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.110446927 seconds)
  done (took 2.011904329 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109188332 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11689129 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.114889826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108344032 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10932261 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107462339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124841929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120446504 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126790277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104633323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107852625 seconds)
  done (took 1.962638891 seconds)
done (took 8.062191526 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.263284511 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.208851918 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.123262358 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.197593282 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.41143045 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.233453472 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.670505842 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139800691 seconds)
  done (took 13.204395207 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.133501153 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115326503 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098177345 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.138135168 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100355093 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.116410676 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100288127 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11815022 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098885416 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.118249861 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10152974 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099236566 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11786568 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099312319 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.117868782 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09767603 seconds)
  done (took 2.553432842 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140288393 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140117138 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.125476692 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.11360494 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.122673653 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102857756 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.125594245 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105580924 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.119184475 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.119381056 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115926414 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.129633445 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111885799 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.118892968 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107104002 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.133376343 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102280999 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.125876684 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108802482 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.125389653 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.131659584 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105588231 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.129603882 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112500272 seconds)
  done (took 3.711401044 seconds)
done (took 20.18258853 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.209095239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104352566 seconds)
  done (took 1.028465473 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.12194588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.140930791 seconds)
  done (took 0.986657558 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.132910261 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.112937498 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.163078066 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119524894 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.115567646 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098172968 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.15799258 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.117979796 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099610223 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.117637793 seconds)
  done (took 1.957943331 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.102596808 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103552711 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125890027 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139647508 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11241437 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.118100164 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104114629 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.121305788 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105392652 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.115621898 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.110625497 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.143297751 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.125393399 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129137146 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.124273892 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.125259187 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113436166 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.122629487 seconds)
  done (took 2.867701616 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.097314671 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09869579 seconds)
  done (took 0.921373397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.101972045 seconds)
    (2/7) benchmarking "second"...
    done (took 0.112737245 seconds)
    (3/7) benchmarking "month"...
    done (took 0.101779365 seconds)
    (4/7) benchmarking "year"...
    done (took 0.118112529 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096590584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.113778542 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097956419 seconds)
  done (took 1.468838147 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.611646648 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.277939308 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.411154398 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.142359969 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.182848713 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.443356132 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.184146995 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.13801052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.138233325 seconds)
  done (took 3.304402332 seconds)
done (took 13.258094543 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.109622564 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.16084473 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.627739804 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133873241 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093984956 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.177980579 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.33996876 seconds)
done (took 2.369319944 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405970236 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144162149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.101795743 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095885022 seconds)
  done (took 1.473292281 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.096741431 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106320111 seconds)
  done (took 0.933410877 seconds)
done (took 3.137635754 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094391902 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094382462 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.110387842 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.269448074 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093738174 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.091465456 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.112464374 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094304226 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.115373897 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.094470736 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.095040124 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113341796 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095750802 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110252113 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093275287 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09530323 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113486439 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093095194 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110051475 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094290853 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092910837 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113521586 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092890226 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.111962082 seconds)
  done (took 3.366866111 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.122520074 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.11515331 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103598111 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.123121517 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102890682 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.122780404 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103358636 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.116071796 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.103802433 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.117725035 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102089085 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.119721362 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099211971 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.120097721 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099819674 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.121674588 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.122359919 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098755702 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099286803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.121021929 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.121505645 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097738846 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.120162391 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104663692 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.119535285 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102497484 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.117974799 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098681096 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121927439 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.102774945 seconds)
  done (took 4.074684168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.106872977 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090782735 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.111782096 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10729988 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.109445993 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096459982 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.11079817 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092659103 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09417687 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.11238227 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095980856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.112419142 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094312825 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113483263 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096150886 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10225185 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.140908254 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.094425914 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.112415864 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093106173 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.119839207 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093481506 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.11540707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093985809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093033881 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.112024347 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094032811 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.112194751 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095374281 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093589759 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11931193 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102276739 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.111753668 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.112875666 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.121819593 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093203916 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.125081753 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093249145 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.113974657 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095244349 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093780693 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.112589334 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094518273 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.128345116 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097677713 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095688875 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.11341704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097063538 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.113931532 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099945282 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.112604922 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094805516 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097003258 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.114673076 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100794813 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.112111388 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095316582 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.111489665 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096143261 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094386834 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.113027087 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093966731 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.121922702 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.095879541 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.14804041 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109282589 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.113053293 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097681217 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.117755394 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.107854653 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.115536958 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.120408814 seconds)
  done (took 8.368830029 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099934694 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124130196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095715763 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095933674 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111881458 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094297668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123520115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095653695 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116325077 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115985047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114488103 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096946827 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116253689 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100057673 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113443032 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098548089 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126350198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093652353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095343081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119667319 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096303055 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.122390399 seconds)
  done (took 3.110163902 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.292669583 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122942659 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.178035402 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1169569 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.142023679 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.135035775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102623015 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123513044 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103191123 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.128719749 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110699435 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122625217 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.143279292 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110482284 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128905715 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109810415 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122079384 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12866775 seconds)
  done (took 3.163615732 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.114348921 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.115406416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125098603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.11556476 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098366445 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.120438798 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108651124 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.136723892 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100934209 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.117496733 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112709718 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12000919 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101581271 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11777361 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102343151 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.117866178 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101898846 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117275792 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113126918 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125517234 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106997535 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.131112429 seconds)
  done (took 3.264379979 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117499428 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11708439 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125166485 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123400919 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092550417 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118514309 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109330112 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.117703026 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110647478 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.119609169 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099088167 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.115203488 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109459369 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117337438 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108754129 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117739351 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100866946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117831592 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100871504 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.111977144 seconds)
  done (took 2.995426452 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.149497192 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135165351 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117694273 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.150965022 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135220881 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117976858 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.149238131 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118200035 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136328811 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137758412 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.135779301 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133934241 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132435994 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145045318 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1165572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149964618 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151187921 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131687692 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.136725495 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117837746 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156736798 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136037831 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132234152 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.137854856 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119373522 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137369388 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118300937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.144409973 seconds)
  done (took 4.528177235 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096428445 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095628395 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.113477388 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.093921545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.113607625 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09492895 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094466 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114115433 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097268075 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112876788 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09820525 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097669301 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115989606 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098225278 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117353308 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09869477 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096991676 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.114251042 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094906099 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114140302 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098055342 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115456858 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098260409 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094649252 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113859324 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097569717 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11357799 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094207435 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097063077 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113095557 seconds)
  done (took 3.857030234 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10958213 seconds)
    (2/2) benchmarking "in"...
    done (took 0.123433151 seconds)
  done (took 0.980960868 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095850745 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135448841 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094090855 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10080651 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.126518051 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099526959 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.132220725 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.127273616 seconds)
  done (took 1.660682795 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.127319482 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.142473422 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.107604227 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.135623227 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.121600429 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.140230258 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.20901797 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104882726 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.126320455 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099681936 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.143298168 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100993358 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.131118015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108931286 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.13017216 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118626087 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112435018 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110126174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123876768 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100368896 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105913748 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142532683 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133647768 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109977369 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.123606887 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.117368904 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.140407812 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114382696 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.126186712 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.116769847 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.126124508 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090481334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.122109416 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104460421 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.11327036 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.118389085 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.142447587 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105188056 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.127905629 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103488403 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128521164 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09235297 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.131463845 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106249515 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.132072835 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103391304 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121880479 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093174274 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09963944 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.12101544 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092871909 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122161762 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091481872 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131864386 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.112210611 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145627261 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099612495 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.122686981 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103763612 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.119648076 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105863402 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.123030455 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111968841 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.119689277 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111507808 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.129507495 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109415875 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.11130041 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090088831 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.11707068 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114060512 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149473495 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115911339 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.123179299 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10347568 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113770558 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105178501 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123557711 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109454794 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.134414223 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102656079 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126706146 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110903928 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120924303 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102847129 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.12388743 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099538359 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.121859729 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099740716 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.153035781 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100014589 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.115347424 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100851264 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.134653783 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103876083 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.121482311 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099680539 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.129813614 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091438383 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105057472 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.124446685 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107543506 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.137988913 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122812829 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105799038 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.129666269 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.1112849 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.125867888 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103806301 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094055279 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126790833 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100228341 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.129851891 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091044621 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.126677778 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10548908 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.12452995 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.116141574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.117688686 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103266262 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130615425 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116705631 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11850899 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093885725 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.124841012 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103005385 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.128064578 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.118157165 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120504319 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092568699 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094275578 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.133460804 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104010541 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.129589401 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105297769 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.125368618 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091649565 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114665907 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104703318 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.137215773 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102512655 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.12594534 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114321278 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.125758031 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100941871 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.13243957 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102645767 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.117459546 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112729626 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.125104392 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.092333572 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128726346 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103601195 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.118856095 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104426851 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127948794 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105922231 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.122584179 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100348154 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.123022302 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104998458 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.117121603 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106858697 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10030926 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.137769589 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.122663103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093650138 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094996221 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.126464915 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099523575 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.120938355 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099724771 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.124764938 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104763773 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.124623204 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102464569 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.121120339 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120887722 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.132394248 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105385587 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.128494276 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11403059 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.120883588 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107503903 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.120542795 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105315245 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.122288523 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113537755 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.126952931 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105177036 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103821714 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.113798378 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107340706 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.131181952 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099049323 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114415545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098839956 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120725271 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.116420999 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.121471147 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104419782 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11779691 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108974324 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127113903 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104695905 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.12046287 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098821792 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103899494 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.12953135 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105377036 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125052684 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115270988 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125857834 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093407909 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.130126744 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100046864 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.129708773 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093831738 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.120756749 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098890706 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.124196145 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103711295 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.124525788 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095090806 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115396109 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134672923 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105457928 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.119459487 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103291379 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139327994 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101386324 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.128592459 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104413894 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128805378 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147390742 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099037791 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.123932284 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.118794519 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.123487231 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.091228749 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110809333 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.122087927 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098574442 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.123382822 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100556977 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.127758991 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107578115 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.128349957 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092060415 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.123401079 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101358774 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098933554 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.113584269 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115266575 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.125797179 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106610319 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.139135815 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124502867 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105069692 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107474097 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122048039 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104805688 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123937297 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106622012 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.124690855 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102369673 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.11892376 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10785625 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.119374333 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096170011 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.1231785 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103992314 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.124798163 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107568746 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119523319 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114242898 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.123612715 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104412844 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.166199668 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100594691 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.119858068 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106860772 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.129499775 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104196817 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.126145558 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094645458 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.13357846 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104881894 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135537677 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104497774 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.116217873 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109167059 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.12736334 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108772863 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10705192 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.126583467 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102922462 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.122402262 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105521052 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139833129 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099418733 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.135879644 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108390975 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12760745 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105529015 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.130715363 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105148513 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.122901109 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109801799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.128506676 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108151175 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.125714727 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108020835 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.129045553 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104806536 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.124332579 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106032947 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.126726146 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106715498 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.111445804 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100279354 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099925966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.125158343 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111588439 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.124492169 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102560118 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123308267 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106522379 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.123411882 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095129663 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.130971004 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108670177 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.124725487 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120520188 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11862173 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106303151 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141988863 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091893535 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.120671879 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096805704 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101198363 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.135182145 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105133996 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.134554589 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106376551 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.119207807 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095086272 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.124274911 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101778144 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.11403965 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096866781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.129326156 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102385093 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103330537 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.125713621 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107763802 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124604633 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111612724 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121381502 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107804912 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.127388543 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098166037 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.12287185 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099996876 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.128878068 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108304866 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.123855195 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099071875 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106819547 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.130308476 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108337184 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.124674314 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104062849 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.134752512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104675676 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.12686136 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110608831 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114447796 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106860133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.126809871 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107237405 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.123622146 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112332214 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130936077 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110851522 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.136527999 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.107583807 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131922758 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107812953 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099760109 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.128323719 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106162486 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.127647144 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103111392 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.130387638 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119209741 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120904453 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.11154497 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13055402 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105517869 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.133319857 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110699886 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.132370771 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114377402 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.129612614 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110586414 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.134500381 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109352478 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.131366764 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110875601 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.126175474 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116968653 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103066332 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.140617416 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.130453708 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106381355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104936947 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.122203367 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103352001 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.126216666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103067833 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.138163545 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105944034 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.123065745 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100806795 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120682814 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.111282383 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.13504304 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117613215 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.130877219 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11127344 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117422319 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100115947 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129909725 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105911351 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107222456 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.133430042 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114652419 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.13203167 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105230548 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.12687821 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117785482 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.135502089 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114391096 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.126341366 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11350364 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.131035818 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11012976 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.127085649 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107767193 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.130763783 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113666453 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.129075831 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10447181 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144117181 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114569948 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.129881327 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103931877 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.131698216 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105392232 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.118413911 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.109531991 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.130462021 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117028447 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.130893406 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108219202 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.148327429 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100882066 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.127922347 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115480971 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.127571231 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.122155208 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118954933 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112186384 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130646313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111838559 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09728288 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.126118834 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103937902 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.129709761 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102565781 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118717731 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127891396 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.1387952 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111229435 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127307276 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105039804 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118657598 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098560807 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.124199794 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111096704 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107134549 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.1446179 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.122885124 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101060275 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095764339 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.129233868 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109721922 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.132950728 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098314178 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119412258 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105568634 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.132244863 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121596176 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124131381 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10395498 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130609951 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107936767 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099497221 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.135582848 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100071334 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1329765 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.147808696 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110864839 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.133913536 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118755045 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.139642212 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108420279 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096873083 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.129522703 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110393018 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.130607199 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106171211 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.128439306 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15148093 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109034479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.119139124 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104157942 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107159192 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.122101079 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118833339 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127590559 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105084826 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.129351142 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104311695 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129791189 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116003097 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131850678 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108602212 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.130415201 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102463196 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.128425207 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102176455 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.127883619 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108326397 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.129887339 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104720146 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.130547839 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101159837 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143404296 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118808274 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.127809801 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096672766 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.123152994 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102325195 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094833754 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.128104277 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099200577 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.124219796 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102152463 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.123799185 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109859067 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.128232759 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109001832 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125891997 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104789146 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092964287 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.132813272 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105908746 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.130062455 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095743948 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.125934903 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106254078 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.134419564 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111617281 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124058899 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106948971 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.125572146 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11095313 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.1152264 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109643594 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124529004 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104353238 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.123030959 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106914546 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110442649 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.135471444 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111952679 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.136005497 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110172245 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.133035193 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108798849 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119151258 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098171733 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.134902218 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099655399 seconds)
  done (took 70.112280523 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.189419743 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104002853 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094910328 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120848092 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.157376708 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101001572 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11861024 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102383075 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101087776 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.141837742 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116001318 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097381521 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.148629436 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.157319061 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13075361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.137634053 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095713878 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11903763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094858192 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121399165 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.148244928 seconds)
  done (took 3.399365652 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.127563419 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.138319747 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.137703904 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125117189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129327604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117974354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.137711179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137697918 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143859933 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112306689 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.143823679 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137353613 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112705664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.130972297 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112178497 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135072111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.143651938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110593675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.140225915 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.137681729 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117321209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.138506547 seconds)
  done (took 3.662797948 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.110940009 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10378696 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.132740402 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.098148872 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.126067451 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097703841 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.134735683 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103090668 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.136946806 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.106534439 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.12391377 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.106242111 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111008731 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118657926 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102783213 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.119676778 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112709402 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.123757485 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106915328 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115976926 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.149796646 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.117249008 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099296284 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.125963311 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115017556 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.128546486 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104263904 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.125661493 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103184175 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106168322 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.125028617 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.114305236 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.138642659 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.106970807 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.129134538 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10682571 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.130362878 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100135189 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104084042 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.135196236 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098721027 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.129518497 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117203855 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121317518 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100292033 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.132122907 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104463721 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.1204258 seconds)
  done (took 6.382006439 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134868246 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170536596 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.125885306 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.167803975 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.143851813 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117545444 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.127339433 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.166632794 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099282127 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124793721 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127826495 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.147182328 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122154491 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109981928 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124671979 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101834204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.126844029 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103116284 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.137701889 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10773364 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.13804899 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113252513 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.150355198 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.145927426 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109774451 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121179129 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09977047 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.129132336 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.140534569 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113995459 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.132893926 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131551713 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125259477 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.130432838 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104288801 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.131555061 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.152183351 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10842202 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130454498 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103889133 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.131101835 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114341861 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.135287395 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131244883 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.13149641 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.131657285 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103824572 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121620226 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127286677 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.131378394 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120994952 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.150261269 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.1315176 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103562609 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.130630093 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.143625075 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103613677 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120099959 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107157543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1399833 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099142784 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.135613838 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.144514045 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105478773 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.138939574 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126500642 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.134443251 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.134891992 seconds)
  done (took 9.599551104 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12461297 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.150272891 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128692558 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.150622128 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132891522 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113747582 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.133128153 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114264753 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136315531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.143049649 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113885729 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200396695 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123992134 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120485166 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133313775 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113350246 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13403388 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113211776 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.135033736 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134063255 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113864923 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.147512106 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112199765 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.148051576 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.153827027 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103483185 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135002253 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132006231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127966182 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133079536 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153276383 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113528879 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134069428 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.147998168 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134161249 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.133871955 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100214213 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134449141 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112773444 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134145097 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102877939 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.149000759 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133368517 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104678662 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136265784 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113564155 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.149861372 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.153890399 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.141308091 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122324138 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.133692062 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147685084 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113977851 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.132748291 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127898266 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.158996449 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148224393 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.147845767 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113683612 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.149277787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14728354 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.158550806 seconds)
  done (took 9.05037185 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101882503 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100489195 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118635753 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098600432 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122963371 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098873764 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09987817 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121155457 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100819202 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.124729864 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101441246 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097094141 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118028063 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101398027 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12004163 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098641239 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096304938 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119449748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103535062 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119191539 seconds)
  done (took 2.975742185 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112058473 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.148200395 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.103204689 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132719569 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105758647 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13393856 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10467139 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128031883 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103326272 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127632231 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119870078 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141452266 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122054585 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113937651 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.138720549 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112839618 seconds)
  done (took 2.761989912 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.128674548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.14187697 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.153170523 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108930496 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.098265899 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.13498728 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100732978 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.120603733 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096893342 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.135653274 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109519927 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.13628808 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102556641 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.122771561 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103058351 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.131538184 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098489792 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130328379 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102901005 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.152162859 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109243177 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.128713307 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103415763 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.131103129 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10654688 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132581842 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111393456 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.121915633 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101464955 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.125298439 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106045897 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134852664 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098885628 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.131529269 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100928694 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122988955 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102767247 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12255174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109696088 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.121994332 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101008373 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125277386 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102703309 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.123152482 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098195732 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102625427 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118719769 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109612825 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124943801 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105466057 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122493178 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111680065 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130903557 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115878775 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.135581004 seconds)
  done (took 7.280967755 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120714096 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126830432 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.110658983 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.118835892 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107151052 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.13132063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108028003 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104338596 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126275642 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098164132 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125641055 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107763908 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126786198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107276569 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.127027696 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107246086 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.118746917 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104734299 seconds)
  done (took 2.898726361 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110702495 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101513025 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.132987573 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.101626887 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.122474056 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103865877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117723004 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100101315 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119014549 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102703814 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121632752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10470844 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099268801 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125378429 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102259964 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123275815 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.104405482 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121181713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102363633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117351117 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105000547 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098445241 seconds)
  done (took 3.261403775 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.128182966 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.165463261 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.122983662 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.177022117 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.130597591 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.110271066 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.142533601 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11108934 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.151193931 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10819337 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.128766554 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109457224 seconds)
  done (took 2.409979782 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13659685 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172881839 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100490161 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128434478 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119733591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133072735 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10998687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132757808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145215536 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151806234 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112363085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145223591 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12499734 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147335005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13926281 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119089799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132083963 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130256239 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104759933 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158587518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110285453 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1469129 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130820012 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110189429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131624971 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145309539 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126548632 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15195336 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131794281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127332573 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140118354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109464407 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14670301 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152633301 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105617045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146838504 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130485108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137457239 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141208971 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146604604 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104810198 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141275137 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144699717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120560059 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147485059 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130996289 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120614565 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132811883 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111766717 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172011689 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142057473 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145102724 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120134548 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14760623 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145580201 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17135039 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131810936 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147508311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139227118 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152760387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125068719 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140960179 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146062955 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131336395 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141383096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145733338 seconds)
  done (took 9.744208498 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157754657 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122716693 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111183584 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153942082 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146145277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109942582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132057871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129791445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111605936 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124578122 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192382717 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111086602 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145763281 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144876932 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111645833 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131415768 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112018891 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146155739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104717146 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170457298 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132757173 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145090919 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126610567 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146680173 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151589166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140400226 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111719589 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131231514 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111982218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131163119 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120938307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131621945 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144973015 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10185132 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147165582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110607735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132419929 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140284109 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11206757 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141798593 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146063283 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139042049 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132754727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11046207 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15381127 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13249958 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110582226 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126354118 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111268088 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125830943 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152679177 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13168197 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154956642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146865546 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131061118 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111866564 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131757062 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11203261 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131959247 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120267292 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147653373 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1317951 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172401891 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112784592 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133661593 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125946932 seconds)
  done (took 9.55028434 seconds)
done (took 183.191905866 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.127144314 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.168764542 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.120820462 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.194936372 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.102669565 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.16108898 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139372803 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.142205167 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103115341 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101203605 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.125490296 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108358996 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.193642026 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103061479 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.123534455 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108311676 seconds)
  done (took 2.950990103 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.222200487 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.338750731 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131484221 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.13281718 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112535117 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.130150682 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.111323357 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.1329257 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105154073 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.145892905 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107695441 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.129385662 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124465255 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.129908094 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104827019 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.129340474 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123809534 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.129388461 seconds)
  done (took 3.378790969 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.146080145 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.176957971 seconds)
  done (took 1.158931044 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.149683957 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.229988398 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.360175364 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.177602682 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.162596733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.160651438 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.199097936 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128466953 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.234909529 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.158992619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.160105077 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11270423 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.166175238 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.142366056 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119049109 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.132841434 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146697475 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137130284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112846121 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.136863078 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141400189 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.137453506 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.142190505 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115989497 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.222801496 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.159143709 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114363225 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.137638921 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114696352 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.135279045 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.143629847 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140387255 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.157752432 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.223380943 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.142058312 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.219676187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.146504182 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113264135 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.135560248 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113373619 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.140523871 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.140322629 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135628909 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132757597 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115485439 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.147791119 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115091566 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.136018379 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126112115 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.149828746 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.146860556 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.124062739 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.237599272 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128483218 seconds)
  done (took 9.095658223 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.969408156 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.182893228 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109608827 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.147900306 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148287491 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153570527 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.212486276 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136044312 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.31658278 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.961721963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.153857216 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124395979 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.313842295 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.303057874 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.22614682 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420837241 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.821778424 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.149617349 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142325554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.195107492 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143091223 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169970884 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137171371 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.498106694 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.135732493 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110006542 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141429017 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.145288939 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.213991838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108471269 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.136256633 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.237833085 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.31523082 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271985632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111562102 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.129966533 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107635534 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.221041255 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.343910046 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28890406 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.21099503 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103411888 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.129934994 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126341702 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.161169968 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105215086 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.240967632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.22629875 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.228248415 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.136667509 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122923936 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145978634 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146431264 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.214555243 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103946797 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.417307451 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.423692986 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106535938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144748849 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.152591459 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.314322297 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12930359 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302805087 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146032945 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.283992348 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106620931 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880003099 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.218785058 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.129464533 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119704557 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.142331796 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115891546 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148871972 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.206675494 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.440416783 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.152440196 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114932943 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130851631 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.293780863 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130413241 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108317334 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.21687618 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135952715 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120822157 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151742833 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148861791 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.22594901 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.302867883 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1507749 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122002842 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.139043439 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146825078 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.113328336 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.263576113 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.303383568 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.209461716 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.262960864 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150660303 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.21645597 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.240596448 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124111335 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.222657659 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.145037411 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.152476829 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126000876 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.296426323 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.182749701 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109198987 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.139776815 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141037895 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.181673441 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1125601 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142275205 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.221167121 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.547980486 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.217121579 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.126573364 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112022894 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145123641 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.214979776 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142030978 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.311065666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146714317 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.222156604 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.14321655 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.106019644 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.144939921 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.219431904 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.149849088 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123084125 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149970908 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122145987 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.326159921 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.27395522 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.153500699 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306380178 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198550275 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.145594652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.228986631 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147682646 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.223913076 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.147988343 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125102516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136402146 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877642954 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128201002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.143674219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11571902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.239922585 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130275229 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108473638 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.129075914 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106386534 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.872267024 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111224621 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103952007 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.132669316 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.142280487 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122017071 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140856013 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11611642 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.213488122 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.316460657 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.146902577 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.141929082 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109351112 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.213511044 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.135213961 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.109933319 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.130950698 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.11091872 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.143518232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116117667 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108820461 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248227672 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.211530898 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.302036589 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584168348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130770851 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108367444 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.314102591 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10763119 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.388498453 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144861557 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.284059857 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.245124929 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105851638 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.417778672 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.223522386 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.238288475 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.133583028 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.225881105 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.104731409 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142797471 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.215152189 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129464853 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121701379 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.211258713 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.156214493 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150283271 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.207368507 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.131626259 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280279503 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.12622166 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.223703223 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113478093 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147917019 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.390086194 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109563636 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15760496 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.215208128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136840564 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110426751 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.862059124 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.131827598 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123776097 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.144021521 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.309267073 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.218040798 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143992872 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121005233 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.147786745 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.220130706 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.262554392 seconds)
  done (took 53.348823786 seconds)
done (took 70.768246991 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.411877465 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.349025433 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.380678546 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.259315696 seconds)
  done (took 2.354330501 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.227208518 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.195649576 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.157279487 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.129951589 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.191727023 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.108960741 seconds)
  done (took 1.871932248 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.660066147 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.579800131 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.444059851 seconds)
  done (took 2.548466932 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.309542674 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.335097236 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.382237776 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.584198915 seconds)
  done (took 2.594437171 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.257658335 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129964668 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.144397524 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.163444988 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.190922749 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.280649117 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.173363643 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.207287372 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.137733535 seconds)
  done (took 2.603189268 seconds)
done (took 12.837684025 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.296766954 seconds)
    (2/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.279948783 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.291976053 seconds)
    (4/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.327694513 seconds)
    (5/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.193860111 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.174285323 seconds)
    (7/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.126750328 seconds)
    (8/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.24152847 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.140835556 seconds)
    (10/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121792931 seconds)
    (11/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140493916 seconds)
    (12/286) benchmarking ("sort", Int8, false)...
    done (took 0.259339115 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.190914203 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.271931798 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.112567179 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.245591036 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.149356581 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.268480173 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117524094 seconds)
    (20/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.235936899 seconds)
    (21/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.224633236 seconds)
    (22/286) benchmarking ("sort", BigInt, true)...
    done (took 0.293049131 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.116226746 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.163854262 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.261136149 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.317662483 seconds)
    (27/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.216068618 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.192666003 seconds)
    (29/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.224579585 seconds)
    (30/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.091884653 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.130776538 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116199704 seconds)
    (33/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.156220482 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.263633225 seconds)
    (35/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.252694125 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.21877751 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124187488 seconds)
    (38/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.150320773 seconds)
    (39/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.250465281 seconds)
    (40/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.270601734 seconds)
    (41/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.257787644 seconds)
    (42/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.215104669 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.138161858 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090081071 seconds)
    (45/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.137109686 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115538338 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.140309768 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124377036 seconds)
    (49/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.226777828 seconds)
    (50/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.116884257 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.09847791 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.181790202 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.145238365 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.138754807 seconds)
    (55/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.281156179 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111140192 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.253530842 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.175805165 seconds)
    (59/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.191683232 seconds)
    (60/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116164385 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.141314533 seconds)
    (62/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.244106127 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.127456264 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.140069509 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139723948 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.175313879 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.24013345 seconds)
    (68/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.151940148 seconds)
    (69/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.139074895 seconds)
    (70/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.18143193 seconds)
    (71/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.238910272 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092226657 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225562579 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124791225 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.140645285 seconds)
    (76/286) benchmarking ("sort", BigInt, false)...
    done (took 0.283302406 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.163254405 seconds)
    (78/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.127015813 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.173980406 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112865534 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.130289629 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.217868093 seconds)
    (83/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.092005041 seconds)
    (84/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.141927263 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107700799 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.147595427 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.11723638 seconds)
    (88/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.176066247 seconds)
    (89/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125833964 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.140444767 seconds)
    (91/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123491407 seconds)
    (92/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.237700308 seconds)
    (93/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13901033 seconds)
    (94/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.115928687 seconds)
    (95/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.229882638 seconds)
    (96/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121140397 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.147222127 seconds)
    (98/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.225664864 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.231363983 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.115123411 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.196919152 seconds)
    (102/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.149183975 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.130082984 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.221294648 seconds)
    (105/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.198158222 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.138963442 seconds)
    (107/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113616275 seconds)
    (108/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.18288525 seconds)
    (109/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.149411271 seconds)
    (110/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.121203902 seconds)
    (111/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.150929139 seconds)
    (112/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.136632934 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148671178 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092259512 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.112399323 seconds)
    (116/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193230983 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.116236286 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114225749 seconds)
    (119/286) benchmarking ("sort", Float64, false)...
    done (took 0.205274057 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116900937 seconds)
    (121/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.202168242 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13694909 seconds)
    (123/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139820795 seconds)
    (124/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13731952 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107511355 seconds)
    (126/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.136109175 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.150997152 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.17402822 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.142458911 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.232222997 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.123056825 seconds)
    (132/286) benchmarking ("sort", Float64, true)...
    done (took 0.273149511 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148895652 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09627271 seconds)
    (135/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.143254265 seconds)
    (136/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.132149821 seconds)
    (137/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.134879461 seconds)
    (138/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.289378008 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114131182 seconds)
    (140/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.140770779 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.154670333 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149481622 seconds)
    (143/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.129468384 seconds)
    (144/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.175096119 seconds)
    (145/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.14857891 seconds)
    (146/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11259586 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.145495268 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092773975 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.139983925 seconds)
    (150/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114761404 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.176335828 seconds)
    (152/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.170991172 seconds)
    (153/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.215895237 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150579579 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109224361 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.140651864 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.216020697 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.143323576 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115846647 seconds)
    (160/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.215917219 seconds)
    (161/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.139822373 seconds)
    (162/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.091110167 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.151583049 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123785439 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.140481288 seconds)
    (166/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.112263242 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.174310289 seconds)
    (168/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11777148 seconds)
    (169/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.112952675 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117558458 seconds)
    (171/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.114061544 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.12568775 seconds)
    (173/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.093595093 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.14225283 seconds)
    (175/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11095109 seconds)
    (176/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.116108712 seconds)
    (177/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122110333 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.22389249 seconds)
    (179/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.098041868 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.140809956 seconds)
    (181/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122086296 seconds)
    (182/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.118178447 seconds)
    (183/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114313662 seconds)
    (184/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.231455109 seconds)
    (185/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.139670735 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12444304 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.161403084 seconds)
    (188/286) benchmarking ("sort", Float32, false)...
    done (took 0.18354436 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.144487207 seconds)
    (190/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.173857197 seconds)
    (191/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.092439791 seconds)
    (192/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092902021 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.26575286 seconds)
    (194/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.138590949 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.113421583 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.145851607 seconds)
    (197/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092275093 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.14255471 seconds)
    (199/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112923075 seconds)
    (200/286) benchmarking ("sort", Int8, true)...
    done (took 0.265337512 seconds)
    (201/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.190929382 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093914271 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.117695114 seconds)
    (204/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090930061 seconds)
    (205/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113994627 seconds)
    (206/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116694669 seconds)
    (207/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.105934697 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.152093313 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148100919 seconds)
    (210/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092333243 seconds)
    (211/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090174023 seconds)
    (212/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.122051329 seconds)
    (213/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092747083 seconds)
    (214/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091272221 seconds)
    (215/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.117998295 seconds)
    (216/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094739723 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.137036438 seconds)
    (218/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.157457126 seconds)
    (219/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.119332727 seconds)
    (220/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.106321921 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.126781872 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.113386023 seconds)
    (223/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.153824345 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.113506242 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.114934731 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109284879 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.128365746 seconds)
    (228/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.117123699 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.170402924 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093201909 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107610759 seconds)
    (232/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.139421659 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109143043 seconds)
    (234/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.118223785 seconds)
    (235/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.116733101 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.118496822 seconds)
    (237/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09389953 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.137895676 seconds)
    (239/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167428192 seconds)
    (240/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.131400522 seconds)
    (241/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.093728796 seconds)
    (242/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.139105161 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120056953 seconds)
    (244/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.139684301 seconds)
    (245/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.121673255 seconds)
    (246/286) benchmarking ("sort", Float32, true)...
    done (took 0.27511753 seconds)
    (247/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.135898938 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118118172 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.141698075 seconds)
    (250/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.1096443 seconds)
    (251/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09292439 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.13679853 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.118201963 seconds)
    (254/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.119283034 seconds)
    (255/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093044876 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.148454918 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117242294 seconds)
    (258/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.114390472 seconds)
    (259/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093755857 seconds)
    (260/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150684009 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129663512 seconds)
    (262/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13983291 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.117150047 seconds)
    (264/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09236202 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.1447296 seconds)
    (266/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.092532807 seconds)
    (267/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.115979642 seconds)
    (268/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.093984186 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.142503792 seconds)
    (270/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098868991 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.093832289 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.136314603 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108078889 seconds)
    (274/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.135825941 seconds)
    (275/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13028502 seconds)
    (276/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.118410386 seconds)
    (277/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128375742 seconds)
    (278/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.117047742 seconds)
    (279/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118160456 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.139519816 seconds)
    (281/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.094883971 seconds)
    (282/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.124857467 seconds)
    (283/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.094730602 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.114945656 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.119560878 seconds)
    (286/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121035529 seconds)
  done (took 44.399466261 seconds)
done (took 45.273218484 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.125677627 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180686373 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.122651876 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.170851504 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126271383 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.15447418 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.143249006 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124749917 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.149296971 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12858654 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.153515298 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.103615563 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.15014121 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123148284 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.148548442 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.144537248 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.152573792 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.118124511 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.136686861 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114966057 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.138455332 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115897175 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.142858907 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103818344 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.146173888 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120449202 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.142260123 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122956807 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.140164414 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110100355 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136958295 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117492181 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.134342613 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124952782 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.139163482 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113483043 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.146020624 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119264736 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.139518439 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.116396646 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116919854 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.14037517 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115457346 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.142570101 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113579692 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.1380101 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.112849054 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.151045405 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.168881133 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113986299 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116786886 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.146347978 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.125497408 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.141528449 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111646369 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.140536383 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115760066 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.169979471 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.113790158 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138050107 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116990549 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.142054202 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113623268 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.136859665 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113274639 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.144675669 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121815784 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.13716251 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.121445261 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.139064667 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.125865158 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.137622211 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11220633 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.133343864 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120702361 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.143488931 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107026025 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.113229037 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.140574201 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11589344 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137621075 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10886522 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.140893279 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114267645 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.133605617 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10412549 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.134863111 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115392925 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138062048 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.113667603 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.138103005 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.116136234 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11700142 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.146981722 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.138580418 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117304553 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.138665566 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116497432 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.141262316 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111876701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106833055 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134077996 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116696616 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.133726189 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.114870797 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.150104253 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111478007 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.138794405 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.114588088 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.137931101 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129816246 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.145520718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115770872 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135539983 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109350668 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.142727057 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112096625 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.134304493 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111282817 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.139664569 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11490062 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.138990015 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110026729 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.142046125 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126004594 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107344672 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.137631835 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109376291 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.140192771 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.116689578 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.140909161 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110271288 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.136382573 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106558054 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.133810016 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111005232 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142830214 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109709449 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.112529038 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139620555 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.113606507 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.140608013 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113625632 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.140704689 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111768819 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.128158608 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111994481 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133655489 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117664199 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.13961873 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114544255 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.130606039 seconds)
done (took 20.47518367 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.125554561 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.225044657 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.178122782 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.158385449 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.193195104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.169381866 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.153738309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.160445304 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.150613211 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.181349114 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.15758291 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.167967489 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182591453 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.128206854 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.168861885 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.145938725 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122305846 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.164813283 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.189691776 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148739626 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.177403921 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.15157347 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150982175 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.17984775 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119504972 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.189544264 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.153997617 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123187913 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.152080673 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131715607 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.167787522 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.154488383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129613215 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.163256102 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12839243 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.144372518 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.168532165 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116200953 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.149031536 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125818019 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1622194 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136099802 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.144323918 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.162242017 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123159076 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.15388979 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121950343 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145768623 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123048897 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139215833 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131633624 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.174734156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.147094395 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128553031 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.152405169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123103599 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.153304118 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.153296291 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129243085 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.152210298 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125743954 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.153359942 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132653798 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.172990099 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.147941819 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128332341 seconds)
  done (took 10.883430779 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.144044899 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.184044282 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128473089 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.154376424 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.153951551 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108459998 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.131726777 seconds)
  done (took 1.936143777 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.110195702 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.170598957 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.152861732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.177876727 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.136020593 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.18223165 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158174467 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.110257726 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166554721 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.125224953 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168004119 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.204677659 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111458969 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.152551379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.15519877 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.134928589 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.180768667 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110169357 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145596831 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153100646 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143139581 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137670421 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.156782508 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111388254 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.161148016 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112326556 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.220845114 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151531758 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109331309 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.146886209 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119746764 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.234029798 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.163483976 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124232083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132300905 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.172813088 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.138003743 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.145574991 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.142207314 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.143197403 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.137509827 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145672332 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121832551 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146291896 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120916175 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.151848218 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128662515 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.148505164 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118068684 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169321741 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.151505822 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137866308 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137898989 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116674577 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.151172849 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119616885 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.154087001 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119196262 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.170062292 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121569405 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.169552269 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.170775624 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138717603 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.170359349 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13567923 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.163072881 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.161931637 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119071867 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146860095 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122732674 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.170338899 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117807804 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.151932332 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127606167 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148356777 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.142502873 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.167884109 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116889801 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.15109724 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116973641 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140756843 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111528327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.154414434 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11471943 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139291581 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136225863 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.154471205 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119188168 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.142579797 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.168121603 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118532915 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.154015169 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12886894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141482437 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135578421 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.173593877 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.152923111 seconds)
  done (took 14.968263085 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114781198 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111477065 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.144432772 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112678256 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.137771285 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112306235 seconds)
  done (took 1.672526759 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.152938495 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.141916946 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.132760792 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.146096985 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.189097572 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138422591 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.164026714 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12633143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161263028 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130387482 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.16352496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.167294595 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.15181906 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.147034537 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137655783 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.149781854 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.138171919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140929556 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130810138 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140556548 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131226863 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147980284 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115342505 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.165519148 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.14372691 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122652055 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.144863741 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131076118 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15494584 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12593807 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.146068356 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12008706 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.14824471 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125435767 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.164303055 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.149013015 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115317999 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.147476774 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122660827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144245824 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.141129467 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142519393 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131037654 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14659794 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12570408 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.147639616 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12185429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.145169495 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.138290216 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.146412017 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12211944 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.148614953 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119825529 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147937334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122533161 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150950809 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.145928961 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140313005 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148567312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122767723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142832852 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120320634 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.151986645 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119649313 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144521194 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121896858 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.148459999 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114808096 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141367829 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.1209936 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147002149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11797628 seconds)
  done (took 11.009555961 seconds)
done (took 41.389001081 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.737620624 seconds)
  done (took 1.673918545 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.012493481 seconds)
  done (took 1.952117113 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.043178426 seconds)
  done (took 19.013043266 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.663893818 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.81866342 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.274989486 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.200831914 seconds)
  done (took 3.898959146 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.035117647 seconds)
  done (took 1.994389151 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.372189647 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.290368122 seconds)
  done (took 1.60961022 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.889030543 seconds)
  done (took 1.84400951 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.757222391 seconds)
  done (took 2.706376192 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.451029327 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.230557129 seconds)
  done (took 1.643915242 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.67764609 seconds)
  done (took 1.630279681 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.707517785 seconds)
  done (took 16.665204754 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.292028544 seconds)
  done (took 1.261698259 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.351415752 seconds)
  done (took 1.307802752 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.774632604 seconds)
  done (took 4.73236099 seconds)
done (took 62.88135266 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124754409 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1270779 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.155018925 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123042818 seconds)
  done (took 1.484383678 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.13363009 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.149941431 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.129910779 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147679576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133276391 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.150563119 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120210914 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.155676645 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122524623 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.151539897 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124691294 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.149455045 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125831575 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.146459369 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118182516 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.15257379 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128038282 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.149762907 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122159941 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.15213072 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119463669 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.152760633 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.152487946 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123296605 seconds)
  done (took 4.278115857 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.124159066 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117205398 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.145477033 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116887348 seconds)
  done (took 1.470963408 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130747282 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.167159488 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.141767495 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.156084497 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142315197 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.167264316 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116892502 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.143076068 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119324097 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.156988133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118635682 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.169546663 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.167133728 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.112271899 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1580608 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108832506 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.140475473 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142958191 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.156924997 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133653819 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141574423 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129291421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150677663 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13615245 seconds)
  done (took 4.376982099 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.225343724 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.163810812 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.173190524 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.126841976 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.209655531 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.175229424 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.115492485 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.175744152 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.118135361 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.170055127 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.121248386 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.208922119 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.170052675 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121959093 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.146166815 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155310984 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.143514279 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.174748407 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.119448755 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.160225785 seconds)
  done (took 4.145899113 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12844266 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116865442 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.137394836 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116785317 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.150819864 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119522565 seconds)
  done (took 1.742495332 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112494031 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.108516621 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.13709116 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.110132104 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.140309837 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109982955 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.107448758 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.136294779 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.109416029 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.13622487 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.109524642 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.107943733 seconds)
  done (took 2.398437166 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.532685703 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11705616 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.156750644 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.117407246 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.169519114 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.140213946 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134681151 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.140378703 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.21176789 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.128840576 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160815559 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.208472885 seconds)
  done (took 3.193326866 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277234217 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122245339 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.352967792 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.49814594 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198361325 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214624744 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.382611651 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215088834 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.245620641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170565902 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254962515 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197374372 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189027251 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225479694 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150490943 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.222184491 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22870267 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271831833 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188467067 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274262499 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21837698 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21618182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239163635 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190456419 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173659662 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210141122 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11907361 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157299488 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230234792 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221391288 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243858289 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194864984 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14821654 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300053416 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304375432 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252271278 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.473967056 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144073726 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.256535319 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.240009051 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31641699 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177844216 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274458551 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195407214 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135059507 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238616137 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20455555 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.234635336 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161853997 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175088605 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263451268 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228068046 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.245320073 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174597446 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400204417 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184230429 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.18029845 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240184508 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26405242 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253752071 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216300266 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149438185 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274978135 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235062589 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239166591 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.180612527 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.221941834 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156051821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228903747 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258159829 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239647684 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215869294 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.31453516 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141841889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215261564 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220375665 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193556505 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233171665 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204424347 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119316897 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187396622 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172222859 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130256829 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.221820039 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121285195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307387838 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144252266 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.330324041 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31499262 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174746006 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214394302 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215510092 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222552419 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182908432 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.1466119 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15974016 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.207317827 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199218969 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166391175 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173471489 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183754244 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.155785371 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190785377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122142891 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203735594 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137246121 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218292052 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212778879 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.160013029 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212924447 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187058859 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.177857231 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225505517 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245686216 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168306305 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163860943 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25915961 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200710873 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141601254 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228531538 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.247186372 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.213131714 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173120945 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229281185 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263692748 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17958443 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252657971 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182184052 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141162337 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.20024622 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206783327 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206946654 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.167671153 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162310967 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.198307938 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255885334 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154968729 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140755768 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228304522 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155966433 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12986933 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183002398 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1721834 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147035825 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.19234605 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.172557413 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20135264 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174959692 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197158135 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211718049 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187735176 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277143769 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167123364 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.203912794 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156725382 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.143259602 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.237345556 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245753527 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133402759 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271622964 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.222025006 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293223208 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213951023 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160737321 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239116788 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131525952 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.145982283 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222592223 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210401729 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212592051 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.240860265 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290487313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.220177725 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.197683302 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186487269 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225070192 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.227470037 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216957432 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.182131156 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186247891 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253974753 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120734871 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14999423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.129829238 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175251309 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134931408 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163525633 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251131458 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216679972 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.308321529 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209998127 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147482299 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238965795 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153815604 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215675315 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.229094212 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143294326 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.275588451 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237474602 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21868347 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153491172 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232591202 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.145826344 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124329495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165667564 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21671395 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133849869 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168927372 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190841249 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240594495 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23112662 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188478794 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306311727 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217304384 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.281153028 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123386981 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.195362436 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21937166 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17240513 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.227725326 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165902331 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.208630552 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233017248 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161124885 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265954262 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210126499 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224897276 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.309236594 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.197450534 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133920661 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189494513 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216526012 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180464711 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177670168 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184668895 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169016193 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167930632 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.17256386 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155989072 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253579683 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175590921 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254307117 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.198417315 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244941359 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124242537 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190207538 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206717039 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179250803 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116276202 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223001957 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25407248 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189345603 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204008244 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227638074 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159738474 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.417682178 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254106513 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251251929 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173618838 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181283694 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179087965 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205305882 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215132007 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238708618 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187676555 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239364961 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202490053 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.150182173 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170466714 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183588454 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162884336 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.201500027 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.169408602 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.198229786 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147229734 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288990226 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154471797 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203150795 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21977768 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.178124597 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.194738337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147865613 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269635022 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202551074 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236446686 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.196916172 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.212419003 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243947283 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120931106 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159999843 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.153215488 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209986549 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165002052 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207260561 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.300326637 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302168403 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205100519 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21836729 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169593421 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122398604 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206954627 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189234477 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321145063 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159898124 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168452338 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251864657 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.185598867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130808952 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210925391 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403774205 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178218703 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228364711 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119520323 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.364769098 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152552856 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161377395 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175155328 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223184331 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164115314 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.222028811 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190914597 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187440299 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204405739 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171821476 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27972356 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315392665 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231150481 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235944987 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155024804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206896335 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214590147 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229946752 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18336753 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.179731881 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174311647 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241468662 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.271106917 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136000749 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211949488 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210625073 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207412631 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251329304 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162521155 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244093013 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132316903 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223425525 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18035432 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12322411 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198489973 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.294642266 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139194995 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22729668 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201860733 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162451298 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124836625 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199136058 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20036294 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184772467 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13027263 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247561316 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.156378351 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214769673 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231904278 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130774993 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196679515 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18343351 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132885089 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181382918 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187229689 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140251093 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.205137755 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244803408 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.161953078 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229785146 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235679781 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214774604 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207225841 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152416618 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.698703097 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126935703 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237233782 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183686866 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255898551 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186135835 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219837464 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208874178 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158181035 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225050658 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193094932 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.259696533 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223026089 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206344639 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131935885 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187804372 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183971459 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133770128 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192278264 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211097211 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172479464 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138691301 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.201899247 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186216355 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.18388401 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141581913 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24568628 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183143698 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253900267 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240379039 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174054526 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218834655 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252150054 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129697402 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.211276436 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224273519 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178964406 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19922723 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129511002 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167368857 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233403169 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121682095 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208529499 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206960313 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212187666 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212831985 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14059732 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208201433 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183742958 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207739074 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123956464 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.197223429 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201521741 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160683127 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12797561 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198494645 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21228337 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.202025431 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125953959 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.205912483 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239591437 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122454424 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167290296 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380647987 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197774963 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258795909 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.197147147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167487682 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147961071 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201804991 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194966296 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203873572 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128764732 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162119666 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.16339423 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191906783 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.196926759 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202061326 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247285094 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207753595 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244963428 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163781951 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278395625 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17186339 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199122103 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136782436 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158157519 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175193659 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138936928 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187859594 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.307884232 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233696886 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163560056 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.185346307 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157883218 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125751196 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161309971 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175415051 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19715719 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200748308 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185688168 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115918381 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184334616 seconds)
  done (took 98.911442216 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188810413 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17009801 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.178663764 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224001795 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201487478 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28051568 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23700477 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258084834 seconds)
  done (took 2.791951084 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.130199585 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.168085725 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.177356413 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.128123086 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.141967683 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.458045163 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.170042626 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.155393763 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.152026214 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.19686284 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115024632 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.772218369 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125229435 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.155952904 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.138034726 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138563574 seconds)
  done (took 4.370057693 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.838964304 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.608391755 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.227541212 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.307724119 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.29382171 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.213825953 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.817437582 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.252360899 seconds)
  done (took 13.610629158 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151590147 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.169071058 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.174425925 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.199030276 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152534583 seconds)
  done (took 1.907125101 seconds)
done (took 145.635888745 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120739215 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124799516 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.152993218 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.124403422 seconds)
  done (took 1.569648655 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.132239475 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.104560135 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.13329662 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.099214894 seconds)
  done (took 1.530301661 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.537253962 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.130809519 seconds)
  done (took 1.767177344 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15082686 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.162403041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.135560363 seconds)
  done (took 1.509313626 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13068776 seconds)
  done (took 1.194106156 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123006146 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12490259 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.168887694 seconds)
  done (took 1.480153768 seconds)
done (took 10.112291691 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.135572954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.468810464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411295724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.168302011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727346725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.434363421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.082179508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169101779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202592866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141388682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136702279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.72193541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035456667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.392411822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018480735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.483966097 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698391503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146064596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123888578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143123568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.024117231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140261503 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116363852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142959185 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.695748075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421447069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145049735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.509064503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112908118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121153037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.436669402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112779304 seconds)
  done (took 17.871398953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116716846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.21885503 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124559704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145294112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120050958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144176024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12894536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164338175 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.221094622 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114035118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166006929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112503529 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148160562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115186887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167309849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114306742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144822787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12048689 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150733725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117619651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13675547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14220336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115923514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145937584 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113439447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158248212 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11431486 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.16328679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112383269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.151435666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120765042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142618907 seconds)
  done (took 5.538911052 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.170374738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.232585988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.153536888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153549727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.210358222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115469389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.247930807 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.203081258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.224955849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144145203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138100119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11279221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.189788018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142760458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142061155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.141983939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118985123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146377263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125302016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143697518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139270651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141704301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118691183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116639871 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1456452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130902093 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145357362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162875661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115067756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122404743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.152949038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115061684 seconds)
  done (took 5.930390971 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125370512 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.155914897 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137049692 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164590751 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117713748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.152621477 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.126694648 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117060129 seconds)
  done (took 2.169257957 seconds)
done (took 32.571121419 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133119763 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122733678 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.15997125 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132757753 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.153812038 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.142035545 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14361597 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.126072217 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.159522456 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123482778 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.162064978 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115681899 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.116054277 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.142287308 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129503553 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.148433193 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132031118 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.15516591 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.140883645 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.16117203 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.115468366 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.155983862 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124429864 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.170271591 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140526543 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.17067167 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.132698011 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.153966032 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114815027 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143729227 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133817084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.174425426 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117471713 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.162658217 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120458488 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14860518 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115722362 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115726095 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160947545 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.127209338 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150735345 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128029524 seconds)
  done (took 6.93833267 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.150961689 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.194474722 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.115332149 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.141630265 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.112940238 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.191423002 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.188724338 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.112390819 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.111609787 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.175019808 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.180655842 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.114303999 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.111383448 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.141328899 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.112101492 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.14138094 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.144562025 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.174302811 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.151743595 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.178850324 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.203165664 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.15376461 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.184102217 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.178600547 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.166083806 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.190997279 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.174663985 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.159954241 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.178916403 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.112585415 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.181602988 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.151319075 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.143844223 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.11161083 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.192497713 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.191356916 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.150082843 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.192907829 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.182351235 seconds)
  done (took 7.22540946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.12754509 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131604479 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.171582596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.225635321 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164483298 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159804154 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.127716831 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.170008009 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135158348 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.146335065 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125748504 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185527136 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134802442 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.155218772 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122215298 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.163322584 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.141232337 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.149230211 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122461599 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167796028 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136760188 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.163316063 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131036653 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15664794 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116335531 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162841152 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121321233 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.161264184 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122019495 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.153610615 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123693802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.15009145 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126662948 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128999942 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.151384042 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.130213595 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.176515016 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155029072 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127861708 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.187685766 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132136335 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.152234702 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146595513 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.19291419 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117865326 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.155448831 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122862767 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155637432 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115404652 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.16586062 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131455528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117681873 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.172739338 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.145365426 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114305422 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13302009 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.149952553 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118807962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.155005526 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123818865 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.17192338 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121565581 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161069828 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118088703 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1524768 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116625359 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143382816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12928078 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171436536 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122272649 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.193221066 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11727103 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.155689179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125686591 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.152332437 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127241991 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114594473 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165622715 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126523802 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.153215164 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127366174 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149257818 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120594334 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.166597143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142206031 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159708859 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125526735 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154782809 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120391582 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.146198409 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133221366 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147431623 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119767699 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.164274264 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117931634 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.148057707 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125500108 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152748671 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114488258 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161111476 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125503143 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115004315 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156977588 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118163122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.151164228 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126529724 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.150640663 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117144498 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151947134 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125645813 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144006697 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122598162 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120264925 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.150391721 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133425636 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.154643197 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119483012 seconds)
  done (took 17.737702043 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.296908197 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.265441379 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249396041 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.373191028 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.179113117 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.151705383 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.261231513 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.210567053 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118018517 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.203050683 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.223177403 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.230296429 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.214502402 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.225089664 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.222851488 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115247454 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.176595202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.211221192 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.265012594 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.336180561 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.179242055 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.166458928 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.203841377 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.172632881 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.170564548 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.168804933 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145766631 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.176771767 seconds)
  done (took 7.008695288 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.140282227 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.197844727 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.125733075 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.184059967 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.180003938 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117655216 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.151809828 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116635184 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165572914 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140165434 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148618826 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126599994 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.154595749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127827639 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.145077626 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127676085 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.158001162 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.131285261 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.150137436 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.124751158 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.169726561 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13776045 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.154571009 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.126102387 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.171458374 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12623478 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.150150047 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.180290572 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.13133828 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.184324722 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.112530659 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.158459158 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133864428 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146449539 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.127419777 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.150136704 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.118478661 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.14757543 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.121061327 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.113092376 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.146710026 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.104243567 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.15741907 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137658393 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.156186642 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.120179631 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.154539581 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.122332675 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.153676859 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.112730436 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.149059653 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119274071 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.152433737 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.138920752 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.150594381 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.112659682 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.120863749 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.138722393 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128611009 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.150245547 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109962047 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.15604456 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109068485 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.154992039 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127923562 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139389155 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125903669 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.149203719 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123394483 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.155751999 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119946475 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134521431 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.146008695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.119828586 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163002743 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13425435 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.153206234 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126138822 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.159095969 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115591012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.13434919 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11536324 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.100105479 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.154105998 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.115852574 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156625147 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.11958169 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154863647 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.170037014 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.133109802 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.155508445 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.118575328 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.126349517 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.154430275 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113725104 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.155399849 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142231555 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.176353715 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.116426546 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.14538256 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.140629885 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.149303692 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.113369125 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.136897496 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130259885 seconds)
  done (took 15.755696294 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.177642811 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.221721879 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.148755701 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139772895 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.190178547 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.209737219 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.136309045 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125251046 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.147670465 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142321982 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.161127532 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.128184825 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.158475604 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135043905 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.210033717 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.15892968 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.11848919 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165948947 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126704368 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.224530368 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139448563 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.206603448 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.213953087 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163155401 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122936156 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.203194148 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.213671996 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.132915686 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.164395273 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.184664859 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.163450087 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.213086369 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.216428088 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12537398 seconds)
  done (took 6.800973603 seconds)
done (took 62.537548242 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.200432864 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425181996 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.174784208 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.176849197 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.227598509 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.203475167 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.179681846 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.370584294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.976782475 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.164616191 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.173191562 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.17599663 seconds)
done (took 27.544184416 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.218063343 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.335205792 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500777033 seconds)
  done (took 3.927981014 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.177589998 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.176607115 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42106502 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.185463346 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.17676695 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.194730473 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.185964245 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.196376717 seconds)
  done (took 15.62972223 seconds)
done (took 25.047833617 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.177308529 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.378167091 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.442820246 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.197656644 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.176598166 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.186487021 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.180636862 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.208494626 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.192837328 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.184165465 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.176494156 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.437904195 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.214857748 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.553087925 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.177737335 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.208568078 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.196394169 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.419091552 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.181991589 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.216232887 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.161413763 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.162153229 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.183177122 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.198590851 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.186900868 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.189635753 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.201136312 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.187177506 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.383283212 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.191866557 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.217028943 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.180191526 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.19733937 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.196073762 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294377063 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.200966256 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.377677188 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.190338858 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.16887139 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.194061986 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.376207761 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.590116652 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.18134904 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.187920566 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.197115415 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.237099211 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.165326347 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.915788563 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.183025101 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.180913427 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.239457343 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.560915478 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.191783956 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.195691418 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.185733535 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.407573745 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.210576456 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.201525217 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.202301802 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.187830353 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.180679496 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.183084662 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.182416381 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.19347659 seconds)
  done (took 142.002912419 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.180829166 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.186338478 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.184104265 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.20080092 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.185626642 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.188208242 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.183450678 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.183345805 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.184632305 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.21388588 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.187965471 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.185215918 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.19795101 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.142664394 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.183250775 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.189506152 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.19443811 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.187073476 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.201358768 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.184116121 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.186890675 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.188644236 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.20503686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.187435299 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.193769269 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.258266255 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.214635109 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.190280495 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.184451481 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.185457585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.188478514 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.189235326 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823661763 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038191104 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.196660349 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.217922708 seconds)
  done (took 79.492329801 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183644075 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.186243943 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183766353 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216591015 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.185514864 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779737484 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780772323 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.914870758 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.185318307 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.449438653 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.625363985 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457316797 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187872943 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279135038 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.202973134 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.187085272 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.202216201 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.212364695 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188146747 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184686614 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775965856 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201359477 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.359799333 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.363286597 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.204378477 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217478404 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.580871125 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184547231 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218083113 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523141006 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.238119639 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185605239 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588570279 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.619090571 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184969226 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30011562 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188851141 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217485154 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.187706537 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.470440008 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186105157 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.184711922 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.188861964 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189756507 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.869132475 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.187876656 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782908245 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190483327 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141236766 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.18938449 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186344055 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.102503688 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.930839554 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.194749305 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192098309 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.193568851 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187384089 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.18765734 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.222711101 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.034626445 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.287877117 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.192034908 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.193990232 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221389638 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19194381 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.406164553 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191655589 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.356706252 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.24569562 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303072096 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776396847 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189223112 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285324049 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308827088 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188422404 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.187128791 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189735635 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.185898125 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298794759 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186705385 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.592322981 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.366420732 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.20852564 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.611583528 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290723204 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188242382 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.612106849 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.188729473 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.18794448 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94266533 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283462446 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.185101939 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.186084209 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186398106 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.592260787 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775865473 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.441433124 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.190146125 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.344888806 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.18842503 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.599542394 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748070752 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876362763 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.190179595 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299014741 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.361787547 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204806845 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.18872906 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188136596 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.552362466 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191684958 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.246678437 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.188165923 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.58233382 seconds)
  done (took 365.620203365 seconds)
done (took 588.209705572 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.945195209 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.858416348 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.998135662 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.88346753 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.843954566 seconds)
  done (took 10.628385415 seconds)
done (took 11.72743986 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377207029 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.378868326 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248992852 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380314349 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22259968 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.393120241 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.361689332 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214520743 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.29222352 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.269572141 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294222379 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239955433 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222273808 seconds)
  done (took 17.996690797 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447915854 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.187375803 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268532217 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.436794341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227463484 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.447277724 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488475615 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.187633437 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335747491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.199524136 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.199877394 seconds)
  done (took 17.529571857 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.452372357 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.188951167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255053061 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.44367205 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2281917 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467270853 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48963234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.187771143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.378843117 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227823989 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200363553 seconds)
  done (took 17.6223548 seconds)
done (took 54.250157481 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.230772653 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.355047212 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.226098608 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.199955339 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.196532839 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.197549369 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202763388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207208911 seconds)
  done (took 10.919558399 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.192584266 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.190848853 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.192933009 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.19521207 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.195471267 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.192474303 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.1965322 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.195374541 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.193341381 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.194993475 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.195798687 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193896388 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.195757799 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.195212418 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.197539063 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.194409167 seconds)
  done (took 20.214091398 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195994417 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.192818879 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.192482712 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.192818666 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.193122149 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.193208559 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.193655755 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.192586519 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.192212388 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.192857357 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.194231469 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.191826106 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.192208606 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.193834543 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.192570825 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.192876998 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.193529703 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.194351662 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.198863613 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.193980364 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.193396128 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.194105718 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.193963378 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.1941003 seconds)
  done (took 29.752435333 seconds)
done (took 61.986282258 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.189580529 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.197009103 seconds)
  done (took 5.490806291 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.254201677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.25637791 seconds)
  done (took 3.617352799 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.197532221 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.196835598 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198633989 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.19776413 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.196929182 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.197422347 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.198435247 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.197574751 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.196548181 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.198298342 seconds)
  done (took 13.081145639 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.199062003 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.198040788 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.195753504 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.197284437 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.197876774 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.195150276 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.197571827 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.197864672 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.198504598 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.195295468 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.197842072 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.196311956 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.200319581 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.196971995 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.19901038 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.196177538 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196583208 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.197364694 seconds)
  done (took 22.657427623 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211565148 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.220144079 seconds)
  done (took 3.537120255 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.327226929 seconds)
    (2/7) benchmarking "second"...
    done (took 1.238182715 seconds)
    (3/7) benchmarking "month"...
    done (took 1.307023011 seconds)
    (4/7) benchmarking "year"...
    done (took 1.293949993 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.238128116 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.21741723 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.239583477 seconds)
  done (took 9.967723849 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.199829134 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384535857 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493419729 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.768711537 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.200540832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205073839 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.063541922 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.203611487 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.206715196 seconds)
  done (took 13.833586486 seconds)
done (took 73.288743462 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.195469626 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.221888851 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.202615165 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.211503578 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.537691137 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.21345065 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.199580892 seconds)
done (took 15.88996815 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.177068986 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.180363231 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.185124011 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.1974281 seconds)
  done (took 9.84933393 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210789213 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546096365 seconds)
  done (took 4.864780001 seconds)
done (took 15.822902948 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200917607 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.19986211 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.198672183 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.199528592 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.200861724 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.197801806 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.199781884 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.201509876 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.202179464 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.2036593 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.200698725 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201433217 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.203309722 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199735123 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198873028 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.201101587 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202183834 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.199133026 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.200568631 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199295056 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199843644 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201924649 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.199054977 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.199637358 seconds)
  done (took 29.921068773 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.203390149 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.200531885 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.202590291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.202903567 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.199969749 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.201748085 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.201892547 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.199946054 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.202460596 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.20486821 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199949732 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.199087974 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.202521976 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.199710915 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202188271 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.199531706 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20269732 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199995295 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202258437 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.199791582 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.201656896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199370564 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.200412614 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202871269 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.199179977 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199625667 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205013567 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.199494496 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20564578 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.199989604 seconds)
  done (took 37.151001795 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.207966118 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.210406898 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.202757407 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.20217948 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.202035301 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.203039724 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204588578 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.20407893 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.202958415 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.202763682 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.203048635 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.202533473 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.203180826 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.201960927 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.202734743 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.20269159 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.202842496 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.202949525 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.202502102 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.202258201 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.203795787 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203362688 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.203034643 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.202288077 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.201706243 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.202283034 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.202274246 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.202449569 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.203837668 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.203793669 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.203587808 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202915588 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.202735906 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.203499411 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.204140925 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.204927634 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.207091895 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.211593318 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.204092582 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202976086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.20374056 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.204658753 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.204834932 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.205016924 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.205628932 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.205652219 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.204153669 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.204754703 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.204292282 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.204291678 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.204193445 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.203754318 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.204921361 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.205739693 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.2036398 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.20383371 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.203180193 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.202327755 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.204360369 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.205059289 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.203148036 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.203651736 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.204343863 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.203332352 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.205513036 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.20379267 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.203727333 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.20358687 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.201834437 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.204229747 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.205629229 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.20439042 seconds)
  done (took 87.793038941 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.203760263 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201720968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200593196 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201302861 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201111079 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204161643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.200466152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203942669 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201466975 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204716335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203193039 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201522243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200241485 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20444524 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204482356 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.199995961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.203993833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200182155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.20222506 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.203183981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204650887 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201702974 seconds)
  done (took 27.56465022 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205839451 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205008582 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.200623526 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20435352 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.201208538 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.205987246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.204495485 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205617039 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20522072 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200123319 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201734399 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203821354 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202777837 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200693852 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202251991 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202897331 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204088021 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202192423 seconds)
  done (took 22.770109681 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.20143367 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.202442181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.204616693 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201969668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.201456648 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.205330287 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203743431 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204602945 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.205684738 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.202672192 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.206455283 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204385034 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206143048 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200729355 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205037598 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.20310517 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.205013626 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20193672 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205517813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203187709 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204230373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205997623 seconds)
  done (took 27.595241402 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207009274 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.20670254 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.203673214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205225905 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202643639 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.207999939 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.206626995 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.204285187 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.20756698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.20558443 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205281226 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207971049 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.206717638 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204582613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.206416067 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206290858 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.206979279 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203874697 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206212274 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.20342355 seconds)
  done (took 25.226774203 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21826374 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218019988 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217378448 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217422204 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215753212 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.21502773 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217537152 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215292962 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218381231 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.215973709 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216865774 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.21799016 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217033919 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216651552 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216368671 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216629763 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21683044 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215822377 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217749115 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217476073 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216449375 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216945551 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217081767 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216621432 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217362116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216292486 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217905987 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217327425 seconds)
  done (took 35.188306812 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207269877 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206852201 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.2041051 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.205323101 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204346011 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.20666607 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.205333049 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.204583924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.207726552 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205093157 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.209094987 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.207766107 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206901498 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207219635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207636126 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.208142551 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206883418 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.205939699 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205348963 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205145384 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.209021482 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209755617 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.208983076 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206233655 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205485311 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.208750556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205457353 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206578361 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209791573 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207117256 seconds)
  done (took 37.317239797 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255607583 seconds)
    (2/2) benchmarking "in"...
    done (took 1.253493364 seconds)
  done (took 3.623494683 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.206444079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209139538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.209742459 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207121571 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.207317178 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209344502 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.209874837 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206770836 seconds)
  done (took 10.780793137 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.211320028 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209279142 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.210644509 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.210555654 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.209782433 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.211074181 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216872689 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.23057952 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.211685161 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.212175822 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.694369225 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.218164614 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.211693394 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211213201 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209133296 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.213139473 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.211678995 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.210865857 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.212780376 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.211645124 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211571319 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21297295 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214100821 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.209663819 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.21320508 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.222333136 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215368524 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.21252707 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212242393 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.215940483 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211548854 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.209634537 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.211629274 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.210631278 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.21289192 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.211881387 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221992408 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233105648 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.21868086 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.212724492 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213971344 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.209040845 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.214345577 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.213613542 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214888591 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.213982099 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.214378171 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.211083505 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.213339501 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.217641908 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.217792861 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212705458 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.210521867 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216971001 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.214822997 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220532402 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.232954347 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.217658226 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.223635303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.225174404 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226579153 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238042541 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.216792481 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.214250833 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22415922 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.236944328 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221472763 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.228472001 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.210393288 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215600033 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222211943 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228351367 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240015148 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.214288466 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216456906 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.215817772 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21537026 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215745145 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223066776 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.237676119 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.215485189 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21551792 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.226786866 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238818826 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.215815694 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.215471278 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.217737298 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.217430821 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217989185 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227563129 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235702691 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.216565158 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.216807016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.217456586 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.216648701 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.217110982 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.215892574 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216423954 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.212332463 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.216323841 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216858575 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221387072 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.226121079 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216738386 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.218598356 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.224339795 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.216185406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.217447922 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.221921528 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.216787904 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216223926 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.219865368 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.222879181 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.214751958 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220813708 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.225251499 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.217325063 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.218623189 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.21577779 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.218263332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228017247 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.242804196 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.217989046 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.217536977 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.221717017 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.228947646 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216767861 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.220105062 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.217029813 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.215231759 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.215287881 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.219406406 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.218387101 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.218995499 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217474251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219549825 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.215455888 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.217767418 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.218688553 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.218997019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.219033966 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.218574796 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.219395065 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.219665275 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.218382454 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.220596928 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.223997006 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.218760297 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.219536827 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.219325464 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.216482004 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219054774 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.220111262 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.220062975 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.219885278 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218288072 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.218940147 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.220063995 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.220340635 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.219171015 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218483439 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.220117768 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225123476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.219812341 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.222735938 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.219821183 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.216515851 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.219212381 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.218922734 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.22057859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.219262398 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.219430078 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.223973579 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.227864679 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.220164671 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.220692343 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.223224044 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221263438 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221310769 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221886336 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225612958 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.22853573 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.221054875 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227869418 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.222305221 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.221387206 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.222018061 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.222329655 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.220686842 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220423519 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.224985263 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.229533575 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234109738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245510598 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.222912546 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22553592 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.223898954 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.226731183 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.226526051 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.2229737 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.222372435 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221904854 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222351264 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.221941771 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224646608 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.222844915 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.222032621 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.22267831 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.223334057 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.222720889 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224269704 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.225989347 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22446891 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.219935992 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.223450478 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223058612 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.224719305 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.22118642 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223270124 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.223454579 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.223833289 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.223688501 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.228313985 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.221708924 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225419556 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226019105 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.2239018 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.223007334 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.224394335 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225732259 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224669795 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.231298411 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243853661 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.225967331 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230768549 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.241396567 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.225116165 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.227865996 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.225270715 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.22150254 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.228728034 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.235162008 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.225872422 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.22631792 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225837762 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.226354702 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226991752 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.230338375 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.223070067 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.224995202 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.22745628 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.227584174 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.224211752 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.227581918 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229178091 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226967631 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228932531 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226854395 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.226704571 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228352734 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228163877 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22801736 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.2278639 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230574213 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235611628 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.23295076 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227518395 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229336983 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.229176281 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.232200668 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.227285987 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228491686 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228811447 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24006079 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252502658 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234775841 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.227593777 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.227684428 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231320336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.229609615 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.231995964 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22791756 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228516736 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.227634536 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.227756908 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.225361504 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.228458175 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229310941 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228356453 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.229223731 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234721754 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.228438387 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.228708359 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.22932145 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.229335623 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.228389535 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.227418977 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.228441335 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231262016 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230048826 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.228624572 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.228861668 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235774668 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24836633 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.230713143 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229367025 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229931045 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.229482696 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.230345005 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.230111744 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233889561 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.23883184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234402582 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.237452432 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233973301 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240377388 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.22967185 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233848585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238308779 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.228317504 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230057459 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229986335 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.231632262 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238098644 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.252835822 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233471165 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.23583279 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2323266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.232030631 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.230835301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231756548 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231643974 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.230963275 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239741472 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.253406059 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235428611 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232916901 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.227600003 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.232048969 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232588966 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.22983493 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234681483 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233179002 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233780357 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23315456 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.231723146 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.232487715 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.231874272 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.232551317 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.229085196 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.232774844 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239581315 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.253240231 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238005896 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.232512717 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.239960081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233633655 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240215907 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.253460159 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.233101669 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.233706386 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.233391313 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.234843166 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.233630532 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23383584 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.232770629 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.234183697 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.237473179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.233922894 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.234663923 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.233410508 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.233492944 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.233128847 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243912144 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257880949 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235346003 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23893234 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.231229389 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236423791 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.240153011 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.234097279 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234723374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237513213 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245937624 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243195862 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.235114472 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235371212 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236321177 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234101116 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.23519338 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.235366893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.235271478 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.234774708 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.236376404 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.235182933 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237497505 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23489916 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.235560016 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238957224 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.23788446 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.247954396 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.235342474 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.236334461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23601927 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.237381792 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.235236579 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.236796415 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237336075 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238268989 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236818944 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238291958 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244537546 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.244478214 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239204202 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.235550695 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.237649657 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.236572869 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237678556 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236683105 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.238203968 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238491199 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238507732 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.236819088 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.239063761 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.235507683 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238360892 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.237550831 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23781248 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241085716 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245037315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238714044 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.233745781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238169791 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237438537 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.237157916 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.238869077 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244422733 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24182264 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.250126171 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248591251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242039397 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.237266171 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24080801 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.24547459 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.237413507 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239350073 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.238605946 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239875186 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.239807931 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.242234666 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239640545 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.244557279 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.238443766 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.241423016 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247305373 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.261198654 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240251965 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.241319486 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.244896346 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.239587053 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.236073005 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240161022 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.239020348 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246978992 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.261075305 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24143372 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24227743 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240434743 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.242142313 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245750323 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240338297 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.240502106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.237733176 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.241927865 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240490129 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240981465 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238060944 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241818571 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.239883526 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244827022 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.247867967 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.238386543 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242539578 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241289166 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.240373586 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241373575 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242462707 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.240214088 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238396715 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.242306339 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241735003 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.241397646 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.243525667 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241659826 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.24359885 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243331005 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242736024 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246418946 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253647445 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.250131889 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.238802821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241706458 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.242440395 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245721089 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242935248 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242503204 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242810682 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243180936 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.242526639 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243047074 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243274463 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.246285375 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258630397 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264095844 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24347813 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.242809099 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245229098 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243457795 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241137748 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.243925918 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245235659 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.247874393 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25287067 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.244435033 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250860544 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262929442 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.24536761 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.249219904 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.248732742 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.251261276 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247036141 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244080498 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.244380554 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.249601414 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.260668621 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246142843 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255585846 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275694863 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.26529604 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245722961 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.244372044 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243912391 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244741409 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246862195 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.247152147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246234729 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247846518 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.246654585 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.247308137 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250963694 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247815557 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249453238 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.247818452 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.246019666 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.24918198 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.244530932 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.248236571 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.248098368 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.248619521 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249619564 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.248190065 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.248708647 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260680325 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.2741656 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.248639136 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.248441339 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.24417532 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.249989152 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.250861369 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259146193 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.255257408 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248294632 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.248009061 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.249476125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249071829 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.24792238 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247201313 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248238631 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248368313 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.24426086 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.260825245 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273789 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.252113835 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247202396 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249032492 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.249605364 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250682106 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249788414 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247466328 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.248538475 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.251220264 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253149454 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248596852 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.248467185 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253993991 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.258475364 seconds)
  done (took 735.824185162 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.247123808 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246317605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245987981 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246442261 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24626085 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246448742 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247426007 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247699205 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.247923707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247606903 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247929879 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24571174 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246691795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247517371 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248370151 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248217751 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247479914 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247578943 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248642959 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246569873 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247152752 seconds)
  done (took 27.341092104 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.251466571 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.247764546 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248166731 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251118801 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248077625 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251048688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248100819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25109654 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252502103 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248557094 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.251314045 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251363018 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.24841498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248473223 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248471579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252045223 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251267171 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249061458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.252383383 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249268518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251633499 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248822368 seconds)
  done (took 28.652376306 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.251240865 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.252543112 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.251841119 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.248769851 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.253830533 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.249997285 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.252717005 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.251703991 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252823262 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.252964887 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.252533919 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.25477605 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.260913719 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.257965168 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.254739442 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.253394013 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.253176597 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.252392803 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.253714167 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.250077359 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.257360233 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.250447675 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.250575888 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.251481338 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.252243806 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.254615177 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.253829128 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.254011287 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.254546711 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.258197496 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.254554718 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.254596682 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256439145 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.253937521 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.255098968 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.257938723 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.254969818 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.25190052 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.254105165 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263318253 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.27503282 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.256402574 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260028859 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.25508036 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.255119981 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.259797299 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.262537297 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.252175273 seconds)
  done (took 61.386689705 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.255585892 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.255283973 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.252767955 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.254361998 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.2559075 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.25535688 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.255185165 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25432896 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.252476712 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.251950251 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.25514676 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.253287378 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.252268185 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.258209659 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.255679024 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.253785426 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.252698655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254040088 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.253579588 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253078698 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.252345161 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.255742152 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.255889034 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.25380212 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.255657728 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.253873665 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.25312456 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255876012 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.254078345 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25370147 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.257076016 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25693857 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.256618658 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.25400274 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.253803323 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.257284211 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.2573602 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.254638201 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257114994 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.254837348 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.256963154 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.258442564 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.258427846 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.257573549 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254383635 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.253936232 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.25448951 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.255413378 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255302539 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.258127261 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.257824813 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.256694134 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257112765 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.25636253 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.258774248 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.258490192 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.255196842 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.254804975 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.260158634 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.255699531 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.256300983 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.25854102 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.256849425 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.259798343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.259419779 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.255611056 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.256564914 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.259074287 seconds)
  done (took 86.542802409 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258862978 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258900001 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260329588 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258726747 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259366262 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259529674 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258544377 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.25960561 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260385121 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.260110086 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260449279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260296846 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.260193273 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259933632 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260421397 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260867179 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260043224 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259656565 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259558085 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260622467 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259203767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260535058 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.261447572 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260135053 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259946308 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.260498278 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.261028398 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261598984 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259968933 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260864932 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261680822 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.260681621 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262642177 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260847613 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.261443751 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.260169667 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261905728 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260385266 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.261200218 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261202027 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.260928676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260895106 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26152676 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.261825454 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260945955 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262551504 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261613481 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.262690185 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260578923 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262542457 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.261693391 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262645615 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262256166 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262420911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.262285519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.262526643 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262517081 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.26247457 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261796024 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263357518 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263054425 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.262650548 seconds)
  done (took 79.340670511 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.263775051 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.262843879 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.260854749 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.261359313 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262809256 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262503775 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26408677 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.264030362 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264046692 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.264138283 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265192356 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26109058 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261855479 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264329817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.262101687 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262489256 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.262058264 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261662705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265370789 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.26294039 seconds)
  done (took 26.422804155 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.261660626 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264312961 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.261922746 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261462886 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.265017533 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.262692615 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264599084 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264141808 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261563892 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264185549 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.265831342 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.264964271 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261922576 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263294473 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265213433 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261537247 seconds)
  done (took 21.379121027 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.262754539 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.266558517 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.265148488 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.265737318 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.26103142 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.262987774 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.264907549 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.262630337 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.262356673 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.267243548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26614639 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.265948496 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.265653595 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.265679246 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.262503945 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.268051407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.264494545 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.2638467 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.265870759 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.26714388 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.264359796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.264170841 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266455587 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.268075088 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.264354087 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.266442098 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.265131443 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.264205001 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.265355639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267157448 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.264411061 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.264807081 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.264883725 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.265813875 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.268353355 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.264522127 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.268806329 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.268466766 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.267346337 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.269240441 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268375338 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267122433 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.267735097 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270170659 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.266024038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.269186043 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.266596377 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.26700881 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.265744706 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.266904892 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.26966183 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.269015972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.269812381 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.269987915 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268971989 seconds)
  done (took 70.806499988 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270281528 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270792265 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.266705913 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.269222831 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270498481 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.266679967 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.269491144 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26894889 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267470194 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269593181 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267779164 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271303002 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267042587 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271485293 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267209012 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270095466 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.268563114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26943092 seconds)
  done (took 24.010491842 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267808976 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268251971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.270551356 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267131447 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268083633 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271962407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268519995 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.270686633 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271459165 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.268963869 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26685219 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.271046456 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270783693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.271329028 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269504632 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27019954 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.273474715 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271349986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268835042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269143948 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271724647 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271999157 seconds)
  done (took 29.107799386 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.270386407 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.271476764 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.27086389 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.288433632 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.292063318 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.271575965 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.272814141 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.272532651 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.294763937 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.3257046 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.319097347 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.291044686 seconds)
  done (took 16.611344705 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269561489 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271829552 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271843579 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271594157 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273882029 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270212477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270843686 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269646852 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272604947 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27133703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270650126 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272718707 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274458524 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270893818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273223883 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273079251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271475104 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270840659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270409586 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274557146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271520521 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272984979 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27144687 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271053526 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271516688 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272307006 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273528045 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272843867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270809354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275318944 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273727519 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271886848 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275632898 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271510067 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274538254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274761619 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272397706 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27516607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275281945 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27152028 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276097252 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275700284 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275965761 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272694424 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275390593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272924661 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271918037 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27276679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272597171 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274616612 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275755943 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272658074 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274745165 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275425817 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2759863 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277177429 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274398966 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273567959 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27725504 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273029788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272880951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277185356 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274073359 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27459652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277578328 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273959492 seconds)
  done (took 85.209777757 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274820712 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274165239 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273616107 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273956648 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274182405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274691312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274353227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275644905 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274265982 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275680651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276949114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275187171 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27538052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273427492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274892676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275107464 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275127304 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276420408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27444421 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278330203 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27544894 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275773102 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275845785 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274018906 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273983805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278729304 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274932078 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276117677 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276457428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274745186 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277453651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276284494 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275425339 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274812809 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276702597 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275238756 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276105487 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276987685 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276191591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27955147 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276029011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279451239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277587079 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276361223 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276878764 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276742249 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277339584 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277504655 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276384155 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276524335 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277982795 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277273807 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277639897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278787498 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277884808 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277291827 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276996528 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277288276 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278480376 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279723938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278378083 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277529574 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28024003 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2773732 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277536159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2774086 seconds)
  done (took 85.417233593 seconds)
done (took 1724.093057156 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.445447837 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399267408 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.27960212 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.293606812 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.279956831 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.274546618 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.289552086 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.279902354 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.279655169 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.279546933 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.280059195 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.469011078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.335904857 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.280428881 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.280509483 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377300753 seconds)
  done (took 26.305014528 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310384538 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.287997143 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.402060084 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.305798312 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.310007893 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.474856294 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.345081347 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.285508294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.462171024 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.330642652 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.292172198 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.313007134 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.287082738 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.275894945 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309219805 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.472706562 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.545522941 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.295584475 seconds)
  done (took 28.486597612 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.740306278 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.318861106 seconds)
  done (took 5.24056346 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.305926859 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28505378 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.288769972 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.286180463 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.281520137 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.276697938 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.284411538 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.283522793 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.277896239 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.417568102 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291169834 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298089566 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.306341098 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.287390947 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284857725 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.325734919 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460263512 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.284951828 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.283051094 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291901622 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.286588122 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.381851789 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.328239758 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.286694953 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.413674766 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.281769044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.290333686 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.29460953 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.414005163 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.284845897 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.28517474 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.288812027 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.290164256 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.22483191 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.859114756 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.28340756 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311673613 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.296691467 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.283852961 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.433725904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.28891377 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294642293 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.279566222 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.847191462 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.426541025 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.405247579 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.3072912 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.29303053 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.29040329 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.353459173 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.288811307 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.290656619 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.33442296 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.085273392 seconds)
  done (took 82.902476604 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.329612415 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.280251703 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461328765 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.302913187 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281723362 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280632523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.282464582 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.570541502 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.28657297 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282471521 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.578241819 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835558795 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.297988237 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.328380854 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.186961886 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.337577523 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283745955 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.296109489 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282458061 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.287759094 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831512226 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283498083 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.301418589 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.490839369 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322360319 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801943665 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.29028203 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.283029759 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.286119812 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.282665877 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793621978 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310145546 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.338011808 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.285163404 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.560629787 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664829529 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627282424 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.289864017 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324269659 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.284727483 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.297215216 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783686271 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645517515 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.285354229 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.283960244 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794156069 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.283856523 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.285774083 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.288763212 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531962061 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.284687961 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.284735157 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.306721857 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284116897 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.284536769 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362734597 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.352968551 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804750705 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283976179 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.293734089 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.301193161 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.286754846 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.290498609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288303997 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.304608177 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.649141208 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.49375344 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.288589268 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648103306 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79010563 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.302572666 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862240938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.302212982 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304547095 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.337499736 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284828894 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.30102111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815031582 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.335704761 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.285946228 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630880712 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.288064278 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591695654 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.305085048 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.287494762 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842662848 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.295379544 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.371853808 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.286993803 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.291864419 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.286295876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291379987 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.573206385 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.318541283 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.288256912 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.287524697 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.299402395 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286993623 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.289222188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.290077832 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861032216 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.308677469 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.287458773 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.292618391 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287842604 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.289216932 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.290590343 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.287105258 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.553074666 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.291838389 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.293566655 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292481498 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.288424963 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.300908869 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.429743943 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.295244877 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.601489342 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.289563427 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290070066 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.28895439 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287522307 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.326292488 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.288592036 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.292612813 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.157204219 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.569666788 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.308458723 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.305626396 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.288820235 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295910964 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289462768 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291851539 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.32169194 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.290974157 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045309312 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.313186382 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.32095881 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28930188 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303484101 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290263353 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.299316706 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291489483 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586503881 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.578796916 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.491987699 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.294010312 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.295102597 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026292752 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34652818 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473581213 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310735971 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289721453 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538221108 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.492375213 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.291396809 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.29016401 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.292320572 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548821709 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.290277148 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61586103 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825663821 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.30826722 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301017487 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.042923084 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.994574419 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.293811286 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.291888335 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.586068741 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.310112744 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.292563348 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.29144311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.29267025 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.308751518 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.295648403 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292291746 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.292509753 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.291516208 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.311292556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484679271 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.311922151 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.29583362 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806810369 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302502618 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294451324 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.300573631 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.293584867 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.293024713 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.374077973 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.295877234 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.304170486 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.294618336 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.300484075 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.821964018 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.292669628 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.293208437 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485537649 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976667403 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.312182991 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.294425366 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.309364592 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.18639085 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833623329 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.312991876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609370524 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.295762419 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.333918448 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294537556 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.378161765 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835227267 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295655184 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.31363269 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.947721251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.31083486 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.923828883 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.294770347 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.298076088 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892269085 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.311631865 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.295862735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.295706138 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.294951321 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587816674 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.299749214 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.343901251 seconds)
  done (took 488.605898892 seconds)
done (took 632.719093929 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295575029 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.300390135 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.283703262 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.301376343 seconds)
  done (took 10.379167374 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.306396617 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.303016663 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.313197344 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.302643086 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.306883358 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.302739168 seconds)
  done (took 9.034653121 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295159199 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303518924 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.302091198 seconds)
  done (took 8.101138387 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.514803805 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.323700204 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.63596741 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31795932 seconds)
  done (took 8.994568571 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312754536 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313842389 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313743736 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.306095591 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.30632277 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306682796 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.306089948 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.307775633 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.307821591 seconds)
  done (took 12.980503079 seconds)
done (took 50.689903923 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.170428944 seconds)
    (2/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.344374084 seconds)
    (3/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.322412632 seconds)
    (4/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.387175168 seconds)
    (5/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.312998864 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.349958851 seconds)
    (7/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.31312388 seconds)
    (8/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.424165842 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.366425016 seconds)
    (10/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.31465463 seconds)
    (11/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.304515854 seconds)
    (12/286) benchmarking ("sort", Int8, false)...
    done (took 1.433473409 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.369007577 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.040683896 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.350462517 seconds)
    (16/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.31772777 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.323589152 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.542032164 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.308282798 seconds)
    (20/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.966704002 seconds)
    (21/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.318459077 seconds)
    (22/286) benchmarking ("sort", BigInt, true)...
    done (took 2.299120658 seconds)
    (23/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.382938013 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.482910024 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.943591809 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.29781717 seconds)
    (27/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.424393468 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.368934875 seconds)
    (29/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.353916773 seconds)
    (30/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.973254528 seconds)
    (31/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.308127732 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338423532 seconds)
    (33/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.31688243 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 1.730025128 seconds)
    (35/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.172238642 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.462948145 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.327716496 seconds)
    (38/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.334962083 seconds)
    (39/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.335119516 seconds)
    (40/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.284281191 seconds)
    (41/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.446157181 seconds)
    (42/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.392193405 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.312840181 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.051236928 seconds)
    (45/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.460805913 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.373139173 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.325615573 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.331180242 seconds)
    (49/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.353828376 seconds)
    (50/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.949000008 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.427473594 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.318222144 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.330864203 seconds)
    (54/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.316462783 seconds)
    (55/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.295960205 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.311325934 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.440983886 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.467220685 seconds)
    (59/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.304070915 seconds)
    (60/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.339572468 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.473542563 seconds)
    (62/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.342718043 seconds)
    (63/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.319767501 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.354675522 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.387518895 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.40719105 seconds)
    (67/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.951348108 seconds)
    (68/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.30704776 seconds)
    (69/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.318631601 seconds)
    (70/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.428543158 seconds)
    (71/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.286170822 seconds)
    (72/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.306207409 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.357054222 seconds)
    (74/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.310831707 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.38719627 seconds)
    (76/286) benchmarking ("sort", BigInt, false)...
    done (took 2.303144135 seconds)
    (77/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.320421353 seconds)
    (78/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.319364917 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.315793075 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.387569039 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 1.48900036 seconds)
    (82/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.078865223 seconds)
    (83/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.144447732 seconds)
    (84/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.32007227 seconds)
    (85/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.449282146 seconds)
    (86/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.314344416 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.367325402 seconds)
    (88/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.382329192 seconds)
    (89/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329460306 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.350389645 seconds)
    (91/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.335655678 seconds)
    (92/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.431344618 seconds)
    (93/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.332642506 seconds)
    (94/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.346929883 seconds)
    (95/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.419043849 seconds)
    (96/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.339479152 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.32126977 seconds)
    (98/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.116632473 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.453482214 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.331005471 seconds)
    (101/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.303442778 seconds)
    (102/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.310971854 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.592755553 seconds)
    (104/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.497481098 seconds)
    (105/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.36541295 seconds)
    (106/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.38313714 seconds)
    (107/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.313456675 seconds)
    (108/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.431112879 seconds)
    (109/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.405992862 seconds)
    (110/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.318767207 seconds)
    (111/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.316235152 seconds)
    (112/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.318437714 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.329513335 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.450067754 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.376769602 seconds)
    (116/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.957760106 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.29084664 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.376071499 seconds)
    (119/286) benchmarking ("sort", Float64, false)...
    done (took 1.50740532 seconds)
    (120/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.320419001 seconds)
    (121/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.487824347 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.361005083 seconds)
    (123/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.498610513 seconds)
    (124/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.316633288 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.34343781 seconds)
    (126/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.316709094 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.408462921 seconds)
    (128/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.322658589 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.308390522 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.365450485 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.314633241 seconds)
    (132/286) benchmarking ("sort", Float64, true)...
    done (took 1.934226954 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.340224414 seconds)
    (134/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.417231732 seconds)
    (135/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.322640389 seconds)
    (136/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.31219133 seconds)
    (137/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.32202522 seconds)
    (138/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.307405095 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.41037842 seconds)
    (140/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.316230444 seconds)
    (141/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.3226576 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.335049411 seconds)
    (143/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.311042214 seconds)
    (144/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.387667114 seconds)
    (145/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.335126958 seconds)
    (146/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.319230697 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.31784412 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.329649626 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.408353046 seconds)
    (150/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.343386084 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.329473715 seconds)
    (152/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.387501728 seconds)
    (153/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.430486371 seconds)
    (154/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.41272363 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.394880294 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.319172639 seconds)
    (157/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.01095227 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.496729118 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.315547608 seconds)
    (160/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.420697824 seconds)
    (161/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.322566859 seconds)
    (162/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.347170909 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.433165434 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.336026674 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.323096687 seconds)
    (166/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.315133739 seconds)
    (167/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.345276716 seconds)
    (168/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.319162871 seconds)
    (169/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.427411954 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.411508232 seconds)
    (171/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.43453233 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.518520259 seconds)
    (173/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.007415658 seconds)
    (174/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.316606771 seconds)
    (175/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.349353774 seconds)
    (176/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.596583653 seconds)
    (177/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.312863365 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.294382113 seconds)
    (179/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.392038466 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.316692925 seconds)
    (181/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.308139508 seconds)
    (182/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.306255388 seconds)
    (183/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.309367885 seconds)
    (184/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.519402967 seconds)
    (185/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338851662 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.317540571 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.32474843 seconds)
    (188/286) benchmarking ("sort", Float32, false)...
    done (took 1.470045681 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.330688281 seconds)
    (190/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.317612029 seconds)
    (191/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.36991241 seconds)
    (192/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.065018052 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 1.563689196 seconds)
    (194/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.329163637 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.319719874 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.515650808 seconds)
    (197/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.363445508 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.415480498 seconds)
    (199/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.323083007 seconds)
    (200/286) benchmarking ("sort", Int8, true)...
    done (took 1.716991878 seconds)
    (201/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.335513513 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.310820979 seconds)
    (203/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.080327992 seconds)
    (204/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.445057923 seconds)
    (205/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.297509153 seconds)
    (206/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.327473827 seconds)
    (207/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.414843484 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.404257488 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.332610864 seconds)
    (210/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.463810346 seconds)
    (211/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.37096916 seconds)
    (212/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.462982413 seconds)
    (213/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.334932217 seconds)
    (214/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.975277759 seconds)
    (215/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.409929285 seconds)
    (216/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325673865 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.320547281 seconds)
    (218/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.339906845 seconds)
    (219/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.391338266 seconds)
    (220/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.296604528 seconds)
    (221/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.482467876 seconds)
    (222/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.325126133 seconds)
    (223/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.628452747 seconds)
    (224/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.321295767 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.388017131 seconds)
    (226/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.382937174 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.522017456 seconds)
    (228/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.059835935 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.346596215 seconds)
    (230/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.365776072 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.400180354 seconds)
    (232/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.317193791 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.327740701 seconds)
    (234/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.969337721 seconds)
    (235/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.330118119 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.043470343 seconds)
    (237/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.445613615 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.323422352 seconds)
    (239/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.314206416 seconds)
    (240/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.417777772 seconds)
    (241/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.174952835 seconds)
    (242/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.351153833 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.322465047 seconds)
    (244/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.318271101 seconds)
    (245/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.517395448 seconds)
    (246/286) benchmarking ("sort", Float32, true)...
    done (took 1.865821618 seconds)
    (247/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.330145416 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.361237467 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.420096836 seconds)
    (250/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.34966699 seconds)
    (251/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.066651049 seconds)
    (252/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.350346856 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.483569839 seconds)
    (254/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.194158567 seconds)
    (255/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.318126957 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.537796601 seconds)
    (257/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.321977495 seconds)
    (258/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.303242822 seconds)
    (259/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.470267848 seconds)
    (260/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.377055019 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.394956964 seconds)
    (262/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.324165612 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.320572756 seconds)
    (264/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.502286944 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.455246874 seconds)
    (266/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.41376961 seconds)
    (267/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.019928864 seconds)
    (268/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.299832197 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.330662183 seconds)
    (270/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.34362333 seconds)
    (271/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.547565167 seconds)
    (272/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.332407222 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.394483367 seconds)
    (274/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.336084094 seconds)
    (275/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.320102024 seconds)
    (276/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.460663184 seconds)
    (277/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.51047669 seconds)
    (278/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.325260519 seconds)
    (279/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.334003864 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.324381651 seconds)
    (281/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.299036974 seconds)
    (282/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.346651799 seconds)
    (283/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.096255565 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.344823625 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.421642726 seconds)
    (286/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.628077705 seconds)
  done (took 462.408514107 seconds)
done (took 463.607529837 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.361950368 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373551189 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.327324638 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361951206 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.444104338 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.500310224 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.338253333 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.367328238 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.375351011 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.37749511 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.333163156 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.500611149 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328754254 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.32795883 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.329209829 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370348399 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320104873 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.328164345 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.346078725 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.366730828 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.345495965 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.34540997 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.378127936 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.500444417 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.333245454 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.329974001 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.331958797 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.353854272 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.443845699 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.332591826 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.332675186 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.341967991 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.320050037 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.334493566 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.324699352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.352285108 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.341924321 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.338484328 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.364682304 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.445712128 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.322941433 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.347678631 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.332949078 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.332576447 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329773162 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369665736 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331229354 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.388093336 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372151108 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371809492 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.329413125 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.345099628 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.340847063 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.331406145 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340934851 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330206875 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.388720155 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377191225 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.351738128 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376874085 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.334594811 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.335816664 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.370847136 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.34900494 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.342332838 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335392426 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.330022752 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.371677986 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.324475004 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.33724217 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.334415745 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342506066 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.333344608 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.346538935 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368155963 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.326758475 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.326051871 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.333195441 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.343894223 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.331218007 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381758305 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374130322 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.383223283 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.334285112 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375004121 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.505398577 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341747985 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.334337225 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367765098 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.352832823 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.345362137 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.344889514 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.368023322 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.335632301 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.383047978 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.390331509 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.344055846 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343259614 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384853411 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.344138414 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.326675835 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380588761 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.333626978 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.332154444 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.334958628 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.457298671 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.32771295 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.334267105 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.369530955 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381976728 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.394277922 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.32422724 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.344657545 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381014162 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.344769121 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.396302812 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.336607721 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.324380477 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.336880255 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.457702321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.339629997 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.341074796 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382111241 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.395902172 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.337074301 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.331503999 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.336209141 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378111203 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.456635718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.34716319 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.450433138 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.335564847 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.340097729 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.36663562 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382976814 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.371442852 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.39673398 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381781958 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352664674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.339473536 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.348160454 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.348673605 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336921825 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.395087633 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33587357 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.368018768 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379577774 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379928852 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.369422226 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.457647093 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.341479438 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.328129225 seconds)
done (took 223.928804442 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.396182298 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.333873999 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.436049623 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.334235905 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.435731452 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444650075 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331852546 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.332763354 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.331839612 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709221079 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.332399193 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.332650199 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.33380086 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.332802199 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.416252635 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337435673 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331827304 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.68996586 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.335796722 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405397024 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.336394547 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.332640722 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.33612314 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.735796304 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.33536212 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.330298462 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.418005429 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.336466775 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679641598 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.33000287 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.334011271 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.701695633 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441066128 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.35166789 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.345893705 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.342450837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446072296 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.3548641 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.428174901 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.417200715 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438209178 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.375760439 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.331718287 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.335544031 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.338308283 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.337944463 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.334052277 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363034599 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.336533781 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.334759602 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.675655237 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.346253059 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.345174756 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.33447465 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334995461 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.358759039 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.336173302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.338900003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.426818254 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.339657799 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408195949 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.719085556 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.733985304 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.33919376 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.335502357 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334791662 seconds)
  done (took 104.728916416 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.405015559 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413646061 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.45349326 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337361639 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38833514 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.456400412 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.338323528 seconds)
  done (took 11.022441869 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.344075645 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340157339 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389889866 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388750107 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338878481 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.556153224 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339072016 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.351848944 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.337284183 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417884378 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.350019864 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34018878 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.344944642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.338230409 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387441564 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.351285818 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.45447192 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.340350478 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.340208603 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.493642273 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336477961 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345791774 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.421025481 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354080909 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.350584235 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.350140808 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.296010329 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341304732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337573381 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.340179199 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337216273 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.45616875 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341066195 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.340650559 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336402776 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499850907 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.342546638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339189086 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339990116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.33392827 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.342479126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.342749778 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340822521 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.338251312 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339979743 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.36459339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.342828008 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.343100289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.341950987 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34268152 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41927274 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.343497807 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339636506 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.337853701 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419965322 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347857928 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.344185047 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.340097761 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.343005257 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339530908 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.495665762 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389627843 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.343937552 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.390690512 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.344424361 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344942785 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.343571596 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.343782019 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434557589 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.344370323 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390691063 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340236508 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.568278349 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.366496668 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345935336 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345643643 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.346842741 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3445296 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.343957616 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.352050834 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.341827146 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.344958359 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.350991799 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341575264 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341046502 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527171382 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501588927 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341711204 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.35712484 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.351271852 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342168582 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419045226 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.345065115 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.342292014 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397071821 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.459710929 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424134519 seconds)
  done (took 138.981377893 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.348965124 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.352795472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.34896849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.369490713 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.346824477 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.344276439 seconds)
  done (took 9.346754421 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348299487 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.347685196 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.346319984 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.346122478 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.346209459 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.358034762 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.357788028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348770039 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.351949979 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.346922035 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.357883966 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.348903596 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.349998294 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348047478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358179749 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348310466 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.3589901 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345702189 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.348092617 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348448945 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.347325302 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348729018 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348360067 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.349630485 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.363627848 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.349004012 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355856548 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.348648649 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.347931741 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.356082306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.36835821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.360308875 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.350268357 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.355477902 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.363350307 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350291251 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352812372 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.350129773 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.34629895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.360077366 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.350790388 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349451582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.350023204 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.349568389 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350723289 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.355407027 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.355214628 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357495046 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.361112076 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.352456229 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.352273213 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.350543658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.361273338 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.352013605 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.352510092 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372755136 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.355567614 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361301239 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.349254002 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.352780069 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.352302351 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.361450346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353510481 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366729156 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.349002308 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.352942412 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.353385026 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.354728483 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350652113 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.35140625 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353039803 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.350211134 seconds)
  done (took 99.66479204 seconds)
done (took 364.96886322 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.78982247 seconds)
  done (took 4.031696782 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.467731139 seconds)
  done (took 3.711371752 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.997478787 seconds)
  done (took 24.247707781 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.366526202 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.412960805 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.349867536 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.356000525 seconds)
  done (took 10.729204284 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.628720364 seconds)
  done (took 3.871057111 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.343171706 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.355040598 seconds)
  done (took 5.942238329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.637070672 seconds)
  done (took 3.880388843 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.769468807 seconds)
  done (took 4.018042498 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.344609662 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.35979694 seconds)
  done (took 5.955087877 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.330191525 seconds)
  done (took 3.572283574 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.506091514 seconds)
  done (took 16.748766535 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.342454749 seconds)
  done (took 3.587613732 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.398808692 seconds)
  done (took 3.640189645 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.053904925 seconds)
  done (took 6.294358275 seconds)
done (took 101.469801837 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.346855765 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.349958652 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.349249744 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.351511184 seconds)
  done (took 10.638434449 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.385223332 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.385635375 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.38691304 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.39767383 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391335864 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385116698 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.378867544 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.3798592 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.397327582 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.390236311 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.387944084 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.388548889 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.385886833 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379201391 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387414114 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.389051824 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.397442929 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387792602 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.378073684 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.389717819 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.353030536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.398153625 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.389716533 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.354012698 seconds)
  done (took 34.487663857 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.871050457 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.425500686 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.506912109 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.406363077 seconds)
  done (took 7.453343958 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432565039 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422363218 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.434070855 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.472368413 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496655586 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430275305 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.380409247 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375845074 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.361741174 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.433012457 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.482638578 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.418794757 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.498221847 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.353971425 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562255906 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.354703905 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353442397 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432097333 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.472190915 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484638075 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355650914 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.434049927 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433751241 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419071233 seconds)
  done (took 35.539634349 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.355402869 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.372700963 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.355119176 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.353825557 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.363251331 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.354976486 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355235567 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.35634272 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.35494532 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.895240143 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.355485179 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.368089715 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.873575837 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.354852906 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.362194162 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.356084307 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.880939412 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.875243649 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.354857828 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.361907352 seconds)
  done (took 30.505742435 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.350036808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.349177566 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702081158 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.607490514 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.350769477 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.354141859 seconds)
  done (took 13.960515685 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.434951417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.577961903 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.360470188 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.736251026 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.821984108 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.363570566 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.359937035 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.616540627 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958794201 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.932965965 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.422246613 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.433009746 seconds)
  done (took 20.267938228 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.351354322 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.352442959 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.365347199 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.373406044 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416236248 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.36615168 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.366931399 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.350578708 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.420273866 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.42205812 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.360786004 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.418434184 seconds)
  done (took 21.812462552 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446509299 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352052837 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352122594 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422177396 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357179382 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197321997 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437840586 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169740111 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.379272788 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625606164 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351533592 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470172499 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608853797 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361624029 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357629643 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.335187004 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606540884 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864842525 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356272189 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354462368 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386222398 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364946474 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357554025 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.576541257 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358854169 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353837666 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638745766 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354652091 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651786956 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368664134 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365978818 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354275497 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629290621 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030362865 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482639715 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575835688 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384497085 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356086394 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.380592958 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.358259506 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361308246 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357051804 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366189678 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355759637 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354493634 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364974577 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120695744 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.384051358 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.351393966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354967469 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628581195 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455916768 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.360429419 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354737346 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456791596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361700988 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.360512377 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354886126 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940771707 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356881272 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367427385 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.361644697 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370615687 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358009631 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002354904 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.363893491 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.359576822 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360761365 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357209395 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357669682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374141447 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357849 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.382148512 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357046742 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075175913 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359912124 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358760848 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923969821 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367683699 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363167003 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590570165 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357011106 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357814454 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.356573702 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358632215 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090703074 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366553019 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.340651875 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358591851 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107537808 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60397038 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381579719 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389496081 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583531228 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.341802065 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358712921 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.371281267 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361055036 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381468041 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115815825 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38411909 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.364444287 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618395878 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.572690901 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372797696 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345808577 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867538844 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39587303 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.38407005 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364516779 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58540062 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.971847527 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375731203 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359684934 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377583554 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359445887 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142793268 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375503602 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.467341827 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359588667 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640448653 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.185986841 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362592955 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428762591 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365981323 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361425072 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362167187 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364172354 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360191943 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.572866946 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383570295 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397768066 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.372791911 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360545595 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.366965213 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366315573 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.364048546 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586622831 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375582646 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640060967 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361167565 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362022052 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363525757 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.58560694 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.361934628 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.698512582 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62601435 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375203678 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37790789 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37787102 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381792044 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467992311 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385170552 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.363492428 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623695084 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.36630522 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.36735569 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369797606 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365353254 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369135487 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.37025406 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413203147 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969238771 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342125421 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371515593 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253067284 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.377481626 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43091317 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369831507 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589502344 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.371804887 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39061026 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.369640315 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.367716614 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592936619 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373607124 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.36407442 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443095565 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.865715088 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994766422 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378669588 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.365960423 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.360746497 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.362079699 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365160359 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364870844 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364134202 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588127477 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38333086 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393536252 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.977030023 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367511339 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365682418 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.372766533 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377734565 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.371203162 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366231066 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.361323894 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367446576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368045016 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380716608 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510390197 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.380636654 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365644474 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.883302473 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370721104 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367140734 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366093675 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402157342 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367076173 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265876972 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633547849 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388134183 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641535027 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368581502 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.383214166 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.365858902 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366814437 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38991595 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.376536325 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377672679 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378832373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369207084 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370005176 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946299846 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127530987 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929719679 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381862316 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.378210174 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371633324 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.128187501 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391260524 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368390121 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613194205 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12616386 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390228203 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875077458 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.389802303 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183801186 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64463565 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601664535 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377531636 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.372414628 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667110204 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582540078 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405041112 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36981271 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373077021 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.352401602 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966900893 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406825194 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448246824 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134004823 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394040044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372614885 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.466900828 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384300629 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799653168 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393071055 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37079996 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375287008 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375290229 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263901221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383647477 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370740009 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021698936 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386264279 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.877445329 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394181396 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59573073 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.388433079 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.373215435 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.36983987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.380901389 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.62752742 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64726586 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374550363 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386358312 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945167561 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.243713316 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.378107578 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372325707 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140755747 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373440854 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675423916 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.383502366 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.374379196 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373025055 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37170171 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373410913 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.372074575 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379350473 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347783756 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881370072 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.395995179 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413749037 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382810878 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377224346 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629232037 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38793582 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980671427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604435586 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403242397 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397538535 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.378139066 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377553247 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.35998756 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374163614 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3752148 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46901286 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603751343 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375696641 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.362500954 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457653304 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591138257 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374735966 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377489862 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628703234 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.376519107 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.387017471 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105675657 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408712608 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377130538 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376912032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386639413 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376274266 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445194008 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601612274 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.390806736 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386090414 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801292577 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403510002 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378613004 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.388338099 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47126789 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385038993 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.377647933 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.148374805 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989828317 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134067204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994585291 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652670608 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378223681 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380788527 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377564322 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538789934 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375693182 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649810594 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376809408 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.406217987 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398485148 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382030874 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3857146 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593364341 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652851847 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377614844 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37654395 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382027464 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.377558869 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390261482 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.589680327 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889680319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951196208 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3803368 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387430324 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146716492 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675181941 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378552927 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378333954 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378300179 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.394090312 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.392309805 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.387328508 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392250869 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523075508 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652240729 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069562737 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.412885157 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.405371486 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.152795199 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387066762 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633631644 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375951269 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628186752 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996247019 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113795351 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645117255 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450089537 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604779578 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.383427238 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541663679 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.378897096 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.380136378 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380472767 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380353765 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.37598617 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389300078 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999082527 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647738036 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.383444828 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.377810785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41125249 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390773529 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603217342 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123725466 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605349041 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389427988 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387606768 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37992756 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998754455 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659111396 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382827248 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.385000077 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63251917 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386929843 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405472744 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.834097928 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.37886175 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95734111 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.355213312 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402564777 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380931815 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12518251 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001130642 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.388019241 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895270248 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384003536 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389539163 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660773897 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.387752487 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383130063 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680147217 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.385880169 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394706883 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615745251 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.00011607 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186090448 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.397275035 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397426934 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.385126465 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383751008 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482546279 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386198128 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391837982 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.819898204 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407620292 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383819181 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396104356 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.388453127 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393248462 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.386974269 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385729652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.39156066 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.380684069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.397188524 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396788832 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388661489 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960251561 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41298202 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.052987382 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.710233179 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641347058 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388236832 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.371737025 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.388746555 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385668466 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385818381 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38605365 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410396028 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962745883 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.392507053 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.401269108 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38948264 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.602430241 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598422291 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39790104 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615112887 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394287713 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404956878 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.367607427 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386939722 seconds)
  done (took 980.238880254 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411935847 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.431473975 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.422996868 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.400040391 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.423773548 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430783651 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.467145275 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.406985489 seconds)
  done (took 20.675463337 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.393926374 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.396474999 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.390468287 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.397495725 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.392537075 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.881439647 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.404693798 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396892013 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.397090407 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.402051188 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.387877226 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.146173196 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.396231863 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.395323316 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.392431598 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.399842269 seconds)
  done (took 32.858398257 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.432695984 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.57144707 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.488793281 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.392425014 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.426065276 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.400109424 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.673478439 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.420564337 seconds)
  done (took 27.086967527 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399811982 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402783357 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.401665034 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401988731 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.400543375 seconds)
  done (took 8.288282957 seconds)
done (took 1245.055465462 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.392233698 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.394395229 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.392257164 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.393648218 seconds)
  done (took 6.853908412 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.37377853 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.372648711 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.374119423 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.386990508 seconds)
  done (took 9.788666259 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.133084449 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.055330831 seconds)
  done (took 5.469619202 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.390925426 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.143193585 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.136532376 seconds)
  done (took 7.953913249 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.695427949 seconds)
  done (took 2.977848414 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804238593 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.761030775 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58239065 seconds)
  done (took 6.430994768 seconds)
done (took 40.755971157 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.402615385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.638191586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.547533033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.388836501 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.551760101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.54850398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.127868697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403487474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389538552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390689299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421298453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.553484573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.106523158 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.640941137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.107318076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.73612106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.552576208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.39391227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393300406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390267806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.129910064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38989994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421577524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.392314074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.553153278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.538938758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.403810428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.735366276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403739474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.39289502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.541213391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39549035 seconds)
  done (took 83.266538184 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392314321 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.393279621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412361979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.4113108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.397995315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.393119211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412975783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.391638946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.391562291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390333266 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392137144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.39969459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39391547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.391920025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.392892919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.392631021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.391533496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415864727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392165407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.404604789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394091879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391514933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.407736937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.393049496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.4027728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.393918081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411825989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.392915505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398142878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.396876176 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.397574903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41128845 seconds)
  done (took 78.031303354 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.405007768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.394689124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.398423294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403884334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.394363673 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396099049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.393607262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.399590236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.399162904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.396144857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.399901536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394023588 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395331236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.407264108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.39677041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394473902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421670581 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.411995411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394078698 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394751045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394545188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395565067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.393949164 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.395867205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.401979372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.398681774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397685726 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395694929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412653824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.397533743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402179745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.410905118 seconds)
  done (took 78.075028127 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.67798701 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402417066 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.404004168 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.397510469 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404409256 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401566184 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.397542659 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.678663804 seconds)
  done (took 15.052557809 seconds)
done (took 255.706336445 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.396044104 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.39643894 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.611710815 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428882107 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.395938718 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.442300521 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424190215 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.627996495 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.412081826 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.645801607 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.415508623 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.421517113 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.398235235 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420745122 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.685077924 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.550428568 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.304572609 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.398933208 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.749838233 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.416147616 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.698393726 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.398633386 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.697274658 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.380988548 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.420046908 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.398157993 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.415067595 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.321189781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.445612996 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.759809967 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.421076612 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.381772635 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.489749305 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511245015 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.619624171 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.56036436 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.399357924 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.490022843 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.628924624 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.40396153 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.407442785 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.197890956 seconds)
  done (took 84.279736878 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.406262877 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.520325162 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.406554082 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.406514767 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.405644433 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.519943292 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.501054642 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.407821209 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.406810144 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.406894887 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.406355945 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.406293903 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.407058005 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.405852265 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.408435014 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.408071089 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.407645171 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.419502953 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.419517792 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.450405926 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.52667314 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.435550598 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.399081074 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.405512881 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.509406956 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.541457487 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.408018587 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.399025863 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.450040958 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.408204608 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.412163335 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.451177884 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.408996524 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.40973254 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.520757343 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.506444731 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.421780525 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.402954043 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.522050321 seconds)
  done (took 57.359247212 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.408699755 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.666777195 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.853648267 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.416584257 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410147681 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413627952 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.493829953 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416074513 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414458523 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413681684 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.581860047 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.417134501 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445075663 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.880123174 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414450183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410984057 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.411811672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.412353637 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.677466446 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421284623 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.514628055 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.418051745 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.495482914 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.426468494 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.436572326 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413169651 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41766123 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.984045804 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.418173079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.586500191 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.250442411 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.49635804 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.932405258 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.875038495 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.255935949 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.418909692 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.414278963 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.589479704 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.418785818 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412615535 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.495845899 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.419126492 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.869206354 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.072610911 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.433009126 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413141537 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.008374787 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.586662358 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.66997741 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.423351161 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.895187953 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.4173788 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414450765 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414912351 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671769233 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423148177 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41340188 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.995512476 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.438024443 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.494666432 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.419346981 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.414798352 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.685173983 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.415545569 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.671984663 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.417083459 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422091282 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.436362491 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.867440123 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.417302965 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.097451578 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.434507936 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.417040459 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.58651724 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.675638063 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045547858 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.423650885 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.688950958 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.941881243 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.495819446 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424345905 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.974437591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.500007749 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.425434016 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417705808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418117631 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.416057279 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.466140967 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.495751317 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.030250822 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090610518 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.022636841 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.518041299 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.434326856 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416717684 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.028080453 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.434250097 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417246336 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.862476164 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.095632304 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.436924809 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.4234512 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.102393823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.43771657 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.502134427 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.427199088 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.874942032 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.419729725 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.467248095 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417353093 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423543118 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.442393401 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.501124492 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426854609 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.419447189 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.075895019 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.62015728 seconds)
  done (took 186.705050361 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.412824754 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.410296014 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.412339807 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.410697143 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.410676061 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417783209 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.411120682 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.412443853 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417927765 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.412427764 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.411576479 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.411942931 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.412848207 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.423043827 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.42461699 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.420080369 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.412616331 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.412085451 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.429575899 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.413294081 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.412989385 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.435668431 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.427424025 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.41320456 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.411891125 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.414825286 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.423907305 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.416492583 seconds)
  done (took 64.96095162 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.419582236 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.028424715 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.426170997 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.558321673 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.448274953 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417815235 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.556633832 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483740091 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.42639629 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416276095 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.418073353 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.745900941 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.426024906 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.959738456 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.62867515 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.562469137 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.954515103 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.439316242 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417782667 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.417623449 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.56106993 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.434597066 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.747514451 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.034349318 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.426840576 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.030114373 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412558681 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.422077126 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.422113494 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.031365373 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.423001563 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.749061863 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.50901444 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.48814019 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.038374386 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.976365921 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.989502915 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.580162067 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.421636203 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419817015 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.420159741 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.41333466 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.034963016 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.427809804 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422615749 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02596329 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.444530734 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.42447234 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.415960473 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.420472776 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.485565748 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.49126146 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.756220242 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.117094303 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.506585029 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.424118811 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.561006309 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.718827877 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.426677994 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.971643867 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.414872758 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.03795884 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.434404753 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.41145136 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.423990687 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.414821166 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.581078166 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.565506659 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.98400606 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.448074678 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.976760809 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.604543668 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.425232262 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.422847222 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.426611508 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039827937 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.985957799 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.602689796 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.57116095 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.63506055 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.417429547 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.425692105 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.412915521 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.505169583 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.425238681 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.04205418 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.005522237 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.448674772 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.426059974 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426655591 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.426094618 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.615337663 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.048119212 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.510449786 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979685797 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.779926828 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.762452862 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.431117983 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.485292535 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.443829842 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.824460224 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.433280835 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.484272414 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.771522471 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.759773477 seconds)
  done (took 170.184017004 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.679288092 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.442580597 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522694579 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.57991126 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.059152675 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.034604923 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.425437351 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.559332521 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.543473651 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.704135484 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.43960216 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.519637854 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.653564373 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.515181242 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.173100867 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.50277505 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519998628 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.57614921 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.573393041 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.426866687 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.096250816 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.753598317 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.633735008 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.462360078 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.533635511 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.25770697 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.024268851 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.991644975 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.611836539 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.422413553 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.975802741 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.423088839 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.431812053 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.147547404 seconds)
  done (took 66.528984073 seconds)
done (took 631.306335015 seconds)
SAVING RESULT...
DONE!
