cset: moving following pidspec: 24773
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.384586746 seconds)
loading group "string"... done (took 0.585684127 seconds)
loading group "linalg"... done (took 7.203079213 seconds)
loading group "parallel"... done (took 0.159989097 seconds)
loading group "find"... done (took 1.143335761 seconds)
loading group "tuple"... done (took 1.752889021 seconds)
loading group "dates"... done (took 1.225942668 seconds)
loading group "micro"... done (took 0.216022236 seconds)
loading group "io"... done (took 1.018405153 seconds)
loading group "scalar"... done (took 37.478438025 seconds)
loading group "sparse"... done (took 11.892757866 seconds)
loading group "broadcast"... done (took 0.956308074 seconds)
loading group "union"... done (took 12.212100974 seconds)
loading group "simd"... done (took 4.496507876 seconds)
loading group "random"... done (took 9.055927962 seconds)
loading group "problem"... done (took 1.843299946 seconds)
loading group "array"... done (took 20.825078473 seconds)
loading group "misc"... done (took 1.68480671 seconds)
loading group "sort"... done (took 3.331835209 seconds)
loading group "collection"... done (took 17.263198008 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520182058 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124746629 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118174779 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120132141 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147401936 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112926295 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125150294 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085631626 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.854438629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148297305 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119024647 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429521367 seconds)
done (took 5.216721451 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175738803 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082548475 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083375676 seconds)
  done (took 1.301167139 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065554167 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122930641 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067135467 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067145554 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067588862 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066113362 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066523836 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066302257 seconds)
  done (took 1.661725255 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073331433 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069557731 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066481684 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068406488 seconds)
  done (took 1.417704112 seconds)
done (took 5.768216003 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.78362197 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205102952 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187526886 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414787741 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130085126 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158662419 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643961703 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313818394 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193058859 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082143728 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111863591 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.33083383 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111137014 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639708976 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077730499 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090290066 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137489851 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414060657 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067514356 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081971665 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089092435 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128474289 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088026437 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074565793 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143983316 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067349601 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136076878 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080021128 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06622251 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212375815 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172722698 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665528706 seconds)
  done (took 10.279231399 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095651682 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09629845 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068907253 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122582242 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096167293 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070200621 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070800681 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067787183 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086911833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127030761 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08855685 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101444799 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065238217 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06905244 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085495876 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203448913 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082598599 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083210463 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070306129 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07532752 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104840204 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07869083 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077182511 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076763866 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129346187 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18018091 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096446361 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097374673 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065972253 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079237048 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115510686 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124853204 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06543979 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06572484 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123571178 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094393865 seconds)
  done (took 4.575182151 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.998811384 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143587303 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091205932 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134448656 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064760065 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108617967 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065186152 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081153542 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208645069 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.463075784 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113685775 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592964235 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064856313 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110494635 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103480259 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067108986 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068024293 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066679918 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.489478413 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095486796 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106516659 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081073331 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069978246 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068930121 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35984556 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069831451 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065053605 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068120292 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057462288 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124704782 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068025496 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.946482118 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127365062 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06679823 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100665571 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163075177 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088108586 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274775756 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069054486 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064584221 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153438094 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070463626 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066700936 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084498528 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103625577 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11325387 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064140043 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065203082 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165446149 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066757461 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064031973 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079275801 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.656444032 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154055315 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0792167 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063990305 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064712888 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.252891974 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088162049 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070017717 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064853611 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.20007215 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132119101 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067638511 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066602932 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068069473 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069335719 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359376718 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065708336 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.04484474 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070398589 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077324254 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068904406 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069307024 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07288753 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072364137 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087183563 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065974134 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075506058 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065958382 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066449342 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066922451 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083558033 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379482449 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066680044 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06822845 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065253115 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089892848 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096333816 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066476953 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065424106 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099545196 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068068437 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066170307 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106389272 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066568204 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083150899 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068976255 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11305444 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066130512 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209415083 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067658741 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09745087 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070146876 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099011688 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080630879 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067839508 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.423857955 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065352649 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065890305 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068388819 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065238072 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067770413 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066456423 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079584381 seconds)
  done (took 21.326625451 seconds)
done (took 38.318497463 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237142451 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082400927 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076838656 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076592964 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074050191 seconds)
  done (took 1.774653737 seconds)
done (took 2.981005789 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122915969 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100585285 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06477073 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097335303 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063945812 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101639725 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101981544 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081981309 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100097574 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064682778 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097384091 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064544959 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064041236 seconds)
  done (took 2.3518074 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083219159 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083960882 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07040068 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082849746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06335913 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082980063 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081837758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088802827 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081635678 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072674813 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063586587 seconds)
  done (took 2.058754232 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083096161 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084937181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070463527 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082485443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063681226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082870523 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081610093 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08602063 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081944476 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0741781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063329704 seconds)
  done (took 2.051871929 seconds)
done (took 7.657815126 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078492194 seconds)
  done (took 1.268127212 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591352729 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.088375489 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08119788 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111792454 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189160667 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118307256 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270931327 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086418915 seconds)
  done (took 8.912093769 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102277283 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06930697 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068859628 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070630119 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068878809 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071286263 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072515606 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068098129 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069707609 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071752477 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068712702 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071721072 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070759229 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069921184 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068349923 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071171235 seconds)
  done (took 2.41711084 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092038811 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091407519 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073409489 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074771577 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071695712 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072042578 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074124509 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073350022 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070754599 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072500882 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07400244 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073187469 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071606264 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064496831 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074132582 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075158024 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070647517 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073453432 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073961636 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075207123 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074524453 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063908103 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071590266 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074327664 seconds)
  done (took 3.076495751 seconds)
done (took 16.871684858 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113587706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071794044 seconds)
  done (took 1.384739747 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080323927 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082227749 seconds)
  done (took 1.369416369 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082145442 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064936065 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090198137 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078013659 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065830607 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064979648 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087185013 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065481488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065629245 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066482662 seconds)
  done (took 1.93901568 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068870988 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077380666 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069872137 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081128042 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072756527 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063932187 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071815588 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067057567 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076670865 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06234915 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070710474 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082393325 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071243342 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084221164 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072149347 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06804784 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070499268 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066959553 seconds)
  done (took 2.504384348 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065526121 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066468259 seconds)
  done (took 1.343223966 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067205694 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063427164 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066843869 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066246239 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063286531 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06236953 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063108198 seconds)
  done (took 1.660027088 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383479967 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113315065 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31059018 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071792963 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082613982 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255494861 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065036311 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070593013 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070490285 seconds)
  done (took 2.675091052 seconds)
done (took 14.089666709 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080175222 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086103393 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096686777 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374607073 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091723377 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066081938 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113684753 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188030216 seconds)
done (took 2.320838327 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213752568 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638762102 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403503455 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204688666 seconds)
  done (took 2.459558931 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342193117 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090275872 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060401698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068856598 seconds)
  done (took 1.782083185 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066424611 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069464712 seconds)
  done (took 1.353964076 seconds)
done (took 7.029701206 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065985197 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086565935 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067265514 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06525097 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064323728 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066162159 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063840222 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063661506 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065930945 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066489541 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065749883 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066134813 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065828241 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066319336 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06400295 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063560342 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066017197 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066342296 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063574663 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063555732 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06356827 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066785323 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063835458 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063496733 seconds)
  done (took 2.83832655 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084425283 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066106287 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071935997 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071398012 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069032768 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07134483 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071014194 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065495028 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070803982 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068265373 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068871169 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069159262 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06812533 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069695807 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068377321 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069227201 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071130688 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066356397 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068004509 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069652191 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070888573 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065963597 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069177036 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071545882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069150215 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07118661 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068603672 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065764149 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071178896 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068839256 seconds)
  done (took 3.319598902 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06985613 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064337631 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064292329 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070292461 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064344766 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06432844 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062954463 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063878061 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064092282 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063605698 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064900408 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06357769 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063354683 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064331344 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06491094 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068480479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079679039 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063879786 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063674197 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063766643 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066826979 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063338258 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06352209 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063434599 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064407023 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062964601 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063709214 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063639699 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064415848 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063457337 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066811048 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067187495 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063982061 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070456318 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067327812 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06327316 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067893641 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063283172 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063890527 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063169056 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063591406 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063496269 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063368573 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070983473 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06349084 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064887009 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063658601 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064718923 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063950213 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.178908132 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063309036 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063136274 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065415966 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064352148 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0671092 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062786103 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063504936 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062828983 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063870625 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06271343 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062424273 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062825526 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065495899 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064905714 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080476019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072645519 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065016986 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066274156 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064829694 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065760177 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064589118 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077548246 seconds)
  done (took 6.052692196 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089721329 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086684929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065251661 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065205378 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061732484 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064267675 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069780344 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063547603 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065184574 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082393459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064098887 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065398271 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065416876 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067316328 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06409456 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065037724 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071996379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061160512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06380131 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06748238 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064266818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068946671 seconds)
  done (took 2.745374162 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156102215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071008689 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105545025 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075690162 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069461086 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074978421 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069778637 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070133352 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070563451 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06724904 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06758718 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069720857 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069315355 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067438701 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067095616 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068247183 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071022101 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070055744 seconds)
  done (took 2.616992181 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076240094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066392587 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086150253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06635035 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065651717 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068251365 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069837517 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074300401 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068245866 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066266286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073620177 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068610754 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067838555 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065605871 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06791622 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065640186 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068310063 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066375542 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073162804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069430907 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06952123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073518362 seconds)
  done (took 2.775378444 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080037903 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067957219 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080374712 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067577293 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061546489 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063777331 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069650811 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065720329 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069519663 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067281955 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065532808 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063847437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068645157 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065214682 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068009142 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065803962 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067170041 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065566947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066965388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06150736 seconds)
  done (took 2.592398388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085522568 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067651314 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067938407 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07566541 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067729627 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066949668 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074594434 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067337402 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067370713 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08881503 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067859358 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067728868 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0749176 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072140519 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067186159 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074292095 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074985876 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074321677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067533762 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067615795 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088368866 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067633132 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075109464 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067386183 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067458779 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067689372 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067304031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072102006 seconds)
  done (took 3.251463621 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066365139 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066628502 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063770296 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063413313 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063240889 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062948037 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063354161 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063204497 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065931711 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063390009 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065908671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066208528 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066163939 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065662039 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066123012 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066600007 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065552797 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063737773 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063858884 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063513187 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0662792 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066001548 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065833272 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063500116 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063623387 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066210563 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063472061 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063606693 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066084229 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063977806 seconds)
  done (took 3.187320713 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07542365 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073192268 seconds)
  done (took 1.39320163 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063042985 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079771374 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063551784 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069820782 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069648634 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066602249 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072973146 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069528334 seconds)
  done (took 1.796081031 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08190348 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076802692 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068021038 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079627147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076772592 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083793205 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135559965 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06687749 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073111229 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063870369 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080076371 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065627383 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072941039 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066695369 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072822361 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073060827 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064069723 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071808956 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068455973 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064701999 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067550921 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07472192 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068786628 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061618247 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067421239 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088707752 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077294964 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065579695 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068721505 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073720238 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071623124 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059829775 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066271956 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066330309 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063744469 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075723988 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081036045 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068774801 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074471192 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066897655 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075508245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06116599 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070667482 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072940485 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076021305 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066534304 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066112959 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060633693 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063777728 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068274459 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062003662 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068374246 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060503687 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072872592 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070213843 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077327492 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064977647 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067514146 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068840387 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069181562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072742028 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068082138 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069152836 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066506199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075699558 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07124968 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074459508 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06086693 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060178141 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063811632 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075186723 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088905372 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072173337 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066488371 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067008604 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063716873 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069788855 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066455448 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071352866 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072010812 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066041026 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0711039 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073583311 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066149268 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068557015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073767314 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064017614 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069148249 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064309942 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082442112 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065246523 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064335209 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06429437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076441553 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069659058 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065705975 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064412366 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073158499 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059752306 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066107734 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066800054 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066924026 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076814989 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070216005 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070398861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073679143 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072243785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065866755 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067967352 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062580723 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065513712 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06423491 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072045426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059513172 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067793593 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065825141 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06550482 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073426225 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06294417 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064629863 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072718715 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070504154 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.188726327 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063934284 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070265158 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067410865 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070637998 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074524494 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065265164 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061727782 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061344619 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070464644 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066129004 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070529525 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070799075 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07041456 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060757632 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065005187 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071657193 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075702422 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067293425 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067728798 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072682142 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068358385 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066169345 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073075687 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069010364 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065960777 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072182264 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067411305 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061261771 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069465106 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069962887 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064980704 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071057201 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069839991 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068439714 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066709615 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06496905 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072792913 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067509346 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064983379 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067193676 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06565569 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07650289 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068771807 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062092799 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063140828 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074927709 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06445117 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066583473 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065799762 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068928119 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066597256 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064039091 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065956747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069365916 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075756012 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070570839 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067809022 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071761854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077404264 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066615822 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068495953 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065905097 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067251485 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066598758 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075181843 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07192729 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072014203 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068654598 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062895083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071486884 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073324167 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065464341 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063707882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064811161 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070094027 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071631676 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069852775 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066421709 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064072759 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06682956 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069290587 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069684898 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066935082 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065154129 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071562937 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06415185 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072503476 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066979367 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075986501 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069458318 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060850222 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068557043 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064298937 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07261791 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061129795 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064132458 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065594177 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06687339 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065509317 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068476807 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060362087 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072707275 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074002721 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066933342 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065813743 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065548037 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072803273 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067260239 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06937608 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069323358 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070987908 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075069246 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064304701 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067851125 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075468277 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064078105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058863468 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070306279 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063030558 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063533873 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06378311 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06293804 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067726192 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072232554 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071064183 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.187476248 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069065715 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065413158 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066224026 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062195659 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071192833 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069700408 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067747731 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073230041 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067808776 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066451235 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070209964 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065792691 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067537752 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067689482 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069865376 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06714918 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068261838 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065700135 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069892884 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065715917 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064936187 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068848894 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066292951 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066784674 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071586848 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065695161 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066569571 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068804207 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066937115 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06754261 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066926248 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066329293 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070105352 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067703805 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066486558 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068842334 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06188866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074487997 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065819559 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073324042 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06689787 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062951118 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072873222 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06940346 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071635881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067060563 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067008381 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067775495 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065846715 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06943382 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073280582 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064324565 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077292149 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073415425 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067054304 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069522655 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067398673 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068366277 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067456428 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069342858 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068673281 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068790602 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069287928 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072961894 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0712093 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069296937 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069929844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069937419 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068616297 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067242043 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060565451 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065972939 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066031545 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066023589 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075229452 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066706884 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066685755 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064828259 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067748554 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0665984 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06497098 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075704561 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075996529 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067545556 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072924676 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065531765 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067475025 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076308212 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06050828 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064097054 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063678743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064122755 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073760025 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067774379 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075037283 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066017184 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065244595 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063430772 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067058839 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064776197 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060381891 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063170268 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069756157 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065125871 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065197965 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065960689 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068505381 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067229001 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07555526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065461668 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067404924 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066593019 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062680594 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064941796 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063962052 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067638351 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065399519 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062900276 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062469792 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064477403 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06594748 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066870318 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06772753 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066926481 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071853492 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064636756 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.0682967 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067335074 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059861765 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.199605257 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06669117 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066272188 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06572387 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070417828 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070959481 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067279075 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075953714 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067066948 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067144705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066558188 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063930284 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066071957 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066331447 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06623939 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066664449 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068336525 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07580557 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064598267 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070810506 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066381794 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068973915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075398301 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069985618 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071652517 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075562943 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068997947 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070502303 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076715592 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073109789 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072298457 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069325919 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070901115 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074644994 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067803783 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074996767 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068563538 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06871872 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068276722 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064045893 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066656492 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06623203 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065999166 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072616449 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066873776 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06685948 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06632593 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063443484 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067611579 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069353954 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073700637 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068659829 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06941963 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061837904 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06359604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067378322 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064070256 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068368916 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069444356 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071711568 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068707371 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066770475 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064956946 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075807575 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072527215 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070631009 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064584607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069887041 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067269735 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068783771 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068072573 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066437037 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067874994 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069972484 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06762243 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065677359 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07263546 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069440332 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066792772 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067883613 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06788917 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068371085 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062483145 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068269431 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070309322 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073686698 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069916634 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067481076 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077122398 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063668101 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06621643 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069049375 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064918378 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070819815 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060852707 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06757563 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066927183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066268661 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060882379 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065836732 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064070843 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068726873 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065734676 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061362681 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076909123 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075655117 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069557126 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065329723 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065230627 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061312131 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061761067 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065622136 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067719115 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067935837 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075676791 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065012985 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065803571 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060685608 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065611018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068384095 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068260489 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062634872 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060490961 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064704344 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068433554 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071165107 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064660544 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06524497 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068877072 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06774055 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.194886317 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070982555 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064548914 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071427392 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080046604 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067601265 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068181677 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073199157 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073591789 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067492923 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061346871 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067581564 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070437461 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067163033 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068009208 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067815076 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082248555 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070342152 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066088795 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066049584 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070240662 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066736685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075012243 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067818637 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067176755 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072103316 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068686013 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07553295 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069569978 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07363177 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070153987 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069835422 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065856238 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067431737 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064299139 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066012004 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067218317 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066986197 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071157998 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074885826 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066016308 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076832807 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075617843 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067939331 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063004086 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066878102 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065690429 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062142995 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067708618 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065268065 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065522014 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065443438 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065962349 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067633661 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071793157 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067175505 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067809454 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066334295 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06036537 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069601394 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069909415 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067222821 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063615078 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066818929 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06726121 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071248707 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070410086 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065835288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070384406 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070767516 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070185001 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063907742 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073423602 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065518882 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068289878 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065707244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066465497 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066739185 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06978556 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071183773 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067316951 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068887562 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069856185 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068651977 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063840415 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063855399 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071997763 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064572795 seconds)
  done (took 42.560923698 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099815323 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063066093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061754577 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061393345 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07258167 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062857547 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061604418 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062576928 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062608105 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064323925 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061670314 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061681834 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070301085 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077102692 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072839232 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066435602 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061684251 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062783002 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061864193 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063056047 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070324198 seconds)
  done (took 2.739833947 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073433479 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0771693 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075276372 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081766379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071020524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069813721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074737167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06998899 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077922454 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072301194 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078339852 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07041834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072253864 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071671868 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072053707 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070095944 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078142316 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07032482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070506664 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074683417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070540114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075339464 seconds)
  done (took 2.938634495 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067219288 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065942888 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067646952 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060966118 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065296731 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062128794 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069569322 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063765033 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069255441 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065004992 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065096155 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064888579 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068318422 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061080576 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066017874 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064168548 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108125183 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069456098 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06579079 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067468767 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061023086 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067532475 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061286888 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061803673 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065127758 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06892732 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066481125 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063460058 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065515871 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065297293 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065402101 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06305328 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066940755 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065938781 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064829587 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064790577 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065280022 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065915281 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061154117 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063501736 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066345922 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061594953 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0654366 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066696708 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063677256 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063602594 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066861611 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065639576 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060416947 seconds)
  done (took 4.55410166 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078557799 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108372881 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067447413 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090851577 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079021994 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072313979 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069146975 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089117128 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062709887 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.0641813 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081293892 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078552534 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065377553 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069940458 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06944597 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065879862 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066265845 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064068678 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068453024 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064719242 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068403301 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071652504 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079740625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076930219 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069156155 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0643464 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064200046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068950105 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076519388 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069267455 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069557096 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070436005 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079572479 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071046414 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065670175 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069004066 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081770881 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065300069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067439849 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062803951 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067511679 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069068783 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071709169 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081294827 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065425219 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069742616 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064996228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062313129 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077468446 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067892977 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072687103 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079179401 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069027904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06552932 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069778694 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079543714 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065323631 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063503391 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067994277 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076455164 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062934516 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068996844 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078460487 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067138503 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071969208 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078219684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070401084 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069060605 seconds)
  done (took 6.321611697 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075426585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095576849 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08292959 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08326096 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075416056 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075345516 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075584972 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075307391 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075728925 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079709824 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075643753 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114874918 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07114526 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07859635 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076035686 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077632515 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077393393 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077765797 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077813574 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077493715 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077892185 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084708683 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077567048 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084824153 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081894679 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07296229 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07767539 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077755706 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085375917 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077672426 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09122779 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077560665 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077074759 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085045775 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081180765 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075783227 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066787203 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075633604 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077100169 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077343373 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072450065 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083634494 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076754634 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073280308 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078180232 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077219165 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084967672 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081664386 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079924558 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082054842 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076350399 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08294024 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075441598 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074891878 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082862349 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084838515 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082511491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082885324 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075302859 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082214712 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083018248 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085168459 seconds)
  done (took 6.282278495 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081659591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074516685 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081225365 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061418071 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064240359 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071819804 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064231031 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064770054 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074132169 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073893789 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076340743 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071759834 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07464768 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076908089 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073995371 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07653946 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073885106 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073883114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075999756 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073930038 seconds)
  done (took 2.802738331 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074699967 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082551998 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066172089 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071645939 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06961286 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071165429 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068677478 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069483246 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06690051 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069524572 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075821601 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07580126 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067313639 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071214096 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075689532 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071290696 seconds)
  done (took 2.485331404 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083446654 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073336918 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080738599 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066784406 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066460933 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062165475 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065466716 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061267555 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062215309 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077588197 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065626477 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076822181 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06624346 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06503565 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062865111 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070827773 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062595758 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06496983 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067527757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08065832 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071798298 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065987163 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070868083 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06745243 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070002063 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072057224 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066894108 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067584376 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065041447 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067985634 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070620284 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071109988 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064267633 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065505072 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066194236 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065127356 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067332378 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067892339 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072697247 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06700012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065190475 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069919032 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067633883 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067979144 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063615481 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068050076 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06334533 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069237102 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064990127 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070022569 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066817115 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069685986 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067695988 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07389342 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070018025 seconds)
  done (took 5.102209204 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079468173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07005078 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061264904 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063792263 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068761251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066688861 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069535904 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066584532 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066992808 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063813459 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06699184 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068449164 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066621914 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069097226 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066749217 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069561003 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061362464 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066805184 seconds)
  done (took 2.561370137 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071321384 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065780152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072635636 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06511627 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065781523 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068022479 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061493747 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064489443 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06456857 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065627329 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065684724 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068482301 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064258479 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068326671 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065472246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065390163 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067803402 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065107253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067136854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063448982 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069323658 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066569242 seconds)
  done (took 2.8046287 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09398578 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082673578 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139798915 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078885959 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084319494 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07124307 seconds)
  done (took 1.89547228 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091696223 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099533837 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06602955 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069168636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075164693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069009065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069650402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069574235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077378919 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075574439 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070085253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078402019 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077984488 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077510955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076983943 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076833839 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070205694 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070695576 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066412823 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08419904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071320022 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079773448 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071618345 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071176071 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070306101 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076539634 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077475009 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076014904 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06985115 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07808797 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074932043 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069594804 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07808656 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075488826 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068614806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077892216 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070386452 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082640927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075296567 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076710717 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068734914 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075527167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077454121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074167685 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077778545 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070055034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07386108 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069511577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070151709 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085801816 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07526936 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07651576 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078029231 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078427243 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077966886 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084771683 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075369366 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077662428 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074816948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075511638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07668908 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074954455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076828296 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076703748 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075540901 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077470663 seconds)
  done (took 6.325698598 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103369339 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066801171 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069806904 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076170008 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07690565 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069388187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069774874 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070015845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069269543 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06638206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107307804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070695572 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07712586 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076865428 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070136217 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069585945 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069668919 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077244002 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066319605 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085133519 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069529465 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07663989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077028855 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077128832 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07533071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075214722 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069359824 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069660937 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069784452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06920107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07413606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070091459 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077226639 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067091866 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076970801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069840376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069157481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074024519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069900909 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075092809 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076997943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082625419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069668036 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069175385 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075265326 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069369977 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069711073 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066439422 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069805136 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066830542 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075689844 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075735927 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075852655 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076651511 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069869683 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069712986 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069979278 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069106556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069632063 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075040187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077261877 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069384653 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085123458 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069715931 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069713196 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077103325 seconds)
  done (took 6.21149458 seconds)
done (took 129.372206388 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187429734 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164520661 seconds)
  done (took 1.69099791 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068737423 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098270772 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076694811 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128319894 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066527617 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09980132 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099042361 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077583252 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065968477 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065815666 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065984786 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068489817 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131019557 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066009707 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066040046 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068670464 seconds)
  done (took 2.664703807 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099181125 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161050145 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102073038 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065110548 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098612089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072719517 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064705682 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075155631 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070757189 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065702788 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07270772 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07031488 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064892558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070214572 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071076282 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072304535 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065146826 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072882961 seconds)
  done (took 2.789034623 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098596561 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090605249 seconds)
  done (took 1.548580513 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157234574 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105615804 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14731375 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350929376 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163624042 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147516874 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144260527 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143882472 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116341994 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138855607 seconds)
  done (took 2.973003165 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099532103 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15475813 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265278302 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116395677 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073576772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093588534 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117881405 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07846456 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07994037 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079843976 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079638603 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076194893 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099205959 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072585579 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073377987 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075560611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102407857 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073414592 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073965201 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07587033 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100084309 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065857207 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072507086 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073010846 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077612905 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07968217 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068084228 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06743512 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078103901 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075692767 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077796935 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09311432 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076792386 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105207032 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071062853 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105813429 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076700181 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073480646 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074469201 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073013032 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078080553 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078168799 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072307741 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075608571 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0661775 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076264492 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065679872 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065536446 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076715949 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066902727 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076798449 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075277394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104748395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06641497 seconds)
  done (took 5.974876453 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102174678 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10481001 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071847355 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112362516 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102092136 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071910125 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102488964 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095267 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103515143 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070007806 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068755538 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070340133 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081725522 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082637167 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114739922 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106348986 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073760396 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071059162 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107035539 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104535877 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068201545 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096869592 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090771433 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10265648 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067732676 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070202123 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067926501 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070115605 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076439737 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078041716 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069592092 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080349697 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085022044 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077551285 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066847653 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067492548 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068177568 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079281536 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079145004 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078490079 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077094961 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067712649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067872459 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069356159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070190578 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069024221 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080320769 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082440291 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081060301 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071603157 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072453762 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069829284 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071307538 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082398928 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079557001 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080288734 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079222321 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068643036 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067752679 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07231971 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080369292 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078640884 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079018547 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069304506 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078208585 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068489118 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079469802 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084859876 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067752069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069887798 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068054268 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069344828 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069249329 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077608992 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076940547 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069899956 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069021904 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06792722 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081550849 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079120165 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06967011 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077500543 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068838563 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070470741 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071822683 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071618501 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079310268 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081619039 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070436284 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067890642 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069450084 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068560862 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067281628 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076566291 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079306389 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078399725 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077326216 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068245485 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076724378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076167481 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068828054 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07788578 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06743402 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069151414 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068066967 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076609946 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075112012 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078652121 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068769985 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066938473 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075647603 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077716654 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066515933 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075232107 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077598964 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076357432 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066187236 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078703667 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067336957 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077270315 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067925726 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077266163 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066785447 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077270378 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06715678 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066453409 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067444581 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076599925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07106136 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066835046 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068146005 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067841009 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076374318 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079900267 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068729078 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07616334 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075552164 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068603204 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076016181 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066934063 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07626601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06803207 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067771038 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064735235 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077569997 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066597612 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066869885 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067172658 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076893319 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066078926 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075483838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074099623 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06528635 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077334032 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075990856 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073890337 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075553556 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06784289 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066347822 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066258678 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066927315 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07456163 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075762028 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067617802 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06612966 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074045482 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075315909 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065262826 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074558094 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074790419 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07427059 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066383567 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067569707 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077023035 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076531192 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074710401 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074406966 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074235 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066582401 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073832864 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07449956 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065824846 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081146535 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065184423 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079029198 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074698534 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073671771 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075004313 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076418881 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076092494 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076685751 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078943653 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066449327 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065787673 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075903311 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066074502 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066654511 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074881704 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06755029 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067580505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079007573 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066710292 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076153005 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065556192 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075223016 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065079827 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068132659 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079848664 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06623241 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06702932 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075779365 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068041398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074194534 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076976785 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074011264 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066163077 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067775092 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.310259039 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079986739 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069579352 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07002191 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073024482 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081792377 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07859478 seconds)
  done (took 18.337004223 seconds)
done (took 37.339881705 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216400526 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157157996 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18607262 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121592817 seconds)
  done (took 2.172981461 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119551017 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104234533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095826781 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067209827 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101378549 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067252973 seconds)
  done (took 1.979691213 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314487277 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214122465 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191671927 seconds)
  done (took 2.141667357 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204697029 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192921208 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.42744914 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.272350275 seconds)
  done (took 2.633987162 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145098602 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09111299 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068405779 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085183299 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134284396 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161005524 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101346242 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126377069 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079309702 seconds)
  done (took 2.467975171 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152728245 seconds)
done (took 12.977489143 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096825749 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.226728788 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.129875844 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066877423 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1908868 seconds)
    (6/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.227678411 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.223424314 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083676511 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.201415687 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112901232 seconds)
    (11/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079198723 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075928503 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074635736 seconds)
    (14/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.229194879 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076694218 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085334715 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.160520975 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185512109 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078541816 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.158132232 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103454277 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075432219 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066927225 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092927474 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079629199 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.194307132 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091231053 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.1629023 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07000672 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091351609 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114893603 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.152416515 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.218734725 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078198467 seconds)
    (35/309) benchmarking ("sort", Float64, false)...
    done (took 0.133282332 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.224896938 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100483777 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073616061 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076469491 seconds)
    (40/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092353267 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219416031 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073489221 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.135714899 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093833434 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072819591 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117589103 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.196948744 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.187577443 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075278251 seconds)
    (50/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.161559359 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056870283 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093719841 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134039937 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078667568 seconds)
    (55/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.124246174 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094629776 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082900737 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.170312367 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.166482117 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07926404 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.198666735 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087029403 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170479908 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174685979 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079020899 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076037208 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093376296 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073657975 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073903301 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1410797 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111738122 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065351329 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141200351 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090409875 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072942567 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093563141 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146547181 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191596146 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054041194 seconds)
    (80/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067211915 seconds)
    (81/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112745589 seconds)
    (82/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071729725 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050565315 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052503344 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.180214721 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.220571264 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080068298 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068697248 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112492415 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075204574 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157242509 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066994511 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09353307 seconds)
    (94/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053050695 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05187127 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066691542 seconds)
    (97/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068416262 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067871317 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.0768352 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070688483 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089492186 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.075890702 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073491607 seconds)
    (104/309) benchmarking ("sort", Int64, false)...
    done (took 0.066972094 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184919689 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07932134 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074008957 seconds)
    (108/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081887486 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091206608 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052431561 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087409523 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05268105 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15686556 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143711924 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095105147 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155295237 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155500953 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181762536 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051103098 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074173008 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093225112 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066498193 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173709092 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.157751364 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070729408 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068301431 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178013368 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073694445 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103816565 seconds)
    (130/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085082312 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076640791 seconds)
    (132/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110621102 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073065853 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052247031 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090974301 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144621853 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150961253 seconds)
    (138/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080190792 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051258746 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.136718385 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073749973 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185799482 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072495294 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070174136 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050785013 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071551204 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065997556 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072076274 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051606171 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194342647 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075433099 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076184472 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07215036 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089125538 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05111551 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.161837767 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066179665 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065684622 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076440644 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109976429 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155045728 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.289974273 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072987682 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065465908 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064714235 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100040185 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054386291 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074988529 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073000544 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072275038 seconds)
    (171/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100992434 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090052851 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050808727 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066614993 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065615846 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065304071 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182411805 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066023323 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050795421 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051173391 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073912817 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051116874 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091842385 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072738283 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087201058 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155689168 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081624201 seconds)
    (188/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067211037 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072563689 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088380741 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05098439 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194622299 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073938882 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139664709 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086493039 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076991313 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107055581 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070780931 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051135373 seconds)
    (200/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07198255 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.207417314 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052687344 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066051395 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052060533 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068799267 seconds)
    (206/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081256034 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102282105 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091949139 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050984913 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139117133 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05159436 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06713133 seconds)
    (213/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05278459 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125447382 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073364577 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136721316 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075091603 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073868459 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091675649 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07649527 seconds)
    (221/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053105764 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093081909 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061079217 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052657122 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.176296051 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07096738 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052587758 seconds)
    (228/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068030978 seconds)
    (229/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068795145 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.208162172 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065643948 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064724853 seconds)
    (233/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109009069 seconds)
    (234/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05142443 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050930534 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062747908 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06668583 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052715983 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141377966 seconds)
    (240/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065073696 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051499921 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062147304 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065241796 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051246133 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066854171 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050952982 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099067869 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050902252 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094749043 seconds)
    (250/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07246988 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072038467 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141591304 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065887102 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069860979 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050903898 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078517436 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051597631 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067067885 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053344883 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07293837 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073787172 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068264132 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06457782 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065921364 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074195328 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05168079 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090552444 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065343626 seconds)
    (269/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051588475 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061524491 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108618182 seconds)
    (272/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050260709 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051634417 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145934937 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051518722 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065063383 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065102141 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071813218 seconds)
    (279/309) benchmarking ("sort", Int8, false)...
    done (took 0.140749548 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068198201 seconds)
    (281/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120643061 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065910381 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093099225 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052402172 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052234559 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07084265 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064994995 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 0.131066083 seconds)
    (289/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051707412 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072951221 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090277387 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064438116 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064115749 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072732941 seconds)
    (295/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06088433 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050467945 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072052304 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065341203 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067914684 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071675283 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065201737 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110375855 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050618384 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070922716 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053123987 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050947328 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087656551 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068286333 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170635371 seconds)
  done (took 31.219986733 seconds)
done (took 32.653756015 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085329197 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092690646 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075734961 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094062866 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08177688 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07660109 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073339548 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078802824 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080122568 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082095642 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07818707 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054459144 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074196769 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074292153 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075115955 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091036478 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079063062 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073548929 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073005045 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064462998 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073086108 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065527109 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067498108 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053920994 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078233499 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071708253 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071936377 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074125755 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06533101 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065620271 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069612882 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073744479 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065572194 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078303379 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072356588 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073404629 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074236821 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076720363 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068007067 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06602365 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074577382 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065539425 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073161571 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073995493 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072167686 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07166907 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073315095 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07778304 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090866705 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068262172 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075304273 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076128134 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07593383 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072666663 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069509234 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073340492 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070500077 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090704825 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073487655 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067888647 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073992017 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074253025 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071509962 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073012761 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073332553 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075066239 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075372171 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07147436 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075212709 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071907755 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065366637 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073186113 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068626258 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065144714 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075884462 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077184332 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063752645 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071364167 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072697868 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070700412 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064389869 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06700506 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06687179 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071478995 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066918155 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054440968 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069362163 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072449636 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064344845 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073528987 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072079244 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072611531 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067278987 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075985482 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064457635 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070953594 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065543968 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065824525 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066670212 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069422441 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065201946 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067315691 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074599822 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066537634 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071879902 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079158922 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065050507 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071738297 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063855704 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064585694 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080245406 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074475233 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065013981 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06715615 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063944874 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072585564 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064162616 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065247092 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064707639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065236518 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07186181 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064832419 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066929753 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072922257 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077635339 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064556259 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068128147 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066826422 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065031282 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070702935 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064638613 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064989182 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066811034 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061287742 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066694943 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064752222 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072809023 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06657868 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206223739 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067912021 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074401403 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07073462 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072535447 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071221873 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063943774 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059364017 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067768291 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067714393 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067382829 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06584319 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067951871 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066065392 seconds)
done (took 12.479933532 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065795105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139972996 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097204494 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096409991 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086059539 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066662417 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076092107 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101028948 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067511035 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101966689 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087379045 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085558955 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11397506 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064428426 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066086403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069823598 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067142715 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082261643 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101658806 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086927307 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115028317 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065816727 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09231719 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089416922 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08785372 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103570204 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069576499 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070406111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0695691 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093472617 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089143182 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.0699431 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066667143 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098465242 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093593155 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083774585 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06650236 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083026187 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067108071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065914206 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067595296 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098916183 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080516688 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081161343 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070503456 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069626429 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066789689 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084148789 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090794358 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078983148 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086515562 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101697637 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068930642 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065651589 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064604926 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086009699 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065439463 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068910116 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066022086 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068649398 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065748616 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069122124 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080667744 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080495292 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070349752 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079897767 seconds)
  done (took 6.835869422 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083433543 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091840869 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083331504 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083822224 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06626991 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066800777 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066708461 seconds)
  done (took 2.064785341 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066742984 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087854884 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089189999 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089160464 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081328259 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087415915 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076254478 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066770367 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087701716 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067425205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087858256 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10019072 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069681425 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074221946 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090706863 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066365777 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090532304 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066852873 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069785577 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090535204 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069969036 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095305694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069524677 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066948385 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080598727 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066601902 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113745876 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071357059 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068192427 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069183265 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06420178 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106594613 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080280568 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074585049 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067073616 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081609187 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080734742 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064372104 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083142365 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075029039 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080051555 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067025578 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067328913 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064093477 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070810443 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076758694 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067456296 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066523388 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069457258 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086121701 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067019184 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080127423 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069250057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072102218 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068152073 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073760457 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07709182 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067239736 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086221243 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067548179 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083261388 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08281122 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080265402 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082577079 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06881986 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080907413 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080210269 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069331256 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068460629 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070001568 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083347825 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065346274 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068345798 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077132923 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06850592 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090154307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089834813 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068085819 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079926777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06720057 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066393479 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066277797 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089701111 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071856811 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065977063 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070661774 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069375863 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065313547 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065624801 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069972794 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064705809 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067750729 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06898811 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069836816 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069485326 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082880447 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068908548 seconds)
  done (took 8.831615091 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069449792 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067676937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069468904 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067788013 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067893077 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067637791 seconds)
  done (took 1.956059707 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092687825 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06818125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080499353 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071730953 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104645667 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086920057 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08687585 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078517744 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083390065 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079433658 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086800519 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088210596 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091814477 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072336414 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086299237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071583025 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086972173 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074680797 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077936518 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072658237 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086441296 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072411731 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073107327 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081131846 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076152258 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071390018 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067143852 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078128402 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077882019 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078148453 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07181694 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076223446 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070726459 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077978905 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08709321 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070174327 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071237287 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07688351 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072659356 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07583416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087939934 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072155026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074136219 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076872411 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077785365 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070537609 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076595193 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074423423 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085886531 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076585975 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076818547 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071317689 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075528079 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077493716 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070558726 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077563566 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076811337 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086884951 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072477043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070735839 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068530107 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076298844 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077596387 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07608056 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079005755 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077661569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07057732 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072916319 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072672949 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071841065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077023008 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068635949 seconds)
  done (took 7.098307737 seconds)
done (took 28.29888049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535250741 seconds)
  done (took 2.051034378 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615362818 seconds)
  done (took 2.154223319 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.477182857 seconds)
  done (took 8.0125882 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399671505 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524262611 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725842211 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132004976 seconds)
  done (took 3.358182333 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700253123 seconds)
  done (took 2.24607828 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214094348 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202308625 seconds)
  done (took 1.969470893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375235599 seconds)
  done (took 1.913681426 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130901738 seconds)
  done (took 2.669445582 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25746648 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174920459 seconds)
  done (took 1.975222035 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473427044 seconds)
  done (took 2.015413704 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.862907038 seconds)
  done (took 6.405979344 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212497929 seconds)
  done (took 1.797807682 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238938738 seconds)
  done (took 1.785536132 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715106528 seconds)
  done (took 3.259930624 seconds)
done (took 43.156929308 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079577252 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080943092 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080273219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0781809 seconds)
  done (took 1.849880377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076542963 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07217706 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075542968 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072724822 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077226491 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073289971 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074706288 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075276934 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072725899 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072934331 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072169919 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072355925 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074887677 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073675831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071095082 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075049022 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075774231 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07240263 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075658758 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072675858 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070394428 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074468034 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075115507 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07129776 seconds)
  done (took 3.316821696 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077628448 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072757807 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074344983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072143324 seconds)
  done (took 1.849587565 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078077096 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095573174 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089559488 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077610102 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091991078 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086256518 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069001969 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069030839 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070423143 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076787575 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067474916 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095745071 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087629805 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076884763 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079199477 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065407939 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067957381 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086963041 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077998544 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078324769 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070101615 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077399015 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067676135 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088129819 seconds)
  done (took 3.440608859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085255916 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104572119 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080907953 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089372638 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091400632 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064931126 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086889988 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090616412 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12613367 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064786369 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070532677 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065513226 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072963485 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06527754 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080335451 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107583796 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110923739 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068456291 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097158162 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065067142 seconds)
  done (took 3.249065557 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072333642 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069646004 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065282359 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068088263 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07678648 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07215554 seconds)
  done (took 1.986783949 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068070157 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068166983 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067362097 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066747698 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071747809 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067203706 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065964875 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067822112 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067521784 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067227259 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066341778 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065661316 seconds)
  done (took 2.367845533 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.199840564 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069282342 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068610174 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065930066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07026514 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06631359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080703413 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067506367 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091503892 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066316776 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066199664 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067821963 seconds)
  done (took 2.540729545 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206730671 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075739829 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237913198 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149789691 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110237779 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115235026 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112180749 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113862212 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141017273 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099660198 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167495241 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166042152 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106990814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136300362 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088522064 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100389048 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153250421 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162125601 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104644702 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166231633 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144760349 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12503174 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148085658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105812917 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105051982 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121496498 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070777315 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078929526 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16855246 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131928711 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142900057 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109813352 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092191902 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176017607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171093271 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140274055 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146074447 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08396767 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104045739 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133236637 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199393604 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087999513 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160073595 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108349658 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216732365 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133203797 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118760201 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120150465 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105214117 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089534829 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145787657 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182984771 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136195952 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087563552 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123724069 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113068459 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115018656 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113246689 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182205267 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162263689 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128123602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071123725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107771306 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153457686 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133413443 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108346128 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124423693 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092045504 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134833188 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155417525 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119564769 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143962718 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116023641 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088228244 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119218809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139401112 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126683926 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160199902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123358056 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072656466 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122809481 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101062531 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080436253 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145792664 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074729819 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175559937 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09842605 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108068199 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124280089 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108891862 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108002439 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157417799 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142943139 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10206341 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064899118 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244174009 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120928777 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145290636 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086637671 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110165716 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118183028 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077075554 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136412821 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074374564 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122357074 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077911912 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127287537 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129822831 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076904262 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124958086 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103905006 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100899961 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131562177 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160178939 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087860612 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081215123 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168307971 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121224056 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10359853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143704583 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156732314 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101058601 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100791671 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149232032 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17907582 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088149466 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162185418 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106453369 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082876873 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087428951 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122887783 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110677425 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123408973 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081088455 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116952832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167776247 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074489802 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094995858 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133060863 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078569903 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079970755 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104396248 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10454442 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095226958 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099465309 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101550414 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135646542 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122438601 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104705799 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122837228 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096847252 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312584484 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087978345 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102581939 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104032536 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070075292 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135008838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156258375 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079177903 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163917452 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123500016 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116368807 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118938215 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084388707 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140679276 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078863244 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070231728 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144071542 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110505294 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109763745 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150938834 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11580682 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125638001 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11838461 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132616597 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130765102 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130242426 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105669333 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088122726 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111880472 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126211274 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072648795 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090178825 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07887739 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104293906 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094967214 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082830013 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140111521 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123474609 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108757458 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111538026 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095962194 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146941138 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076352066 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126801243 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118705722 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095339491 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15223854 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152393261 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130414006 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098225013 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135430207 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069783355 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073461267 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087309095 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122038104 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08186086 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082539749 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25847517 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147521351 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130237389 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135822507 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124015139 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120120571 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154744895 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070137408 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117221399 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147100342 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121509896 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103848435 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089765343 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09939112 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143440502 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106583817 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183175944 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116635539 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123577362 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152653815 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100578779 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079130056 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103718826 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135833448 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10329832 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143284782 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099441085 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08744374 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110422738 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073823134 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098221154 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125203111 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117412053 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134131881 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115017946 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131898754 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076946953 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114526369 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120728743 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12090724 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064005016 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119591189 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161585511 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094615369 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118170415 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151709176 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078162375 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132700914 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173683189 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143029624 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084189182 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250425546 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11988449 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129407043 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119815644 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140537147 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10669754 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136491518 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110106861 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085462185 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087765887 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096965732 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105826687 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094574175 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105643406 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113069136 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096334734 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132523085 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102759571 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109628283 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118428861 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096719881 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090816988 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09687276 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177347554 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118040421 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170489063 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099422184 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145612834 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163386411 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074296356 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078776246 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078213302 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139275747 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084198738 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129297625 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10636718 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116563561 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123267282 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141630286 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094822688 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068106136 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108269097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132123722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12431536 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097763443 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102610205 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163040638 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100736558 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078824101 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11290674 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115910134 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101988632 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170007534 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060941324 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104808304 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075554661 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080203725 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126996818 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293072052 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080793811 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103033413 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119770787 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111893915 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128992909 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103568463 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109132585 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126092891 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149675876 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127960497 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089408073 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111245076 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128196351 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155917679 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104109461 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096084001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172509604 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152302814 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159631819 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087056844 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114347841 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113416714 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108432595 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137624339 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083135751 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161796245 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080930466 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135400577 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102709814 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089068817 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127850655 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107372877 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087017063 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147103088 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117001522 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081825605 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076751775 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116601741 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11835242 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105780521 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075002036 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137975235 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.0730605 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131478029 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159044974 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080042139 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106467907 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095915143 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078723749 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105355082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100873881 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086313711 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.238818138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175854439 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087953553 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151157299 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132757586 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112843109 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137372494 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101254779 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638911841 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077522704 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152458744 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11594887 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175404182 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100104816 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118699872 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110591872 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123809791 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144615759 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104546924 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179870705 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132138394 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114772285 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078852018 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102011933 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103067654 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088004854 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106464681 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113548682 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115445703 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092539969 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115322969 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123384912 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081596363 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09503375 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15573773 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116235872 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143443085 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140982169 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085596152 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117541233 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137202904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079800379 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120457011 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150681363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104976459 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098823275 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079823473 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099557574 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156752875 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072857707 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157327104 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118477555 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252808667 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114294239 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113024744 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130546873 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10715585 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121559234 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092727121 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110120402 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112394942 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081088012 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077044868 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10499387 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111401143 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09893127 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097040557 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099479238 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152854544 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071727747 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098696397 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114236245 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143592903 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173387699 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088648027 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08188838 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117903199 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11274796 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112377508 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121713331 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078146676 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080881953 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08055186 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078183274 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108873875 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112229354 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113828213 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110999893 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162744509 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082587274 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2296325 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095112938 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104849466 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069379079 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077847933 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095298325 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097465629 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106575734 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108631087 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15851864 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094918575 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089508531 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091161843 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073663613 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082912852 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128669289 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109114241 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117515036 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098054506 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061879482 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106474648 seconds)
  done (took 58.719067955 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109937692 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082234779 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093973487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144282531 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122241377 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201915164 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153960682 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188106059 seconds)
  done (took 2.774987846 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067956617 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095167748 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102863353 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083546992 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066167097 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068113632 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230740893 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080486003 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066286972 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098431553 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.0774695 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067923588 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425614964 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065752492 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066854285 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060952362 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067313091 seconds)
  done (took 3.445968829 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38448252 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.607896974 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350891246 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071996554 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.459788108 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084177282 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.157386352 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127381699 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072238675 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538079152 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402911746 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126365814 seconds)
  done (took 18.052468134 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075488485 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068993765 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083268046 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083210221 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071794198 seconds)
  done (took 2.050237294 seconds)
done (took 107.221900881 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080571257 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.604350429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052862214 seconds)
  done (took 2.352391854 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082750611 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085371654 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085194291 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082867163 seconds)
  done (took 2.007354456 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074067328 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076194176 seconds)
  done (took 1.8165671 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231606337 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162897654 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095197357 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082793541 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078666529 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079719566 seconds)
  done (took 1.9135421 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071556828 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075027892 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073085815 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076440546 seconds)
  done (took 1.966147781 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076388416 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051967654 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054527993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057409597 seconds)
  done (took 1.907697274 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086313235 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078845212 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078149128 seconds)
  done (took 1.91321111 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102375252 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085522858 seconds)
  done (took 1.856196527 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081223056 seconds)
  done (took 1.748479432 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099842252 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102136771 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131004287 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110233408 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139143813 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109130036 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083905677 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08568835 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076510852 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086718969 seconds)
  done (took 2.692268371 seconds)
done (took 22.408621863 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078666276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368760292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360442415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089787192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670920216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356110766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987383978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092756592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114726886 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067017506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084622453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65834366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982282705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324639219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965628335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318686091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648319391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067660745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067866901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067588556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973751881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067406607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067713202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067965583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649009093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371482673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0676113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318362731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06777673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069457469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35478969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067949309 seconds)
  done (took 16.174563405 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070454097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120192224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073173394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085119982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070378205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069522937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071221757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068649733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119727378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067906854 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085552686 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067357462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07216301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085462029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087489775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06775282 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068633687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068148979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067644644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068301103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087012017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068189944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068438292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06869157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067881376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080165608 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068523104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068018191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068490107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07017878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071300719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068799802 seconds)
  done (took 4.09232061 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114557051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124779439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073545126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10347471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111317548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069750433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142758376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09362851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126627225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067786092 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084740667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06805448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102134826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068565889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087763217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068007606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068976812 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06893378 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068445437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068800651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08736247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068053627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068062197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068406232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068559651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081623638 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068255273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06846457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068229428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07018683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071168505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068472129 seconds)
  done (took 4.322598006 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072989178 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075457638 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082893406 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084182049 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070114619 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071699618 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072607309 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069564332 seconds)
  done (took 2.285745226 seconds)
done (took 28.552748789 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07870992 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067965551 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072782108 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082143811 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073015911 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078095856 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066902554 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075683318 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072552974 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072862213 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074452469 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067535162 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071435257 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066750039 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073958081 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067579214 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079381708 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071261255 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078796099 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079335903 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069544696 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073070271 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074724257 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079004448 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078641877 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078866931 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077273606 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072401987 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06863208 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070408952 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076720684 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083737183 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06844288 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079107821 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06757572 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066937211 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071712246 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067917355 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079130461 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076694126 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069327683 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076009367 seconds)
  done (took 4.766165509 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08739711 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092271048 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084779175 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061329599 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066617635 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065607196 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089446898 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059576892 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059730056 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088389959 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055517499 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05981476 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065499647 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053357237 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06052583 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056512141 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061893042 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055486596 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060330939 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059662499 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088602647 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053259154 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077614422 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063226382 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055980673 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061707366 seconds)
  done (took 3.435166957 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074552856 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08500731 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09036634 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131730501 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105796518 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079272649 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079250931 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095683791 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088965826 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066772789 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070708805 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092707091 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089945989 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07381461 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067265894 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08641982 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08331904 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068888785 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073101302 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09427817 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086808016 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085617555 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096100926 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083751318 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066690324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070327223 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071479081 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081547645 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072834985 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076981459 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071456829 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071155764 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069824724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079425205 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07162311 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069531203 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092709655 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077784798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079454784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068277987 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075893842 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068671039 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092484579 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.137308167 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067286728 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074242093 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071773081 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077501921 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067920592 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088725011 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079211354 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067336255 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070825792 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067642898 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068240976 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08126777 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070290263 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070130336 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077192408 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073968524 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092617106 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072348403 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083726691 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067670798 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075835297 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06698316 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068697933 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067292215 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095867269 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0697348 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111334261 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069114211 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068929067 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076816481 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076036814 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074612383 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068576537 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084089432 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078389459 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071128084 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076503793 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071458631 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070612274 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092041211 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070065824 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069011249 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068754427 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073680906 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070767239 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07069185 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080963935 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067177594 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070571895 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084897319 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067765005 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068667268 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073207096 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073133896 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067286281 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079005371 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072344576 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068428181 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077414237 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067644427 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071519099 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08162592 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073868246 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06622068 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071795093 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073267596 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068984733 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069484421 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070534307 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06942384 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076764121 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075033751 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072110642 seconds)
  done (took 10.71531062 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164724505 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156346024 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070168007 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14890218 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076123724 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078844608 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150977789 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094925319 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068358126 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068947963 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068339413 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110464743 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106259717 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116379702 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078684843 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068085064 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084913971 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114522363 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153058919 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147292889 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08556713 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077056149 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070248387 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068748672 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070162252 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078221061 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08570204 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07649938 seconds)
  done (took 4.461270889 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080455668 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105423323 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074604116 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090956588 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090244481 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067523347 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069913647 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069301441 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081723473 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078257347 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067400351 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073304663 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074714265 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071143146 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068602114 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075058148 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075195357 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069253153 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071465322 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073076172 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078515628 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092280738 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071348991 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067243016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072752136 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067480843 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063844249 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084030378 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067878038 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09558205 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065729608 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072879885 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082613292 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068735693 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067930358 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067572852 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067346713 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067634459 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069147741 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066330766 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066121095 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057214132 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066218061 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07937028 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074491687 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05657593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072261754 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072605218 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072929939 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065464037 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070560474 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070326281 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070489154 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075242645 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071652756 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073388904 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06908481 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074307979 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077122396 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067668693 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064924574 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065883475 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072710542 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064860009 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07651694 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072740721 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066180568 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067639429 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069530103 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074940639 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067608229 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071675548 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064927388 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069652911 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071889124 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06974602 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069213667 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066232703 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067939108 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068171618 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055702035 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067760355 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053579362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070899018 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06601275 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066028535 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067816163 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072782718 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079107986 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069189409 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073810835 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068673466 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067131593 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070695412 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06019199 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070702881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082954139 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082124086 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067670374 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065353119 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081492812 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072442441 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067026069 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056031612 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072626858 seconds)
  done (took 9.214802245 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089743523 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069936329 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084111446 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091431529 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086980547 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075230267 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077605448 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069208552 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08293841 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074050745 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076785762 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067730762 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078217076 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077500406 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06997638 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078201607 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072017895 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085108787 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083726973 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068591524 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077088624 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080806998 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090951476 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082475005 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081183986 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08304345 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090725988 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077652017 seconds)
  done (took 3.953458169 seconds)
done (took 38.229153011 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.777053863 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.934539495 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.762022677 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.128520932 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.985668896 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.78256441 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.953862762 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.758548076 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.124918395 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.795619184 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.962274515 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.889802384 seconds)
done (took 65.555133089 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.852282466 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.900705361 seconds)
    (2/2) benchmarking "String"...
    done (took 1.984704353 seconds)
  done (took 5.58605452 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017990521 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.327864583 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.013076449 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.759082937 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.767025504 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.104052001 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.559716253 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.269035866 seconds)
  done (took 30.501054026 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.863018386 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.995542375 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.444062142 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.473796743 seconds)
  done (took 15.523804257 seconds)
done (took 63.262175286 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.780644825 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.774106309 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.779150779 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.745410661 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.820788268 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.778091204 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.999872901 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.781693984 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.761088565 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.754694513 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.764624905 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.200046006 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.77335365 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.089041814 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.765512416 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.770158499 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.812176936 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.284823561 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.923734842 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.7792092 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.777960543 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.821187525 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.766444927 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.769687733 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.796480054 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.766206651 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204713582 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.763903239 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.391327598 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.763042013 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.797979146 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.311396119 seconds)
  done (took 203.769944768 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.762651679 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.932265231 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.963458438 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.786365998 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.432940692 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.945574391 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.884752309 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.443428654 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.765113664 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.788116214 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.087527955 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.763334148 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.115518239 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.720323523 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.792768392 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.874126035 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.053872144 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.086703891 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.798033141 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.935916598 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.781158024 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.957294717 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.915524903 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.039637675 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.80425088 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.771157534 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.916801958 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.785427395 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963093502 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.026530418 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.81138885 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.807691969 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.984096565 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.643821002 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.77764257 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.767649373 seconds)
  done (took 171.389017964 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.178297322 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.764782077 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.764249457 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.764590444 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.777580286 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.763875661 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.887538406 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896956167 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.365848533 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.773793077 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.769415818 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.817053715 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.766556241 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596379437 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.765514114 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833297884 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.780612569 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.766487508 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.781168046 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.794719269 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.765712476 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.765231347 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892856059 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.777722546 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.158572084 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772435719 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.76632617 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.771315006 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.13805413 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765985211 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771695955 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.026070747 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.766003765 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765023079 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.662761422 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.41268854 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.860009315 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.767372818 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770787743 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.76644566 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.984979566 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767270661 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.767051354 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.769329459 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940903036 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.766444833 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.767316942 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.893259165 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.28167419 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.767051078 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.767866116 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.7675487 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.801731297 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.480773699 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.769011709 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.766540327 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.767016805 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.769771347 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.766193598 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.766498699 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.773895466 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.581495643 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.842302081 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.769159389 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.770869691 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774656492 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.768437186 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.009374336 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76869936 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.54441216 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.828160882 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.012062465 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892915081 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.770651477 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83547131 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862435595 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.7692393 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.768366028 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.768865596 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.769041635 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.850388256 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.768982287 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.892012919 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.776397988 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.770143736 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.819881114 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.837152194 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.768702871 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.670805276 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.772117591 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.769434578 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.090955349 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839817249 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.768645577 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.769580818 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769385636 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.904621351 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898997092 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.572617274 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.772668354 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.559724785 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.773384511 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.921019529 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.769862171 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.958901665 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.773420403 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851222078 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773915736 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.770943476 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.768435004 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.802361053 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.770512867 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.828992754 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.773830061 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.144601981 seconds)
  done (took 401.625098979 seconds)
done (took 780.718371268 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423818035 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.387767996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.496645787 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413572859 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.383533 seconds)
  done (took 13.814727382 seconds)
done (took 15.523957815 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.862175145 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.862597123 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.794074995 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.860720049 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791029249 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.858765261 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843089987 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.795389742 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.827846043 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.796333423 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830017708 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796239457 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784134856 seconds)
  done (took 25.41268389 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010918738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.015501551 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849379582 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.006950741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826925833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.005841346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.93661573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.929134754 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.929426212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.794415832 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.790924114 seconds)
  done (took 22.808195296 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.01166439 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024152585 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.854196889 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012133124 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.82986116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008510535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940239259 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.930029236 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.930696598 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.792627682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791432363 seconds)
  done (took 22.836548262 seconds)
done (took 72.766113593 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.780466061 seconds)
  done (took 3.491116013 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.806279092 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.96743793 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.787839127 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.785476619 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.781105032 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.782800791 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.786113095 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.781530199 seconds)
  done (took 16.190233595 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.786252454 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.784148844 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.784065767 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.787123667 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.784116591 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.786562447 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.786204503 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.783791436 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.784770919 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.788066835 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.783812402 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.78741874 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.787700868 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.785266743 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.784738851 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.787287955 seconds)
  done (took 30.284004839 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.786775457 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.785169568 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.783950196 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.785859405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.78519983 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.785368667 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.784766342 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.784804286 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.783870775 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.785538139 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.786038118 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.78465934 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.784576967 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.78430837 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.785635578 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.785915063 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.78535279 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.784494524 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790083735 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.786763506 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.785454237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.784597217 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.785906388 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.786746318 seconds)
  done (took 44.56780133 seconds)
done (took 96.243788383 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.657169607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.159559825 seconds)
  done (took 8.530185396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.790894828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.78849368 seconds)
  done (took 5.327003709 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.788614988 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.78880103 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.788815837 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.788244243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.788894907 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.788047972 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.788664697 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.788761061 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.788105127 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.789880162 seconds)
  done (took 19.599948143 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.789236806 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.787852339 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.786067185 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.789864811 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.789514041 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.787678889 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.789341544 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.78950928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.789832159 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.787875592 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.789139478 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.786918506 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.79016663 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.787548067 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.790032301 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.788374177 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.787314994 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.787777743 seconds)
  done (took 33.909331256 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.789895189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.790571001 seconds)
  done (took 5.296480896 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.788066726 seconds)
    (2/7) benchmarking "second"...
    done (took 1.787139846 seconds)
    (3/7) benchmarking "month"...
    done (took 1.786673845 seconds)
    (4/7) benchmarking "year"...
    done (took 1.787694574 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.787638409 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.787110534 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.788110564 seconds)
  done (took 14.228262214 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.791477313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.94397719 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.013214949 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.416546947 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.79201291 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.794370521 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.748499457 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.794052202 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.796617449 seconds)
  done (took 19.806376772 seconds)
done (took 108.410325124 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596603369 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.780279117 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.17207932 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.883949746 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.797048996 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.124146288 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.815541681 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.088673544 seconds)
done (took 42.974920108 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.841615547 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.324305696 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.358925916 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.154761736 seconds)
  done (took 12.553861412 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.764993463 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.302697485 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813707906 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.368584184 seconds)
  done (took 19.988446774 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.151442234 seconds)
    (2/2) benchmarking "read"...
    done (took 2.130276902 seconds)
  done (took 6.004209279 seconds)
done (took 47.106558871 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792440828 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.793765197 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.792619304 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.789821875 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.789461077 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.792980177 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.79065626 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.789798925 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.792914075 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.79323098 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.790679329 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.792953156 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.793280136 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793891834 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790357678 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790048129 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79273393 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.793550226 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.79095039 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791336782 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790752356 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793261744 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.791329642 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.790397186 seconds)
  done (took 44.721002293 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.793379925 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.791986071 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.793748565 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.793956283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.791735334 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.793308387 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.794301194 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.791610208 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.794556045 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.793962714 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791623363 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.79301744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.794565805 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.791773058 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794584288 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.792920685 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.796268862 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792662688 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795224279 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.790967075 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.795339668 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79296537 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.792872955 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794843168 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.79202943 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793750957 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.794714331 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.793406866 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794848598 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.792875558 seconds)
  done (took 55.524170475 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.799935806 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.80379325 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.795761039 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.795188968 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.795383377 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.79586446 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795491585 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.796028339 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.795923971 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.795979434 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.796357274 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.796867241 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.7958231 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.795979479 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.796332963 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.795896894 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.797692175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.795642412 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.796430885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.796473943 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.796744072 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.796118011 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.796382759 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.795731827 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.796828218 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.796183894 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.796508542 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.796950435 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.797791554 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.796920117 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.797553871 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797364133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.797178281 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.798137442 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.798046176 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.797675662 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.803255835 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.805399626 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.797297702 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.797628761 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.798332409 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.797532368 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.797799195 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.798424672 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.796642494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.798569789 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.797661173 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.797661867 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.797906738 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.797134807 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.798270504 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.798205955 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.799110722 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.798406344 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.798109795 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.79756505 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.799055653 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.797698866 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.799214843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.798526346 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.798749791 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798466676 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.79820378 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.798851547 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798123826 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.798669041 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.799216024 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.798834631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.799028213 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.799682304 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.799349547 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.799497404 seconds)
  done (took 131.16031049 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.798961969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.797150561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.796855007 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.796861538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79728346 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.800373311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.796669864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799881639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7973278 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.799070617 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80056638 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797797422 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797969348 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.801249735 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800449888 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.798070732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.800254208 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79830574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.800184408 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.801026921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799793475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.797514407 seconds)
  done (took 41.297962925 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799963032 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800650784 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.797348339 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801281185 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798029594 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800261674 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.801118716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.801115306 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801365665 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798565371 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797505287 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800354721 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797139696 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798393566 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798799048 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798975904 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801561314 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.798459447 seconds)
  done (took 34.117172289 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.797869077 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.798278919 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.800717343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799117712 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.79856948 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.801088438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79905629 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801246629 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.802561333 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.798637141 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.802704901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802073981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.801672856 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798824626 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801620377 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.800538047 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.801507212 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799592385 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801981049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799521217 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.80007161 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802122592 seconds)
  done (took 41.336103483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802267065 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.802616516 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.799763322 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.801339733 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.800482984 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.804213968 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.803897342 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.799737245 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.802472926 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.803318222 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80055359 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.804233677 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.79959531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801119211 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.801225946 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801529429 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803407565 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801836329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804070647 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800985641 seconds)
  done (took 37.766185979 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798893683 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798776609 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799374269 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798924731 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798589234 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799032714 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797875681 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.798914335 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799005373 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.799396922 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.799308437 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799043633 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798868793 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799601269 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799762128 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799587432 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798467514 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79967057 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.799307572 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799502546 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799471485 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799440585 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799692691 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799608595 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798920352 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799634755 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799485291 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801003485 seconds)
  done (took 52.108367113 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804743737 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.80532205 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.801977523 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.802370878 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.802466566 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.802930058 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.803423772 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.802634738 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.80504307 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803734834 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.806361836 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.80571971 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804974744 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.806715266 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80613739 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.806386445 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805398972 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.803595206 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804390413 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803329038 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.807171615 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806888007 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.806297977 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803970357 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80244595 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.806270332 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803418399 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803283499 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806526884 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803891876 seconds)
  done (took 55.868968793 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.824316574 seconds)
    (2/2) benchmarking "in"...
    done (took 1.824396729 seconds)
  done (took 5.379866736 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.804012362 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806291451 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.806434461 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802759464 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803573272 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.806410152 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.808432368 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803176232 seconds)
  done (took 16.172151762 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.799519133 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.807168625 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.807601152 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.806713365 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.801139038 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.801612037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806539265 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.808031865 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.801951165 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.802832183 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.80763684 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.808927421 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.80452436 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801632268 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.80135917 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802252033 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.807612852 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.802145858 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.802890919 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.807620661 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802996309 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803217926 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80350532 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.807550661 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.802717348 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.811925193 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.805176245 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.807754276 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800868107 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.80443226 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.80238509 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.806585977 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.80331678 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.803844941 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.808747439 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.803973047 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80975714 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802960411 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.807925866 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804390622 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809900212 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.806472565 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.804614029 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.804203177 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804708394 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.803200789 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.810057665 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.806956722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.802706789 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.805895177 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.815193657 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802071999 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.807236472 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808116163 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.804113447 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.809504307 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.805347292 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.807151836 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.81452834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.813727213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.81738979 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.811355828 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806097158 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.804769437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815117272 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.828770684 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80945178 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.807500126 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.80759912 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.811398398 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.809686521 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817408368 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.813040131 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.805123622 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.805188003 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.811039543 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804425636 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811709708 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81163409 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.807111934 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.806668897 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807347553 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815052274 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827245824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.804618372 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.805877208 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.806178448 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.806236331 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.807010245 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816770785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.806473355 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.813475774 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.804958385 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.806335089 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.806541797 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.807528986 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805558343 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805896331 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.809838991 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.812509155 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.806446047 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809325078 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.81454136 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807331024 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807701203 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.813222564 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.812571719 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805319181 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.812483603 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.812253094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807697797 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.806114927 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.813080214 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809592829 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81024152 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.815019149 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.808353175 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.807110766 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.808094508 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.814289629 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817024134 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.833542193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.813668564 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.81375966 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.812166551 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.821427166 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.8084885 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.810218325 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.813656467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.811375111 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.811425454 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.809866013 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.81442168 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.808291817 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.8089968 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.808353953 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.811965525 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.815166096 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.809408767 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.809264881 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.808852534 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.808901784 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.81036298 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.810539439 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.808842074 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.809211658 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.814331616 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.808335644 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.810491208 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.809505809 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.811331321 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816494255 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.808606636 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.81078338 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.808982635 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810167342 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.807504381 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.810879242 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815908546 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.816376562 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.816110759 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.81047537 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816133099 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.813577565 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.811818391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.809425693 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.812878059 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.814840357 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.815832681 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.809629584 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.816158161 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.808199184 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.812910152 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.818982086 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.816936695 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.810519087 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.812408147 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.810831313 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811430136 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811037444 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.812863057 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.817792826 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.811282044 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.81631646 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.811101369 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811881339 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.817212348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.810375075 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.810090651 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811927634 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.814243825 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.824520063 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825044669 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.819746122 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.812719959 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.822651352 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.812713343 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.816916063 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.815274084 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.813175277 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.818460599 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813150515 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810344594 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81225781 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.813108586 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.813034486 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.810999061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.818896071 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.818132604 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.812567876 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81782704 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.812229046 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812036409 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.815265923 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818699947 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813742701 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.811780225 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.815162953 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.81072208 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.811201165 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.819169751 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.813642536 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.818960899 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.816537583 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813253364 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813859859 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.81251021 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.811025728 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.820215043 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814559455 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.812985358 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818682596 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.813419258 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.812836222 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818429486 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.812521558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.811991949 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.815965115 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.820333139 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.817259703 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.816155655 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.827750894 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.821387986 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.815174138 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.815048836 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813829771 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.820752901 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.819585152 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.817265 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.813667376 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.821762275 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.814706067 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.817962573 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.815606455 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.814892204 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.81521761 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.816406739 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821055669 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.821069191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814535849 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.815969653 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.81528055 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.816083694 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81786818 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.823596036 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.820827886 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.814917523 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.817032105 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.816598413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.825310274 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.815060511 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.816787474 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.817487761 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8297577 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.825812313 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821965559 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.81644663 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.823182742 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820495305 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.815642901 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.819471119 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.814643683 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815391069 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.815513757 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.815605204 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.819909392 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816638216 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.82212667 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81750815 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.81734991 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.82649152 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.822221923 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.816251727 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.817868831 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.817638073 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.823253701 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.816319905 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.823274071 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.819068483 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818464995 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.816337051 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.8161991 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821689913 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81655988 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.819297553 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.81607529 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.817816554 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.815540521 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.818078851 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.817921176 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.82099894 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.826927202 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.82119655 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.826097294 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.819428043 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.826720505 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.819057321 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.820836454 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.8261282 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.821218782 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.816730498 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.817694821 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.818922873 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823623141 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.818931818 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.81864397 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.823402345 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.818578608 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.818982 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.824276949 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.819073274 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823841234 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.818976192 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.825861936 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.819207451 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.821944297 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819186571 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.822345867 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.819301734 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.823070233 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.817298038 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.822448811 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.820163676 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.818969034 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.817626852 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81932929 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.825629962 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.81984924 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.82512637 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.823308969 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.825130833 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825438396 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.81898569 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825498629 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.826801881 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.826491699 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820856503 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825546701 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.821553099 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.820263208 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.820245264 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.826810961 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.820673256 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818892711 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.821182962 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.820636108 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.82171428 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.830866608 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.821690794 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.821404476 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.821230534 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.82246552 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.819694602 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829910137 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845368389 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.821411789 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.831147022 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.823560069 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.821911145 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.825529695 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.822252407 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.818793758 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.823538289 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832731073 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834752652 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.82196003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.822454367 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821369903 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823065474 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.827074038 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.827316811 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.822565092 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.828472094 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.821216613 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.822100866 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824722452 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.82771802 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.821847252 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82272873 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.822545946 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.832251476 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.822728907 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.822824234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823761706 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.827824527 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.822212841 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.822269709 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.822760747 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.823029523 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.829022432 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.82435308 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829506902 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.82963088 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.825013072 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.822435492 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.823701564 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.822300444 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.823454465 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823827185 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.823501201 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824082262 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.823014542 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.823835112 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.822997394 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.821464116 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.829222181 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.82370276 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.829419848 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827304725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.831980257 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823466946 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.82636313 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.830640961 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830649337 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.82215064 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.823595281 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.830854327 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826978244 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.833823325 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.832726201 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.828659027 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824174928 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827641233 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.832457118 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.821978986 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.825232489 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.825572895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.825730106 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.824500719 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.827729119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826011863 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.831164085 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.824542125 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.824758802 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.831588264 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.826247091 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825576206 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.827161889 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.829496657 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.824371338 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.829377518 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.832467259 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.824331972 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831242053 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.826057148 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.826306869 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827657204 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.823633195 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.826865417 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.830844143 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832851479 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.826732405 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.830316467 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.826222381 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826414589 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832967621 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.830111498 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.82614294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.826376501 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.829354378 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.833281427 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.830699525 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828755306 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.826357477 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.827454863 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828947627 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.834429333 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.830438878 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.829608571 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.826418655 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.828015574 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.828074856 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.829268444 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.826299738 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.828588501 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.834609601 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829858957 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.829393999 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.838873285 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.841291442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.831454462 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.826252426 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.828550433 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.829657112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828129706 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.828978285 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.827297384 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.828951699 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.834783193 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827902864 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.83453272 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.831845516 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844612422 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.835078143 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829202821 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.827721664 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.832174184 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.835908272 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.83261685 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.835662435 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.830214528 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.831166074 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.83722876 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.831444556 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835985062 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83152016 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.830188618 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.841705539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.831872033 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.837571179 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.831688071 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.830957154 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.830520186 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.836855939 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.845507172 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836538989 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.840847067 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.859508334 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.830318269 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.830705605 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.831775073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829410424 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.831890168 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.830994718 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.831469442 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.837099065 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835753816 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.831586239 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.83216679 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837370702 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.831890078 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.836773195 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.837506852 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.831668337 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.832401883 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.834542709 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.831551409 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.837886553 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.831265057 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.832369272 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.832409437 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.831276092 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844430028 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.842093172 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.838372851 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.833171567 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.836220342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.834204236 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.835660717 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.841512928 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.844983198 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.83291812 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.831987724 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.832719542 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833754731 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.836688933 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.832921463 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.83202302 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831310134 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.836961059 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.845400073 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842548022 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836773643 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.833765704 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835309011 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.840042123 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.832722049 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835568678 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.83516567 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834605633 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.834083093 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839441896 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.84015242 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.841520721 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.836810858 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.847843816 seconds)
  done (took 1086.564265954 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836482173 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837422631 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836450784 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.837590318 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837531158 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837135004 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837608229 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83840209 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838450874 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.837089258 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.83704202 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84096458 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838181969 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83751138 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837372987 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.837182738 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837414751 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.838039401 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839729768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838222527 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.838161067 seconds)
  done (took 40.357465274 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.839877689 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.839490463 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839235741 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.841363319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838929515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.840893431 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.838782749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841069913 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842319273 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839889458 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.840673716 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839779473 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.838383848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.841483415 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83910052 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842630419 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841082453 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839901623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.841219459 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.841201759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84223202 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.841444566 seconds)
  done (took 42.257900439 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.837754318 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836480761 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.834686642 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.838743926 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.842958728 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.840484525 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.837693022 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.842888577 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.843535663 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.835507181 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.834792964 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.836042815 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.842542986 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.849453289 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.83763395 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.842503449 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.986836171 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.837698724 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838000455 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.83851008 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.840051199 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.841698821 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.84018997 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.841051369 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.836494368 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.83734585 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.844522668 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.844006963 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.838451041 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.839034765 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.843047581 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.84472238 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.835886457 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.83980679 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.837586643 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.840301376 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.848645547 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.838121184 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.841562835 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.846088238 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.847592839 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.866612395 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.840228393 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.842792196 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.846290405 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.84558667 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.841381877 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.848167849 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.842156104 seconds)
  done (took 92.142362093 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.846203262 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.847153694 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.843587524 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847213078 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.846067284 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.845825914 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.84641426 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.846648174 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.843229746 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.844053473 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.848382582 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.842680692 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.841644181 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.843729338 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.845329856 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.842853115 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.843145302 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.842382283 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.842895734 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.84189763 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.844030347 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.844264616 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.844828698 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.844347647 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.846409865 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.843191154 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.843331727 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.845267629 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.844076962 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.842955139 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.846568172 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.846501702 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.847065373 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.843256716 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.843894695 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.846432181 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.847825219 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.843753904 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.846346568 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.845181525 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.846654986 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.846881997 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.846625695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.846215226 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.844089518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.843918453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84520675 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.843940785 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.846424204 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.847642393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.847520056 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.845023724 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.849120499 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.845434323 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848205724 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.848056565 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.844384549 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.846745906 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.847462809 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.845449504 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.844285831 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84878878 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.845785092 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.848089303 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.848843949 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.84485626 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.846401738 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.845823984 seconds)
  done (took 127.261445368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842473541 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.842107932 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842152419 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842176613 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842635685 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.842153832 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842326055 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.842394563 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8419815 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843673157 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842412207 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.848900563 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.843196323 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.847807553 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843132574 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.843585307 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843280615 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844327489 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843946091 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842834548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.845256721 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.843310508 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843584176 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843718267 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846390868 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844757601 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8427345 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844571934 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845266167 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.84564575 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844203296 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.844947995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.844427747 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845105725 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.84778474 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.845626307 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.846802916 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846847186 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.846264583 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.845678133 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844909694 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844379816 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844999508 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.844004057 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844428914 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845185543 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844873378 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.844994243 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.851152299 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846295823 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.84572126 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845059374 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845973568 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845230595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846007084 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.850745348 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846259475 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845877386 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846676365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.847037449 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845824278 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.852083282 seconds)
  done (took 116.161072092 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850478859 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851474946 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.848897638 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.849184756 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.85121943 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849982988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852357749 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.853317762 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851250323 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.853330518 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852153833 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849380946 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849133366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852478391 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849274025 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850680197 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849375997 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849834783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852337734 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850005411 seconds)
  done (took 38.790687416 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.849805026 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.853369332 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.849421084 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.850374321 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.852066241 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.848662938 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.852498974 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853242493 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849962974 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853486122 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853402056 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854362432 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.851347326 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.85119418 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.854018304 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.851411787 seconds)
  done (took 31.405247656 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.851528825 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.854611308 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.848260487 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.848746157 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.849665528 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.850272036 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.852946517 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.850243668 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.849967807 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.854567013 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.85454957 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.855678856 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.854450947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.847656914 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.851474348 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.85589159 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.852748479 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.851409463 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.854660167 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.84925766 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.852688994 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.852489735 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.855365345 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.854549584 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.853366243 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.852127703 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.854224837 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.853700545 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.852944645 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.854677869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.851724213 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.853541939 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.85392205 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.854010314 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.85094815 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.853368596 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.855838004 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.856545238 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.856178692 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.85621481 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.855872128 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.85393943 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.856848649 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.85758846 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.854665782 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.85697257 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.855363279 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.854531148 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.853276528 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.85511785 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.856409571 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.852703475 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.856483278 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.858348897 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.857309226 seconds)
  done (took 103.730019936 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85621862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.856100881 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.853654785 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.857360748 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.856441968 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.853960605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.857674594 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.855356796 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854808424 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.858230565 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855613538 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857513001 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856126225 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.859058253 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.856646482 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858123839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.855872981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857632765 seconds)
  done (took 35.197788978 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.856240718 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.855765334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.858239214 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.855604222 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.855246434 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.857618309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85504353 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.857381768 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858359024 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.856359919 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855814036 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.858985844 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857916985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.858283083 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.855603362 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856021806 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.858282434 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860460909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.857790735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85620844 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.860094943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.859139643 seconds)
  done (took 42.642614775 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.851715414 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.850636661 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.866691655 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.872083327 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.874809843 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.888887011 seconds)
  done (took 12.987451204 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856984256 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859843254 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856875492 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860914824 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860950931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85810721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857478131 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858356036 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858932768 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858086327 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857248939 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861891276 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859344732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857271049 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859783186 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859721368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857264895 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85604197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857639199 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861052634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858420982 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859688406 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856833175 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856847069 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858318034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857660334 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859610461 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858662798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858470361 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860789406 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860880498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857371927 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861453258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857436453 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860704311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860935658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857354889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861389849 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862398429 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858215948 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862771438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861200818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86117688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859889985 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861531593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858827715 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860296241 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858470521 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860535525 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86249962 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860726102 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859741744 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861652807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862894029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862803584 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863609664 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860300525 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859734339 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862583764 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861270072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860102779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8623737 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859665366 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860115202 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862371565 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859851349 seconds)
  done (took 124.529653471 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859172292 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858856474 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860292239 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860663636 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861202266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859627328 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860310904 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859679988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860254685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859174534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864802241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860242151 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861573648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861407791 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860233369 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86012671 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86057613 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862060345 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860206052 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864869118 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859864879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861033144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860993248 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861083622 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861191152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862818612 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861731742 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862427526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862133981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860636253 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861745439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862046906 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861848655 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862273216 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861272167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860219365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861418034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862828615 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862292058 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864682671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860997682 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864322586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86092785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862115664 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864953416 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862979351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862313931 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863013348 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864229651 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863929606 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860611064 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863617817 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863832743 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864062971 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862974677 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864998228 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863854081 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864112566 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861775209 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866831875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864093681 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863800831 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867052252 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86270825 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863884081 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863126796 seconds)
  done (took 124.688977484 seconds)
done (took 2535.886133204 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.863876598 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.91958072 seconds)
  done (took 15.572598842 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.022700489 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.97395831 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.859445305 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.909373674 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.861290292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.864157255 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.877933646 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.860781264 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.862651321 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.860488602 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.861174125 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.055125205 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.862253063 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.861209558 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.861804137 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.956293642 seconds)
  done (took 52.35950917 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.865953434 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.867552052 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.877940835 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.871533508 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.864366285 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.880429886 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899346847 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.866264536 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.922477406 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.879826856 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.97788462 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.874249703 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.859803032 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.930475723 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.87504526 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.876762543 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.964577688 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.946110655 seconds)
  done (took 35.894400804 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.944358838 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.868853566 seconds)
  done (took 10.611768817 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.879677173 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.871634108 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.855261982 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.857400288 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.83734457 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.840488988 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.856968402 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.877995526 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.842476429 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.841459118 seconds)
  done (took 70.345253497 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.846466248 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.841378553 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.841919362 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.840977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.833395733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.834449145 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.840833731 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.834510782 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.535518161 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.873081896 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.850192179 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.845899861 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.838711133 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.845799419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.849129665 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.863670601 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962872154 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.847357402 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.846129655 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.845463147 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.84037543 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.896533577 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.852535654 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.850394105 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.873904577 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.538436163 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.845657662 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.848731683 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.964612677 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.848223713 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.841507722 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.843615018 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.844062046 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.224989186 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.124835097 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.839046844 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.84785302 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.850595889 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.845642442 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.971618791 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.842583173 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.847845737 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.785952808 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.098725521 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.951709782 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893275742 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.231648773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.842886865 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.842095391 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.873945072 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.845327621 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842050053 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.854487719 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.348268828 seconds)
  done (took 131.182207809 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839466897 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.097526715 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9943277 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837753905 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127760368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044576044 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833447447 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886656906 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.837651988 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071918649 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.059048772 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.943894603 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833232413 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.834825354 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828855727 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.829921553 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.00003144 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.90959454 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834195717 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.831198922 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869294399 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085206737 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.966290767 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833470219 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857750743 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.048966649 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.96499598 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.941385615 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.299765889 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.833630353 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.899745564 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837053044 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.840385996 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827716628 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.993425449 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.930202804 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926036989 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.84256652 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833716337 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.830101182 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.509801717 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030182839 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93024308 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.976901766 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.091908102 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034715673 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.613689318 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.832288655 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.568674933 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.988363916 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.065378377 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.068499605 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.955390263 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.832860121 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.102784732 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.823420905 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.823807621 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058060749 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06964009 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.927039716 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.824421332 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.823928809 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824225492 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.068966245 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.824084217 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.917765474 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823784683 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.821324606 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.917388946 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924500013 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.07024409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036907779 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853737614 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.119173692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.289466188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.074958843 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.890085154 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056255213 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.820199073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.817009548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907106006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.673604531 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023522371 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.071852039 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075886023 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860321958 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.541368557 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.817385336 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.04687253 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042776484 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.076047449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060680159 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.973627079 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.11097564 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.813125583 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.812104974 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.054916502 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952993653 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.814269502 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.177703082 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050154306 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.390903707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.844223849 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124179324 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950976024 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.81519413 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.454437646 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.813447306 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.039654971 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.855431634 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.812996243 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813973831 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.033796646 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.794133859 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811921805 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.525155789 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.880684627 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.817394163 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053409823 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.815648276 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080290754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820355023 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052146532 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.018595774 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.849180095 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.987773704 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.056668132 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.817238772 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076819765 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.061464861 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933989397 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090690573 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.745289948 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.814875637 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109076079 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.815873437 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.816981862 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.989777446 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816431122 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052688654 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.82085678 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106190844 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845921019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975215188 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818909024 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.075681184 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.851534486 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870214906 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.817774146 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948759032 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819371111 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.688437112 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969731215 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818076909 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81509454 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.340015302 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.815878019 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974674067 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.053522036 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840047559 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892654561 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.485951734 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.816353954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904192411 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841808815 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.163882346 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.816581937 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.031309713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.820454152 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.354495361 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.81723623 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.061956188 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.049164831 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.822624553 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.815457156 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.722111899 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.816298494 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815591972 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981440833 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.642654974 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818005937 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024285256 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819087405 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954291461 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822623151 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.894402007 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171922322 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.817554171 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.819700183 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.818880707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.820646082 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.817625507 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.029110666 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.848748854 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.344070417 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.958843638 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093744218 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.137995543 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.073048155 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.864056931 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.822314421 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06468143 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.821074414 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.886399209 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.820763172 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841996411 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05170017 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818752024 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033654581 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102280639 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.752232779 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871490454 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.819965016 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821859119 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.739724083 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.974941399 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910114613 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.818750603 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.815563808 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937243789 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.947166588 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037983811 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.82246695 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.05489555 seconds)
  done (took 892.907046695 seconds)
done (took 1210.661102111 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.81850157 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.815975695 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.806165083 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818260558 seconds)
  done (took 29.006245028 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.827919813 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.826828476 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.826661367 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.824329456 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.83024829 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.826042124 seconds)
  done (took 12.71121634 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.839160093 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.819898785 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818404537 seconds)
  done (took 21.226203798 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.894062181 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.238742693 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937779491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280223755 seconds)
  done (took 10.101037862 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.829122486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.827356621 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.827339325 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.828855687 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.829924206 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.831895936 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.826564114 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.828978569 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.829719819 seconds)
  done (took 18.213695489 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.229989674 seconds)
done (took 97.237201787 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.939270075 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.803150309 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.591111736 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.465325048 seconds)
    (5/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.923475283 seconds)
    (6/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.019911167 seconds)
    (7/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.239129065 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.908988165 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.823811737 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.855050601 seconds)
    (11/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.843762465 seconds)
    (12/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.955800343 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.853735922 seconds)
    (14/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.390644654 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.54918506 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.072008218 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.96114494 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.819985237 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.868419395 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.804880933 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.342276648 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.862220775 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.001213431 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.071741851 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.769053439 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.195111844 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.126704016 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.01970663 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.891225291 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.194556103 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.201420833 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.919979351 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.105819329 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916810924 seconds)
    (35/309) benchmarking ("sort", Float64, false)...
    done (took 5.561339289 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.773647433 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.906339004 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.849526948 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.853286332 seconds)
    (40/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.903647501 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.805662365 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.158662262 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.133033697 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.808824941 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.243370049 seconds)
    (46/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.017497619 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.26116914 seconds)
    (48/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.159394061 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.946045565 seconds)
    (50/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.949207595 seconds)
    (51/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.807681594 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.462417093 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.855588855 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.907044104 seconds)
    (55/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.021152626 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.152696133 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.820625277 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.104419035 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.287129101 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.958531691 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.19932884 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.659807562 seconds)
    (63/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.028910636 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.91543634 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.839478148 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.939950727 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.905075299 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.091460657 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.967125983 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.824211008 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.096541264 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.311510377 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.925546852 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.926061008 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.861524182 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.85009145 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.824794467 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.169905065 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.911276789 seconds)
    (80/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.570860426 seconds)
    (81/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.133613145 seconds)
    (82/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.914887819 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.429332288 seconds)
    (84/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.808023997 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.869546357 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.913147744 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.930803749 seconds)
    (88/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.821129166 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.108267159 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.858780911 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.924363669 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.524244603 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.823417031 seconds)
    (94/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 4.004217491 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.981571298 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.990362054 seconds)
    (97/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.936381896 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.830372368 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.810079814 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.013353767 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.951455535 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.459371034 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.081621417 seconds)
    (104/309) benchmarking ("sort", Int64, false)...
    done (took 5.551301678 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.825386696 seconds)
    (106/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.508031966 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.495686709 seconds)
    (108/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.84327129 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.17310317 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.154963754 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.852896727 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.281483303 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.064606225 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.937635465 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.878460752 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.903206803 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.928574594 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.133394498 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.028519514 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.850953604 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.630751287 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.503909164 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.156062598 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.309697759 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.283388615 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.923381516 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.82751367 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.956378384 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.899124584 seconds)
    (130/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.665548848 seconds)
    (131/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.96230023 seconds)
    (132/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.110580823 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.036546094 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.814272758 seconds)
    (135/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.875172537 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.889630634 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.864216027 seconds)
    (138/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.969289653 seconds)
    (139/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.116984926 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 2.260062267 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.859627755 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 6.827987559 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.11581107 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.314122705 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.079800541 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.048484422 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.878305698 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.17877391 seconds)
    (149/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.313326487 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.268155739 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.630206393 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.958737867 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.000497071 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.771838434 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.908244451 seconds)
    (156/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.401001396 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.826615178 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.111464107 seconds)
    (159/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.846806453 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.333753717 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.043016203 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.058925785 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.862138736 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.209591754 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.10810383 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.902042821 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.976854034 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.814053496 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.853729936 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.859687066 seconds)
    (171/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.963412482 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.060141942 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.123377076 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.928939148 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.107354935 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.174289868 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.828271665 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.827744188 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.478520768 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.213382038 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.845369874 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.451124618 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.469051023 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.873598445 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.781777343 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.9493955 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.398647356 seconds)
    (188/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.911663463 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.861230929 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.764611117 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.155499031 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.811632339 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.898874857 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.831380241 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.859312712 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.829881961 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.877656869 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.095569704 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.81458484 seconds)
    (200/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.903621304 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.166750702 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.979710386 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.899454429 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.137416525 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.836195672 seconds)
    (206/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.971922533 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.186988983 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.811734895 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.115710008 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.828986729 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.004470368 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.989738872 seconds)
    (213/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.815091082 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.902302749 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.863213056 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.940848463 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.619358248 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.055913931 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.476384778 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.838165964 seconds)
    (221/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.447618266 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.929922702 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.007598469 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.822737883 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.321873096 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.858439743 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416928617 seconds)
    (228/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.944466314 seconds)
    (229/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.996220743 seconds)
    (230/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.817967526 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.802791379 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.88370351 seconds)
    (233/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.003849835 seconds)
    (234/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.965967816 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.042896811 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.180096253 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.831788634 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.875242911 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.829136371 seconds)
    (240/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.927532557 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.206288511 seconds)
    (242/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083492457 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.231219076 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.940418047 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.83256166 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.055066279 seconds)
    (247/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.968576107 seconds)
    (248/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.763083404 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.860318646 seconds)
    (250/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.923316449 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.86445002 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.852560542 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.921539306 seconds)
    (254/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.910327599 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.01949521 seconds)
    (256/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.34895787 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.242392768 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.835358497 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.891591093 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.232281095 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.858195378 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.832415272 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.352263884 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.131091612 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.209110163 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.833730978 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.528082732 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.090932591 seconds)
    (269/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.969458366 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.354430269 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.818885606 seconds)
    (272/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.958607519 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.315300631 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.839471916 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.988957157 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.222570925 seconds)
    (277/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.972106113 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965469174 seconds)
    (279/309) benchmarking ("sort", Int8, false)...
    done (took 4.828475552 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.910067215 seconds)
    (281/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.836054531 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.128268739 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.93624227 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.197132994 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.870583513 seconds)
    (286/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.962938127 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.789529998 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 5.558692775 seconds)
    (289/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.012724203 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.928678671 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.641911899 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.934933126 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.960855186 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.599044542 seconds)
    (295/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.004855054 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.02981982 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.870477543 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163724446 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.906120614 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.877244364 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.172170031 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.710444952 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.26428713 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.862507503 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.843269995 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.140213172 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.77589725 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.480812028 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.971526216 seconds)
  done (took 1009.389638132 seconds)
done (took 1011.213445009 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.871038202 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.864910689 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.847991293 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.869749584 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.959263977 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.877672966 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.858727785 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.852735 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.896922528 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.898199843 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.848852113 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.880223912 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.851044516 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.848324548 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.845905303 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861953916 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.163703001 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.877567939 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.867309715 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.855466308 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.865330856 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.848982827 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.898132958 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.876546807 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.851644116 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.850279289 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.853100409 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.869030893 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.96086895 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.852130139 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.849117591 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.858752875 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.163074366 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.874978386 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.844059542 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.871961491 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.86029423 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.859294005 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.852782071 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.882121825 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.31074953 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.853884689 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.852591443 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.850072144 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.851619289 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.852032633 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.852094452 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.85544264 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863030929 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863916756 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.304013148 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.868416634 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.854058644 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.851678203 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.861827759 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.851394604 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.852915729 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868917283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.872560844 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.865144462 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.155052547 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.878626133 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.85345869 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.867799961 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.860730938 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.342686991 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.849433194 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.853473415 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.308645376 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.860973168 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.34055745 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.863535572 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.851992198 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.866686877 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.886502188 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.167309214 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.872877336 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.852066047 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.859697741 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.852972367 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.860979905 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865585988 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.857342318 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.851911857 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.867649679 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.879845508 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.861621731 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.85479985 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.860588827 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.873438067 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.858458647 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.864768599 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.855316532 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.847326518 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.860691296 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.853579774 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.855792065 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.854467332 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.855943203 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.862669041 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.310667433 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873889989 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.848880336 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.849504397 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.854205769 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.868048245 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.310954676 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.858320029 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.875125837 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.900854382 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.856155196 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.157405201 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.880672056 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869636138 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.861023409 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.855681348 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.847359343 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.160090722 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.336360083 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.872924787 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.854442312 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.853931619 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869969406 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.855505025 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.850281007 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.170405557 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.882750205 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869256431 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.975871752 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.864994051 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.887267564 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.854682586 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.857520389 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.885313411 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873746688 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.884980834 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.859674835 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870990952 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.8715819 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.851711002 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.867496454 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.865918705 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.854641271 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.858723608 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.847998462 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.884784387 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868291667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868443366 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.875402792 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.976038753 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.853034512 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.16206731 seconds)
done (took 291.397721269 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.923275537 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.8440693 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.950286521 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.860588527 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.937578207 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.939272808 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.856567968 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.856786614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.856798663 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.223950242 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.858841477 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.8567048 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.851126105 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.858042539 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.936478906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.861696557 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.856340365 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.18830556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.854437215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.926906239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.858512961 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.85822814 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.862271882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.226507638 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.848462316 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.852438634 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.924978971 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.861788876 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.192373281 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.85141748 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.852643991 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.192674032 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.945113203 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.880076904 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.872670272 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.867668945 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.936687288 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.865349778 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.936560371 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937723798 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.952661697 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.895467482 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.84949544 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.846781992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.865617731 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.855082411 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.859599169 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.889684618 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.84561612 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.868774596 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.191169795 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.872523929 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.861764297 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.861712507 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.859067112 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.886419344 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.860645713 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.857690368 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.949110004 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.857175323 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.917717591 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.231532572 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.228997504 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.862890855 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.852159314 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.8615009 seconds)
  done (took 183.437004506 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.921453804 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.928631055 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.920664742 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.858978336 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.905056451 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.923318704 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.859952163 seconds)
  done (took 15.094720626 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.862633625 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.865443044 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.907056236 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.90669734 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.856924124 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.004053285 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864211226 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.867148494 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.86015731 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.906701793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.859149428 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.865230411 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.869763651 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.857867386 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.905970074 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.866976054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.971207522 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.860645167 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.858394556 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.008202306 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.863248696 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.87109225 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.912553083 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.870038829 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.85955613 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.862557253 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.441750884 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86361288 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.86183411 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.865437197 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.862922922 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.901131381 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.865443588 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.853609254 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862918816 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.972808143 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.858494129 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862633215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.865766263 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.854271373 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.867482057 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.866514009 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.867042953 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.862363317 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.86636664 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.881654222 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.866419578 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.866115053 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.867013074 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.863303701 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.910034533 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866624808 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.862937047 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.863883213 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.913697059 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.873845782 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.860008698 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.864141136 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.866644945 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.863030235 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.010457572 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.907547522 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.865158972 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.905229211 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.865943625 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868339189 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.866645684 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.865911863 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.954909498 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.866752627 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909503578 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.862524376 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.020710421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.881376587 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868883677 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.862725977 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.863806851 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.860976653 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.861713571 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.867657811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.865335078 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.861811499 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.867028143 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.865185259 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864953294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.972034919 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.96928842 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.864859412 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.874604253 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.86613387 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.867941964 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.91186528 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.868044972 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.864785202 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.915421024 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.976392528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.916179918 seconds)
  done (took 205.085198981 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.866186505 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.871173173 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.861266162 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.877834314 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.860646564 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.861339053 seconds)
  done (took 12.980077955 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.864201504 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.867654051 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.868600582 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.870107386 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.861883565 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.864361536 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.861885456 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.860524975 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.865938392 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.869392003 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.862558139 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.863033309 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.86730337 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.860750669 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.864141189 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.870990117 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.863069493 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.868078785 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.867765671 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86295947 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.021145055 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.86249906 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862373496 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.861985385 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.870714449 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.868685771 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.871812637 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.870800342 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.869073686 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.869165942 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.866338392 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.864696309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.863794278 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.87091846 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.866948025 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.862741691 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874455286 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.8651849 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.867760738 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.862738043 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.864760611 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862226268 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.868929339 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.863009438 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.864734961 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.866366945 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.86701306 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.870495298 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.863990614 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.86555401 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.865328932 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.8703376 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.864820192 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.865226721 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.866811211 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873380869 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.871070754 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.865019358 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.864452274 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.864508427 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.874415076 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.864994647 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.869128581 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.872048551 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.872955616 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.865227804 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.865963052 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.869974492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86509401 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.873163604 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.866525258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.872008378 seconds)
  done (took 137.345169938 seconds)
done (took 555.735872237 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.942303435 seconds)
  done (took 8.729370405 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.864129929 seconds)
  done (took 8.731921719 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.423405581 seconds)
  done (took 10.210320943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.86761301 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.895331427 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.857408219 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.854699229 seconds)
  done (took 29.274413309 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.943241157 seconds)
  done (took 8.728985366 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.877407583 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.861379735 seconds)
  done (took 15.561085137 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.982038537 seconds)
  done (took 8.770148146 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.024156837 seconds)
  done (took 8.8208838 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.88551169 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.908773197 seconds)
  done (took 15.595594994 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.844917701 seconds)
  done (took 8.62957372 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.570965629 seconds)
  done (took 11.369487583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.876657451 seconds)
  done (took 8.680378135 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.927267377 seconds)
  done (took 8.717803002 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.896676624 seconds)
  done (took 8.685374599 seconds)
done (took 162.291053919 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.865969726 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.857579162 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.859564284 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.857501552 seconds)
  done (took 29.226797757 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.909034103 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.915383066 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.925047996 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.91763736 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.915372632 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.907035242 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.89936498 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.89956561 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.921769482 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.91084223 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.908290273 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.910619506 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.909038272 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.900052037 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.912360932 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.908212528 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.918286119 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.911362739 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.900765296 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.912213025 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.878785207 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.918709337 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.911440948 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.874668579 seconds)
  done (took 47.584547829 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.064067023 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.937592387 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.022345819 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.92033486 seconds)
  done (took 9.735910964 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.926465535 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.927698281 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.938434358 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.978564106 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.00489555 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.939263867 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.902548424 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.894959522 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.883981914 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.929511846 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.004287141 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.92472663 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.02886576 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.875973667 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.063834067 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.873716579 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.875701783 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.926753048 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.978169985 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.991805195 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.877286094 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.928009834 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.930854063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.922933326 seconds)
  done (took 48.315161954 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.877939677 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.881582062 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.880683837 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.874143289 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.874975056 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.880402783 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.882219291 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.878967103 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.897965572 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.875601725 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.876492679 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.877416406 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.872702906 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.876480256 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.87488057 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.8906976 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.889562099 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.875351795 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.878893539 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.880355853 seconds)
  done (took 39.385175398 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.861455559 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.713611401 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.217644127 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.118035105 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.861167245 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.861089274 seconds)
  done (took 31.422731835 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.882643833 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.876295253 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.869446918 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.925205864 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.00787959 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.875075029 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.868411232 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.879651221 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.914836482 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.932593087 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.888569169 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.895030343 seconds)
  done (took 24.607561513 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.866473096 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.862118919 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.862547331 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.881018715 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.879454707 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.877464431 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.877073529 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.866267605 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879202898 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.888418282 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.878210442 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.88277696 seconds)
  done (took 44.296215743 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960222341 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.762475642 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.931054634 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584117833 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345998375 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080427154 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396624456 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217490077 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.877476425 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146532913 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.893504027 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974615212 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126685579 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873670869 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888318987 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.342905693 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165907465 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10906617 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899957251 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732024196 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919292474 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.447953762 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.795521103 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929616984 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086249033 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.006994367 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.1373069 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.834231487 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009050954 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912257027 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883107716 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874445466 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148483329 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252360023 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974413645 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885714289 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523769136 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.597386767 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.859837771 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.641851903 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.659351475 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.984566043 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885167577 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875553532 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.810368977 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451102541 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255236639 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.881301156 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.585985171 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874406908 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887994135 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9638716 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.878297215 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.694106143 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856640037 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155059449 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.871738531 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874958986 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444782203 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.967192965 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486790916 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.850850275 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.065817085 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622578391 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276638343 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.024076163 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.881392564 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879495132 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811453109 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.622000085 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361676888 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021935206 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.893089583 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526732756 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181668494 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.954196486 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866883953 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162712441 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.74108124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.85387371 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107118148 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83364303 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812678436 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.735581686 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812695773 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147376683 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914931676 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.516361923 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905974593 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.219051545 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88810443 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894185722 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883423627 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099451624 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 5.01140288 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874124898 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.678813984 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017058401 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895061192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.215140233 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81285316 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.878256893 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130477099 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.088943215 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1951998 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.384774174 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027726961 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876964282 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.954212002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.865708446 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926850774 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.15137614 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933993169 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958731209 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930713243 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.840194729 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180440237 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905398363 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.04249075 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.952179679 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001660169 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.201855282 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166402874 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947505609 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.887470559 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879821665 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.668268786 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432466459 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.147836711 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.872479774 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442043304 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928072085 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.873497147 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814094907 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.50993071 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950343366 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.848473913 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.102754315 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880466018 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192470322 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815479976 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027972597 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.990778773 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.099513862 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.52448604 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.946578904 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140856485 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446521859 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396374055 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929804701 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898146714 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967459669 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901007907 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.380970134 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174872691 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.884877941 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.885403042 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.686809314 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878710287 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889241112 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.886591182 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670591004 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161238995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901305827 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878965075 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.768369248 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.894895373 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947294344 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88556755 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891724104 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.427319054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624234792 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.893424905 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.50726507 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102535612 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892741795 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.609142762 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991158174 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.965345166 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154012528 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940552739 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.816069545 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.594016006 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.574270138 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880929728 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81857143 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881943594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891919716 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893606826 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.259732206 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164342241 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922100342 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.631722058 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.924453142 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894588381 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.888122303 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884078958 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.428084666 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963917859 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.493750229 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.932021969 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022225207 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.897587754 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817311882 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.887599793 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887986678 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882148013 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.83902486 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936299766 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.666500234 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263210285 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139127962 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.526509603 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90138286 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.659078642 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.939094796 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.902084236 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689256537 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892321441 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.924671996 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900495194 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.897583676 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.637184479 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.578611135 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446097817 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192261267 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19511601 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319898818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.474599666 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.190534167 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.231955769 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118969204 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414429027 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94698502 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231814234 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828493647 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967147647 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.529390016 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22544213 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896718534 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114553488 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271555526 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.622706567 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046199504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096428778 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91912059 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.870577725 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853107998 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.082193395 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030377844 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.65578624 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073665986 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224999221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.567124113 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.985980324 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.877592211 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.586899631 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969538814 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.597595801 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.248555982 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.65143402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827590304 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349909451 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89753144 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.33229505 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241151879 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265460258 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.010207541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822689696 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.897620543 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.901233016 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.878489506 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.889539324 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.748623199 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.13977011 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901004041 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124287368 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414285841 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185734703 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.787870097 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.894171402 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888788373 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189572442 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.761928723 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057772106 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.435139834 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.427244949 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88826492 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821485572 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82320823 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.583430197 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895704349 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866026076 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109641134 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.068281978 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868652886 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456077168 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134372277 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142833197 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.90252851 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167716359 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160180382 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.617801881 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919479029 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.990010318 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565817948 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.976285444 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.15825904 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12668876 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678262486 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11815941 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.945311486 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.695898031 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.88080884 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106124478 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.15956922 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.822945153 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107443928 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.612249808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.892879443 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199460274 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946989064 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.834266545 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029982161 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.073175721 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891743263 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975504955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90164083 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.901741656 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.900718463 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93738395 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829689642 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.000267613 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.904333325 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979146123 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983307048 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429075038 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.898179238 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172626312 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246223128 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215254868 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946134442 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894074326 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900584352 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825948646 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024322993 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.336725015 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164661129 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019759831 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.181102185 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917065326 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.574094728 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323492762 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137476647 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169507647 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.786861587 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892533596 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919836787 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.158828119 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902601428 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.102697916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123699561 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207830182 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360593674 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.211038866 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267568992 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166702854 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.263228412 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894014413 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483151476 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.898901909 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.594105871 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.931816025 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.810745784 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144857663 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902307076 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273065762 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.913284854 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.092633148 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.409321074 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647377657 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177383629 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.880255522 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945227572 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169810628 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.277791458 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200843585 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965329072 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904477672 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.600503322 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031350767 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.756618241 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.165460088 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895128137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106234962 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.603953486 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902622545 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171006126 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198282811 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.892719387 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.760780444 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906113106 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.902307172 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118497282 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165525057 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144485552 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902615665 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901115922 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.710318088 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169322203 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952965685 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832865286 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.894755726 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992685374 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143273283 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918807693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.412111313 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.605300614 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196539189 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.812342213 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918660417 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474406559 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274679894 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214832931 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.441354157 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131978629 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451917272 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.897607315 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200065408 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.899142552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.653047308 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206524928 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.900542901 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.586873638 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937746891 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.170718498 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212491701 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.90315967 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675484528 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.864820076 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120866268 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557785521 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838600444 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903391559 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.951419797 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897487537 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.029827146 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90438235 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.778873332 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917908239 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.613537735 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393308314 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.900388169 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.876594802 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.603202077 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.601062143 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930615521 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038867449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900857802 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.621001659 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.188535692 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152640433 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.587565518 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.89974096 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.900563786 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899227806 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824635422 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.091546669 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.271324303 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197666819 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.436349182 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.937891303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900791871 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.115244635 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108857432 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.804108525 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023192473 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.633309325 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941116713 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.66491396 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.580458928 seconds)
  done (took 1696.278065693 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912465368 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.930446242 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.921659098 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.939253221 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.931858613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961673405 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.956139341 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986196601 seconds)
  done (took 57.359501239 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.891999093 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.087287055 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.900108767 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.891873079 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897130834 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.891884712 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.065791471 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.900399023 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.898652306 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.901861442 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.893138618 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.890403995 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.219690636 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.915266703 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.891858982 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.88421086 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.896903906 seconds)
  done (took 74.773970288 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.894252264 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.108876807 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.944498442 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.915119525 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.84459935 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.913185322 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.8764858 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.909090169 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.894397054 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.12679247 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.234219531 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.924153991 seconds)
  done (took 90.405582572 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.905756696 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.903257688 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.9010815 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.904168704 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.898732643 seconds)
  done (took 11.340419947 seconds)
done (took 2206.582485596 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.257032021 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.115836491 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.127343652 seconds)
  done (took 6.062098892 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.046304204 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.09134543 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.211821958 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.236077313 seconds)
  done (took 10.412899797 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.193432525 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.282745552 seconds)
  done (took 6.302013867 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.311437036 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.910451256 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.293230068 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.907591397 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.904911158 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.903543869 seconds)
  done (took 22.546506335 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.908745648 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.912265493 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.910981135 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.911347835 seconds)
  done (took 9.470274653 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.882720472 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.621578854 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.87890017 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.892467948 seconds)
  done (took 21.102427903 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.651064756 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.308479276 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.653263527 seconds)
  done (took 9.441346257 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.355416323 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.780323339 seconds)
  done (took 8.958283866 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.166578248 seconds)
  done (took 3.990408553 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.938122453 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.18057732 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.447707095 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.410215013 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.50800856 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.760299462 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.228851244 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.157073742 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.315456429 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.33911027 seconds)
  done (took 25.110309056 seconds)
done (took 138.987984396 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.286794373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.142909756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.104538041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.249322912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.126181773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.102750795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.109480693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.231672926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.746203818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.740294962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.246126302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.12545615 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.055448037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.138187723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.06443243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.135748868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.117322642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.299705033 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.939471784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.139232303 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.089758117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.878254477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.086817484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.888206453 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.119661766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.063202981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.455229609 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.91787075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.095334913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.461829124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.059437672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.296350179 seconds)
  done (took 172.337317245 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.641462396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.897384738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.89575142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.897310177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.298295214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.896788359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.8965317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.898013839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.193026382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.18061404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.911907681 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.364801779 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905314092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895538652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.902632707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897280073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.357219792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.700048292 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905744315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.910784454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.911267298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.195137853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914196849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.238771816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.389805317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.913312558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.878397788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.915304234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.900244642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.865657208 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908627904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.896599866 seconds)
  done (took 209.200840936 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.893475647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.898416343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896531839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.899927254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.900332031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.89872699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.900033615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.897208014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.525036809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.518228239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.905117003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.902603832 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.902315728 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.898858791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903109207 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900143786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.905002012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.916282011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.904384821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.9045846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904642481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.553109367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.90509359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.595104286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.905809085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906531572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.899949349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.903071657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.908168672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.909690905 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.905786005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.899246503 seconds)
  done (took 221.30549812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.11497441 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.917636713 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.917279335 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.847352111 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.916065549 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.917259202 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.85941106 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.116319043 seconds)
  done (took 19.453923985 seconds)
done (took 624.1363161 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.408069044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.255633691 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.096328512 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.941354117 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.184795173 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.968380179 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.936972468 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.006823981 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.67944208 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.003158328 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.592282649 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.94563585 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.679571749 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.958490561 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067411024 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.998802827 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.481762632 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.583456405 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.105665711 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.985611381 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.111363085 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.906393847 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.015159189 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.680583669 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.691921938 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.939687646 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113546368 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.494049595 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.949700611 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.104637306 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.714814966 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.318447005 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.939611258 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.927028011 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.994649073 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.973846845 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.297622177 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.939672956 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.052352099 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.710358389 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.001907244 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548325617 seconds)
  done (took 105.138610059 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.903198632 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.899050555 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.897333673 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.898001394 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.900528504 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.899125911 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.897849842 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.896336475 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.898072161 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.899035997 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.89888249 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.898197018 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.898697583 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.897693073 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.899215037 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.899036839 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.900581837 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.900667004 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.897167174 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.899002938 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.900158612 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.897839704 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.91619643 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.903490873 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.902232262 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.900674243 seconds)
  done (took 51.242264247 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.922446377 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.060263863 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.173712933 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929098979 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.912477558 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.916578131 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.930020623 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.926297469 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.917031023 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.913730877 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.020399168 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.927720868 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929311271 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.172400261 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.924869234 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.921482378 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.920336678 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.91136637 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.067953257 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927844339 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.93105178 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.926776967 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.933135237 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.924921261 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.914083823 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.915725572 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.915744161 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.393877648 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.922248762 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.019007153 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.955613397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.933262692 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.337562892 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183290033 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.964996127 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.929209293 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.921867968 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.023242836 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.919028082 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.912960219 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.932315701 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.917905578 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.173037488 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.407380151 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.927276747 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.921739207 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.414781273 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.03304843 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.956011064 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927997791 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.174632212 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.929247278 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.923016234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.916704874 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.949520244 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.924766658 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.913318445 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.243467014 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.927428289 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.932089878 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.929447503 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.915765023 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.076002202 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.924108999 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.062900267 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.925842082 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.924108712 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.914605263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.174923879 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.929994254 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.41077512 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.927470308 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.921106781 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.021223194 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.066064707 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.435192168 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.927827982 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.074850583 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.352599403 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.941252434 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.920349514 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.383926497 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.943392689 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.92074199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.924898098 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.926402163 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.92672577 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.966802856 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.929295251 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.33419724 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.411707978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.254411976 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.938493328 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.930841523 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.91571733 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.241601329 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.929146503 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.925896535 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.168118119 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.419521898 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.927463849 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.923482413 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.393830025 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.926710431 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.936633586 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.925127832 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.177742642 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.927682438 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.966498795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.924273802 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.922717829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.917524906 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.932932927 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.921935973 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.924268204 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.385753614 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.0427012 seconds)
  done (took 237.731860249 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.911338655 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.915222473 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.910974472 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.907249344 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.912268384 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.914410013 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.909484042 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.910426902 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.91485793 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.907879565 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.90999902 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.911017168 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.913350853 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.91704873 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.370305407 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.926624783 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.533991169 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.921435829 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.918432705 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.918821922 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.59963557 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.925847847 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.919395137 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.924278856 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.921069175 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.921045411 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.933365268 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.954672288 seconds)
  done (took 169.29374614 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.934795672 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.103440982 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.946340271 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.963632 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.944986075 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.933671803 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.952125808 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.947540167 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.930446006 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.933227745 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.932773079 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.987697971 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.942381393 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.074262736 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.957369884 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965756999 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.031638762 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.940679032 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.934179753 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.937039217 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.957118401 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.924884573 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.988820209 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.053014962 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.950646374 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046782772 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.930383745 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.935995873 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.927045455 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.044192423 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.945623463 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.9942399 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.955745286 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.9473949 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.051416549 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.042660997 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.039516646 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.961762235 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.929477511 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.933766879 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.934221741 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.913954342 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.045491271 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.950632174 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.929662009 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.033819374 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.951959798 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.938978395 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.948222325 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.934557227 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.942854487 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.946482893 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.994267717 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.057393049 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.970676177 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.971743326 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.951992812 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.231655824 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.939193888 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.029879547 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.919544222 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.056047906 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.954824166 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.917365187 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.938498978 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.942328868 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.965919208 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.966455414 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.036716981 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.934024311 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.028990061 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.967505395 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.943815898 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.935540085 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.938551855 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.049526525 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.044060618 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.969667428 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.967598622 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.959458549 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.925898406 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.928452585 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.915986052 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.948766861 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.941217472 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.053490734 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.047580909 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.944028724 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.938654439 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.94028482 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.939694428 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.954761533 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.058909202 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.966086526 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.026755195 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.995959281 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.006021135 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.948510627 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.951159322 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.943378143 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.993761602 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.949686078 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.950483169 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.281338519 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.002963511 seconds)
  done (took 209.3129299 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388386031 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988647018 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.988991578 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.243124682 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.350999906 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.818529038 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.974446626 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.988164833 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.005076651 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.176837328 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.055392615 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.008500847 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.965659685 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.954654905 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.992324921 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.004494514 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.007332115 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.313182429 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.100315267 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.076654657 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.958042853 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.253026516 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.300496883 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.382361941 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.014929892 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.325678337 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.669617244 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.129083568 seconds)
  done (took 63.294942957 seconds)
done (took 837.84631962 seconds)
SAVING RESULT...
DONE!
