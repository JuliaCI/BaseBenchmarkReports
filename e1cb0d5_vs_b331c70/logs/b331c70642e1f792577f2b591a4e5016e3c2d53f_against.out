cset: moving following pidspec: 13581
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.906841972 seconds)
loading group "string"... done (took 0.608029561 seconds)
loading group "linalg"... done (took 9.577257289 seconds)
loading group "parallel"... done (took 0.181572334 seconds)
loading group "find"... done (took 1.507669777 seconds)
loading group "tuple"... done (took 2.165548798 seconds)
loading group "dates"... done (took 1.474311211 seconds)
loading group "micro"... done (took 0.236420514 seconds)
loading group "io"... done (took 0.582144722 seconds)
loading group "scalar"... done (took 47.176433477 seconds)
loading group "sparse"... done (took 14.306466578 seconds)
loading group "broadcast"... done (took 1.157848356 seconds)
loading group "union"... done (took 13.003223549 seconds)
loading group "simd"... done (took 2.69950513 seconds)
loading group "random"... done (took 10.952069656 seconds)
loading group "problem"... done (took 1835.480869516 seconds)
loading group "array"... done (took 27.230939333 seconds)
loading group "misc"... done (took 1.217784331 seconds)
loading group "sort"... done (took 4.008216879 seconds)
loading group "collection"... done (took 20.151863786 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.705976815 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144223352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176656887 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.37250368 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202071227 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164406366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15559849 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.595440304 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.998139897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.226924117 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151768666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.601305438 seconds)
done (took 6.198737455 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.265260542 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.453985392 seconds)
    (2/2) benchmarking "String"...
    done (took 0.120772546 seconds)
  done (took 1.222212831 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.097250099 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188678347 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104650109 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11893058 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.119619646 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.116840985 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10219937 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.117941964 seconds)
  done (took 1.517815525 seconds)
done (took 3.757134531 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.525625138 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.855515246 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.561843988 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138460281 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.16605513 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.156326738 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319824016 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.169146247 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.128598458 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091516832 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179590994 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.421973188 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.505134269 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.052759214 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090929019 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132380154 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.094682766 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.744338789 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.088003771 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137176736 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.557752503 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115517003 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.125275309 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143924098 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.194735962 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137660817 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168585432 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102600876 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682622097 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108571769 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.192640102 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.104040543 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166883767 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.259295076 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.100189648 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098448002 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689408479 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.184820157 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.11847851 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.111152813 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.726662807 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085714648 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204723952 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105668526 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.116613608 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192056621 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120978948 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084347452 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107210903 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099630268 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168413054 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482743224 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111524715 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.153512295 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.112420102 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.706211834 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104399527 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.160699884 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.152052315 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103091881 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099624171 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115154856 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.164336797 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.118622665 seconds)
  done (took 20.26873022 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.12603991 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.148260938 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098922366 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.147619364 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.151150517 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102639824 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089272662 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099059571 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.116825234 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195787431 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.146364761 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151481235 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096106315 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085682496 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.124221166 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255848882 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112148283 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127276255 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085205742 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112729852 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146814612 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101710242 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114992906 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.115380839 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17563884 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211329025 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115744727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128548716 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098809304 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.105600279 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147377186 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.168744535 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.079832875 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09883887 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191469318 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124036553 seconds)
  done (took 5.362112818 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.209973076 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122963685 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.203931983 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.186515209 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155109274 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.173469953 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124391172 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281678433 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.227048504 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187504851 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120891745 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118482252 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08284704 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101969774 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082474972 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.805936243 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188407862 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156792132 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.132806501 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108028076 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086497254 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.391138521 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108394961 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086722299 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10680904 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07600154 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.186001689 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107422306 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.381001564 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123290264 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09585378 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138761842 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210870826 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124755248 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148384923 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107316062 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087099325 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.242455346 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099367087 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098522601 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116623502 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139052332 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139499969 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102496662 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099868987 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.253194532 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.172993449 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086001533 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131242055 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.185698102 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.208815722 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104522601 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103712444 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.376464174 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120880352 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091063027 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.103883646 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.334746607 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143712906 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087316907 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098582466 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093082176 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0986414 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.409717886 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097722894 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.353079972 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.098998761 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.172703359 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104384423 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112587979 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091299801 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106051277 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105796651 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.101552544 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08284442 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100933162 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083671845 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106637761 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11902768 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088504832 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099593583 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151776756 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.086991236 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122998128 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120167014 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129138515 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089886324 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099593742 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.088037438 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130990522 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085943398 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104341484 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.154350416 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.092530629 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120730864 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107175228 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147201124 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086095908 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.219430799 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.087784193 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130678251 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103831503 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117067502 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.128738077 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101506668 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089236539 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103684751 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081888738 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.102749136 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151485778 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.10147686 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085031153 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104571012 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099494745 seconds)
  done (took 25.134679244 seconds)
done (took 51.414478254 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.48463448 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.120073388 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12008078 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.119776612 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.118204193 seconds)
  done (took 1.69070595 seconds)
done (took 2.391968121 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.390318979 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196520915 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125546552 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192467711 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094126297 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.218349111 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182774906 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12402857 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213346163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.105517472 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189927704 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105731344 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093743754 seconds)
  done (took 2.960186039 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100134876 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124062663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085647669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114362542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079400088 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113332283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096688641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.133841227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096501579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10640312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079547939 seconds)
  done (took 1.827683234 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095788746 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118233157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0851954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111428165 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079379228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093505607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111619103 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120377478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09615911 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106251564 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080239271 seconds)
  done (took 1.796673045 seconds)
done (took 7.273983047 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.138746528 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.851945751 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.110436399 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.17578522 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.359402142 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206406159 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.600054325 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138934083 seconds)
  done (took 12.492009205 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.138290135 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103404598 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084443749 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103916143 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086454613 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103258156 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084160437 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101573167 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084520988 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103898138 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085465955 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103462002 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088376441 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100435997 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087360717 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100096766 seconds)
  done (took 2.320529938 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12440138 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121981782 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108912917 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112685927 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08963886 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106338131 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092633525 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106916471 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088213796 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105101769 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.097634487 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111446813 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110599992 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087764449 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108345508 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.097791383 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105732412 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107786878 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09458777 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108659805 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097207411 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.106079529 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110341385 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096630846 seconds)
  done (took 3.305295895 seconds)
done (took 18.817291559 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182488909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09019865 seconds)
  done (took 0.973272029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.107296469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.126394488 seconds)
  done (took 0.940334654 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115588312 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100872971 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14350783 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120711135 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086044346 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100064103 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121801789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103601726 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085108657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.102705672 seconds)
  done (took 1.787886765 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090868265 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105561286 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.096902839 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.12610803 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11470555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.088681647 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.107427593 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090983393 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108433631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085040765 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.110886048 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123450197 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093258834 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126733114 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091335039 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.110185903 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11349102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090379996 seconds)
  done (took 2.583184291 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085513357 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088052776 seconds)
  done (took 0.883839565 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089277405 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099452127 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088058866 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104243476 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084108163 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.099804821 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083720765 seconds)
  done (took 1.358769446 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.532359943 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.268383425 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.35356365 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108736206 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1647785 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.390271618 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149486007 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.119523232 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120762125 seconds)
  done (took 2.961106077 seconds)
done (took 12.196186637 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096469673 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.196980746 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.576228212 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122873604 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083128463 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162117856 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.287039064 seconds)
done (took 2.234450718 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36469643 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.128661589 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091417768 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08366163 seconds)
  done (took 1.375751727 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084247786 seconds)
    (2/2) benchmarking "read"...
    done (took 0.108144579 seconds)
  done (took 0.908548314 seconds)
done (took 3.003919712 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.119022814 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100797248 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08279263 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098240738 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08307358 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100591614 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07999143 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080377379 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097978324 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081774929 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.09876219 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082301625 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098664892 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080069527 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079300343 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098719278 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079933591 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096248189 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080171869 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096817032 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081151103 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098455405 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080540284 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080798587 seconds)
  done (took 2.908969569 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107168123 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100798895 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.0903922 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.105885294 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10456636 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090660747 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105962983 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083933977 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107236807 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086108889 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105186895 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088087142 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102333917 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088416409 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102611525 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104642387 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09145879 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10036306 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.202229251 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104974314 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09085904 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10042624 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087938167 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106061259 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104630956 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088868583 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.10151708 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085420087 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106029281 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088569569 seconds)
  done (took 3.752037196 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092646791 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.080455531 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.098176975 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.092941318 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.097690679 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084463368 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.097363568 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081525689 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098689862 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081599076 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099267562 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080948459 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080141018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099303688 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082625291 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105425923 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117422738 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081978193 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080014953 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098532316 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08661157 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097051029 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083545708 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097453021 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080910578 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097575924 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081479908 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08014115 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098499724 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080820314 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102650014 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.089042178 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097024184 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.095478826 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105069224 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080677987 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107036764 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081004554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098336124 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081202834 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096649253 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080686326 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081150122 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11070735 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.085000038 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098997165 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0819571 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100253497 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082556295 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101865928 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080346315 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09767771 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084237471 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099348801 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088283347 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080864815 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09953077 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080407333 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100471798 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081967192 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097093514 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080800445 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10513726 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082226434 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124237883 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.093741347 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097408005 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083738539 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102463238 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.089758241 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100522318 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101992909 seconds)
  done (took 7.347956528 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087171587 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109981757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084993788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100864703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080457783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081745144 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107071144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097985903 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084050168 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118626379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082048561 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100135315 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083811966 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10331273 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082027527 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08371612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109842866 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09690535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083104692 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102391721 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08279163 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106814376 seconds)
  done (took 2.796700156 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.246825184 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108423918 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.153138756 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118842962 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105151693 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117306752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10608598 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091998168 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10661698 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093635986 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111992207 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089005815 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121777842 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111490093 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094710599 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111352692 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106016632 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094698079 seconds)
  done (took 2.814110652 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09904068 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101628064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110631504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101801181 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085393503 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105198509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092368232 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119837962 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104287799 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085845007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.1144736 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088149624 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104903002 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08671902 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104584958 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08583855 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105283147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085662405 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114721984 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110288461 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094522487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11533033 seconds)
  done (took 2.946361817 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105207362 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10408326 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120939296 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106196513 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080140544 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100970161 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093232798 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101669196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111305741 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086879588 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101553259 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0829648 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109496145 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085698009 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109124794 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085258411 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10421601 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085396905 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103656663 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080841137 seconds)
  done (took 2.68816215 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132167881 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118748119 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101767089 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13159874 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119414403 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10212409 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13259646 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119693303 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102799564 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13490774 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102430407 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119856181 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132095409 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111328101 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119505601 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132128575 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116242493 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132245378 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119895332 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102664802 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135007625 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118567396 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115810427 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119138414 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10282612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119903391 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119054768 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110507751 seconds)
  done (took 4.056672195 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084972037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083854103 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09938697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.082140505 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.099287561 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081994761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.099165122 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.082984131 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084186424 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099830079 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084976353 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103187321 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085031567 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101172392 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084563194 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100792723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085155629 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081716329 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098403433 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082506889 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.102057563 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08440041 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101387703 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082904984 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082085967 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101898035 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081296912 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099056225 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085645686 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098684685 seconds)
  done (took 3.460076445 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095235359 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110377688 seconds)
  done (took 0.939745273 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083468365 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121099044 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08207622 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106306648 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092562686 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102970289 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096504953 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110422379 seconds)
  done (took 1.529858011 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.112139846 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.123407274 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091740178 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116372616 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10555177 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.124250125 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176194871 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092145409 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110875377 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086479528 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.124170989 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085093645 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114061414 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091785194 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112601234 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118888324 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083360096 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113388506 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094411431 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105234663 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092263484 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121539207 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098262024 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112326737 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088855525 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115979655 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119066267 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098810919 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109319693 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100875784 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110527837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080026891 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108235689 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.091325504 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101597783 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.105821623 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12294396 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091769328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113318924 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092249448 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114581893 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080597865 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116488632 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111342315 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100481196 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108889079 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092535033 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097689102 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087571672 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107349091 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081683433 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107885582 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080372348 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114153895 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096324089 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125233053 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088733561 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108518121 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090541026 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106221429 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094473512 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.117624652 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098321849 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.107722518 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113724041 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096880147 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112927066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.082235344 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097116483 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084415509 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113450548 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113347799 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117459781 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092165496 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110650344 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084456155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110297765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093921821 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112180845 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115926654 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091519431 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11178011 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097909132 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106790256 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091059199 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111612314 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08824459 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106574002 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087329798 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127248541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088670747 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101659922 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088012667 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116220403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090757932 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.108076854 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087576993 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113332425 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080539579 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108930957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093161229 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110424496 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100911392 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11091996 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092636583 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11376743 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.098918822 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110755424 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107689921 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.083365986 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092266525 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109160443 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095859945 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097397779 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092052287 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109194634 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.092627005 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.116576325 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.106603509 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092161473 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11613446 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.099835386 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106232735 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082452403 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108322787 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091676117 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113889837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099611623 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106282676 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081555704 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098639707 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095573258 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108228277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094128194 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110218975 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09353577 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098467834 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084662197 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109450774 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099753412 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107394169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093791454 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.116413897 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111652801 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08981544 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11527786 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089549911 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10361886 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098762133 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110191342 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082254538 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114111014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091820973 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.105891983 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092240934 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114290657 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091707427 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.109609614 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089992616 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109522428 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092702082 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104197037 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093286267 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.107126734 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100588753 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109336748 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083468496 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101413069 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094363478 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105875604 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091255303 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105512765 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092931744 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.110383232 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085032347 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107544543 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.092128918 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124202737 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101365842 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111740041 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09455765 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.116977114 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091668949 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111564467 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090387832 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111937227 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093203622 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115731799 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111840777 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093707892 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108338055 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086168015 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112448257 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09889324 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105163806 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086136932 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086545721 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.110055588 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117940392 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092927947 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.1109517 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088812263 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112148707 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097479288 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10944328 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092052639 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105115451 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092228366 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.114645803 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094452362 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111619564 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100474932 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112875774 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083001368 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115347356 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090399735 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115064555 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083261641 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106783645 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089171543 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.111069975 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091268472 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109030107 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082804376 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11501995 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099947707 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110450746 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088032167 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.109877245 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103434712 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108434597 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095768378 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111073207 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.096959597 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126825749 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10521433 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092808182 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119375798 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092897076 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098290423 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096306342 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.107059891 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087325767 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10783847 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089958594 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111423156 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09554211 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112859456 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081383166 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109568332 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.090414478 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087974608 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101786169 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.098677321 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111628178 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110069015 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104108431 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112144837 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.093332896 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111833316 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091294241 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110958367 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.094394206 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111214241 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092934557 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107861769 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088661176 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111557631 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087349737 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103013897 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090809393 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110266533 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093010684 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111645382 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09083649 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116711557 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092743909 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111381174 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133717237 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089615134 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105059361 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093487931 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113022507 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091893784 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10938755 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083277655 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115463022 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.091675955 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117519144 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091495497 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102300955 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.093619993 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109659727 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.093668481 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.110939476 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.093513721 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108886884 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.091826395 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109806066 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10227368 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106310584 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118076338 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095729521 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112177431 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092926775 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111138196 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091209962 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105805363 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093275712 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111533481 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094053937 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109414564 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095912272 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112029727 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092694243 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108357187 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.094996694 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111829757 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.09612757 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0996734 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088397186 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106167924 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.093854377 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116108584 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.093613866 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109077409 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.090525865 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11259213 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090708977 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101500003 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098693825 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113553501 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.094003704 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120502507 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088137573 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111818243 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103320593 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099448476 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090304497 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104007556 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088677488 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117013293 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.094396584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117805876 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093761153 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105773845 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084852 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.112563891 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090408729 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100274731 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08602563 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113989269 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091218762 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108574077 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093500167 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115058724 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09504943 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115284542 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.091135664 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.110587703 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.093916033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103089683 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088635092 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10620352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093418904 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.113262893 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089968905 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102420478 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.092358422 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.111095985 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094080223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.110065246 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091964051 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117307757 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093173805 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111755092 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098555523 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100548057 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093612832 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.110966808 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.092051321 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106129727 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094359289 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113753934 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094365798 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116093725 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092718226 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114446944 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092877746 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104844304 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.091760205 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109981085 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.093219784 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107439099 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.094606154 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119224654 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087088223 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112164898 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093907213 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108195664 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095996447 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.113217901 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093673439 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114928485 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09295445 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112507399 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096348211 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.112201285 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093951272 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11320005 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10954616 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098551943 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106033173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.101580126 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.112973163 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094847823 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110118713 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089672629 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109556463 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.092032913 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110224431 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100255578 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.112206649 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089729926 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106922755 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086788112 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11128354 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099209091 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117687864 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093472917 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112449243 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083637053 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103528684 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095170989 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107339729 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092419419 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114687337 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098304467 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11162956 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089901051 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10932981 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098258462 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116276774 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095826145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.108389504 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095787667 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112927079 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110754587 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090847626 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091476644 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112554187 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11328785 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093010422 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106925734 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104508196 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116995026 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0952465 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110207879 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095622809 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111685113 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084009604 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.113178202 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093592517 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115471396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093435865 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111410974 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104869195 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107169047 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092551596 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119151191 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092477438 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.118724918 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102268048 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095068903 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113460815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095917022 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102695364 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089318827 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088685845 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113807402 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088276691 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104024501 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125011949 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.100187994 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112661687 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092699676 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109290254 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085184043 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10235726 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089000326 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113529349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092184563 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121398734 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089898442 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106891858 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084982029 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110603197 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095135748 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114361824 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087040313 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084508314 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110192388 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093594721 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120567197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110372652 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.093525506 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112822522 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094288929 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105773718 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099533736 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103596893 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095755977 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125262247 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094164084 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114624843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097585079 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119732478 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.095600884 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104088079 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.094287469 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114320596 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094100952 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113487338 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094620056 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130688818 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11408384 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090112513 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.110095129 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094512214 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107897946 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103700099 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114562633 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095025491 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114848346 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092984112 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115307143 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101584912 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115686359 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094756736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114103821 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091864826 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112770666 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090032632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111051867 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095618955 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114308916 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093115411 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116227439 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089307894 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124724236 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.120540731 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.09701249 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103475781 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089813723 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108008869 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.085364451 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094728019 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106408383 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090654617 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.11011373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091878765 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115261484 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096378547 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113295758 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095150157 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.112903836 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083032848 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116541963 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095200521 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115231947 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08551381 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.113228953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094775968 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118304911 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117889068 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.091946011 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112880694 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093151395 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115598054 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085729029 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115707453 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092991081 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11115821 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091255056 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093204164 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.115355836 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113847922 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095899115 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11582949 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095630306 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11683423 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098799171 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104470236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.088136264 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116526264 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088440919 seconds)
  done (took 61.794356883 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163050294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091905607 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102990455 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085583621 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134927973 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086493103 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104416307 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086348531 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104352776 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101525735 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103362152 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084747985 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130090306 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137564529 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132318918 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120779729 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08557804 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104074868 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085735914 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104003335 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109051105 seconds)
  done (took 3.044703802 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11323709 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123902481 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123137752 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109819233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117190462 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123771358 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104382796 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123903003 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.127675733 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117254173 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110129683 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123904147 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.117529978 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099329001 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118227689 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119984253 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110297475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116535673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125137859 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104374879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120939636 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123112885 seconds)
  done (took 3.358325002 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098647754 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.092523432 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.117990774 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.086055756 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.11130082 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.086569643 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117371359 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089443945 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.116532963 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094472582 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109536206 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094099507 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11734001 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.087133034 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.110274615 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.089991825 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.117412477 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092387392 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11365171 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.087538182 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.138076774 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.0867338 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.107861417 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090779956 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12200444 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.093388683 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113195482 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092850671 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.110009857 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.093440567 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.108104958 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095731038 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116380192 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09145393 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109335533 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092995464 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.112476703 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087584218 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.108965322 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.097348773 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.106906211 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.095619938 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120311578 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.089992509 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.107975217 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096186551 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.112056016 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.087054752 seconds)
  done (took 5.700907406 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.13110823 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166519891 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101168437 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.161334637 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132017762 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.127296871 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094809004 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.155870354 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.111682845 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.095033196 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.134982214 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.131502653 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098802914 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.122959817 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102098586 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114364954 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115633678 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098655558 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124339666 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094467645 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123656431 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.116242106 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11079912 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12744698 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119034752 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093986923 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115319097 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10399871 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131026596 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.119975621 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.099997986 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12261575 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135648753 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102077563 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116943173 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.116470357 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114889319 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.115267072 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09745071 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11111223 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.118368567 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103905387 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119020987 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131566569 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096613337 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116214134 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100051969 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115453488 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130827474 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097645107 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124300672 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130230964 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100516053 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.114164056 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102726603 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133467867 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.115991657 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.093670862 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.117603455 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126507718 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09928865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119611639 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116047217 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119025098 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.123730746 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110591889 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.117155445 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118687077 seconds)
  done (took 8.85934217 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104367729 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.138848504 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132806601 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113635437 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121225201 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118857918 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101222606 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119098503 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100359929 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12827699 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119202567 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.173667001 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.093297571 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126890963 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100336443 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120736191 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11883522 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101976851 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119462686 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101696052 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121048332 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134037331 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100994107 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132507819 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134272732 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091639258 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121695789 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119209514 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113546895 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121566605 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135170259 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.099766229 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121215635 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132504547 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135666592 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.100934908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108560891 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100919322 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119891556 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120091126 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094111965 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131785798 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100819228 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113453984 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119665392 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102502905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133819739 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136459337 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107022767 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129312516 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120480505 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131691799 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102453608 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120219544 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133470801 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.124070801 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135113443 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132342351 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118947718 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114111658 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133768039 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143032197 seconds)
  done (took 8.191897588 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091760308 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089630548 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.108991286 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.088235414 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110732012 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088265537 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109411864 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.092346579 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089514397 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.110834546 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090009751 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107579598 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089108566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109876296 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088336976 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108078684 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088979488 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087390394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110611417 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088619923 seconds)
  done (took 2.74425167 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101400212 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132934836 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.092899781 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120024394 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094447728 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.121495905 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113068227 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095698193 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112551438 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095693655 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125116957 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106495949 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113274303 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121024323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108484365 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120769706 seconds)
  done (took 2.5755167 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.115287793 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125989063 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.139854485 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.097234535 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1088408 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100762097 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111778458 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086731562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10643765 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101249875 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.117391931 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.103194114 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110663528 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089344595 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.111546893 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.099506811 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106428641 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.0969734 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111091166 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119437613 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117585055 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.094158166 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113792232 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113291755 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.095128965 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117636587 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.100071015 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.109681709 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090153579 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112288327 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.095636139 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121045866 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08837261 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.117914778 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089505203 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108826731 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091837351 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111618312 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098180563 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112728548 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089121714 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.114138145 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091795101 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113986295 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086910759 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112549918 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08696031 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.119104622 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.093817877 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.115704548 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090352967 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121791927 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.118863164 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.104821218 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.121937184 seconds)
  done (took 6.640897973 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108404371 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116055079 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099007097 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109794676 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09472489 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.120024543 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095820144 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113999966 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095235856 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.108638329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093933136 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115850158 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095055544 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115361845 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095085505 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11600585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087208529 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114620884 seconds)
  done (took 2.697546824 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098192987 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110709641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100626471 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11153381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092424772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09347971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108865548 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08883086 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110030875 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091427036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111908816 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094517546 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10941044 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093898508 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112698775 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091621089 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11407741 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090606955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111206112 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088218747 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113381948 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0911756 seconds)
  done (took 3.033235205 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111407527 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.148607378 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107275896 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.159755312 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.119544587 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095900143 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129137635 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097433568 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137945798 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.115674846 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097596051 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.115749272 seconds)
  done (took 2.243895756 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120469023 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154970018 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090509017 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115821438 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127239873 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100031848 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118607443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099052527 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132469579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134016153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098058537 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133650854 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13196912 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132015411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107410434 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127338221 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117921575 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099971609 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113414359 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14353528 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099327467 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133131346 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118114202 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100240351 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118728004 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130384486 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112549341 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134479642 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118881689 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112481272 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127725708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117082603 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1122675 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134795716 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114876113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11298528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120571732 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144025291 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127683008 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112022573 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115768921 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127180426 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113054701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127206542 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132869259 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099256607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128088987 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119049404 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099731307 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150567012 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127519663 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131488165 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107727001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133181559 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131759239 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151546621 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134634464 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110875911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128138732 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134943018 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130924545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108554809 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132421932 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13507283 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127233886 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113973423 seconds)
  done (took 8.863161183 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137905294 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111315246 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097628368 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136680332 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131854118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11804088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099394035 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118347805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097961478 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114103565 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172584897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118413713 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111720702 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132053359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11829626 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099675181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118937981 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131454828 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095762835 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150099577 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118709746 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1319565 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112728264 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132685891 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134208914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127242324 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099962418 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119442745 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099195521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119820637 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1280805 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100039031 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131446662 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09047762 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132197141 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119520545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099192152 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128439846 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119412439 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107018295 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132521242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143372383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119442853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100479351 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13538584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119097194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099496521 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115449684 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099716864 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114895643 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13649066 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135386145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116152116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131565066 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119309435 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098627636 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119777053 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099027018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121254397 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127882651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112338322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120658729 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152835953 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119377771 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099263261 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132091927 seconds)
  done (took 8.704704114 seconds)
done (took 164.406765205 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.112631489 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.152012448 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.109221982 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177874152 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092370111 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.148919942 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126141053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.13070743 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092112892 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11287373 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092408628 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.117623585 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158899698 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.113014657 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092992953 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116315462 seconds)
  done (took 2.756441931 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195063014 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.300365792 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112993191 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119028306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101276693 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117043937 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.098166075 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.121229476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093917605 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12888352 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115038011 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097672909 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127825476 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096567372 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.114288248 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096140832 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.128724964 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095891742 seconds)
  done (took 3.076375933 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120665056 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164709074 seconds)
  done (took 1.105945267 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132682567 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.201705563 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320644285 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175789965 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126248013 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141555667 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.177767798 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133803481 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.209891534 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.139296687 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120781285 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121835706 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147207238 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107644141 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125687068 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100928932 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14995667 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122921537 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.104515137 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.121460751 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123748423 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.123266306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.126493973 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.103886366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.19795931 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.140348341 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.12113931 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102810418 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122593867 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.102646072 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128659446 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139913388 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118271926 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.210454434 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10579607 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.207655788 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12877991 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101379584 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122764108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.101486305 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125788448 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104604967 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138356045 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120241623 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102582457 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130770295 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101883212 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.122652236 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130083447 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111518221 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130354878 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127172758 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.183653949 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130469028 seconds)
  done (took 8.188706294 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.917002094 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143824109 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121221935 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.049915568 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153421897 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114340431 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.92420179 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123298227 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.283168684 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.923669216 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118052099 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135861351 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.269738061 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.277520756 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.198137841 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.399964174 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.992980813 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135800708 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128788941 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.171222759 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130610535 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151565265 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141630425 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442394299 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101004562 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119225416 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106090833 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133681636 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183745716 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119115941 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102088556 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226585129 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290699221 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238091347 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099459343 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119669562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096236416 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.213200361 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.304129059 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.252690716 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18957485 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094037398 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118449026 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113004813 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.14259491 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114634693 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190631727 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198792593 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.220414211 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102100107 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132729172 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130853122 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111173928 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.205226079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095512938 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37936446 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379563898 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118298403 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107792687 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139203906 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.30068725 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117588655 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.265103252 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128233096 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245191378 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117698557 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862420323 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191519721 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116460693 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108535533 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132408944 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104164463 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132442598 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184183569 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393866016 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136333213 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10125905 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117337557 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.271104038 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097812407 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116322162 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188485897 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099314049 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128600756 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135607832 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113205903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.21575136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.275534252 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135148844 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127754107 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104562278 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132659265 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099694396 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2582068 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.255758905 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.183183472 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23636524 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133139127 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.208734422 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192194726 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130092892 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196849616 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126665114 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117783256 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133620901 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252495659 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159803752 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097702092 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124117283 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125425091 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162748359 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101625318 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126565282 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19331471 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.509556604 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190130413 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095375174 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124052201 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127716519 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185949337 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105557205 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29631798 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130562581 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191014859 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128179225 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093303948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128240018 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188277577 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136624576 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129224081 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132934554 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108181619 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.275448912 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255725241 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136046648 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269510202 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19492947 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129654444 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199686197 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128710994 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194490231 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129091114 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112116641 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1222002 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85195549 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113110743 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129173018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125230356 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209251814 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098502539 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119496006 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09785836 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094209386 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839239109 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122289856 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095104669 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.119224908 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108344049 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129442758 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125597415 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10478414 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206423636 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272217162 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112541043 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128610072 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09690869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.205615516 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101539004 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.120352442 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09785524 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.119077312 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108718556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125564631 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100081367 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.217415075 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183325397 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.258262213 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571245646 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09722644 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119246849 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26998479 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096870931 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347205976 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128735738 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.26360263 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190869192 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.116689808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376850445 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192225621 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.212059608 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.123084345 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195265607 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116676176 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105172572 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.206237515 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097243045 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12852856 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183913966 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138511253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133947005 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.201829042 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099567386 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251782662 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.116891244 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19375831 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122816933 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11137044 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.371246945 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099035611 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141271705 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187109012 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123840013 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.098831657 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.677587514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098282389 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13076819 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108776764 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.283557567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.191437452 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128251561 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108822179 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133342984 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187376408 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.255018828 seconds)
  done (took 48.709701988 seconds)
done (took 64.651011824 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.33375351 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290226067 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.336071346 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21753949 seconds)
  done (took 2.102562882 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.197075853 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.168929589 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139636053 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.118954132 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.171642452 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096635872 seconds)
  done (took 1.741879647 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.550410839 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.428257158 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.384947395 seconds)
  done (took 2.214935052 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274107181 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.30370776 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.347508216 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.502526041 seconds)
  done (took 2.388276722 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.225836616 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137497434 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110390575 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.150388193 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.190889171 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207473716 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.156404881 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173965532 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141454082 seconds)
  done (took 2.391354559 seconds)
done (took 11.686228239 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.186724778 seconds)
    (2/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.310291285 seconds)
    (3/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.2782113 seconds)
    (4/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.250894968 seconds)
    (5/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.22083888 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.242868026 seconds)
    (7/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.242627071 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.179380277 seconds)
    (9/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.127080863 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.237665594 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100693437 seconds)
    (12/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.147708755 seconds)
    (13/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.172467644 seconds)
    (14/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.268282036 seconds)
    (15/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.284823588 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107155202 seconds)
    (17/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.133606372 seconds)
    (18/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.120080811 seconds)
    (19/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221591602 seconds)
    (20/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.104940064 seconds)
    (21/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.176587205 seconds)
    (22/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.110701339 seconds)
    (23/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.197209472 seconds)
    (24/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.148559993 seconds)
    (25/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111921163 seconds)
    (26/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.283948151 seconds)
    (27/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.202699626 seconds)
    (28/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.186907503 seconds)
    (29/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.161854599 seconds)
    (30/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214539272 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131684468 seconds)
    (32/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101411155 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126299257 seconds)
    (34/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112538355 seconds)
    (35/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.248730512 seconds)
    (36/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.253032762 seconds)
    (37/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.197292078 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.139996704 seconds)
    (39/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.236084948 seconds)
    (40/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.213910793 seconds)
    (41/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082727073 seconds)
    (42/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.176057718 seconds)
    (43/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.24499825 seconds)
    (44/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.147700555 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.104618403 seconds)
    (46/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.105708723 seconds)
    (47/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131915438 seconds)
    (48/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.130268204 seconds)
    (49/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098952929 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.154095468 seconds)
    (51/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.162076932 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115728584 seconds)
    (53/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.213292708 seconds)
    (54/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201648578 seconds)
    (55/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.202432138 seconds)
    (56/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.160965704 seconds)
    (57/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101693129 seconds)
    (58/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121239911 seconds)
    (59/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.139047115 seconds)
    (60/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.152051715 seconds)
    (61/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.098743325 seconds)
    (62/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.21399133 seconds)
    (63/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.149838012 seconds)
    (64/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104309658 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.15744967 seconds)
    (66/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136755299 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.095856284 seconds)
    (68/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.133123331 seconds)
    (69/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105306158 seconds)
    (70/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.185386305 seconds)
    (71/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.159104015 seconds)
    (72/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097413598 seconds)
    (73/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137389808 seconds)
    (74/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.082767486 seconds)
    (75/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.105039634 seconds)
    (76/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084792861 seconds)
    (77/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.153281718 seconds)
    (78/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.170773226 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10478681 seconds)
    (80/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.121957754 seconds)
    (81/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085031285 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.15601593 seconds)
    (83/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104170831 seconds)
    (84/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10417658 seconds)
    (85/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.10093258 seconds)
    (86/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.105193301 seconds)
    (87/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.151211301 seconds)
    (88/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.211770736 seconds)
    (89/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.196179779 seconds)
    (90/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.154101025 seconds)
    (91/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172776283 seconds)
    (92/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.158724455 seconds)
    (93/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.122510203 seconds)
    (94/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112740079 seconds)
    (95/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18515058 seconds)
    (96/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.157135932 seconds)
    (97/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119876249 seconds)
    (98/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.161574782 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126692096 seconds)
    (100/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085134049 seconds)
    (101/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131724161 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105109216 seconds)
    (103/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.131558657 seconds)
    (104/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.091146044 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.1251029 seconds)
    (106/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.082784537 seconds)
    (107/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134992413 seconds)
    (108/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.090330387 seconds)
    (109/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.08824527 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.125888209 seconds)
    (111/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134025061 seconds)
    (112/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.10014496 seconds)
    (113/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.173871957 seconds)
    (114/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.253390296 seconds)
    (115/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085085054 seconds)
    (116/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.166131279 seconds)
    (117/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.099196792 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.119582473 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101136441 seconds)
    (120/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.12667366 seconds)
    (121/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099872804 seconds)
    (122/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.10526664 seconds)
    (123/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.084563142 seconds)
    (124/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.121383527 seconds)
    (125/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.110383851 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.165928526 seconds)
    (127/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.090508111 seconds)
    (128/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.150927669 seconds)
    (129/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098773657 seconds)
    (130/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.104969232 seconds)
    (131/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.126388751 seconds)
    (132/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106233312 seconds)
    (133/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.130225482 seconds)
    (134/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.10414126 seconds)
    (135/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099533716 seconds)
    (136/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106196428 seconds)
    (137/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084583753 seconds)
    (138/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083773191 seconds)
    (139/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.106479191 seconds)
    (140/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083953518 seconds)
    (141/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.195671279 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121116981 seconds)
    (143/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085338278 seconds)
    (144/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136685803 seconds)
    (145/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171568668 seconds)
    (146/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.107579475 seconds)
    (147/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108780531 seconds)
    (148/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.11190926 seconds)
    (149/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102764656 seconds)
    (150/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.10598523 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.115282492 seconds)
    (152/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.137648865 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.158676349 seconds)
    (154/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.139951314 seconds)
    (155/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.199008772 seconds)
    (156/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.105610437 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107436463 seconds)
    (158/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.122678752 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106344357 seconds)
    (160/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.166070075 seconds)
    (161/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.11975146 seconds)
    (162/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.106526199 seconds)
    (163/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.097513054 seconds)
    (164/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.112852283 seconds)
    (165/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11363314 seconds)
    (166/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.108645566 seconds)
    (167/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.113149346 seconds)
    (168/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131768506 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104314765 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.126592184 seconds)
    (171/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.100857676 seconds)
    (172/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.106266451 seconds)
    (173/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.10035488 seconds)
    (174/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.107047127 seconds)
    (175/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.100338038 seconds)
    (176/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.172807483 seconds)
    (177/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109296034 seconds)
    (178/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.15563334 seconds)
    (179/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137796767 seconds)
    (180/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098718236 seconds)
    (181/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105080629 seconds)
    (182/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084494631 seconds)
    (183/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194544751 seconds)
    (184/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084558289 seconds)
    (185/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.195752701 seconds)
    (186/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.101297766 seconds)
    (187/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.106936906 seconds)
    (188/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08392437 seconds)
    (189/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105389675 seconds)
    (190/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.09676449 seconds)
    (191/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11225184 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097889279 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084134932 seconds)
    (194/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119737209 seconds)
    (195/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.08487822 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.122231484 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104158297 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.134780372 seconds)
    (199/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109785143 seconds)
    (200/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134007234 seconds)
    (201/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097480898 seconds)
    (202/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.10681128 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105775844 seconds)
    (204/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.111797154 seconds)
    (205/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.104670216 seconds)
    (206/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128521344 seconds)
    (207/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.103109252 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.126845995 seconds)
    (209/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136071211 seconds)
    (210/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10483565 seconds)
    (211/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.127735319 seconds)
    (212/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085595914 seconds)
    (213/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084458665 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.127723507 seconds)
    (215/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138493414 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.112832902 seconds)
    (217/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.105584533 seconds)
    (218/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.091620794 seconds)
    (219/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108354745 seconds)
    (220/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.107350354 seconds)
    (221/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085202242 seconds)
    (222/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.128078473 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085091705 seconds)
    (224/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.119901023 seconds)
  done (took 31.507239945 seconds)
done (took 32.361863012 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.431977373 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.138623948 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.132332547 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110220468 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.153863604 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.112517652 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.133601567 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113609008 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.130860554 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099245366 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.123167374 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.13284363 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.109708284 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.151666564 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112768044 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125003247 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101245453 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.13359921 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111033135 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136150604 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.15393291 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101732789 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.130569853 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102101675 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15389021 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101311247 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.131946253 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108907495 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.130449618 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100489846 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.131904328 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122510251 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111917606 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136253967 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099715868 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.123917373 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099582018 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.114274534 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.101659688 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.124982513 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.109806251 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.12422114 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112554397 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.125109912 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.103405592 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.122602724 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099506861 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137574928 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099202102 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.132633039 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101886218 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137349936 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.12116748 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100104043 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.121052637 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102625715 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.131356218 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099532575 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133586361 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099835123 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.123785411 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100084804 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.126371702 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09984158 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.123841351 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104855073 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.124324458 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104206474 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.12298018 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102361626 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120368318 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.102067381 seconds)
done (took 9.736544984 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105929859 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182605708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157373628 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.134060843 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154432911 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141021194 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11567598 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.15049982 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.133989848 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126118752 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.154733582 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.146396635 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.140056335 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131932113 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140477224 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104630755 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.131652974 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11336298 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.162154351 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148340098 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156512383 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.108353674 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155970506 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147513884 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108124149 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.152654 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108514603 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128570164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106360546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.148369163 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.148040162 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107948679 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131189525 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122272783 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137662953 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.130270065 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118455643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12662087 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105761856 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.128500152 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141287872 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121428573 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128010453 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117300685 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126680094 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.109214563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.131720126 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.129766379 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109662311 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125678553 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110009811 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154639059 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.130034177 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109274362 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13162279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110876516 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.131636516 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109443399 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13233928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.131938021 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106542528 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130575752 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109569917 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152042101 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131432933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108636526 seconds)
  done (took 9.47128081 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127490893 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.165471787 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138239449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116894968 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.135466904 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.096499938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119361525 seconds)
  done (took 1.801423724 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.098670926 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.153177352 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134923905 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.157750039 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.14481259 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144043118 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140543498 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.120416971 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129368505 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.132544194 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129346996 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184364425 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.123258766 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.115678954 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.161950163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.121110244 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138286617 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.122057461 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.107075385 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.158394252 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.131504172 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.123600606 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.137536529 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099858102 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145824687 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100106207 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.23577501 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113647783 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122068678 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.10710466 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128536422 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207909439 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.122559056 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136942354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097070863 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156113518 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145152211 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105947582 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.161572406 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.12790393 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.122893602 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.130371493 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.108516116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.130240269 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.107682734 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.1396525 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.138878704 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109964303 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.129262271 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130012422 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.134862822 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123421254 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.124782808 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.103760121 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.135409342 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129969668 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.115288417 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.128452876 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130673362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130934509 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.152501923 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129492115 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.147049481 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.152650885 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118717187 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146346773 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.122876237 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.129077777 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13048558 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.109256367 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.153152661 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105420687 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.135243025 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.116017209 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135650083 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.152447493 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.129856383 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128638085 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113068433 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.127705673 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.102766895 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.123269758 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11716914 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127444303 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.102079509 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143579798 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13656201 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.10685148 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.127375525 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125738021 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.129055621 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137279792 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114230545 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.127672206 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119266524 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.156816273 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.136219368 seconds)
  done (took 13.603159859 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.102266168 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.100647768 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.131347831 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.124022332 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.101587239 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10076834 seconds)
  done (took 1.568937224 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.134627368 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129534515 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.118023637 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.133043813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187268486 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.15141269 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131407419 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137675137 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14841587 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120166935 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.1518965 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.130009213 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.152210172 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.134811828 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.131569171 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.134359912 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.154119626 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105089177 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141351619 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106350512 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142349921 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.134465881 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105914383 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.149404698 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.111075928 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.134476757 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11144636 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.142861258 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140636524 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112627462 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.135521058 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.109264006 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.1326864 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134352226 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131840763 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.132752096 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104542222 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.138840739 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131962322 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.112036343 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.154268915 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105374041 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.140211828 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.136472607 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111962706 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.132542769 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.137390003 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111248394 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.155046453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.112903471 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.138393334 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.133152065 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111099677 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.137537747 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109498556 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136392232 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.136309013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13217109 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.136343507 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109199241 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.132400406 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.134561636 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113106025 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.136487046 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.108932054 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.136888629 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132866799 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110438925 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128732369 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11041211 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.136890025 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.107712763 seconds)
  done (took 10.266829093 seconds)
done (took 37.607493484 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.100660199 seconds)
  done (took 2.006624335 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.897687512 seconds)
  done (took 1.80538041 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.405822599 seconds)
  done (took 17.341874015 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.569275189 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.659452115 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.030258737 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177207417 seconds)
  done (took 3.34265271 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.974229347 seconds)
  done (took 1.900745877 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.339502001 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.284008235 seconds)
  done (took 1.53907741 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.802091416 seconds)
  done (took 1.720652201 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.379412046 seconds)
  done (took 3.296903353 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.380490391 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.194058946 seconds)
  done (took 1.502168706 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.605965937 seconds)
  done (took 1.527578155 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.799335362 seconds)
  done (took 35.726229152 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246885601 seconds)
  done (took 1.182726066 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.319013702 seconds)
  done (took 1.24413556 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.402200375 seconds)
  done (took 4.329271378 seconds)
done (took 79.382533067 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112730242 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.138080167 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115142803 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.134956681 seconds)
  done (took 1.421242288 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117577726 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133260645 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.114431604 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.132240473 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.118479576 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.132843252 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.107484285 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140056375 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.131234143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.111646514 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.133890287 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.109295698 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.134929692 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.107847477 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.130648875 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.110603681 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.135785471 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.132559975 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.109752584 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.133318159 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.108010199 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133691878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.112636426 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133155838 seconds)
  done (took 3.893882166 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111962136 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105404855 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.131177593 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.104991125 seconds)
  done (took 1.385429333 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.118700995 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.148643164 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.12466578 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.14046785 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.149004926 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.125126651 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.128287449 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.105189002 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.131329057 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.116235368 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129530047 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.12755044 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.147845154 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12332577 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.118794087 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.121187947 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102926482 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.148122152 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.116415952 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.14160547 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.103873559 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.140028943 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.113287429 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.146365946 seconds)
  done (took 4.005242004 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21077515 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119955786 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.154437806 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.180466708 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.132793662 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.128210691 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.155405274 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.110968238 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.136809856 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.109107014 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.133658487 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.188836525 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.109164667 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.133668675 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.107043085 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13645135 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135059229 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.108194332 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.135734849 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.11913288 seconds)
  done (took 3.685082269 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.113534095 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.128192346 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101066397 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.127749299 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.113303683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.130751037 seconds)
  done (took 1.654331124 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100890862 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099085715 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.123196883 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.099109918 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.12835679 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099492318 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.121534796 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.099965796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098425243 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.124142108 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.098797771 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.12213341 seconds)
  done (took 2.249131716 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.235720415 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.103181308 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13055362 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.129480027 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.110036028 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.127895641 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.121060816 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.127977319 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.191192115 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10442154 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.145423723 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.18836419 seconds)
  done (took 2.651500417 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233904318 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110923935 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293429309 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393675528 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152063962 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183413957 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.313207479 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184902954 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208324685 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126860505 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244032257 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146851331 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169458806 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1961618 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153259453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.207719982 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195085046 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223307855 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16361151 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226893047 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18385773 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184992924 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200352848 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168475693 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151829105 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176735517 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.105315673 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140859767 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193664598 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18937404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194815871 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164810021 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152211733 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226280998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240840528 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225145172 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.332983526 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148497131 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201978318 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201655607 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267488845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155651505 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220565665 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171119393 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145493104 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20121215 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175589021 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198797752 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.120225809 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156124662 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209024288 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196021662 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.22968389 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128153835 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338436812 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139294564 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.162404265 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196556252 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212193741 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237648083 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184675692 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.110231694 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204160292 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224817336 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20003858 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135133319 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186093663 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138516283 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195097366 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216543484 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199092109 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185489944 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.230165734 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122617403 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181799972 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187646365 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171206833 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198223808 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176940673 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.107855648 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167347166 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15189991 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138943859 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.178020788 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135313716 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228111917 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149525918 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.203393679 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228936569 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17698533 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179613766 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182764553 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187356359 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160984384 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.105959678 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161605031 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178983071 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174894782 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119295926 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17362812 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159811259 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.138410369 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143230234 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.136012714 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175617889 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.122948014 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186061 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182563358 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.143742573 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181833734 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16580903 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.176480787 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190601962 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206319687 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120338334 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145819452 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215328054 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173328646 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149180817 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193680536 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207402779 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181338245 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126098501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18816288 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242469988 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130539805 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208543374 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159042159 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147400364 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167835479 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175236539 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173666026 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.146884843 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141494704 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16750257 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217736102 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.139321235 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125064989 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19325078 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139108149 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114536363 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158219716 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150807604 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13092542 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.165155756 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152566363 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171968151 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176219435 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168782955 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176145406 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132695835 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245589242 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120707455 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.178428109 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162834723 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.10340573 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198390414 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229800176 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117404215 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206127329 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186523404 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240239179 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181788048 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117555002 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200762307 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143023646 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.104801155 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184814421 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176855097 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180437392 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201957751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237888656 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188722295 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167925059 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138908709 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186830631 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193861195 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173916762 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.159265324 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180184317 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186454014 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.132880306 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.1112279 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.139790408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128801488 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145105675 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144027707 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20545766 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184039744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206199326 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178356916 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153769355 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202202528 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.111659858 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182050799 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.189357353 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152923131 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206254666 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199975549 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18606677 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158203604 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191401187 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.130579877 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112306652 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147099969 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18600867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120572537 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148996695 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160851991 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202668724 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195038713 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165487843 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223680521 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187258065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214252008 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.133483735 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.177216862 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189106661 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149292436 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.199406372 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145578432 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17769902 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196316079 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135488958 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242840719 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180827524 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188295663 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222779012 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.174536568 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117340564 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164130679 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184850182 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156431908 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178920179 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159653933 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123570781 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169507679 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149664501 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112845105 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228404865 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132744611 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226384921 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148265446 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222528842 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112635946 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160529255 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177855646 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159973052 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103773381 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190177921 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209778558 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159519001 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176737483 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1947059 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14388996 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.32962079 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213083311 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206286492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154401665 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159508709 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178711081 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150307556 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181326372 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201483387 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160191315 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201443057 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177907873 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158199811 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122233429 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164074041 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168069337 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.169369561 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.12002974 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172741536 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.157424953 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205492523 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159657525 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177202477 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183449079 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.133710403 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.171786336 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155891533 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223805139 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177211572 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19988765 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172856376 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183669427 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209138836 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109384553 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140713566 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1126625 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204318108 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146112711 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177689878 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.201757097 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241769735 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176523931 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187109615 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126203323 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.136536891 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177318007 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138825328 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243670666 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157185297 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.125711599 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213121345 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.165302755 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144984066 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181458549 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29810225 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133940685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218667617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106295147 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.293869913 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138442737 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120152821 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179000251 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191573804 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.146213257 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.174618827 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180936836 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161058551 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177857616 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152328018 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208046736 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231352328 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191887696 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220611068 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133565359 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176995171 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181776982 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196914651 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159026834 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.160179238 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152870176 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203038102 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232336255 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.121171508 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180508668 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180578642 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176660928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197712803 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148754287 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208607505 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116970253 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186464867 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156096351 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137602948 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175086686 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199294315 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122048862 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221916972 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148238896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145390122 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13764655 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143500149 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175443242 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160927784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.143348407 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201795372 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.11349475 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180436079 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199953175 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142911218 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147954433 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162230337 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145096135 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158306659 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133002855 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1509015 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.160494717 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226898586 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117539178 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196400134 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193554341 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185875145 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177942816 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160402999 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.677234869 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.11326522 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202466181 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162316705 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209514822 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165182455 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18505729 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178633943 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163613693 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188308806 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139326384 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.239093862 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185043608 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.175888859 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145768899 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159519159 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134680067 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145787486 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168684864 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17911381 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129101845 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150779054 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173032826 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160447744 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134296659 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152588911 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205791637 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163677714 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207473111 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205269701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154857181 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183816689 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19868084 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1149147 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182297794 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192631186 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15818065 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169420851 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.116127937 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149957479 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200734149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.109448621 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179003873 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178909159 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178656368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180470972 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148888968 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177156712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132296923 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178470684 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139979629 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.171849327 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149236134 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146025352 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.139330023 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145158191 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177819706 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.17462728 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141510456 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.158871037 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197983286 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.136710275 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147095261 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296169477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176245666 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21771733 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.170239905 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123192545 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159279198 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172260169 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169267689 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15025572 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.14240181 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144092736 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.118773287 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195717772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172982653 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172971464 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201702182 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178503478 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208882941 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13139084 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283563172 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153844318 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171270249 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118756195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.142237552 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155615152 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122034874 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163984524 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211078728 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198743861 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.169563612 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160679204 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113007886 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.137627355 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143794087 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152599256 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171595501 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175481853 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160432837 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102765164 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161461316 seconds)
  done (took 84.715979541 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16250202 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155361648 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.160078706 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.212176695 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182683115 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27420312 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.219538272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241083266 seconds)
  done (took 2.627524265 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.115708852 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.149067561 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.155558017 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.137752606 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.136673815 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.381215084 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.149402957 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.113106957 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.200251561 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151174615 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134449598 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.671692129 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10769663 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.138119756 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124183107 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136848824 seconds)
  done (took 4.014102424 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.272774771 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53401827 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.708117097 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2489703 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.262310282 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.174902837 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717644432 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18399601 seconds)
  done (took 12.120152196 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142961038 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.155635342 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.285832555 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.190409024 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.173768142 seconds)
  done (took 1.976949527 seconds)
done (took 127.324218393 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10893256 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.136583966 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110458396 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13852374 seconds)
  done (took 1.509091553 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.123049584 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092810227 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.123372747 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.091486782 seconds)
  done (took 1.451205776 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.525227994 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092674104 seconds)
  done (took 1.6799531 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.137779259 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150273628 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.131472643 seconds)
  done (took 1.45161672 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118137653 seconds)
  done (took 1.148716327 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118433601 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115096938 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.156001472 seconds)
  done (took 1.420266711 seconds)
done (took 9.687123288 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138641272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435101741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.399305137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151318785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.734357452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.392496813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041692176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169302197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179972073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.104548009 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150179915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.684171067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060156501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352119336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.044585371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.348182828 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713641674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.105267992 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137469735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.106025686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.01771069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.102400233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132281832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.105343273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709649541 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.408658428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129838668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.392676371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10394329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135249572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.394619979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129628218 seconds)
  done (took 17.229952073 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150846598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.194758245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138284755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106667112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13441423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105604991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139803816 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118901384 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194775015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131594425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.125541667 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129317303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109046011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130833431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.127979717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.129448104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.106939264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.133119229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.111592962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.132843906 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.124379194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.130412536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.106563452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132489998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103770124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14401304 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104156792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.145159047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104618493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136124697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.134323711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106797109 seconds)
  done (took 5.153241231 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155144189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.205292749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.140030482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140333745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185176405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134485799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223058536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145427472 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198831815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131615803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.124810062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.132105196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.170789715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.105359688 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15432197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103889709 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133733437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107538601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138218619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.106829855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15139515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103385143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132814352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.106354667 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130509186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.119088021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132201078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118645757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.130677819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135439519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112032998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128824545 seconds)
  done (took 5.473701086 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.114393125 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.139285053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123385512 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.149606085 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.109081133 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.138785037 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.113389849 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.133376051 seconds)
  done (took 2.051474875 seconds)
done (took 30.937956507 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125173216 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14492985 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.11990581 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.138753065 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.138222154 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.128351261 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.117211941 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.103471762 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.140375172 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.122611665 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.130778305 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.105652518 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.147409572 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.109598049 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.148022444 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.113927435 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.155320189 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.122324842 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.134033542 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.113655807 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.132434708 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.128135142 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.139634597 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.106463395 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.158829037 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133481602 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.12409199 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.135266179 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.111355759 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.106473676 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.148866435 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.110420963 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132769316 seconds)
  done (took 5.251841074 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.136251676 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.173196321 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101729481 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.13026459 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.174596069 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102995319 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.16108298 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103292079 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12889718 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104807664 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.103393572 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.158327152 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.164951756 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.138999045 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.182615671 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.166901293 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.131360694 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.173340196 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.154246914 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.144434467 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.161245558 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.101262201 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.166310952 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.173835968 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102141931 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128186396 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.149455755 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.164418654 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.176247679 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.131789143 seconds)
  done (took 5.330840708 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.115589758 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.147575084 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133178976 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205607944 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.176018843 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.119934775 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144214097 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.126545832 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.159249971 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.104970132 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142710664 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.142449827 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149758869 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.115981819 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.138127157 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.119936314 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.155936333 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.106506973 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.139829662 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125361381 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.152666757 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.146434933 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120675529 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.142238709 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.105973385 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142584158 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.11164084 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146142617 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.112410466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.140990502 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.109902549 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.137914107 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.109048186 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.142387632 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.110787419 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.142103411 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12936666 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142413548 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.117190872 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.170068718 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.141505132 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111487425 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.154536695 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156477324 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.135803003 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.114647414 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.145672268 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.114528737 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.132860685 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125643243 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.147122297 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.106593152 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.151728859 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.131634735 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.106352411 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112498194 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.134845777 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.108263975 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.14162522 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.1098071 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155747366 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.113205373 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13994914 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.107930981 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139669042 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10475581 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.132199207 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.112536536 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157718124 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137369513 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138712722 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.132823525 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.113533578 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.140366595 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.112615847 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141823969 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.105919599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138260498 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114227805 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.137591433 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.115197796 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.134497362 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.110777379 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.150825165 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124379654 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.141746683 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.111728372 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141113318 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.111373198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.135033831 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119593149 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.136087152 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.110067071 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143234425 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.108065521 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.136524598 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.113310719 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.138648787 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.104914523 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152588463 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.112142694 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132452551 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.123197174 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.134510153 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.110179148 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142824355 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.117889299 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.133291045 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.111397934 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.140722803 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.105118774 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138418515 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.110523295 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.132416747 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.120096494 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.143894648 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.110928936 seconds)
  done (took 16.275083709 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.264486041 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.241902706 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.214058144 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.328948486 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15928342 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.134104915 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.239356768 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.191191916 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134353246 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178712974 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.194722138 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.200335227 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.105820724 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.166374183 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.242431359 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.33455039 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.137985858 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.179927971 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178034334 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.159735622 seconds)
  done (took 5.044113433 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.125963362 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175851638 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167067097 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.135070979 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.134861204 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.122381394 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.136002282 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.15157352 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.108433501 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.141266449 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.106170026 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143755715 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108729246 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.138415526 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.126928364 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151823393 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.111664747 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.142265329 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.152481165 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.113991475 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.136721385 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.157525485 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.118282532 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161716189 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111334891 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.151082556 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.104613133 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140608864 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103469308 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.132250606 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.114338638 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.15001322 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140612496 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108026645 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139486872 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106887187 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129839336 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.108049687 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.107516572 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.140147164 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.150092788 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.111552512 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106429877 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134328773 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.116080441 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129181988 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.111652414 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.141195117 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139406978 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.116603058 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139902834 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.112511273 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.141012784 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.119196894 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.13114754 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.118386728 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.148301372 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.112858789 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.142507698 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.10578351 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.131926957 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.111068211 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132578259 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.113163808 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139804518 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.153824988 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.117312313 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133430103 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116517512 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13795514 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11074444 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152853578 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.156345453 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10489305 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.103125726 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155982515 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103063477 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121210051 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.116892321 seconds)
  done (took 11.26011158 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138431031 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134602606 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.128851593 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.172815373 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.123080481 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.140306249 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.106459195 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.154472908 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.113998016 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.142947356 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114575669 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.149662671 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159402922 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121631331 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13304534 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.122658233 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.138245795 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151302374 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.154666923 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.168153125 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120140475 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.138958911 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.121266328 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.147269692 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143828556 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.146646184 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.167230397 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.113909316 seconds)
  done (took 4.937043806 seconds)
done (took 49.131135597 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.164409803 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.344368265 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.133288271 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.134332753 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.144229684 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.161029587 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.136080454 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.344953718 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.778335053 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.114315792 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.131689431 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.132672639 seconds)
done (took 26.773571623 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.457179735 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.696582017 seconds)
    (2/2) benchmarking "String"...
    done (took 1.454609184 seconds)
  done (took 4.200184367 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.124378158 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.125937277 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.370843266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.126544744 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.127578347 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.142882604 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.134134245 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.139513289 seconds)
  done (took 15.215969711 seconds)
done (took 25.046467765 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.145919889 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.296473549 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.390343218 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.146640343 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.12716063 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.140960297 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.115278749 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.147740235 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.142049 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.120368959 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.096980699 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.405041601 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.126799182 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.513249857 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.118695794 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.16611994 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.124637972 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.36522255 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.13051123 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.166055992 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.112219999 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.114834006 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.175444343 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.1518144 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.131500609 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.137523062 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.157898367 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.115399811 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.3069081 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.153858518 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.168903267 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.127795788 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.169672125 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.128739817 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.242200658 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.153709529 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.297126602 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.116488211 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.113690895 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.135181139 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.30584511 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.488788346 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.127790662 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.11603014 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.141631679 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.156098721 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.115173674 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.813854446 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.130157652 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.123625532 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.154741255 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.512032775 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.147365417 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.139520672 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.13359218 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.34812658 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.145034287 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.144028563 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.157055211 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.141578695 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.128116294 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.127430287 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.162071206 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.134168365 seconds)
  done (took 138.342758944 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.128056774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.128849789 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.128423801 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.173695459 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.132685209 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.129317623 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.127949332 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.126721882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.12880006 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.135483652 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.133543112 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.12876946 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.142487373 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.127156886 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.130153286 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.146507624 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.13281019 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.132203627 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.13190695 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.130347976 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.131936806 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.13496609 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.14481872 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.129799097 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.156540596 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.210460351 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.15096811 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.139693881 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.13480163 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.130253074 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.152640532 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.19638624 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.655332065 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.988718603 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.143855555 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.155294166 seconds)
  done (took 77.484224796 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.130438378 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.129803411 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.130329278 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.158004911 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.130233461 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.61259586 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.613173371 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.845046214 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.333369252 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.196383384 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.329885137 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.136584311 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220374697 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.144291516 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.1328405 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.14700551 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.158338012 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.131030153 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.131319776 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.615597601 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.14438724 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.246697699 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.297844624 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.147352507 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.159161776 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.525187477 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.131381451 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.159151953 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.451006082 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.174780256 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.131564269 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.424984211 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.245549672 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244735728 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.134939007 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.159812604 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.132998459 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.405564463 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.133566148 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.132571352 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.136035486 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.729358523 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.139432371 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.615110201 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.13400672 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.011459195 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.138777714 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.133376735 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.132807421 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.307971688 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.660931013 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.152461237 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.134124022 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.136640359 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.134420427 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.13479199 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.16183809 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.199843444 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.241274615 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.134371811 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.136738636 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.160774287 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.134328948 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.241323965 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.139810943 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.982828676 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.196664371 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.284878234 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.618357015 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.135188487 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226997021 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249182813 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.133840288 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.135741341 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.135298567 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.1338284 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.240415499 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.135221071 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.494681524 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.296426617 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.150187498 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.199174653 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.139345053 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.227311511 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.135426573 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.436117689 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.140850823 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.135451077 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.13593442 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.790876849 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228473593 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.135322935 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.136327114 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135841645 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.494032746 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.623161603 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.288648579 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.141681586 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.573509919 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.141751831 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.511312761 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.612549009 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.735993183 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.141819744 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245214563 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.298501119 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.15039764 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.138146772 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.136237859 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.201768683 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.140238701 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.191649445 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.134251084 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.529568658 seconds)
  done (took 355.408030423 seconds)
done (took 572.282198137 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.902907929 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.806144691 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.93136565 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.834270796 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.795481386 seconds)
  done (took 10.318381215 seconds)
done (took 11.364945602 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.288857601 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.289158242 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.171905319 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.291113294 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.149838297 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.304944338 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.265344125 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.133426642 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.209450376 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.182927773 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.207083308 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.16048907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145348602 seconds)
  done (took 16.842895798 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.36221076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.113695886 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.176174415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.33561992 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.152065197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.365986935 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398274916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.113237001 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.261023751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.129853495 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.125546438 seconds)
  done (took 16.57241581 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.402492316 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.114496589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.177583669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.348080239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.152027583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.356209695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390944225 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.111950139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.264695126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.12335235 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.121668949 seconds)
  done (took 16.600861864 seconds)
done (took 51.056005806 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.148097494 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.271969312 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.138303863 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.124412134 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.121584633 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.119127075 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.122949788 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.11746326 seconds)
  done (took 10.196200941 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.116632833 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.11724739 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.112800486 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.115896635 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.117252541 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.111814224 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.109323931 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.111295491 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.111828024 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.113800059 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.110449451 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.113307252 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.113786148 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.11100101 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.113857681 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.111998453 seconds)
  done (took 18.845239333 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.113702941 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.111688315 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.111461902 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.110189961 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.112007235 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.111869049 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.112948066 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.111179809 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.111524398 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.112081734 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.112500492 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.111701026 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.111225137 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.111650138 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.113427775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.11099313 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.111994782 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.110198755 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.115772456 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.110678229 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.110434169 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.110444167 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.110778026 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.1126824 seconds)
  done (took 27.71494285 seconds)
done (took 57.786807481 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.103115004 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.124320456 seconds)
  done (took 5.253850584 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.170561109 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.172050373 seconds)
  done (took 3.371035843 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.109314393 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.108618469 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.109972304 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.109614945 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.109418893 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.108114842 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.10849001 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.10951465 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.108024338 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.106755736 seconds)
  done (took 12.114902425 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.107714883 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.107165342 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.104491964 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.107288187 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.107973503 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.105331648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.108158862 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.107084642 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.108142663 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.104255593 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.107551594 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.103567787 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.107540352 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.105337293 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.106704274 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.105458847 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.105701151 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.1054859 seconds)
  done (took 20.940207816 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.122431616 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.128917501 seconds)
  done (took 3.275147546 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.245833969 seconds)
    (2/7) benchmarking "second"...
    done (took 1.147202418 seconds)
    (3/7) benchmarking "month"...
    done (took 1.220787746 seconds)
    (4/7) benchmarking "year"...
    done (took 1.211832192 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.146475069 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.125879041 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.146997381 seconds)
  done (took 9.269651558 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.108691467 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.298974487 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.406921464 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.704359443 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.109722956 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.154709923 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.989840171 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.155571758 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.143114859 seconds)
  done (took 13.097719833 seconds)
done (took 68.348130897 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.102235227 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.152844671 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.124241661 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.115681703 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.44516506 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.12818731 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.105882957 seconds)
done (took 15.198640822 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.096863421 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.093166624 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.093835931 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.091335454 seconds)
  done (took 9.400218041 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.03943095 seconds)
    (2/2) benchmarking "read"...
    done (took 1.465137541 seconds)
  done (took 4.530996612 seconds)
done (took 14.956786925 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.110263869 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.109659248 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.109517521 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.107668792 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.109854757 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.109745049 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.108227907 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.108010066 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.11006651 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.109455609 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.110581932 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.110430223 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10990141 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.10785623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.107774423 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.110101836 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.108761413 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.108881922 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.108466344 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.108209929 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.108434579 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.112263424 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.108454536 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.109710541 seconds)
  done (took 27.649940313 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.111823092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.108609388 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.112311965 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.111797827 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.109020299 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.111968711 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.11136725 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.108457522 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.111164476 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.112067921 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.109846011 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.109235079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.111373531 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.109575725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.112023922 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.109405791 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.111644679 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.109578975 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.112262017 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.109700281 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.112115993 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.110440289 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.109043711 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.11114524 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.109544422 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.109393979 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.113212471 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.109608851 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.11265233 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.109512372 seconds)
  done (took 34.349381572 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.117580938 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.11872765 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.112451877 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.113120247 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.113074039 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.113055896 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.113504025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.113255173 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.114244247 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.112897648 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.113399389 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.113009864 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.114313629 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.115196956 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.11302776 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.113206501 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.113453377 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.112619275 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.114429967 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.114339039 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.113712128 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.113283781 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.114754092 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.113608714 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.114293267 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.113432386 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.113892154 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.115180621 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.112796406 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.115249638 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.115212576 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.113676901 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.114605287 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.11546035 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.114775937 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.114392385 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.119949541 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.120418913 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.114116829 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.115222194 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.115494601 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.1149879 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.114573273 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.115196104 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.11617961 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.11519903 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.115332664 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.115757997 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.116095064 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.115671828 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.11542364 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.115862487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.116548984 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.115454475 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.116766175 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.11576682 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.115774845 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.116288276 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.116406479 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.11646987 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.115775304 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.116553104 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.115062791 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.115636007 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.116381186 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.116777318 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.116358581 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.115315128 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.116458675 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.116280237 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.117172931 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.116714646 seconds)
  done (took 81.319792644 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.116848551 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.11379896 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.114116833 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.113782338 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.114550313 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.11759745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.115223147 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.117039432 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.114892303 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.117744955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.116798991 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.114555195 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11501955 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.117497023 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.117644488 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.11558251 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.117469218 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.115078104 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.117901522 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.117760855 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.117414268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.115491141 seconds)
  done (took 25.588142679 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.118189815 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.119749577 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.11528259 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.119426267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.116526745 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.119067415 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.118222173 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.119298817 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.119519812 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.116425049 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.116983692 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118946665 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.118394128 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.115873674 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.115456643 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.117985925 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.119632817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.118824927 seconds)
  done (took 21.158106516 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.117202891 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.116004091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.120007388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.11702145 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.116840043 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.118422186 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.117350598 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.119996889 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.121119026 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.117254994 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.120618397 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.120415693 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.120621117 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.118207223 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.120494415 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.11824431 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.119908728 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.117468801 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.120465594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.11894845 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.118871819 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.119962613 seconds)
  done (took 25.651281791 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.121589615 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.121404662 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.118378038 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.118448006 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.11708835 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.120879181 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.121334712 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.118562348 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.123339256 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.121147849 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.117784831 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.121819127 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.12069065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.117793287 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.118484541 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.117247515 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.120305829 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.117183355 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.120305309 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.11760316 seconds)
  done (took 23.428194446 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.120431282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.119932994 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.119283302 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.119768215 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.120182308 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.118968744 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.11989946 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.119945656 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.118766404 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.119332193 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.115820662 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.115807038 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.116029184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.116693375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.116763977 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.115989343 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.115917898 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.118964099 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.114929918 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.113058004 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.1153336 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.114037833 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.113650151 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.114196007 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.114893601 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.113702239 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.116063391 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.114012054 seconds)
  done (took 32.310261725 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.115054576 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.113182193 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.109911922 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.110947638 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.111135947 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.111034448 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.112325804 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.110348657 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.114083168 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.110807283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.11438404 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.11330463 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.11424571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.113248647 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.11316556 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.113666632 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.112620669 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.111944021 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.111401885 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.110809752 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.113764016 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.114484417 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.11528237 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.112686212 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11325121 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.115133838 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.112775464 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.112765722 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.114631991 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.112460672 seconds)
  done (took 34.415943928 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.160352156 seconds)
    (2/2) benchmarking "in"...
    done (took 1.15842347 seconds)
  done (took 3.348437129 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.114216365 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.114918132 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.114337782 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.113220911 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.113580996 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.115454114 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.116009101 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.112390843 seconds)
  done (took 9.944983138 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.118047239 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.11672842 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.115557001 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.115690671 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.11591348 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.116069085 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.123439007 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.134209429 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.116651547 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.119278494 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.123162946 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.122987648 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.119904794 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.117155666 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.11673974 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.119341668 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.116523347 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.11816079 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.118043255 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.117926729 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.117484591 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.119335659 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.119143994 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.115618155 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.119381052 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.12618409 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.120830722 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.118309819 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.117734877 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.12077472 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.117811506 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.114478249 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.118078703 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.119422031 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.11852439 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.119448773 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.126592559 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.137361347 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.125592698 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.118349869 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.119930644 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.116552998 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.119224203 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.119434913 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.119814633 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.117986766 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.119375606 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.115670514 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.119197823 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.122079038 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.122159685 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.11827619 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.117055827 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.122266944 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.12026687 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.126549589 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.138067861 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.122846655 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.126977508 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.129717779 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.13116879 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.139664737 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.120271838 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.120532245 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.130137065 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.138633681 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.126737618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.136398578 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.116568427 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.1202651 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.127004632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.131318187 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.142861615 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.120593711 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.121906512 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.12097185 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.121342905 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.121338209 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.127997591 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.140676575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.121533737 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.121920084 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.130545209 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.140069857 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.121354962 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.122601115 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.120894371 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.122191918 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.122854814 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.131129151 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.140392701 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.122929422 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.122310816 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.122091154 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.123221222 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.123632439 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.122375429 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.123538307 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.119282063 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.122645036 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.122495295 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.126433931 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.12919343 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.122600729 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.123622481 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.129453686 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.123649998 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.123801297 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.12947535 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.122822513 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.122776636 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.125880756 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.12870832 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.122197996 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.126686548 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.130619083 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.123374148 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.124563779 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.124841544 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.124560755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.133694298 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.145999269 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.124690689 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.123514691 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.128627094 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.133396096 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.126301365 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.127386115 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.125863872 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.122341391 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.12215678 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.127491693 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.126288751 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.124718416 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.12515512 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.12475747 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.122414575 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.126085339 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.125925011 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.125816045 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.126593429 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.125590545 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.126465696 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.125768462 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.126358727 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.127868102 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.131618682 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.126771173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.128041447 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.125533234 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.123365231 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.126479452 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.127957442 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.127502677 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.126171716 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.126037583 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.126810648 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.12669811 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.127675274 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.126620353 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.127449772 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.127594792 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.130709768 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.128130362 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.130496389 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.128087672 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.125421476 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.127420704 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.128788261 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.126517179 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.128695785 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.127085375 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.131857641 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.13404591 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.12781112 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.127599897 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.131347819 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.129006589 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.128597823 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.128996496 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.130838216 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.134560138 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.128062755 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.134302523 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.12933885 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.129006193 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.129524362 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.128879105 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.128527314 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.129530531 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.13093568 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.134032452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.1400851 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.150355173 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.129559866 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.131002225 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.129830855 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.132103889 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.132259904 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.128778106 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.129421517 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.126900155 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.128828905 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.128539128 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.130640835 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.130604572 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.129722249 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.13159362 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.131133659 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.131827016 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.131485227 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.130338711 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.130752476 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.127258684 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.131436293 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.131147609 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.129850317 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.128638068 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.128815121 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.130453183 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.130944607 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.131945286 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.135176977 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.128445196 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.131898527 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.133376925 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.132413511 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.130568777 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.130994867 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.132920474 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.131801226 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.137902102 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.149367015 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.131422588 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.138976467 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.150552001 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.131225805 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.134432089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.132985102 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.13027648 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.134621139 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.139576896 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.13207423 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.13361364 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.133971389 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.133328039 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.133802284 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.138112812 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.130210379 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.133340524 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.132700113 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.135013253 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.132357516 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.133082142 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.134368954 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.133145374 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.136424252 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.13546412 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.13431851 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.133953477 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.133838946 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.134331781 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.134416997 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.137769075 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.138949809 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.138713955 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.135491146 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.137943235 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.135913766 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.13687818 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.134840269 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.134429237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.134392069 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.147576957 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.157150319 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.142727312 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.153204702 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.135628961 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.140882016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.152920739 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.138531695 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.135660807 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.135085266 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.137236191 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.135214543 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.134107984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.135627837 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.135666112 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.136110249 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.137110372 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.138938752 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.136158753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.135302369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.137300082 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.136810557 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.137985725 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.134799648 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.136839219 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.138688951 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.140217067 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.136863363 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.136909023 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.143351322 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.155065963 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.137044339 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.138070438 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.137888794 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.136273726 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.137482444 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.137571797 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.140136848 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.143310211 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.14001701 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.144013607 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.137128525 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.145265433 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.137389205 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.140417065 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.14424167 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.1348623 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.136677271 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.13869613 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.137458509 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.145444764 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.155886138 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.138283961 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.140495863 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.137270172 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.136870645 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.136685031 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.139242291 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.136810649 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.138712629 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.145595843 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.158586555 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.140811439 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.140051113 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.135768982 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.14052774 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.137970269 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.139117094 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.140217601 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.139135259 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.139043751 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.139295358 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.138810212 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.137560343 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.137058193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.141153657 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.136540632 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.138793469 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.147259832 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.159255675 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.142944315 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.138999846 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.141447447 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.139170513 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.143694739 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.160273813 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.141053165 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.142335761 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.137953317 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.142269452 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.14054048 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.139775088 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.137253816 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.139737874 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.142945927 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.139747247 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.141982443 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.139238732 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.141231533 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.142754201 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.151862952 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.160276289 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.14298818 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.144685294 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.136972486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.143470376 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.144296971 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.140434769 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.136867791 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.143892869 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.148299358 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.147985641 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.142270805 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.140096558 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.142842177 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.141216523 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.139775346 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.139118191 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.141951539 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.142912963 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.142443724 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.143026934 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.14470858 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.141981387 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.142648353 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.143537775 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.140726958 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.151039889 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.14402818 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.140759431 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.140039347 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.139872722 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.142466802 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.141273413 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.142608311 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.144836312 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.144634014 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.141739552 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.14966516 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.14814515 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.145482986 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.143909421 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.143042352 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.143139103 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.14349109 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.143664613 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.142462723 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.143972355 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.14504983 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.143035275 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.144160615 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.143317392 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.145009211 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.143165068 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.144744775 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.146033657 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.150783687 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.144400097 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.138781972 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.144969342 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.142378675 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.143637552 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.142698331 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.151553872 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.14697383 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.151985585 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.151607135 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.14795479 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.14644094 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.148082298 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.149588903 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.145169588 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.146130749 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.144799754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.145863377 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.145442576 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.148196594 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.14438503 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.153072936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.144643089 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.14679577 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.153044873 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.16537069 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.145657279 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.14965869 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.597271043 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.145957078 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.144811459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.146624938 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.144672044 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.153299046 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.165287581 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.146558037 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.147682463 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.144578367 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.147653491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.150868117 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.146518586 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.147384468 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.144306484 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.145477496 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.146776259 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.146852439 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.145568528 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.146430838 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.146091083 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.149420371 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.152845904 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.144931658 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.147514874 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.145735306 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.146633594 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.147542686 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.14730034 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.145242699 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.144639556 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.146941654 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.148353749 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.148799588 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.150109783 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.14688501 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.147519757 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.147895514 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.148145407 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.149704244 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.156845148 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.153954595 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.145350549 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.147498877 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.149010371 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.149588522 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.148612002 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.149666422 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.149153545 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.149001054 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.148526739 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.149254896 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.148774018 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.151260534 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.164335512 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.170371899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.150730255 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.149709796 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.151908399 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.149519496 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.146633332 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.14923333 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.150912271 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.151441445 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.155721663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.151237012 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.155800183 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168173089 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.150539953 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.153735042 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.152710117 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.155858983 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.153203342 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.149739315 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.151257921 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.154206619 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.165184609 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.150946363 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.159495654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176676736 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.168938339 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.151719097 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.150600318 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.151738441 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.152317899 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.152663429 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.150557481 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.15167555 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.151075389 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.151859374 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.151235592 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.155644948 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.152319384 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.153539987 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.151029145 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.150409542 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.153255042 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.148464946 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.15284757 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.150801024 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.152168462 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.151949888 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.153699981 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.153167043 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.163482377 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.176025357 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.152425945 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.153034887 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.149202839 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.155082599 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.155349767 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.161082139 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.158323712 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.152308552 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.153894468 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.153664395 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.153117574 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.15170301 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.153545054 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.15431061 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.152567702 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.150875115 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.165716738 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.176241277 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.158488793 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.15255363 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.155946384 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.152886115 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.154908748 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.155266744 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.155271324 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.155303131 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.156216718 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.158189798 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.154024596 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.156298913 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.15703595 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.162091106 seconds)
  done (took 679.745570128 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.151650104 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.153228886 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.151814138 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.152846429 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.151930621 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153283924 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.152445352 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.153487969 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.152810396 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.152562994 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.152554571 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.153777934 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.154583918 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.155011069 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.153078342 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.153588551 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.152658241 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.153073988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.154101989 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153888334 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.153445903 seconds)
  done (took 25.28478253 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.156994176 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.153325962 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.154352796 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.156249835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152918133 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.156260503 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.154646069 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156872274 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.155571933 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154396439 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.157872329 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157163704 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.154052053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.15442312 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154234588 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157546826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.156839474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.154719243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.15686228 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.154852982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.156970336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.154761965 seconds)
  done (took 26.490608086 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.157913503 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.15786597 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.157609351 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.154720513 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.157778757 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.155354985 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.157886493 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.159100458 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.158158572 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.157550283 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.156269284 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.1598524 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.163712505 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.161392289 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.159056567 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.158672363 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.158636631 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.159228447 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.158179585 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.157271158 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.162423087 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.174326236 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.156561699 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.158120085 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.16054497 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.159483296 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.158958479 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.158529514 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.159861666 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.163415921 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.160972088 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.161000794 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.161551977 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.159307286 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.162216177 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.163285962 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.160860819 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.157209382 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.159841542 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.16848686 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.176845666 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.160305297 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.166824007 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.179090104 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.160515308 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.163865664 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.16698444 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.158838555 seconds)
  done (took 56.797241519 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.736432942 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.757982857 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.748733492 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.757076714 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.758318715 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.754592982 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.760670126 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.758256475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.750922012 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.755812279 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.757607205 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.756585818 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.751858859 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.755540111 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.751647285 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.749823181 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.753692102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.751702486 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.756827759 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.760678549 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.748517909 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.756333592 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.752595313 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.751542311 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751592457 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754964249 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.759399653 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.75335142 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.75521929 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.753836115 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.756896899 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.763132715 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.75933071 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.752949958 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750283127 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.752266768 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.754443444 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.75291142 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.754831259 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.747817921 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.757037859 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.754116471 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.756346457 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.75558191 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.763573208 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.753218773 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.75097535 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.754640278 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.75502117 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.753162624 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.755808095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.754119491 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.757958472 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.753015258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.759100648 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.758318181 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.759335058 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.765326896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.756239656 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.755056544 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.753898386 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.756658608 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.758215611 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.75871285 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.761376047 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.7597922 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.760809592 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.759610824 seconds)
  done (took 120.439201348 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.166124959 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.166236231 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.165737387 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165254335 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.166080902 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.165825069 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.165408105 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.165310055 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.168552032 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.165830148 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.164904899 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.164513238 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.16473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.1660606 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.165373139 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.165794237 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.164403958 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166987258 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.165408556 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165520005 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.165821162 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.166228258 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.166594133 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.166653436 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.16762983 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.165597188 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.167188112 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.165812867 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.1678985 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.167534106 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.168779136 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.167717282 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.167036658 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.167822652 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.167168844 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.167369897 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.167960345 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167542023 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.168171287 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.16899926 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.168331752 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.167957418 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.16785259 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.167918851 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.168567203 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.16797797 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.169932429 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.170216837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.169635573 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.167832835 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.168114577 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166664337 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.168163959 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.169230875 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.170013634 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.169542249 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168454909 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.16969318 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.168110158 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.16852923 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.169859394 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.169083139 seconds)
  done (took 73.451754452 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169562949 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.168827371 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.169257155 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.166739361 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.17020149 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.167218777 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.16789858 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.168509905 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170546323 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.170029534 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171066907 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167575659 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168707411 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171100354 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.169794422 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16954169 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.167916263 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.167861829 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169581801 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.169504658 seconds)
  done (took 24.461465881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.168097923 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.170130987 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.167815651 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.169794811 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.172528539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.167986072 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.171495357 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170394435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169126385 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172256277 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.172145803 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171358544 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170176526 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.169271658 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.171572119 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.170305415 seconds)
  done (took 19.8052983 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.169004241 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.172752388 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.171336149 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.172216436 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.16866195 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.168782459 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.171325896 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.169971333 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.169272968 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.172581512 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.171765112 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.172308108 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.171629111 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.173258813 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.170194392 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.172661243 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.169590186 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.169231783 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.173071471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.172255784 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.170028659 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.171289489 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.172955308 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.172257107 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.17036276 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.171208108 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.16905026 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.170278023 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.171216924 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.172427799 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.171439785 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.171518733 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.170868505 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.171725739 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.173919561 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.171631063 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.1738846 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.173285495 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.17450024 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.173979703 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.173323233 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.172344975 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.173742244 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.174612743 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.170776438 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.173977742 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.17161222 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.172409865 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.172510813 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.171672241 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.174627615 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.174869405 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.17512479 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.174599836 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.174817852 seconds)
  done (took 65.545340685 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17523918 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.174691738 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.172037117 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.175122595 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.176182984 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.172208837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.175401688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.175031466 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172824826 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.175430512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.173379567 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.175838367 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172908786 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.175943747 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.17262364 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175960855 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.173702149 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.1731922 seconds)
  done (took 22.224092019 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.1734655 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.173569412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.176863286 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.174255936 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.175037367 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.17640699 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174586763 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.176903897 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177069826 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.17592511 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173843984 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.176715286 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176518464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.177636777 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.174956992 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174316874 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.175721969 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17773015 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.174429268 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174237612 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.178803407 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.176408555 seconds)
  done (took 26.95193157 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.175933114 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.17560431 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.175865422 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.192265732 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.194429779 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.178496569 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.177982387 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.177304091 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.197835144 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.225613889 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.219907991 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.194150499 seconds)
  done (took 15.372770302 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.175890996 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177189444 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.176817183 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.177535933 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178331012 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176188353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176509132 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176062472 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.178243039 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.176175195 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.17624381 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17839419 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179982947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.177599213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179244177 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.178130593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176877385 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177372349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.176476141 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179063335 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.176590425 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180329166 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.176259725 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177368824 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.17738942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.176783493 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179951747 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.17739866 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.177928037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179196569 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180249586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.17819933 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179200822 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178609419 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.178805638 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179977015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.177845242 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180652248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.179791221 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178652898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.179947282 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180309879 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.180758291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.178262445 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181657008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179362105 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179554094 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.179123897 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.178846499 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182312091 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.180989519 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179291276 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181170648 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181452973 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18250162 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18216756 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180302593 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178937989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182416232 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.180158254 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.179763291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18178445 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179854304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179509396 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.181001186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18007688 seconds)
  done (took 78.903049501 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.179643382 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.179305571 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.179376174 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181132694 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.179770843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180679119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.178516885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.181392001 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.178894957 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180272545 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182946065 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1796629 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.179140437 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180478063 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.180475996 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.179991893 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181011959 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181969279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.180802594 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.183215001 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.180648366 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181127891 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182217461 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182118905 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181599351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184803105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182927408 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181816381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181324297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.181060203 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.18334144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.183675187 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.181507808 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.181740074 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.180966428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181094773 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181512995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181855627 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181691257 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184141436 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.181561559 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.184646298 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.182587608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.1826417 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.18215893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.181448198 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.180325667 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.182894788 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.183133246 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.181138828 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182858837 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.183042957 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.18349773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.181857781 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.183526705 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.182711419 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.182697163 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18399821 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182321708 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186055299 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.182507877 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.182918018 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.186234394 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.182497741 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.183615973 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.183292889 seconds)
  done (took 79.102220395 seconds)
done (took 1634.765674389 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.350869869 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.305103059 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.184675414 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.196151565 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.183958533 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.209135335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.198207731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.186566231 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.185074116 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.184812473 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.184798968 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.377055918 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.17948165 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.18637842 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.185464112 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.28108075 seconds)
  done (took 24.674583905 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.212895604 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.197531272 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.300068135 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.212644246 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.217354271 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.368579407 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.250129275 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.193219219 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.350113419 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.217433504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.183146999 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.230903566 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.192461151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.183636009 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.226050237 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.370238743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.429226746 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.185036564 seconds)
  done (took 26.615859896 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.61285132 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.193137048 seconds)
  done (took 4.905263051 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.211806097 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.193450169 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.195410268 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.192122412 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.18436257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.183394182 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.192102339 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.185838421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.193567869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.315289839 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.196474084 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.208432234 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.214540056 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.194742127 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.191847389 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.237366562 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.368725792 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.192010507 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.189926887 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.200343577 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.19406409 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.302135614 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.234953752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.193377365 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.312333564 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.193761727 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.203485228 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.201769634 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.332636007 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.191820007 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.194230843 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.196245689 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.19789787 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.189178816 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.664412064 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.208503199 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.220602783 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.203303169 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.19229531 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.360240437 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.196857526 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.202056467 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.18844766 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.678276832 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.32150705 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.31199105 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.212275215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.201935967 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.198128425 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.259866996 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.196637544 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.198341306 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.254947512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.00427931 seconds)
  done (took 77.758081982 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.243999389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.187515394 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.369678145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.21066316 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189673121 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187730831 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.188618584 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.455524145 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.199086935 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.189724078 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.516714407 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.755702336 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.212762041 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.24895721 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.157821385 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.276131409 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.19102656 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.206275196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.190798466 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.195020939 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732200639 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.190893501 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.191082636 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.312096087 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.22794501 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686408134 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.189652196 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.192402609 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.192645743 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.190137824 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.70837507 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.21672901 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.269227507 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.189795675 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.453469958 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.55358915 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.509638323 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.194633342 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.241864206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.195390789 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.200459996 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.671201629 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.53217832 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.191417507 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.192923899 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.683155019 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.190747296 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.204062997 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.196419437 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.440308167 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.192499783 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.192973059 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.208550728 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.19316388 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.19160871 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.307932994 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.281632259 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689270631 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.191218397 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.193347075 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.237154749 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.193357285 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.197211846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.196535779 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.193952186 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.537499776 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.408394246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.194303708 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.535984977 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.702859514 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.210163041 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.786208423 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.20751178 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.194454003 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.381092352 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.199648044 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.192257106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.698571697 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.192020869 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.19407334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.51637859 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.193968432 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.511797882 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.212078039 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.193663045 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745185927 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.205836568 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.203188561 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.194550003 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.207879615 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.193694187 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202974183 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.462211374 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.231359303 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.193834351 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.195092853 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.215520242 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1953697 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.195969475 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.196617752 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.771132576 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.21650695 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.195951548 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.194706655 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.194577175 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.196199195 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.196167362 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.195334741 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.462296915 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.207493066 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.198145507 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.197462336 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.196123096 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.219835932 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313866178 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.200555318 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.48498002 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.194994915 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.195744881 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.198244807 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196968693 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.246287707 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.198361948 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.202986236 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.074981246 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.466688635 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.212996657 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.212702324 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.198716235 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.196412964 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.197103398 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.1987648 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.24224054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.198849528 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975976539 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.220260935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.197486284 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.195787797 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.209279689 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.195510244 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.195687771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.197124466 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.486405456 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.464372345 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.417577284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.197972817 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.196442605 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967218931 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.260051667 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.376774818 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.213682245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.196974522 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.450714224 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.417393607 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.198288164 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.196641276 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.197403392 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454136405 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.197182213 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.516278687 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741708331 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.213871723 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.20618783 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985254987 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.917669454 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.200844982 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.203862678 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.52289959 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.216910144 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.199351861 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.198575745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.199979246 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.214665864 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.200212329 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.199875817 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.199782068 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.19955281 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.214432138 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.390731933 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.215113899 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.20989389 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.691194396 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.243709795 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.199038776 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.199247977 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.200530836 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.201111994 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.277600256 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.201854367 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.219225837 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.199876035 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.199466803 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.711855155 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.200131817 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.201779562 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.391291664 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.892269072 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.218876803 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.200242835 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.216156905 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.115708567 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715776781 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.231066949 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.49291702 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.205544472 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.23944467 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.200198344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.255651714 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.716354439 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.201635991 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.218216322 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857086537 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.218072424 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671171158 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.203076902 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.204131884 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80762766 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.216861136 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.206192584 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.20136459 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.202539437 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499382095 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.202890746 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.224981198 seconds)
  done (took 467.488197003 seconds)
done (took 602.537008872 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.201360705 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.207835607 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.194171058 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.207545474 seconds)
  done (took 9.926761678 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.213545984 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.210690896 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.211404697 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.209942056 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.211238449 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.210155342 seconds)
  done (took 8.385298357 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.204223776 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.204939375 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.207633119 seconds)
  done (took 7.734662317 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.404085345 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.232592354 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.517577821 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.235587197 seconds)
  done (took 8.507597782 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.211650635 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.210752047 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.211607588 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.213187855 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.215745383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.216117532 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.212928819 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.212954302 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.216507411 seconds)
  done (took 12.039143836 seconds)
done (took 47.709320055 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.28755521 seconds)
    (2/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.896906217 seconds)
    (3/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.327531404 seconds)
    (4/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.340001044 seconds)
    (5/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.398243777 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.392788119 seconds)
    (7/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.307469061 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.281872909 seconds)
    (9/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.345636855 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.338484466 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.232715898 seconds)
    (12/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.398331692 seconds)
    (13/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.238873524 seconds)
    (14/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.310295956 seconds)
    (15/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.203146671 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.320932265 seconds)
    (17/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.300464891 seconds)
    (18/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.306857965 seconds)
    (19/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.194910241 seconds)
    (20/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.346626298 seconds)
    (21/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.225580231 seconds)
    (22/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.197672805 seconds)
    (23/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.350276438 seconds)
    (24/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.425193065 seconds)
    (25/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.263599999 seconds)
    (26/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.433354609 seconds)
    (27/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.262957545 seconds)
    (28/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.349166464 seconds)
    (29/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.305386114 seconds)
    (30/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.195627077 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.257339466 seconds)
    (32/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.233648271 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.310173874 seconds)
    (34/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.246525219 seconds)
    (35/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.214145451 seconds)
    (36/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.89504919 seconds)
    (37/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.954447784 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.226132276 seconds)
    (39/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.317402752 seconds)
    (40/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.388254067 seconds)
    (41/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.898730423 seconds)
    (42/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.198330111 seconds)
    (43/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.209689779 seconds)
    (44/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.258373111 seconds)
    (45/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.306115819 seconds)
    (46/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.208902596 seconds)
    (47/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.277232455 seconds)
    (48/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.359330069 seconds)
    (49/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.989745582 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.323726058 seconds)
    (51/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.285944416 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.317033493 seconds)
    (53/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.411043125 seconds)
    (54/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.196247526 seconds)
    (55/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.287733042 seconds)
    (56/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.274392536 seconds)
    (57/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.237289389 seconds)
    (58/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.2405952 seconds)
    (59/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.248635649 seconds)
    (60/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.237715992 seconds)
    (61/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.2312346 seconds)
    (62/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.863948627 seconds)
    (63/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.323771535 seconds)
    (64/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.30713114 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.369646707 seconds)
    (66/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.257552945 seconds)
    (67/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.195550707 seconds)
    (68/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.365620824 seconds)
    (69/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.253479206 seconds)
    (70/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.398772306 seconds)
    (71/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.292148861 seconds)
    (72/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.320558315 seconds)
    (73/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.226935698 seconds)
    (74/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.243199502 seconds)
    (75/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.315210736 seconds)
    (76/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.989662769 seconds)
    (77/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.235156783 seconds)
    (78/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.262763419 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.318922693 seconds)
    (80/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.235824102 seconds)
    (81/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.232415294 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.350542352 seconds)
    (83/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.267762156 seconds)
    (84/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.343398709 seconds)
    (85/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.262599491 seconds)
    (86/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.967548284 seconds)
    (87/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.283476999 seconds)
    (88/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.863785052 seconds)
    (89/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.284741939 seconds)
    (90/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.254394098 seconds)
    (91/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.01827435 seconds)
    (92/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.301687387 seconds)
    (93/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.255070239 seconds)
    (94/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.282397424 seconds)
    (95/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.108331139 seconds)
    (96/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.324742938 seconds)
    (97/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.521492907 seconds)
    (98/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.21337536 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.345197726 seconds)
    (100/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.231815575 seconds)
    (101/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.246476701 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.294630171 seconds)
    (103/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.294053568 seconds)
    (104/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.357763437 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.37483861 seconds)
    (106/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.213948115 seconds)
    (107/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.28823242 seconds)
    (108/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.359274498 seconds)
    (109/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.271769772 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.316965006 seconds)
    (111/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.290058924 seconds)
    (112/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.242708103 seconds)
    (113/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.290530629 seconds)
    (114/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.12271198 seconds)
    (115/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.336847197 seconds)
    (116/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.270106604 seconds)
    (117/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.238096954 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.320587192 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.239931662 seconds)
    (120/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.374944291 seconds)
    (121/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.246914181 seconds)
    (122/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.199606694 seconds)
    (123/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.201328375 seconds)
    (124/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.553852326 seconds)
    (125/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.261931789 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.254700173 seconds)
    (127/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.358564571 seconds)
    (128/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.278441403 seconds)
    (129/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.319776098 seconds)
    (130/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.201554373 seconds)
    (131/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.47088691 seconds)
    (132/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.962735022 seconds)
    (133/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.275608937 seconds)
    (134/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.24945318 seconds)
    (135/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.246575219 seconds)
    (136/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.408080118 seconds)
    (137/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.012728483 seconds)
    (138/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.219013175 seconds)
    (139/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.467794917 seconds)
    (140/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.076479825 seconds)
    (141/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.37743146 seconds)
    (142/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.265223515 seconds)
    (143/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.128799849 seconds)
    (144/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.250745623 seconds)
    (145/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.313875238 seconds)
    (146/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.904212247 seconds)
    (147/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.227073376 seconds)
    (148/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.35952981 seconds)
    (149/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.242170588 seconds)
    (150/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.377667554 seconds)
    (151/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.415669455 seconds)
    (152/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.399082828 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.423359286 seconds)
    (154/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.285620129 seconds)
    (155/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.344157608 seconds)
    (156/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.357391796 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.446243872 seconds)
    (158/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.243900371 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.427123422 seconds)
    (160/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.275656667 seconds)
    (161/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.220956827 seconds)
    (162/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.971289083 seconds)
    (163/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.438058894 seconds)
    (164/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.339828987 seconds)
    (165/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.343238895 seconds)
    (166/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.922874913 seconds)
    (167/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.290494077 seconds)
    (168/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.41339768 seconds)
    (169/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.309844857 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.294158664 seconds)
    (171/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.246076742 seconds)
    (172/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.996106584 seconds)
    (173/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.263852365 seconds)
    (174/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.321224147 seconds)
    (175/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.2421698 seconds)
    (176/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.462441755 seconds)
    (177/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.232254279 seconds)
    (178/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.216726727 seconds)
    (179/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.608444243 seconds)
    (180/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.292509583 seconds)
    (181/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.255803229 seconds)
    (182/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.444641124 seconds)
    (183/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.391484546 seconds)
    (184/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.42960354 seconds)
    (185/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.949509235 seconds)
    (186/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.275697308 seconds)
    (187/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.256924501 seconds)
    (188/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.878391018 seconds)
    (189/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.356469199 seconds)
    (190/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.327418737 seconds)
    (191/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.387593492 seconds)
    (192/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.2765623 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.959116412 seconds)
    (194/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.381046126 seconds)
    (195/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.327798468 seconds)
    (196/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.252224739 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.350660256 seconds)
    (198/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.323023612 seconds)
    (199/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.414051543 seconds)
    (200/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.432261389 seconds)
    (201/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.317771076 seconds)
    (202/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.025773273 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.223120145 seconds)
    (204/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.369014433 seconds)
    (205/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.257904579 seconds)
    (206/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.22224557 seconds)
    (207/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.256399527 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.310537626 seconds)
    (209/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.426878188 seconds)
    (210/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.364140599 seconds)
    (211/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.226032724 seconds)
    (212/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.37642589 seconds)
    (213/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.914442457 seconds)
    (214/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.35646488 seconds)
    (215/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.338275273 seconds)
    (216/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.435057826 seconds)
    (217/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.350754886 seconds)
    (218/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.387153461 seconds)
    (219/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.236305192 seconds)
    (220/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.206138497 seconds)
    (221/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.583634582 seconds)
    (222/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.25270742 seconds)
    (223/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.96545482 seconds)
    (224/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.286027682 seconds)
  done (took 345.3097314 seconds)
done (took 346.426984064 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277419591 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.404383153 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.228540404 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.230367257 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273431841 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.232460359 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.2695325 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.237028727 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.23258263 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.233324026 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.231256312 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.240261546 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.242172235 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.265226681 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.344052354 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.248597829 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.229280933 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.231459549 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.271805199 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.289318861 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273380845 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27410244 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.244219208 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.231236111 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277517227 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.279798176 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.236571225 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.2209441 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.231326296 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.272301781 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.222666709 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.237547862 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.281764913 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.282424228 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275854473 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.233874366 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274843009 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.408252104 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.266091622 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.2650524 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.234597424 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.279748765 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.245413095 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.24236221 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.283880312 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.244126076 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278282188 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.35643803 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.224104383 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.224133688 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285027479 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.293356644 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.236591133 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.222611336 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.238808041 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.356380551 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.23384279 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.279100919 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.235904816 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27672268 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.346673134 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.280746429 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.29471424 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282059929 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.235482678 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.245621793 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.235036282 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.291348217 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.233901669 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277018762 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278162319 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.240885631 seconds)
done (took 100.151406652 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.358507877 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.231551688 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.393354099 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.234103996 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.39504494 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.376806285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.230770431 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.231471831 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.231678859 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.03117962 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.229826958 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.230641866 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.231706266 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.231546976 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.358612518 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.233152638 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.22987728 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.935321744 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.234506106 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.375131105 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.23574329 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.229432237 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.2324291 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.029472645 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.230555303 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.22812033 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.377268683 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.234690343 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.927078476 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.227731732 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.231177088 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.926759286 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.380075759 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.251366728 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.243775961 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.240794247 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.394638901 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.25144599 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.357938767 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.359374448 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.39486108 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.272656279 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.229223445 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.234372162 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.237084813 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.235304009 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.232687996 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.263561341 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.232098605 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.234407494 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.938725941 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.246495352 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.243017268 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.234087902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.233340234 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.254490937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.233681197 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.236754911 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.379426671 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.237339358 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.363038398 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.032225643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.034537607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.236717163 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.233674276 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.234909581 seconds)
  done (took 101.67307745 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.300483782 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.311782483 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.348260449 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.256274078 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.288879211 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.350127573 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.25700169 seconds)
  done (took 10.251786047 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.243758006 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.237700296 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.286765634 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.287184313 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.236245966 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.394367963 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.237809659 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.248254894 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.235185031 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.28933054 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.239196662 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.237685091 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.243983634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.23642513 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.286780223 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.248554632 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35277964 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.23884862 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.236374276 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.38886672 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.235483042 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.245026447 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.289973644 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.249679171 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.239905114 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.245849398 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.044764131 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.239249346 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.235837385 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.239561984 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.236388364 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.297591391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.238953532 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.239554083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.237236093 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355598175 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.239664717 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.237128993 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.240148575 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.231021563 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.239096714 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.238536965 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.240775972 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.23576765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.240396914 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.262385439 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.239549215 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.240067566 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.240926987 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.240548087 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.289252539 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.240021115 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.237913668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.238560392 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.295628838 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.248094402 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.242268603 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.239256166 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.240969429 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.237608474 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.392404477 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.290103256 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.240212907 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.288113685 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.24161066 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.241714415 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.241442956 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.241378098 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.334188794 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.242178043 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.289593336 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.240227678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.421927508 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.265572833 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.244709814 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.244282696 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.243823159 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.242523584 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.238011708 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.246868232 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.238500209 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.242024291 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.24856901 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.240166595 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.240687818 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.40024726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352145901 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.239532832 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.253704106 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.249193996 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.241323773 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.294548341 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.24227351 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.239456852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294312266 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.357154959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.295487067 seconds)
  done (took 128.399238552 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.255929967 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.25398273 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.246169689 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.270279147 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.244359295 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.243340309 seconds)
  done (took 8.660030543 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.245236656 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.243513264 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.242489684 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.244020356 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.243279708 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.245235368 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.244669623 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.24483674 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.246482907 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.244841418 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.24418268 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.245643885 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.246774171 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.245124123 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.245877192 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.244995776 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.245468457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.242380592 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.245768015 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.244644072 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.242210656 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.244515375 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.244494928 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.246727968 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.248596701 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.243522658 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.265073694 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.245314942 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.244592818 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.252660611 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.264206109 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.246827966 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.247591873 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.250834814 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.249478256 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.246313404 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248717094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.247983978 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.24401434 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.248015529 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.249191447 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.246929939 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.246237502 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.247265814 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.248525287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.252236711 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.25235212 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.268344554 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.248350213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.249484258 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.249936668 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.247885305 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.247185331 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.250229534 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.251001577 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267204644 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.251760631 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.248232289 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.247233071 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.249734877 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.248535977 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.247288354 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.249194368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.252490676 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.245390357 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.249052671 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.249912166 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251379711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249527796 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.249345892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.250057419 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.246878936 seconds)
  done (took 92.025943289 seconds)
done (took 342.145521409 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.171447782 seconds)
  done (took 4.321494991 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.245255178 seconds)
  done (took 3.395687302 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.493067861 seconds)
  done (took 21.646766132 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.275236565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.253911675 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.268985858 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.250519227 seconds)
  done (took 10.200306833 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.515506909 seconds)
  done (took 3.667305195 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.255409628 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.244674432 seconds)
  done (took 5.655222062 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.42703492 seconds)
  done (took 3.580713067 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.720840377 seconds)
  done (took 3.875466321 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.263292464 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.254784828 seconds)
  done (took 5.677141087 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.233377204 seconds)
  done (took 3.388072491 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.034419706 seconds)
  done (took 37.189340297 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.255423297 seconds)
  done (took 3.409675148 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.284146901 seconds)
  done (took 3.437187144 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.680679168 seconds)
  done (took 5.834478621 seconds)
done (took 116.431024242 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.24372867 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.244993268 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.242829683 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.246643162 seconds)
  done (took 10.130495884 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.304092525 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.304253994 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.304013909 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.302722776 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.303548571 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.30305697 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.278290772 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.277770155 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.303257049 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.303565257 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.310559146 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.303435461 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.304133441 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.277654531 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.303099532 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.309542521 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.303281139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.303434189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.278880117 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.302807559 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.252810862 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.304911926 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.304025478 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.253083205 seconds)
  done (took 32.251547877 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.745758945 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.323411645 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.407840411 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.310105628 seconds)
  done (took 6.942095534 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.33031313 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.331192644 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.343955956 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.383309662 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.395375364 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.342967672 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.280120069 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.274327275 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.26234931 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.331397829 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.382164227 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.323215708 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.408780472 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.254191059 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.461541055 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.254548752 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.254471152 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.331412766 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.384472064 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.393809559 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.256155107 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.332190243 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.331872604 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.324860994 seconds)
  done (took 33.127104253 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.261960503 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.268334107 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.252602694 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.269024925 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.253117765 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.253591481 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.255986461 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.261664633 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.252028291 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.251964246 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.252246392 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.267925387 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.258056882 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.253035215 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.263143835 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.256241412 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.258146844 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.257930312 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.255041966 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.259748551 seconds)
  done (took 26.318420201 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.246613537 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.24945023 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.598290032 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.504332898 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.248524288 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.248547501 seconds)
  done (took 13.254172121 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.324049195 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.47873843 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.260326099 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.597558915 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.687170912 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.260512393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.257808015 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.49680843 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.803510505 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.776562703 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.315650359 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.330080712 seconds)
  done (took 18.743436207 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.263355469 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.254425785 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.263674506 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.27095785 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.310609648 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.27945717 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.264446564 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.248221651 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.31468162 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.33505037 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.280699159 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.312289156 seconds)
  done (took 20.556548298 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346280725 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249731866 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268775276 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326532632 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272342688 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098361021 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329159527 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956465432 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.27391041 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526007488 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25103133 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349307617 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.505943304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251213016 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256564537 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.223228416 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484728164 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737778622 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25749249 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25243432 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290587264 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251882976 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276394969 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.460131485 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258131929 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251049981 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.513081999 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251278715 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530209054 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271267607 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263854211 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254436378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528441468 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90830612 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371899777 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456423553 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264471299 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25514525 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.252225518 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.25442058 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261896198 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256822126 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266851022 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253897742 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257327228 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267470138 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958368732 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.279651175 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.253546504 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257739692 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508620062 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358285647 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.260671862 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2565595 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302381133 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25624937 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.260449405 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388528369 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860345691 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262954829 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277190193 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.26192436 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257678775 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256269551 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865772205 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.26675243 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.260648776 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.260363021 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256349011 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257200779 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279483276 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257200496 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.28263758 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256508111 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975821697 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263829337 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258800571 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809354754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263019706 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.26308459 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489008875 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258144052 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257811936 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.257973987 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257140019 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951006684 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271838051 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.258554265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310653485 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966460147 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.481309408 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282908566 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291027226 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482484938 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.244295311 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258872307 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.273600318 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260869109 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281242868 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956876046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278073203 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.263389156 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518199014 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.470546463 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273080898 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.245333523 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721449093 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278051498 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.281730482 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269722571 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.468308347 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.837317834 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281056034 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270806266 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282605031 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259338134 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992240959 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263523347 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.366665476 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259327466 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525440225 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.038964098 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265873449 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327101029 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265690353 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261889068 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266488826 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262670603 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261475492 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.456749659 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296515339 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.27782938 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.261676604 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260722805 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.270141288 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274938785 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.263993433 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.4831197 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262146153 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54267082 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262824812 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262884824 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261390945 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.485285712 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.26047711 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.618105023 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525493494 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274257092 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279990825 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279022015 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282879534 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36625692 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285370878 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.274576351 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.523080879 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.267333708 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.266602129 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268294518 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263948286 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268843147 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.270465307 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264833827 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841930103 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245952965 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269931378 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153710299 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.27895386 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331313322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.271377896 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466174754 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.26815114 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277386026 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.268377114 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.260189863 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510340999 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271093543 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.266716226 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342492628 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.71968207 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850987407 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282493871 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.264951431 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.261852395 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.260981516 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26285925 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264125196 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263799237 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466639341 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283117822 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265483778 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84633478 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271990574 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26443894 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.274995609 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276234975 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.271227986 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264702615 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.26179066 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276030884 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272784073 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.280206143 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409961628 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.279461225 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265100898 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.782553323 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.271878754 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266289486 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295609758 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30016777 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265928477 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056911673 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529556749 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266339128 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540344024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272825008 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.287747942 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.26607752 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276672931 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274649543 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.274666729 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296300195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.277298322 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.264451337 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271873693 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847358903 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992076235 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794700579 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283604384 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.273658889 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271183512 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965674928 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284901569 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266422477 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499457146 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965855327 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286158783 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.72557007 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.283268259 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006504277 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524559592 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505810022 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275545112 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.280472224 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523993984 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484602839 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303231854 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27402244 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272470242 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.254826556 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807778745 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285645221 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346919889 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965949115 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299895214 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270042111 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.323179623 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.267440276 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677816735 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287197359 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268980946 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274864044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275028299 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059104713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276735963 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268799658 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877132868 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288996011 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.731882472 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286554058 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.475969415 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.286821359 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.274975014 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.266194553 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.278763801 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.52320096 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523265103 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275365481 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2687147 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816187865 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.144628474 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.275132645 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269885808 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000893741 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286324168 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554430742 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.283470159 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.277615483 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277962777 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.271677942 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27147463 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.268499165 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275346927 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247627844 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758219526 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.289850822 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28780091 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283302664 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27647852 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.527076318 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.285868391 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.844502617 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508394285 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282701893 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295156867 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.275635306 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273699771 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.264286691 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272009702 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272458638 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316894333 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.495865102 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273502871 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.259536061 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310500206 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.486830176 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274336717 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277825989 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507051418 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.276877517 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.287631324 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021454992 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311883815 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274347428 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275509312 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287522645 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32081441 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346607604 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480894863 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.291435202 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284945743 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663335166 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297678777 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276726303 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.288606333 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37085383 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284603822 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.282784159 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.052691212 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848658155 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004318431 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857143014 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53166261 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311530439 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28287985 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273733741 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438160437 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274243472 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548437035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27469652 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.287019975 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30013376 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277795569 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284412283 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492846958 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550956061 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277084026 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286356821 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281870141 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.277663587 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287411528 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.487197106 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767192491 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838849828 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283390388 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279872782 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.986136498 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568851447 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276030033 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277798518 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27622715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.293738668 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.302403558 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.304040327 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289538916 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421912762 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529454548 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933554401 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.305694073 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.305682684 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.795296518 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284682997 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537166006 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275687891 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.503518636 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861554009 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97215297 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547977709 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348804748 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485560877 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.278370651 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44272629 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.28927793 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.280781199 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279819002 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277693183 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.276133102 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.289662409 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862338423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547870378 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.283806133 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.281509673 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31113685 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.289460532 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504201575 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985229216 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507476492 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288690515 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.285015176 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279386566 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861562656 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540343144 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288082853 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.284111366 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512223088 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.28233739 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303152158 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.799771458 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.278951059 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836070745 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.257216859 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303793888 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28065757 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.980160451 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867260905 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.299318825 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770504408 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287320472 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291101286 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559411922 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.286518982 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282499412 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562334355 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.2848247 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282942319 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493947845 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.860614152 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038136826 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.301825072 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318026446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.289760592 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28311687 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331935437 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301080027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284894858 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.68821932 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303560623 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282080772 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295557165 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.293050336 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295354105 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.285250817 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282841024 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.290452327 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.286872535 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.273764645 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295994718 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416169412 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828828343 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30252163 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.953833009 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.608855437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.538965798 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294955062 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.275998643 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.288082338 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285730031 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284081791 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285670149 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.293127703 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842898375 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.295977699 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.299860011 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.290010429 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.284856845 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49824529 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294663491 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49577378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296328942 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304545448 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.271806718 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284541377 seconds)
  done (took 925.547435163 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.320480745 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.328427522 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.305352821 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.363877192 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.338341245 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362885741 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.31676361 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.382481101 seconds)
  done (took 19.908556931 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.295336736 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.294807286 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.296326218 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.29334993 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.290117326 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.746780958 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.311297154 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.29609795 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.30883003 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.292222239 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.296094855 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.283441369 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.300248746 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.287211229 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.288497027 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.299535674 seconds)
  done (took 31.376207177 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.188411505 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.404768366 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.032357648 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.298272362 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.313522714 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.297236546 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.480696126 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.307404819 seconds)
  done (took 25.514196594 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.298749864 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.298946912 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.297751007 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.298553834 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.298285787 seconds)
  done (took 7.684407563 seconds)
done (took 1172.504126387 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.291000869 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.292878987 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.291484224 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.29552962 seconds)
  done (took 6.364571006 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.276265741 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.277042865 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.276767613 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.28997932 seconds)
  done (took 9.312687086 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.9648404 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.903479493 seconds)
  done (took 5.060855348 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.772280701 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.765621913 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.768315969 seconds)
  done (took 6.498123749 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.591903914 seconds)
  done (took 2.78775327 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.188540817 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.292117891 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.9579174 seconds)
  done (took 7.633263822 seconds)
done (took 38.849726606 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.291385576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.536781679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.45129817 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.294817041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.448625932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.449354707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.029329587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.288592716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.298308572 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.295846793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.296028543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.454261767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.081721737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.538813375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.082162319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.569669936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.457263844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.302371068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.288400861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.289858264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.02871594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.296560637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.290620534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.289643059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.455884575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.437037092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.29905032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.539780068 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.295945499 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.301845614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.437583595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.302283153 seconds)
  done (took 79.915722682 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.29057713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.289661754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.299717757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.294188285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.29775083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.296727145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.291035811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.291904991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.303823444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.3038423 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.292621685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.302425561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.29462153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.303300207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.291024462 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.292078234 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.319226375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.29805126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.290096005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.308350182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.290852851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.296263542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.29040792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.291945616 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.292256613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.302917387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.292938689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.308913963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.292549405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.292614424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.309586969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.296071858 seconds)
  done (took 74.705215681 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.29265473 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.30411935 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.294661726 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.295478331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.294244406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.29426342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.296559518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.293497427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.295421914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.292634807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.296716885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.292328857 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.295929537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.293519021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.297207177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.295298289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.311058421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.29378891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.294025037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.303097942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.294087211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.292844301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.310251312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.294045727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.293815568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.294659941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.303799228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.293630611 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.302849822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.292996809 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.31446553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.293307467 seconds)
  done (took 74.705118975 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.57410927 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.302811505 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.305220436 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.294407147 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.304756281 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.302882451 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.295203104 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.578222817 seconds)
  done (took 14.157128381 seconds)
done (took 244.676365869 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.294755717 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.797936308 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.343233025 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.295095827 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.328593855 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.323899442 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.512698269 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.342561687 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.514343475 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.316084158 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.338004176 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.296559956 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.072029074 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.447034401 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.128680024 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.220285986 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.155519853 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.308681219 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.865862381 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.573934996 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.322860328 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.297078162 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.111718961 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.182170642 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.30224483 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.378664733 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.400441031 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.516212479 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.453177461 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.381164964 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.810904486 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.301129989 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.301930371 seconds)
  done (took 61.437177853 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.304941737 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.431983801 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.303238663 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.304694282 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.434307517 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.323935031 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.30289293 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.3056308 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.305274503 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.305885758 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.304793781 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.30616956 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.307966236 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.356240399 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.438913634 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.32123208 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.305125949 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.427330117 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.304796999 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.299855459 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.357966546 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.309223551 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.308448204 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.362231932 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.308050897 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.3079354 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.431084488 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.328705514 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.309152732 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.43113296 seconds)
  done (took 41.35120667 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.307506229 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.899125616 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.034909338 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.313722537 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.307297389 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.313553779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.582919153 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.307823924 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.311348481 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.310544371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.803223917 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.310407893 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.341835137 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.064849526 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.310864429 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.309139929 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.308084654 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.308497737 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.904666218 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.318454863 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.604687633 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.310506004 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.58453305 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.323560232 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.329909449 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.308829387 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.315142788 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.145747143 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.31078526 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.802079661 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.056011229 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.584445034 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.074852925 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.046676109 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.058407173 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.315610198 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.310950057 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.806825573 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.311821903 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.30890978 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.583532051 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.315652471 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.044508757 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.003975816 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.326593048 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.309972945 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.161103792 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.805140019 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.544890903 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.31764568 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.071498735 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.315792825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.314707549 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.311417428 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.544565958 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.308892841 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.312039585 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.161476867 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.312608559 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.587596738 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.31120276 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.311549037 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.907271318 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.31181949 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.895945222 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.31828636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.320133323 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.330841388 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.053912352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.313535078 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.025622959 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.329137619 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.311942142 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.801567698 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.903934851 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.213951912 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.315058957 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.912134105 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.104114468 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.585235121 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.319414454 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.122932141 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.590100163 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.319919898 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.314424346 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.315412119 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.31515123 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.3847095 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.582729214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.959670748 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019407415 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.193961684 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.592004177 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.326224301 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.311689318 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.164911003 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.314784738 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.310649431 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.044347326 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020685515 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.329075935 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.321228802 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.030546595 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.326705499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.593842461 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.325159544 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.063242843 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.322350568 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.394308179 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.314928414 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.325333527 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.337673436 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.592960582 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.321309533 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.318231382 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.006413086 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.834860024 seconds)
  done (took 185.300113988 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.31235689 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.324840971 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.32514581 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.312703387 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.308418089 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.323197481 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.309839444 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.312402595 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.317688264 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.312208411 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.314272188 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.3198585 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.320525945 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.31174135 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.310661964 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.322705178 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.312445407 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.313560709 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.313044633 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.313017016 seconds)
  done (took 43.523492379 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.320542477 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.865609906 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.828306007 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.320262579 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.316452079 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.317855972 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.372630997 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.320072827 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.317981697 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.610369611 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.482569029 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.336735209 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.316327037 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.314242996 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.827443925 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.31655356 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.610675909 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.856972835 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.319878144 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.859290098 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.310278931 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.323908775 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.318745649 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.858792394 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.609092837 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.595144663 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.378185968 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.861497248 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.316229269 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.318150608 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.861632901 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.322928802 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.324454749 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.862309242 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.338569669 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.333134586 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.320426388 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.374657241 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.374457068 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.612052489 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.948091284 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.597495177 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.337298921 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.505375804 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.327827825 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.310233189 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.873680183 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.340590029 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.312101833 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.321114838 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.331041639 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.832128203 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.340866172 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.834102817 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.337839054 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.326025185 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.871511832 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.837997128 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.849811953 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.487101614 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.342692625 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.596879053 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.322280252 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.876152547 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.341484333 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.3275095 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.3262113 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.488686979 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.881655275 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.595086248 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.621402142 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.6214602 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.326905859 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.383366054 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.338798731 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.687913605 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.376920455 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.755834217 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.61993034 seconds)
  done (took 120.414252649 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.587260113 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.435742818 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.718414892 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.921807069 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.320623909 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.459147949 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.431987277 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.570209419 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.320872539 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.396307818 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.94616725 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.436093243 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.090903694 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.397044754 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.427678838 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.464357302 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.708108801 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.29789323 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.01346833 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.928092638 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.321265453 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.429699091 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.874968168 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.543329781 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.324432426 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.919850578 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.262999289 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.986142525 seconds)
  done (took 51.75485929 seconds)
done (took 504.983645185 seconds)
SAVING RESULT...
DONE!
