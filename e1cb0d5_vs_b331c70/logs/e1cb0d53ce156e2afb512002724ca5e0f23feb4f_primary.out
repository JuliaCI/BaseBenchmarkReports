cset: moving following pidspec: 9953
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.070766037 seconds)
loading group "string"... done (took 0.59768531 seconds)
loading group "linalg"... done (took 10.019814368 seconds)
loading group "parallel"... done (took 0.193263859 seconds)
loading group "find"... done (took 1.596144099 seconds)
loading group "tuple"... done (took 2.263176171 seconds)
loading group "dates"... done (took 1.578030509 seconds)
loading group "micro"... done (took 0.250159419 seconds)
loading group "io"... done (took 0.598590374 seconds)
loading group "scalar"... done (took 49.258847526 seconds)
loading group "sparse"... done (took 15.044112216 seconds)
loading group "broadcast"... done (took 1.326946454 seconds)
loading group "union"... done (took 13.5636781 seconds)
loading group "simd"... done (took 2.893418725 seconds)
loading group "random"... done (took 11.632621246 seconds)
loading group "problem"... done (took 1836.311590158 seconds)
loading group "array"... done (took 29.34941643 seconds)
loading group "misc"... done (took 1.28425805 seconds)
loading group "sort"... done (took 4.331979925 seconds)
loading group "collection"... done (took 21.409703831 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.812250663 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155941087 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238127149 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.404426824 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.25455338 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.178552189 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.188889166 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.602616656 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.093796672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.304376677 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.168551163 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.631232852 seconds)
done (took 6.786885126 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.277513498 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.417104467 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192890914 seconds)
  done (took 1.273508906 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086340575 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.196648697 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.126476108 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.122599688 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10960636 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.124397765 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.124261283 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.123615925 seconds)
  done (took 1.593129724 seconds)
done (took 3.905792883 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.589718753 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.898614406 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.620367989 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.195983986 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.2200396 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.198811735 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.342245606 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.176148092 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.138963828 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.123209792 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.221462472 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.37255062 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.562817854 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.04271445 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.117287985 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124524488 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.107101716 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.717222024 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.095727583 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.148774439 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.634065495 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.130046322 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.125542806 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135749947 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.220806593 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.149560301 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.18661931 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10466265 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.69528537 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111995824 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.249160927 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09729689 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.19332419 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.276039432 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.090829132 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.118805026 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.693560174 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199948382 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129521682 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.11381377 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.701561249 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.092598344 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.261364304 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.11517219 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.124024263 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.198747799 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.134523497 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.106460098 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098651789 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.109456354 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171351255 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.488374448 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.120568938 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.201130624 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.103917002 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.713364371 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108423726 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.167698337 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.149919748 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.117437839 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093721286 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.125085473 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165443337 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.130396702 seconds)
  done (took 21.238521819 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.177794104 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.183746561 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.104490945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16929652 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.160216333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.091050703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.110560525 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088024678 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.141219033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.205336358 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.153729637 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.205634429 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084330553 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.112407284 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.15772902 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.264659157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.135269739 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118660952 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113548561 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.118842086 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.153428344 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108534912 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.121537024 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.124002837 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.182380732 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216051566 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.131652046 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.133152647 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.111078341 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.129442664 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.150985164 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15958628 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.101600381 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.108663974 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.199972602 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.129967154 seconds)
  done (took 5.844293788 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243603363 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.130304023 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.258052721 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195794452 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.162883115 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.197813626 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158637917 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.323221398 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.29599619 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.201783272 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140937006 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.123224599 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104595203 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.091325615 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.105352552 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.824967176 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.200267364 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165444349 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165314507 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117604083 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.108705692 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.397960746 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112975525 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091349397 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114881267 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103883831 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221474781 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114515686 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.580755974 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.111558107 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.130922748 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103001266 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130998948 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146104522 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.190562095 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129535884 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.160067194 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115259945 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.109238525 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.240280231 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125327418 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.105013926 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122927377 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145552827 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.149723077 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111644301 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.124676371 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.266501696 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096161893 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.136135014 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.242863109 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.227137337 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149808112 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09260022 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.425183737 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110161 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11851849 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.109518556 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092325753 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.349787147 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.149137924 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.110046125 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.105534898 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096386761 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.106674535 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.486150823 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104519681 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.078078083 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.091094863 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204331528 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111117514 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100994535 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113836668 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112076625 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113119626 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.107405302 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089048272 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10914697 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.105987726 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096552394 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.133612394 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113358948 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089483184 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176175027 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.132416425 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110339806 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136755752 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.111814705 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.107129325 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138907994 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092720413 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.11125465 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092265564 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.207004932 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100086641 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.136214062 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113515909 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.15429382 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.106741373 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.262656502 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092078953 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.136910437 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.113953191 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139620523 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.136383089 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108082096 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095564993 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.105096756 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.107518493 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160352542 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.105540604 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.090822001 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.113334115 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.125761355 seconds)
  done (took 26.61446323 seconds)
done (took 54.360963163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.54034878 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.138255139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.136597616 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.135773501 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.13385609 seconds)
  done (took 1.842174539 seconds)
done (took 2.572207348 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.431896711 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.219039058 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.135896475 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.218540805 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.119637491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.243058 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.206026838 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.13643102 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.256201323 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097169254 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.232904827 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097842481 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.11953912 seconds)
  done (took 3.273282263 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.111938453 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138069718 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096150557 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127924051 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.107518471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109793348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124999817 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.149571805 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108371484 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117871497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089262649 seconds)
  done (took 2.008646821 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107174949 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.131612326 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09560982 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124437524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106551983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108085056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123147223 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.134200112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107822537 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119319156 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0909089 seconds)
  done (took 1.979850139 seconds)
done (took 7.981760335 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.218383181 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.970440477 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167657821 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.219718435 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.420737422 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.266213833 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.652784477 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.181687073 seconds)
  done (took 13.058448199 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.195246916 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.116202217 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098826561 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116863908 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09924184 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.116163654 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113661995 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100143337 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.113142461 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098192444 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.115782074 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.113411799 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098738567 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113213784 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112852377 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100784347 seconds)
  done (took 2.620845715 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.156238955 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.156169784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104530382 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.127024412 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.120325092 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104744551 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.122386779 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.120762984 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102497288 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.119925755 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.127197666 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.125700561 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109524074 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.117242894 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.12137031 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11161946 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.117623168 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.122817947 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.122451196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106387021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.125680073 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.119040622 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108658362 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.126281515 seconds)
  done (took 3.74067623 seconds)
done (took 20.151380852 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.188692962 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112844085 seconds)
  done (took 1.038415795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166014535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.167726193 seconds)
  done (took 1.075507981 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.126121448 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.112567431 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.153776391 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.130053669 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.111694742 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095887399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.147666845 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111360613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.111126332 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095843222 seconds)
  done (took 1.941802011 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.101275432 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.117238437 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125098434 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164656387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.124465032 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10039567 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.117652738 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100456684 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.118703568 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.113171831 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105414833 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.136032442 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.118175632 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.137905598 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.117296714 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106352254 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.125966943 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.120053926 seconds)
  done (took 2.898875494 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095070622 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.115166271 seconds)
  done (took 0.957011031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.101731233 seconds)
    (2/7) benchmarking "second"...
    done (took 0.113840603 seconds)
    (3/7) benchmarking "month"...
    done (took 0.116616074 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101623679 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.113067026 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096629482 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.11265298 seconds)
  done (took 1.503467462 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.601543676 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.297403926 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.407685987 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.139013734 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.160807409 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.426855461 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.16223702 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.131234767 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.132437986 seconds)
  done (took 3.252316919 seconds)
done (took 13.411453137 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.103997845 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.262464712 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.655376435 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.139479495 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096264623 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.174196241 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.344950812 seconds)
done (took 2.527710964 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.397393678 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1751522 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087477875 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.110888337 seconds)
  done (took 1.519116978 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.091078135 seconds)
    (2/2) benchmarking "read"...
    done (took 0.120643496 seconds)
  done (took 0.966125245 seconds)
done (took 3.243801643 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093494439 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.109390974 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.151285279 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095575178 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.110455794 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.093617748 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.111029457 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093996528 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111661414 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108367685 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.093516929 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.109648199 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093686001 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109540807 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093460723 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110924491 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092937092 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110089102 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10906711 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09423682 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109467882 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093664122 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109746075 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092671472 seconds)
  done (took 3.294475998 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.120181849 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.115190122 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116935239 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100902623 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.119513154 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.117067603 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.11739312 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097886184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117083867 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095835918 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119079775 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.117700578 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096759774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.119055811 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114514576 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.118518574 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102827071 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113069295 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097033563 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.1191834 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.117693332 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096940966 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.118435379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115747549 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116710888 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101871519 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114529849 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.113443985 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101476359 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.11695485 seconds)
  done (took 4.110450138 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.103766831 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.107254188 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092480027 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.121168199 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091355728 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.11277142 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107596375 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092185791 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.108692024 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091177737 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110210543 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090502846 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.10865976 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109081012 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09452701 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.116689987 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.128595788 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092153839 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.108809912 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093058064 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115144952 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092438304 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.112936438 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107273139 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092643746 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.107495347 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094013158 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108763141 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093174316 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.108374987 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.114175115 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099084023 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.10783126 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106972806 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.115159855 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.10654772 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101682231 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107854244 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093437184 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.108787339 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09123342 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110037976 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.10883997 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105669674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.111361549 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093008278 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.109061985 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092964033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.1102041 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.112248914 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.092311704 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10808959 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094363943 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.229815375 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.114814001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091302298 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.10908127 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.092028025 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109213926 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093214336 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108017032 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091754126 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.116773708 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.110348194 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119027302 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.121927172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.108123257 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095903707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.113686253 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100823072 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.111921751 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.130258641 seconds)
  done (took 8.446140762 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098724963 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123791427 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.097001218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.115016629 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110041258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093494018 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119471247 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109245426 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097307136 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129832357 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093049134 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113349653 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112701106 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097224639 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111052569 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097072504 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120877114 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110827279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093072561 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11329335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10960172 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103602659 seconds)
  done (took 3.134700878 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.27438065 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103204233 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.16684272 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.129828743 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.135344214 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.130113019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100659288 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119278566 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117703166 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10664859 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12561553 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118733927 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.137229722 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124791917 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108364578 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.125322758 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118723271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109447852 seconds)
  done (took 3.122636838 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.113665274 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.116940719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.140300794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099378254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.11591774 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.115809312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10723497 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.130291356 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115033646 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09887224 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.124285367 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115056047 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099802093 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116604484 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116211591 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098974898 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.115406376 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098796265 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126344307 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122984444 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.123740085 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108937487 seconds)
  done (took 3.294258564 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114986053 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115636447 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.153592013 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102585169 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.112526168 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110868412 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105473814 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.115728238 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.124252719 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098447042 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117490182 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095687463 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125987946 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115596804 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.122041641 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100246908 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115736778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099207117 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118271528 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.11069238 seconds)
  done (took 3.048704577 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19353665 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11199821 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114135806 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143397543 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130247734 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11535552 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143566469 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129839839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131070315 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130446169 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.130547813 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.13130643 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.144674687 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122590837 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131944722 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143055542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145021744 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.143013469 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114108601 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131320636 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145240121 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130758239 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.143137584 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114885899 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1309588 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130029641 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114436476 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13955522 seconds)
  done (took 4.520838974 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096065899 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112292421 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.096613992 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112269841 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095348275 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.113432273 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09688195 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114412228 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111586553 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096412301 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112807154 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096792573 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111759327 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095437488 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111790923 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096460214 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113411877 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.112367229 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096051598 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11310573 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09625881 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113402991 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095219432 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11272261 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095502479 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.11339901 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11254761 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095826636 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111926401 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095832148 seconds)
  done (took 3.926984928 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.112558541 seconds)
    (2/2) benchmarking "in"...
    done (took 0.142494504 seconds)
  done (took 1.036292183 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098290881 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133089196 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094110831 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.12064882 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.124265332 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098015401 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125167175 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124434503 seconds)
  done (took 1.699277422 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169275556 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.16947135 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.103456759 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.126983029 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.167179613 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.161426974 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.185756099 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.121112745 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099785552 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.112666325 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.164819399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.112064826 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10370272 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1181026 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.121566488 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111045657 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112931941 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.124683974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105213891 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.117433971 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11935303 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113945105 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124470291 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.125972632 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.096860307 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.124056232 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.127843806 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111473399 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116942413 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.124785798 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101172941 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.11217134 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.119188564 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104090942 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.11255211 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.166585965 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.131849477 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099540042 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.122391113 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103404776 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125271572 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.113433965 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106767298 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.119450288 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.133898247 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102790522 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.122131092 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112200657 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094656516 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.115835096 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095806475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115630625 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111540572 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105661771 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.123236453 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.134092609 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09937683 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.118457018 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.115872571 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098304744 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.119562367 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.115784941 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106722323 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.118465107 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.121931994 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105362906 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.12072027 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09506496 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111593601 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113244383 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106267388 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.139378211 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.125788091 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104036582 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124165501 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113569781 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100733479 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122425712 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.121233509 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115983816 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.120686122 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12437873 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107292339 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116410925 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.116138343 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106101314 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.118209659 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10150061 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.113079103 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.135838555 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100884557 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.11344369 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.114160967 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107932319 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.11795613 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102800567 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.11441059 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122784176 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094432089 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.122671516 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121480743 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102221958 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.129184658 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.123180937 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105370409 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.122948976 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.162419053 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.119770957 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.098277825 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.113622008 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104964792 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.114385046 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.124079177 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09637942 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118888505 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100152451 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.122585774 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.126956418 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100739193 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.120953666 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126182351 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107885858 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.120681932 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.112665723 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10062865 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.122181167 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110031264 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.127783081 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120794368 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097206459 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114544999 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.123855333 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103247899 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.12141295 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123651075 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101713935 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.114072892 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098156445 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.122585828 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.126774265 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099234978 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.120935 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.125859563 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103867763 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.120064434 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.125545833 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.09892701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.114525624 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.125883274 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101267895 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.116406449 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126468312 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.1020216 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120087171 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101582034 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.128811286 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.119892199 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104656472 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122180019 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103828149 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125383458 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.113994038 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102802503 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.122235625 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.128438847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102009626 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.116061449 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096040639 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.125805597 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.11540055 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103135815 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.115293312 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.119691208 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107513977 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.11698664 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102941908 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.118424569 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135543097 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114919472 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.124864825 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.123357832 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109704508 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.124112736 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.121664623 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105351374 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125857136 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105251167 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.126178237 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.122989856 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106399269 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.119303895 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116750593 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104121238 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.12620731 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096981267 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.118003749 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.114676474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104410896 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.128967983 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.122906059 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10602742 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120389608 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104615995 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.129400302 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.120984981 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104899667 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.115498258 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.123120536 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110078425 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.125738665 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107538856 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.129463203 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120930636 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098333166 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129027709 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119996244 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10586751 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.117114684 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096743077 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.115844739 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.125715873 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102783108 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.117936014 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095294609 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126031255 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127856481 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100994965 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.115578652 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.122621007 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112374851 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.119855022 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.124070852 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101172141 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.123872752 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137434314 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096153558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.119859052 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.128522028 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104674175 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.115141974 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.123548066 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102757595 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118794598 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101847337 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.121361037 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.12025226 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107496145 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.122195738 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09564842 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.119664349 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.121934769 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096910927 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.117254372 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108527152 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.121935692 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.12241482 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.131402514 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107151483 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.125338791 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103270857 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.124759306 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.125470211 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106998849 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121768001 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.12506103 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.100014318 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.116619372 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102038601 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.116202388 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.117398492 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101904788 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.12486869 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102176172 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.123744153 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.122759823 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108552767 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.12225259 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.126463689 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146152027 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098037413 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.116680782 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12196672 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10465562 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.119877198 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100058342 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.11799082 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.127953102 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104637332 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.127939827 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.119172914 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096769046 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.125626613 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100952063 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.126682362 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.126235322 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107041084 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.119839663 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.123616894 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102796302 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132682315 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.117095655 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111660302 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.124329898 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.123445255 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102106398 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.122824645 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099863698 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.117537045 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.12065997 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106066919 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.122388989 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.123270937 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104274466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.1223756 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10055192 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120299867 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.126115067 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103980386 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.126034082 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116266795 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097902192 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.117565246 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106075006 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.126618042 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.126133577 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099373065 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.122364518 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107203452 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.123433115 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.115731425 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109776436 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129099951 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.127321946 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112527954 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.117606048 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.12186123 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113585858 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.117147879 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102488088 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.119293644 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.117708687 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108942449 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.126974886 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.129230067 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103027984 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.117802223 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097808298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.127130894 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.123423859 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098153341 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118724564 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106960069 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.119419085 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123118569 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106875457 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.125088868 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107557803 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.128150964 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.123665872 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10267621 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.127325517 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117475717 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098694459 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.118809807 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102777368 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.128209598 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.119022742 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098885448 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125892009 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103161423 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.123223678 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.125145629 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101407695 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12978068 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125447894 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103700821 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.132374352 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118110661 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10458422 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.126772614 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106220577 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.117960473 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.12512262 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1054311 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128202075 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.12758713 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106128214 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125914899 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105152931 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.121302173 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.124808951 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106092458 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.126667205 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098157264 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.12834285 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.129710394 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099280253 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.123961861 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.123957346 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099128251 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.12468277 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.127670301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104584733 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.131290275 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107535859 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.125084604 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.126666393 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106433621 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.125154602 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128156657 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.101871297 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.128180736 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097859265 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.131060024 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.125251777 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107383383 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.121210941 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.119752809 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105945968 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.126760603 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104197506 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.131064215 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.12816955 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097752453 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.11899599 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.11964036 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103561519 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.131821974 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.129675082 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10332092 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.124120362 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100394025 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.119574785 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127181276 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099258629 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.122046858 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.126565267 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10933749 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.123918548 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100120344 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.124708161 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.130146401 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108084205 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.12734422 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.119197545 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106391498 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.128802211 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.123191931 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101412409 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.122957013 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107864298 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.125861295 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.121535919 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098217826 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135100853 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.129100159 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109589762 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.123296717 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.126631649 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10213122 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.119843086 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.127771116 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104017132 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.127805768 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103818617 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126714993 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136452512 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097267846 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.123243493 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.135515436 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104929669 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.130312754 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.119501057 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104115533 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129611338 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128476634 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101628604 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.118974861 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101154918 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.124774033 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.118956116 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100879986 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136676141 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.128661908 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104773705 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125562123 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104943005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.121848967 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.119740615 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0994701 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130288572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101553308 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.133172865 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.119640906 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099328572 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.121095419 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107138164 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.125399543 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.126522166 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100042524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.121982908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11858165 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106132602 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.133315214 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10468129 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.128771935 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.126006534 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104266027 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.121735514 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.132877844 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0997016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.126746511 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.137534286 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108807148 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127764842 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.12755446 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112261487 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.130223412 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10011679 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12894833 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.125944929 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104574071 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.131005677 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.131005335 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.143347692 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105927807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.119576467 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105938126 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.124193713 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.120200863 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114282648 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13054872 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.129845098 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106426085 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.122520491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110085804 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.134444731 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.127710738 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105206816 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.126605048 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.126839937 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104344129 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.126955518 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.122701846 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110191907 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.129849774 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107474142 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.132050994 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.120625068 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117145938 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.134585028 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.131081527 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099089237 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.120981036 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101360691 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12283 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.129815188 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102598115 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.127172706 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104811509 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.126342566 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.127703251 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107758227 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.125344687 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.130751574 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108185922 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.119303864 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108842468 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.126906307 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.129577101 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099600673 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.129024128 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110283813 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.130241798 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.134368906 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108072483 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.126013939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.124611803 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110527572 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.122171534 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.128068297 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105834745 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.123042627 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100746856 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.128408943 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.129428425 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106275731 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130968141 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.131021422 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104973921 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.13030143 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111336079 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121904823 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.120287717 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108449708 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.123484372 seconds)
  done (took 70.573041452 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184672222 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108000188 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122933036 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101274055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.154868812 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123439068 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121481986 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103605786 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12335636 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.138645983 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101665138 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122453253 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.149669309 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.157972328 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.153862165 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.140522767 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103537078 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124395853 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101882376 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124594488 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.149660745 seconds)
  done (took 3.564433374 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.126952801 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.142912928 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.142672495 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.146049405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134599275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120570292 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.141081096 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140811861 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.144974482 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136219127 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.145469268 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119986171 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.137859961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.136985599 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.137490265 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136771635 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124256661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.136443717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.141609493 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.142592141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138072562 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121562919 seconds)
  done (took 3.846969594 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113920546 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.12882371 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.109657286 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.124599597 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10727565 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.12561282 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.133560009 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104543374 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.13569897 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.126608993 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102909895 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.125804829 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11062902 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124992043 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.123810146 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.104991479 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.134725745 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.108496544 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.131105686 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.12464361 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.151832042 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.105023343 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.12738084 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.102784946 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.139404246 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.129969007 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108483092 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.129802992 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.103034419 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.130409898 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103840449 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.128945117 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.1303261 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.103459432 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.124700966 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.129556317 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109239083 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.12626876 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103491181 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.131899987 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.126312378 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109899924 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.135192881 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.124150353 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104816388 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.128698833 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108675769 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.125974434 seconds)
  done (took 6.644333138 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.168304099 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.189113857 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.114006108 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.177197917 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127496943 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.149069899 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.132399938 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.174111005 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.134219838 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117914007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.155535593 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.150045667 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.138012815 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.137021311 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.118834791 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.133137368 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.141523323 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.111311433 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.140215415 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.135958252 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.146756327 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120116166 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.147212408 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.153311073 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.136654752 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.113862894 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.134923931 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.143157634 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.148170957 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120600643 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.141002861 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.144476128 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.153673195 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.137443289 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114916522 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.134574604 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.153537277 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.134275615 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120642133 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.132315956 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111848671 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141329682 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.141015116 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.156073198 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.135088654 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.118453896 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.134386558 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.13334583 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127258629 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.141383284 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.142332921 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1510928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.139059957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.120646657 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.142490632 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.149232539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.13743136 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.114052559 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.139712972 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.146796339 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.11849763 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.137870295 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.150841957 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.136433536 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126682113 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.156701073 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.138481951 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.138629481 seconds)
  done (took 10.42490298 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119608112 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.157430142 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149814265 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151734104 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136718171 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116274765 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.136978303 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.137652247 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116602471 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145930116 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136881058 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227056494 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.132279182 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.144380794 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.138293483 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117409071 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137084165 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137085771 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116210325 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140514289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.138290241 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.151666664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115723247 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.151339603 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.152903827 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12909801 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.138440353 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117210461 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.150820317 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13799894 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153997634 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.137621357 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117203348 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.150118781 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.154378237 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.13812576 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126197853 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116932175 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.136989915 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.137992421 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108942638 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.151938008 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.138021262 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.13099426 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116374923 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.139619911 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.151699169 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.154086786 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.145544354 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.146191129 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117459608 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.15197268 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137514948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.138018655 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129433684 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.182778814 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129362174 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.15174165 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138579095 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.151173323 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.151772187 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.161402115 seconds)
  done (took 9.545387632 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106417833 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.127248408 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106571531 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12738911 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106298278 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.128316237 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105287114 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.128415377 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.127643412 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.107920928 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127988434 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105736024 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12727276 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106299309 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.127530228 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106249404 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127990261 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.127251283 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106595013 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.128602414 seconds)
  done (took 3.238751983 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.120603188 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.151292951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.133395637 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118434447 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.132263168 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.140697899 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108439245 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13318884 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131322355 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111653838 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.144322792 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.143752052 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132812888 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.12003172 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.14484736 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.140054182 seconds)
  done (took 2.985460417 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.133792469 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.145987609 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190841268 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.136344873 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.129747309 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.119955273 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.129383026 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127469074 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.105861834 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.138768664 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112722124 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.141989122 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.129002125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105402749 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.134317914 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.134668001 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105598272 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.136906298 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107242034 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.213619195 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116777044 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.135642296 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.131003681 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111283503 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.134905965 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.139372801 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11842835 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.129178971 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129607925 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108469832 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.135436414 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.140860244 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106997872 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.137497125 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104943883 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.128819511 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.128807649 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107889495 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.135997805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.128157039 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105982203 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.134628639 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108260751 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.131222486 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.127256376 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109433839 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.128423271 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116603328 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.135069113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.135451014 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108236385 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.139588951 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.136102535 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120738473 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.141400361 seconds)
  done (took 7.949496334 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.12465409 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.133253343 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138379532 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105462046 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133790317 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11880256 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.134758417 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.134942638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113274422 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12713094 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1355002 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11267117 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133901158 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11200313 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.135705394 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.132928468 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104635346 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.134753494 seconds)
  done (took 3.154922476 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116619558 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.131433534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.115806781 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.13477502 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.132820105 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111093066 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129155056 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106048274 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129989162 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.133257012 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11032001 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.13228067 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105802266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.13347636 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132033542 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111644322 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.132717479 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105610663 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.133352646 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126675181 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110803754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128451303 seconds)
  done (took 3.592170104 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.129165881 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.196863364 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.146616139 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.207002885 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.133696973 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.131963425 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12176816 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.133371015 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.154509567 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.108308251 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.132602275 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.131114665 seconds)
  done (took 2.617034809 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139620884 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174997395 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131223826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1105268 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146230202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139482016 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139191256 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117402895 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150156343 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15544533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139853333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150937224 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149426495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128783738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147889344 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144859645 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139598728 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117754519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134870246 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162313684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139457474 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150574197 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117293073 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139552205 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13898406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153015921 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151106966 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134377256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140625474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15029956 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145783006 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139700073 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131376936 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.156131629 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132949975 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150510293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139827512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163932279 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124592861 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153582072 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.133995698 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145820851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151264223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126180754 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151170889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138479658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14891286 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117532013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141435772 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170213621 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145348057 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153114267 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146990592 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151714471 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150931573 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171905285 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.155882474 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152984432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123064496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.155683183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15297235 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146139941 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153667796 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158011057 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146103908 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133047909 seconds)
  done (took 10.392470274 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180120261 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110647654 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14121379 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.158007772 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154967601 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118442431 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141012377 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140450721 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140365937 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113894322 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191505696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139412139 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153884583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.153682029 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141239449 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119131099 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141046267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153027604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11310641 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194817308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118323155 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153768023 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151645262 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.152698164 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.157885351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146209376 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118504554 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142947493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142483208 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141219471 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126857008 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142151706 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152616374 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.132551115 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153345913 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119262633 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140543496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148997547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118848189 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147828196 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153656747 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164357613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140836267 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140753792 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157844757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1189792 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141080342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135526968 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118184834 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137013066 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157382641 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.157789092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.157518102 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.154497887 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118126277 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142829677 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140664313 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141575839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120195839 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147394087 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153500133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142139764 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174375904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142417695 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119053574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154358393 seconds)
  done (took 10.346537387 seconds)
done (took 189.265123688 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17922027 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.201031013 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.174628922 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169150647 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.129194085 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.163212367 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13974827 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.175528588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.129098968 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.106149774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.128716143 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.131714161 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171811317 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.127233068 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103978498 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.132325356 seconds)
  done (took 3.2724507 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.238223364 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336187724 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.151966664 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.13473241 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.115176858 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.134059736 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.133110017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11318024 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.131093734 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.144050212 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109431306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.132533325 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.143098369 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111178999 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.130654151 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109097856 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.1466232 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.131955842 seconds)
  done (took 3.557035045 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.134985806 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.184767589 seconds)
  done (took 1.231580669 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.147848974 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.24255496 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.328026237 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.193519279 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.164216424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.158357108 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.195145578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.151556084 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.232492888 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.159717079 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.158577822 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113377924 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.165856379 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.143476504 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.147267832 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.113941696 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.168117744 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.145167489 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120739972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.139171715 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.160882229 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.139556637 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12072844 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.146343829 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.221945727 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.160093386 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.141081091 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115738495 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.139480966 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.144887491 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.142543598 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132752781 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.157527055 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.23507105 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.142443735 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.208030037 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.147929553 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.136814292 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121558113 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.138000067 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.14150855 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119809118 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.156539285 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.13745093 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11709048 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.147827886 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.138897993 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.138782999 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123961975 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.149976817 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.145944925 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.143499804 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.207541622 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.150918675 seconds)
  done (took 9.371659283 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.968266112 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159015785 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137990507 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.103495049 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170227995 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152699487 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.958975963 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163572647 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.30616645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.971972072 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132830099 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.161058103 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.288124512 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.320048821 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.204797304 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.394654105 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.802264824 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.151224511 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168678327 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.185825093 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143284113 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166091482 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132883461 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.471716138 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115324542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.133813797 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141624128 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123774497 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.228895387 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110349628 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.138828351 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.249539006 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.315867898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.249777488 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114354028 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.134571677 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133465977 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.213113485 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325691827 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.271642596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.204965979 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129138209 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109997925 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149119615 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158491444 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107297194 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.232462657 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.220242618 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.243573203 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115267776 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.148579774 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14580059 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146886654 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.205724038 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.132050488 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.393299126 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.398238628 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109176743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145237295 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.154340573 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.321179913 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.134469131 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.280111817 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139583887 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.267853955 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.134435561 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.876903083 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.209953909 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.134123033 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.144305277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120951878 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140531041 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14702421 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.200913809 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.41221474 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.153320421 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137080298 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110410387 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2712736 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110288763 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13370642 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.2089237 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138945918 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.144317834 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151142847 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126088774 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.239793021 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.294304423 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.15251919 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145399629 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117230725 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148062622 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.139289568 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.258429004 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.275617092 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.225840188 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.257854756 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148823131 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.209607725 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.235198216 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.146163773 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.217906389 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.144126138 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.15301691 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128278979 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.273548304 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.199305536 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.111889674 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.139897109 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142939646 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.178961605 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114184888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143085877 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.212729562 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.510493392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.211325265 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.134870424 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115356428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146208476 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.230117375 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119184864 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.313916036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147401709 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.211309177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.143805993 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.130661764 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121334681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.234535485 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.150424146 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121155562 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150594018 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145455347 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.294060811 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.278118339 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.151528823 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.283349508 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.20967531 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.145870921 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.219503259 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145385082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.213909455 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145097329 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148913394 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138791186 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830353233 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1516251 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.144220421 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.139939473 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.225375844 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111848555 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.136258543 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.133200306 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108455442 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839832151 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.136817619 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.109117412 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.135657053 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121223149 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.144391942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1435648 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.140122942 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209414957 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.290503081 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.149065723 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.142882102 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111472527 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.230175664 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115887264 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.136658001 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110486984 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.13670614 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.145127124 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117121142 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.13760639 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.219184057 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.228900876 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.278786628 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576854247 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111199655 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.135137427 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2882484 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110724337 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.363982178 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146325023 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.284015622 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.214189408 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.131804373 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.394474823 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.237489661 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.226384266 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115804894 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.239789825 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109220968 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143689956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.206052998 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.135628679 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143885568 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.204662213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.15333907 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151321632 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.21057031 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111458115 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.29701843 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108322814 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.238504153 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115349432 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147906662 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.372710053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.135334434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.158351288 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208453736 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140609594 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112058283 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.658886382 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.135562929 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125161183 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.147092875 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.283408491 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.234161156 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122193571 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14519211 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.148908146 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.207899314 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.278468133 seconds)
  done (took 52.79482631 seconds)
done (took 71.133295766 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35694541 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.315366848 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375316447 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.26332873 seconds)
  done (took 2.34759083 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.255260534 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.185955279 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.2420054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109770837 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250130103 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109902735 seconds)
  done (took 2.105579103 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.582753592 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.478278267 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.409606023 seconds)
  done (took 2.428257529 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.299208328 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.308535587 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.396892062 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.565509288 seconds)
  done (took 2.659750255 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283755523 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.159640453 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.154491229 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.210687565 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247197288 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249637339 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.17923419 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194105592 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.164677599 seconds)
  done (took 2.850041007 seconds)
done (took 13.346665066 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.32914285 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.231032157 seconds)
    (3/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.333485112 seconds)
    (4/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.243273364 seconds)
    (5/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.389606585 seconds)
    (6/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.37768685 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.233300634 seconds)
    (8/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.512874289 seconds)
    (9/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.34618055 seconds)
    (10/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.300919119 seconds)
    (11/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.146417634 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121276274 seconds)
    (13/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.253469288 seconds)
    (14/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.210547432 seconds)
    (15/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.255983591 seconds)
    (16/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.28395154 seconds)
    (17/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.17395412 seconds)
    (18/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.142746768 seconds)
    (19/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.319038816 seconds)
    (20/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.203113482 seconds)
    (21/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.100860305 seconds)
    (22/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.194991484 seconds)
    (23/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.148000064 seconds)
    (24/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.165637687 seconds)
    (25/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.302632442 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.177593881 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.159697021 seconds)
    (28/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.197206134 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.143765194 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.145468091 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.249414538 seconds)
    (32/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.142555169 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.175304442 seconds)
    (34/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.143875954 seconds)
    (35/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.253527039 seconds)
    (36/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.312272645 seconds)
    (37/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158679382 seconds)
    (38/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.258274682 seconds)
    (39/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.162135329 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.144721972 seconds)
    (41/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.10266747 seconds)
    (42/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.146739456 seconds)
    (43/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.238165203 seconds)
    (44/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.118563029 seconds)
    (45/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.160826782 seconds)
    (46/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.159224154 seconds)
    (47/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.262285728 seconds)
    (48/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.239981936 seconds)
    (49/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.105570237 seconds)
    (50/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.245643978 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182755242 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117783122 seconds)
    (53/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.201306862 seconds)
    (54/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.140354051 seconds)
    (55/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.102468906 seconds)
    (56/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.159648756 seconds)
    (57/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121008773 seconds)
    (58/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.170344057 seconds)
    (59/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.136042607 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.257168183 seconds)
    (61/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.263682324 seconds)
    (62/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.244583089 seconds)
    (63/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.234068231 seconds)
    (64/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.145568794 seconds)
    (65/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.192095792 seconds)
    (66/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.15584592 seconds)
    (67/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.101559289 seconds)
    (68/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.215584583 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.144944978 seconds)
    (70/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.146510097 seconds)
    (71/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.135336439 seconds)
    (72/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.14666804 seconds)
    (73/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120151769 seconds)
    (74/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.127107345 seconds)
    (75/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.144992891 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.152258728 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.162949705 seconds)
    (78/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.250496761 seconds)
    (79/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.231947559 seconds)
    (80/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170271787 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.235346044 seconds)
    (82/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.242015293 seconds)
    (83/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132907819 seconds)
    (84/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.16334122 seconds)
    (85/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.101620481 seconds)
    (86/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.16098116 seconds)
    (87/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.128556608 seconds)
    (88/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.17798196 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.17701927 seconds)
    (90/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.146226342 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.10221673 seconds)
    (92/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.149004957 seconds)
    (93/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.186912794 seconds)
    (94/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102335942 seconds)
    (95/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.19177908 seconds)
    (96/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.128120891 seconds)
    (97/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.103637905 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.180429553 seconds)
    (99/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.102711417 seconds)
    (100/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.145512233 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.147291211 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119171447 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.159913989 seconds)
    (104/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.247083728 seconds)
    (105/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111797023 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.136788183 seconds)
    (107/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.102067466 seconds)
    (108/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.158994673 seconds)
    (109/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.128302506 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112533882 seconds)
    (111/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.128990977 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121906503 seconds)
    (113/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.127891622 seconds)
    (114/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.194781372 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119364607 seconds)
    (116/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.127960197 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.135827779 seconds)
    (118/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.229203769 seconds)
    (119/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.148510463 seconds)
    (120/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.148989147 seconds)
    (121/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.324578344 seconds)
    (122/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.146236069 seconds)
    (123/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.145652846 seconds)
    (124/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.159196224 seconds)
    (125/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.261660605 seconds)
    (126/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.231566624 seconds)
    (127/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.137643937 seconds)
    (128/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103065189 seconds)
    (129/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.22885809 seconds)
    (130/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.103419625 seconds)
    (131/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.161382953 seconds)
    (132/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.211357975 seconds)
    (133/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.211466272 seconds)
    (134/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121205442 seconds)
    (135/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.128868489 seconds)
    (136/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.110351991 seconds)
    (137/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.147491279 seconds)
    (138/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118017716 seconds)
    (139/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189756262 seconds)
    (140/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.245666086 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.1458498 seconds)
    (142/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125867197 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.146054647 seconds)
    (144/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.142888133 seconds)
    (145/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102598788 seconds)
    (146/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.130076456 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119242605 seconds)
    (148/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.182721165 seconds)
    (149/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.138554794 seconds)
    (150/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.228351419 seconds)
    (151/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123534729 seconds)
    (152/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.158679179 seconds)
    (153/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.11069086 seconds)
    (154/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.138472651 seconds)
    (155/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.162186477 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.13362811 seconds)
    (157/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.205107616 seconds)
    (158/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.128278955 seconds)
    (159/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.103464469 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.154979255 seconds)
    (161/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.121113564 seconds)
    (162/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.131411406 seconds)
    (163/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103395609 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.147682337 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.145473509 seconds)
    (166/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.104441768 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.128733129 seconds)
    (168/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136797595 seconds)
    (169/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.130274649 seconds)
    (170/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.119997366 seconds)
    (171/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.128312304 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12069417 seconds)
    (173/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.136518011 seconds)
    (174/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.104603373 seconds)
    (175/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.148717118 seconds)
    (176/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.103225453 seconds)
    (177/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.147456468 seconds)
    (178/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.10305501 seconds)
    (179/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.148898794 seconds)
    (180/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.129464126 seconds)
    (181/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.103469649 seconds)
    (182/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.144541382 seconds)
    (183/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103184978 seconds)
    (184/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.17412628 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.145476256 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113688059 seconds)
    (187/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.128277179 seconds)
    (188/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102996583 seconds)
    (189/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172451164 seconds)
    (190/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.122350578 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.148969378 seconds)
    (192/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.160229685 seconds)
    (193/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.111046102 seconds)
    (194/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.129352184 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.135261174 seconds)
    (196/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.23208051 seconds)
    (197/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.130122554 seconds)
    (198/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123262901 seconds)
    (199/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.12976005 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.159053945 seconds)
    (201/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.206296295 seconds)
    (202/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.12962367 seconds)
    (203/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.112741144 seconds)
    (204/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.12853211 seconds)
    (205/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.10323175 seconds)
    (206/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.145205638 seconds)
    (207/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.172780611 seconds)
    (208/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121348298 seconds)
    (209/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128833109 seconds)
    (210/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104515136 seconds)
    (211/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14708226 seconds)
    (212/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.103503817 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.162478008 seconds)
    (214/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.159178842 seconds)
    (215/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119671022 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.148536006 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.147634765 seconds)
    (218/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104490514 seconds)
    (219/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.129664305 seconds)
    (220/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174925849 seconds)
    (221/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128712087 seconds)
    (222/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.112038844 seconds)
    (223/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.162008215 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.131324095 seconds)
  done (took 38.334754852 seconds)
done (took 39.299265089 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.555284827 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156059894 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124805234 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.152041888 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.211220713 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.155997804 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.132778495 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1564885 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.155909062 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120567062 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.14036591 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.156575847 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124937119 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.237400577 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.128097445 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.144299125 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.141550655 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128944343 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.159119344 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.160112428 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.211539453 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117001278 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.156811567 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.14296736 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.2123533 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116610149 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.152769152 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.151322425 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12943822 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.148364066 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.151068153 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116296195 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.160415169 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.158544668 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113647923 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.148119167 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113236477 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138963398 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.148873149 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122157593 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.157534062 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.149182404 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.127235561 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.144434638 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.148410978 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.120397496 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139318487 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.155371155 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.114569982 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.152698293 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117691846 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.160357841 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.147508734 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113628978 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.140945334 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.143687511 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.130519225 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141158576 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.156302025 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114681935 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.144074134 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114467815 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.150955396 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140737165 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.120843386 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.143646342 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.121052853 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.152686158 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.14726817 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117974596 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139908235 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.147071462 seconds)
done (took 11.782596617 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.122250506 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.202646722 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.20938002 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.241879734 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.150618451 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.161618459 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.163123851 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.172812926 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.157588066 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141277603 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.18252525 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.172990219 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.21853679 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.158106484 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.161802646 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.123118204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.157056446 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.155573175 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.219418386 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.168475241 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176506834 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129587415 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.178880539 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.166357577 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.148643505 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146687166 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.153377171 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.150095354 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120984717 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.166966929 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.167763771 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.148054696 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124287429 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.170739397 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.160052545 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.128686227 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.160632927 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.149576106 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120445062 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.148729922 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.160281428 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.165605535 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.121095961 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.160626412 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.150799484 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.126986719 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.15663956 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.155231978 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124455897 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.150839283 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.151726084 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.177576894 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.130142202 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.155650377 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.157484406 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127113034 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.157078575 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.153889839 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.150436649 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128566809 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1479441 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.14853294 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124895055 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.176074735 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.15144802 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.15512156 seconds)
  done (took 11.338848267 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.143388156 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.18391047 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.159262633 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.158799893 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.155440433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.112585329 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.13804187 seconds)
  done (took 2.078129521 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.113561065 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213532866 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21331052 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.240826006 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.205250434 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219641752 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.163121444 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.113888036 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.175126187 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.153573998 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.214622925 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242666191 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.149085665 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.156297428 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21662321 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.112949076 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.244220375 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114243089 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.154233046 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214094906 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.154411307 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144415939 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.160188268 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.142014506 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207109713 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11649391 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.281580605 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.158443398 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120272935 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.151098717 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.154740927 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.223846317 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209281691 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.154473968 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117665893 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210066788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206529486 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.15610093 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.214027782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.146916779 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.207525738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.154633736 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1267565 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.155927005 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.15225802 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195297375 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130112875 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.156258975 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.151503786 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.215669712 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.153156653 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.207659473 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121084223 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.152155101 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.154498744 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126274624 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.159429684 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.152663566 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214584866 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.155651985 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209832174 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210586948 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.209330139 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209715054 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.164103945 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209553255 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20617791 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.151418949 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123697147 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.154868719 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.210372606 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.152595331 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.154573975 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.195373144 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128034151 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.209542393 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.210676192 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151992125 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.156285381 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.118269136 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.151802562 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.142333672 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.197436258 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125303001 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.151275836 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16314806 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128692061 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.154601275 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.147079094 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.169498844 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.127215958 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.157437728 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.158998758 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.125621857 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.162500407 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212712311 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.158878775 seconds)
  done (took 17.507341802 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.118193947 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.14290022 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12097238 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.14459137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.143828723 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117078909 seconds)
  done (took 1.838173198 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151569202 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.157616769 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.166065586 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.155688962 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.211688875 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21680176 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.220132874 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.154977224 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145308845 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.16776433 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214899178 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.217803714 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.24554457 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130744793 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.22002399 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.16054426 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.220067195 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.153903534 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.166059224 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12410171 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.163755427 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.15936169 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124043466 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.239122296 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1286624 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.158270616 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.155482928 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.165162915 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136781826 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.156198413 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.160389935 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128924001 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.153335174 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.155987902 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.21895352 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.155099118 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122955708 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.160831265 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.159478469 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130615714 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.249450525 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12443591 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.164848151 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.161174459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.15508947 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124128155 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.160816898 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.155244644 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221194932 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.160055306 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.132272388 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.158197946 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.156960567 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132291522 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.153595919 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.155768233 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.160002469 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220384078 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.15951029 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12608235 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.158689439 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.157528346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127340655 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.161971718 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.157820697 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.160291838 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125018639 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.156538166 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.153062646 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128928612 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.161390137 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.157034915 seconds)
  done (took 12.831351033 seconds)
done (took 46.612527654 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.171199067 seconds)
  done (took 2.223807206 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.057699001 seconds)
  done (took 2.112341996 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.259800542 seconds)
  done (took 19.350492542 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.637040272 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.705941639 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.06395567 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.19884275 seconds)
  done (took 3.659199069 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.064575721 seconds)
  done (took 2.142237465 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.40575143 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.290504507 seconds)
  done (took 1.75477495 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.972060178 seconds)
  done (took 2.04045526 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.525364014 seconds)
  done (took 3.589893796 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.423567 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.240495608 seconds)
  done (took 1.743517258 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.712094821 seconds)
  done (took 1.784344602 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.767471782 seconds)
  done (took 37.840796181 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.287369505 seconds)
  done (took 1.374866111 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.345427035 seconds)
  done (took 1.421445636 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.915836258 seconds)
  done (took 4.993544357 seconds)
done (took 87.094682285 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.128370697 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.157977265 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.129557116 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.157259616 seconds)
  done (took 1.643038589 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.137014659 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.157101069 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.161696625 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128752229 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.167777895 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.15508163 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126915835 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.166125078 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.154496086 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.1308509 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.157155794 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.156736271 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131871339 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.155914283 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125872494 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.159101019 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.162663334 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12904983 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.159082175 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.158093038 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127550763 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.16012448 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.16148354 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.128775795 seconds)
  done (took 4.64515275 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.129270778 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.150760546 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.123002294 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.149575872 seconds)
  done (took 1.641456831 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.139318922 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.178971172 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.176316505 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13777177 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.17875978 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.177697899 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.151758033 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.124025802 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.154163364 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.137814102 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.157095246 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.180869229 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.177472453 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121404435 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.169132278 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.145448041 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123448412 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.179066127 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.165997456 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.14008578 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.152723213 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.167461518 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.135072157 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.171281158 seconds)
  done (took 4.82774899 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.243356125 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141624821 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.181050835 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.21068985 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.183828674 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.153522852 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.15674058 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.164056435 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.159495159 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.125786816 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.156807226 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.218003457 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.159690398 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.133502225 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.157803482 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.164557978 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135467644 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.162338238 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.157995701 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.169781943 seconds)
  done (took 4.423351266 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.130248851 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.150347949 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.116141716 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.150554836 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.1564582 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125269676 seconds)
  done (took 1.916416023 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.118082844 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.14252559 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116395817 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.142694801 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121195215 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.143957183 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.112992451 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.144407973 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.142770298 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115256442 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.14243371 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114613934 seconds)
  done (took 2.652657495 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.357688201 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119257503 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.155078075 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.148525592 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.153486745 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11954533 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.16701353 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.147682246 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267466807 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.151728007 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.16625557 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.2298693 seconds)
  done (took 3.2812613 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261272056 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158640659 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295841109 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.432545495 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207194436 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210811091 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.327535787 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208543454 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.268860583 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180455399 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245907428 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200181006 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199209544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228421696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181262168 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.232947043 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223569519 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253565365 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190429208 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287045551 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209792881 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215661798 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230862563 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194646041 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177430668 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211584167 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127497292 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173044173 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219548474 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214548438 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250819886 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189524192 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15321191 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283516555 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304104019 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229823695 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.366954488 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19397383 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23873158 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.231657132 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.328129856 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180860171 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244978871 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196002615 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172931085 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22889603 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198443494 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.22990316 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.174681309 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18203595 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233684077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222552121 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.234588835 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194380779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350201253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193739831 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.188939779 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222281434 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266928364 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242567023 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213714764 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.130315857 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258554122 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232651626 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230387566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.187619687 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.214796469 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164186655 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223218349 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275230557 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236438913 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214366333 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.238464409 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17588972 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210771161 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213730749 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198539651 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227533396 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208061418 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.157670307 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194594504 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182520305 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164277461 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203190873 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16055291 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258359098 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175502834 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.234394449 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283869139 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203279322 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207508417 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211538916 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213916316 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190434137 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.127205398 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189152355 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.205185197 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201867572 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170782109 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201268636 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187394256 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.167817392 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197732442 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130729182 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205220899 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.175968541 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21229387 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213167575 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.178976109 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212524624 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192678979 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.208333209 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220072648 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237090868 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171935239 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17810306 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246030499 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203833245 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.180369557 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223784523 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242353857 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.21431858 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184838655 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221731603 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243606689 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183816921 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268556144 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169943405 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180245942 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.197449293 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205383335 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202820708 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.196725195 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167180353 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.201068952 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244345834 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.173229127 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177626429 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223178269 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137505288 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166864751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187023073 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184427035 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.183968501 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.196310417 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152634253 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199774161 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205466248 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199743578 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202971747 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185466284 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288178037 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141440384 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.208142946 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191611459 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.159679757 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.231683495 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236319254 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173404293 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233561386 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.247432321 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241956768 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210616833 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1698686 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230285583 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172456437 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13038477 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219331175 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209975306 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239928291 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.237386339 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239616573 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.21604826 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.202785141 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194127204 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215126747 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.256018372 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202610802 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.186480701 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209311613 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221700617 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129228367 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.166554801 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.168403826 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180928558 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146547601 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172405732 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230842738 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210323895 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264895518 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209769405 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182400437 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234332927 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.166420434 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212597474 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.225450827 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180567031 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.241223473 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232873293 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21643456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185380951 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218361825 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.160966113 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162540154 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146166196 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215540342 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173477977 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180859962 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192481203 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23487199 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221991444 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193407328 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281311202 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217456244 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246811612 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.16259151 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.209054447 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217984522 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203832519 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.232711897 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145879499 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.2082876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22895059 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201361617 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275965886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211776056 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217528893 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25179151 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.204143996 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176088818 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193492093 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212978828 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18902109 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209258727 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189629624 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178545796 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19773302 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.149010857 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169592833 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261643511 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156014613 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260257414 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.2026742 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22473677 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165013932 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191656082 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207810464 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157892415 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.158850149 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217802382 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269058238 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158540121 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233637367 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222916188 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145678549 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.391796183 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243084126 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234187938 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198312798 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190315265 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209648172 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203975719 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21029026 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230803221 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193642732 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232338138 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208330362 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.187099932 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178550812 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191865868 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194511613 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168938693 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178981668 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.203173451 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1853189 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233957783 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187271112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206091897 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212403441 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.190610533 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.199482641 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18312992 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255098725 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20651426 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226213697 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.202771802 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.215868585 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266081642 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132864754 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16889288 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.167398568 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231110282 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140589959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207608838 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.256675229 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244700294 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207214936 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215061315 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18245853 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.166882321 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206576759 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191287354 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244656423 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18802887 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.180443572 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243215775 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.196805705 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177529889 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210676591 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331098076 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189240849 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221539641 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.159550816 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.323936736 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164060668 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148545079 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20551751 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218318165 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.191914189 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.231201055 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215369726 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188380339 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206261554 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185830726 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234513197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28488109 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227881725 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22754903 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.187877475 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204330248 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209279289 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224740189 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185620132 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.197033369 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208023493 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23576051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23783333 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.17941955 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212493542 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210997248 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208532573 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224891886 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175772137 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235916398 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173206707 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216200849 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189239633 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166249132 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205843501 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.22687251 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174808346 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224179532 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206392061 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171958036 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136614768 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205864718 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205840173 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204816376 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.176022958 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229686029 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.168630064 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211983095 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231334765 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168852597 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172754759 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189893282 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173058045 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191757873 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188384882 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178051813 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.186386999 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259316722 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.142031309 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224445237 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253584082 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214063385 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205483965 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187550775 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.676010851 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.169637143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233552892 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190777584 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241267329 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191812137 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216698923 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211092707 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193554373 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221861013 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192976651 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.272784235 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213993182 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.23988392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146977851 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188497989 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190533244 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.175301397 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197349608 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211594276 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153089957 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.181114396 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207561624 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19017675 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.189942901 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183867486 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238862647 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194727265 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235602588 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233653848 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199920343 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216684819 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225445472 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171428419 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.211528236 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219890304 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186490417 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20927349 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.174287275 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.179422535 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231270652 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132966444 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208313502 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211268781 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210432097 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211221611 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.181393971 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210472324 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19272144 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210750476 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168984815 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.202071278 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20584133 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143924594 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.170730075 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205330282 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20829981 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.208533435 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169641421 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.188967132 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230887086 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.1638429 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181553625 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33054901 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206859321 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244014705 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.19961115 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177377593 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189834903 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210309627 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.20499919 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210112026 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139592665 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172905387 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.176514535 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.23208751 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.203117104 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205566168 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227417989 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207277112 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238300591 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.189071672 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.317574525 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181235212 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202246855 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150189801 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.172389422 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184341027 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1815262 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174135842 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.266874327 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232313286 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.200650579 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.189554544 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138877317 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.164527947 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17422126 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207626174 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199963332 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205950043 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196555803 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128713315 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193978426 seconds)
  done (took 100.688821275 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185593596 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.180052671 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.186534403 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.238927028 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206199897 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296780646 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.245881274 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267281709 seconds)
  done (took 3.001339923 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.165362215 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.145323956 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.180343815 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.163943108 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.16394838 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.502490827 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.173421371 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.131964952 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233145102 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.20206415 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13051129 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.752352015 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.159565062 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.160853909 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.164087485 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.161630646 seconds)
  done (took 4.778358536 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.804912901 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.618818469 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.459681044 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.303414458 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.282603375 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.227033044 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.851788811 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.211148892 seconds)
  done (took 13.952217119 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.162971032 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.181716188 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.392085257 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.252633978 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1992316 seconds)
  done (took 2.395592508 seconds)
done (took 150.919544081 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.134392209 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.18491627 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.133825901 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.183274392 seconds)
  done (took 1.824470247 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.1829213 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.150057991 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119786742 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.14808983 seconds)
  done (took 1.809431347 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.609137929 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115044086 seconds)
  done (took 1.962539913 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.161027394 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.184318013 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.183935157 seconds)
  done (took 1.744198879 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14330369 seconds)
  done (took 1.346735823 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.14133989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.170160717 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.224645111 seconds)
  done (took 1.746646431 seconds)
done (took 11.637880982 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157392246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.467665885 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.449705529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.172855072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726683686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.441519174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.129013542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.198070539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206024418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121072987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.176159178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.730902038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048226245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.405669485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.062623484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.465326599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.73886563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123276361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.161898553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.154706657 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.071878964 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.152760891 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.154014341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125102079 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.734618315 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.457001226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123481774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.514050773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120109734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.159075263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.443876497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123171135 seconds)
  done (took 18.514648184 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.174756344 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.224525609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.163037164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153517327 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127167892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.155287421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133899978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170716838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.22081739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.155278654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.176228859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121745525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161393736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121715888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.180661534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.153639242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126041948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.156405995 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.163193498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125378266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.177027704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121344171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.155836205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.15677847 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122229032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.16751589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.15344021 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138967987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.154500142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.159029935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128198737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.155054358 seconds)
  done (took 6.169894232 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.174092249 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.234273588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166029903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.192480141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.20931565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124748108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.251932494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.201609123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.254718798 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124277619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.178777801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121623458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.198424612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.156011788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149051399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.153733318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.157921159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124966927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.163280871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.156204273 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.146363612 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.154229465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.157638254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125845018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.155438792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137431854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.155702939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.171488741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122991031 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.161061637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.161866919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122960543 seconds)
  done (took 6.479394823 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.136811398 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.169648001 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.147426776 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.180192687 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.165040356 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134474747 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.168223727 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.161908135 seconds)
  done (took 2.485852733 seconds)
done (took 34.85952327 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.15261181 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.175495187 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.14209584 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.171348578 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.232249298 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.157221646 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.14175378 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.158415963 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136910175 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.178368533 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.153261071 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.129246915 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.17712154 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131126967 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.214607534 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.171456443 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.222091347 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.217134968 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.160841165 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.137870384 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.16142907 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.225391112 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.165280626 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.129333515 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.227550998 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.160316521 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215789249 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.131390855 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.164552376 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.12644079 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.248806073 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134761938 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.161092377 seconds)
  done (took 6.820427543 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.234941215 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.252960494 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.125254581 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.157373083 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.244554138 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.157540982 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.234751685 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.124207574 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.157946034 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.125066343 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.157239992 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.23257137 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.24169406 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.25583739 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.274477354 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.244989828 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.266624827 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.243394806 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.229414423 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.248748679 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.233404878 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.123550674 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.275517755 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.248346907 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.124972752 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.158704056 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.270200514 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.241270718 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.269178586 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.238399831 seconds)
  done (took 7.619142296 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.137968089 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.175167556 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.151856169 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.231936083 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.202411905 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.173217152 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137096768 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.182894574 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.185194485 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123744637 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.166761574 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.196917681 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14367396 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.167422176 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.162130651 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145920118 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.186696628 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.159579436 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132995333 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.179915931 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.175435592 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.143642485 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.173704221 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135178857 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.156638831 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.169148473 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130366226 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.170927775 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.165254087 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13434285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.162093683 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.162646468 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12915212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.167199894 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128620582 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.17036785 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.188277792 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134370217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.170980737 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.196349555 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132599202 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.165256677 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.180166761 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.206583876 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.127342393 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.171950141 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.13904017 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1696205 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.156175999 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145292343 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.174493107 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.158631397 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.148919938 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.157805558 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.154824786 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134608724 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.15930305 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128561342 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1670767 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.160854533 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.153363807 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.165888063 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163940567 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128889015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.163801937 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125228944 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.1569768 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.163550932 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.149484479 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.164517172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.19113559 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125582883 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.169728332 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134002588 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.163867158 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.167168925 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124384168 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165852219 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132844212 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.165172841 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.16769598 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128673374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.162817139 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.178475581 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.149167412 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.171919101 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.169889353 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.137930829 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.162778785 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.159021302 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141555093 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.161081812 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.129045574 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.169458529 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.159712598 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129018156 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.171085937 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.168085535 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.124697231 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.179336183 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.131125118 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.159253258 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.177341498 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126147281 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.162969187 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134929878 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.17248649 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.159787818 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.135515794 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.170653781 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.156497992 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13174813 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.16308289 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124875123 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.177183713 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.171086894 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131709945 seconds)
  done (took 19.674311451 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.341412318 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.352296875 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242637042 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.450548543 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.186998956 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.233936828 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.311617895 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.26536258 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.161768717 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.206943046 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.223582411 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.310368464 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125430587 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.193136777 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.353095687 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.420478609 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.193263675 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.210236811 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.208189556 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.18882974 seconds)
  done (took 6.442170896 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.148497522 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.206393169 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.193550321 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.191947971 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.165489157 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.142558523 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.158641699 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.183624147 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.134169257 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.166787863 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.124808205 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.172910118 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.168467288 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.136694419 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.178831575 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.207273623 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.131730074 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.166936468 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.182616645 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.165505996 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134742044 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.187942793 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.171677291 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.193502657 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.142472701 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.174849429 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.156866343 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134251368 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.162844852 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.130886369 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.16592026 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.182057979 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.164321405 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136378805 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.16980433 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.138500494 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.16180931 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127214121 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.16154725 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.164202336 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.146216066 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.169670816 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.162187356 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125764154 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.173430882 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.131155417 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.173835082 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137649054 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.172060419 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.175681911 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136712102 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.172241212 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.166101896 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148360118 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.162507196 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.175817062 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.140180018 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.173362203 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.168845881 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125706546 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.159692592 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131675955 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.164899206 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.172604448 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136585851 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.184736115 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.174987507 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125494493 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.169956803 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.165147766 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.130091354 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.178644624 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.187871158 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.130881879 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.164378791 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.185199281 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130150524 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.153582375 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.137595835 seconds)
  done (took 13.873758291 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.163456421 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.166693974 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.182899264 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168395922 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.287750802 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13474428 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.164512998 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.182503718 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13982794 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.175584145 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.174692503 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.144124096 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.196200277 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.176985491 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131561278 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.177692558 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.169785738 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.210452661 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.151669618 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.201937014 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.285266257 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133292887 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.177653969 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.173899841 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169661973 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.17797609 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.203455415 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.135889063 seconds)
  done (took 6.233886 seconds)
done (took 61.877747178 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.400312462 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.568875136 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.338138238 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.346652027 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.381896542 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.375017124 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.337534514 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.529564769 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.167792114 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.32427014 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.335925883 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.335918043 seconds)
done (took 29.726902377 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.370660966 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.002591042 seconds)
    (2/2) benchmarking "String"...
    done (took 1.654064168 seconds)
  done (took 4.908389683 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.330068486 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.331611629 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.574422729 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.329643801 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.348255184 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.349140307 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.334623566 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.340955216 seconds)
  done (took 16.859120327 seconds)
done (took 27.722144066 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.419488081 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.531190378 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.599710385 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.364189962 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.330075934 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.329418666 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.323314721 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.375813753 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.330670256 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.325757437 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.3315362 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.625939038 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.330943349 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.731577684 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.321979713 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.346013049 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.348791422 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.575247603 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.331340539 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.382221837 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.321898687 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.344172722 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.348485826 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.35278371 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.345608844 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.341532584 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.350430093 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.321498161 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.543587895 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.335459361 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.322024114 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.355574235 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.353622063 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.32861354 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.46600702 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.349697715 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.530365166 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.348102828 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.3249641 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.340399069 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.536947838 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.771130098 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.327880906 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.320638597 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.334272494 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.412529768 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.321864006 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.139024384 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.335897151 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.321817995 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.330272399 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.741188184 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.337258201 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.343484232 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.33946675 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.576008588 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.336401751 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.38386394 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.358753283 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.342153415 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.334138703 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.336244208 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.336289946 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.338404022 seconds)
  done (took 152.091039438 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.327232183 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.329782733 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.331653023 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.353254809 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.332751798 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.328877169 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.330036379 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.328889863 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.334724867 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.363852172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.329983259 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.333690644 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.334737076 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.2982464 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.33530471 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.351066667 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.333646447 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.336189347 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.33913576 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.330026684 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.347524066 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.331973912 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.350105656 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.331841791 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.376976822 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.433329733 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.357545657 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.334031313 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.336503624 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.33106715 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.33526901 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.335506123 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.994898244 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.195331589 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.341486175 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.355116425 seconds)
  done (took 85.024087324 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.331377124 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.332789182 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.330828005 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.366756585 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.331986003 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.954459642 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.95768575 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.072069854 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.606082935 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.857296592 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649841478 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.332324895 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.42963058 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.347309099 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.332982932 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347506626 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.376228203 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336374625 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.334472095 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954280758 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.349661777 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.377630202 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.516085734 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.351066101 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368942413 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.739302193 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.333872817 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369096544 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.07667626 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.673925511 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.386759542 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.334801935 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.333998357 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.746282008 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.333897195 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.450212216 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.336076949 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3692801 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.33315818 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.619711066 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.333634596 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.333262661 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.337645454 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.040239433 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.33364891 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.953889924 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.336085222 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.337717352 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.333652103 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.333537519 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.53975324 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.075865219 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.350901288 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.333617931 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.334981268 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.33161261 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.331653077 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.333411737 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.368388062 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.554829823 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.450349541 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.351270749 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.335861878 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367801457 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.330932084 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.44186604 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.335493295 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.377287294 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.390446763 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.44388137 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.933882382 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.335039799 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.428361981 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452635474 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.331144522 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.331986835 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.330436171 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.331361054 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.442780495 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.331885535 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.774375718 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.511090495 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.34859224 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.778146405 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.43274143 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.330890171 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.724084349 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.330218866 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.330133829 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.098654719 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.428052227 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.330585779 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.329624656 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.33016764 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.33137776 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.767719854 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.924575633 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.614721313 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.333962349 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.738846271 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.334649653 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.776718605 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.922276856 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.011016201 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.330769323 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444549324 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.509525662 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.348886416 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.330797853 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.765208234 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.332823135 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.390031287 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.330509809 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.730688031 seconds)
  done (took 381.893440814 seconds)
done (took 620.262454937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.099484208 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.050980239 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.183662547 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.074352708 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.037783762 seconds)
  done (took 11.6975734 seconds)
done (took 12.94819207 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522415073 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522685593 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390938715 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523721941 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.363680864 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542992086 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.506620609 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.353716778 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437650069 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.415850549 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.43697907 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.385986348 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36884555 seconds)
  done (took 20.023555754 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610001823 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.33722204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399339312 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.592436862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377057895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.63014703 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.640214602 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.338306107 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.51231578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348606326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348524859 seconds)
  done (took 19.38674254 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.61566993 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.339125738 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.404341476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605553547 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377017715 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.631566529 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.66171089 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.341807395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.478037878 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.377717006 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348686391 seconds)
  done (took 19.434603432 seconds)
done (took 60.096874052 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.37846696 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.507269873 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.362354353 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.350293474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.34468595 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.345645485 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.351306655 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.346029772 seconds)
  done (took 12.244115422 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.34408515 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.343518006 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.342557341 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.341997576 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.342247789 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.344039421 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.345690274 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.342610932 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.342646103 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.344322446 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.343231493 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.343046493 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.343909125 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.343597967 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.342674818 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.343241931 seconds)
  done (took 22.747022357 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.345891893 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.343019194 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.342087168 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.344312948 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.345142305 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.343259981 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.343960119 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.342075181 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.343227275 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.344138064 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.34428391 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.343282029 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.345053945 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.344544937 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.343192778 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.343237504 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.344514103 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.343695965 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.347456777 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.344266144 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.341693905 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.342209382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.34226588 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.342859637 seconds)
  done (took 33.514210916 seconds)
done (took 69.757894992 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.331402781 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.335455012 seconds)
  done (took 5.917805335 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.401699479 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.40317133 seconds)
  done (took 4.057093409 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.344633252 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.344574793 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.342120419 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.343118446 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.342755625 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.342689658 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.34333646 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.34316886 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.344366671 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.343599741 seconds)
  done (took 14.68566045 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.343562299 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.342703582 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.34312243 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.343585671 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.341760208 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.34315344 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.343255388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.341431652 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.343278553 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.342818407 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.342520064 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.344686747 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.345269304 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.342649622 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.345775299 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.344328793 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.342827381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.343832352 seconds)
  done (took 25.431938401 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.35699478 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.365508751 seconds)
  done (took 3.972792697 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.482482899 seconds)
    (2/7) benchmarking "second"...
    done (took 1.384533589 seconds)
    (3/7) benchmarking "month"...
    done (took 1.459058311 seconds)
    (4/7) benchmarking "year"...
    done (took 1.450065866 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.384027271 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.364169402 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.385343594 seconds)
  done (took 11.161618383 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.343970587 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.554241203 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.658238121 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.882748055 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.343791348 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.389736253 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.195892539 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.390573604 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.378608415 seconds)
  done (took 15.388632284 seconds)
done (took 81.867268558 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.333605778 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.376364074 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.346376139 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.358989376 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.684258315 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.344057565 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.334224134 seconds)
done (took 17.031739134 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.325284799 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.332788143 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.336168262 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.341608288 seconds)
  done (took 10.588437582 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.331884873 seconds)
    (2/2) benchmarking "read"...
    done (took 1.691861744 seconds)
  done (took 5.2761348 seconds)
done (took 17.118495415 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.345093926 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.342928744 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.345531933 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.344677128 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.345824385 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.344035226 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.345555674 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.343814783 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.344612243 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.345640218 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.345027558 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.343682692 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344605568 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343852443 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346041131 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344964159 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.345504612 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34695384 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.344403873 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34468871 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345985034 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.345471856 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.3455773 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.344544847 seconds)
  done (took 33.532177183 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.347549408 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.347106223 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.346420573 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.345186068 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.346519438 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.345467712 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.34670368 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.348257035 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.346611681 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.346338806 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346675019 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.346276134 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.346716515 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.345707635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347350862 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.346116853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.347022653 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34631566 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345797151 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.347007647 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.347693096 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347011391 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.347494889 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347753788 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.346810185 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.34798487 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.347432804 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.34752329 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345208131 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.347610456 seconds)
  done (took 41.658663804 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.352303099 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.353271377 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.347736142 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.346224143 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.348975245 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.348112562 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.346490783 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.348502914 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.346883468 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.348324661 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.34836394 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.348810607 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.348552968 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.347690066 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.349295795 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.348870035 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.349129361 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.349822468 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.347915417 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.348422337 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.349763352 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.350112303 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.350423309 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.348175126 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.34974909 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.348751018 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.350935686 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.349169539 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.350422223 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.349323588 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.350145095 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.349193604 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.351076341 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.349339547 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.349047187 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.350232204 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.35444412 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.355439996 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.348600538 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.35165368 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.349996183 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.350424353 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.350478031 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.350401945 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.351180654 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.350921149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.350494783 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.351135935 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.350904615 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.351059433 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.351070245 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.350925561 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.35133508 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.350003754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.350881741 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.350060183 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.351516219 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.35134959 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.351553879 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.351726038 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351625286 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.351067698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.351682455 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.350718607 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.3512704 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.348722944 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.350488539 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.351742117 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.351832685 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.35273682 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.351036603 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.3508731 seconds)
  done (took 98.470370037 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.353268183 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.351722351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.351591048 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.350519047 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352169475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.352409641 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.35208437 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351484875 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351304426 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.353801888 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35220581 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353306303 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352204878 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353099898 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35317852 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.352378499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.353120275 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353927021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.351974007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354074696 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353079111 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.353197906 seconds)
  done (took 31.015850749 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354347294 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353487982 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.352834661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.355028686 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.357306645 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.356077458 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.354644712 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352573815 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353216771 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352610705 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353707783 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354170194 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355193699 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353976259 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353082946 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354852456 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355732851 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.358184179 seconds)
  done (took 25.642901964 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.356697188 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.354861662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.352595368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.354147205 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.354260228 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353983717 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355645233 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355632302 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.353923602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.35452931 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.355758546 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355207713 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.355597446 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356543064 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355872687 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356597165 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.355155344 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356864723 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35581949 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356094021 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.356098267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354570268 seconds)
  done (took 31.078943326 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356603346 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.355477498 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.356235736 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.354914547 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.356234374 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355984863 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.357720253 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.35705135 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.357940897 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.355415299 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355315826 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.356889362 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.35778439 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.356590558 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.356824848 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355957339 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356166721 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356522938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356844947 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.358275206 seconds)
  done (took 28.394756402 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358940092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358731779 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358491765 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358126659 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358601726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.358499543 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35785921 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.359208578 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.357996376 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35965399 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359371345 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.358888001 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358505323 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.359405992 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360096756 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359292388 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359464332 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358705607 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.359222026 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359941745 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.360009851 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.35953079 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.359850938 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.361084638 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.358552841 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358921326 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361028107 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.361393694 seconds)
  done (took 39.325717855 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359119389 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358074256 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.359652131 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.359645687 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.359790436 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.359318519 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.360826645 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.360185566 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.359041804 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359898382 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.359375791 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.358981667 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.36016406 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.358988419 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.359150236 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.360317634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360806052 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.359814345 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360573905 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358904893 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.360802942 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360587926 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.36237249 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.360010951 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36145699 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.361526543 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360961138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361575326 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361746309 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.362082474 seconds)
  done (took 42.071040575 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.410449665 seconds)
    (2/2) benchmarking "in"...
    done (took 1.406303477 seconds)
  done (took 4.084026482 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.360628299 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.360034798 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.360547251 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.360879662 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.359902603 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.361374862 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.362378109 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359906181 seconds)
  done (took 12.152802922 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.357275275 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.361668938 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.360774059 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.360852146 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.361440422 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.357136756 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363948979 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.380481747 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.357565977 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.359015686 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.364729339 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.364765284 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.35871249 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357867356 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.358476004 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359188738 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.36037433 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.361691158 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.361719966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.362365032 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361378029 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.361283006 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360926419 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.363419773 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.359435353 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.368004527 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.382050233 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.363665285 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358618956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.362243155 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.356953709 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.364187865 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.363928384 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.36239512 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.363459364 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.363782801 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.368174326 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381319135 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.366598066 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382604564 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.364381519 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.363793119 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.359481906 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.359560499 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.359716759 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.363557681 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.364623552 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.36372639 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.360027701 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.363196714 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.370611982 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359996047 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.364284067 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.364119358 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.361259873 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366124583 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.385111866 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.362810289 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.369046072 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.371556927 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.391434505 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.383307224 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.363925388 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.365437136 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.369378072 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.378007935 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366083233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.384916473 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.365993884 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.366138853 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.366941885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.39232256 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.386321977 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.366255874 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368274954 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.367414472 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.361341109 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366727171 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.37014909 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.382541871 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.366369232 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368372109 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.369375426 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377917418 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.36131055 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.366439328 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.367731583 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.367805448 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.364520262 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373040264 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.386597939 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.366787132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.362892995 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.362821313 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.363080691 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.367002017 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.362202585 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363255216 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.367212698 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.366522984 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366374915 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366550031 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.372201675 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.366939159 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.367242176 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.371281207 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.390719675 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36461006 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.370681305 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.367369669 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367522077 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.364558093 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.368442228 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.367908019 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365104349 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.372385394 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.367840316 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.365970705 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.369126107 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.369597231 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370881095 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.382750108 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.369853942 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.368496739 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.368445405 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.379050574 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370285203 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.366582475 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.368932785 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.369481854 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.369841733 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.366382071 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.369939991 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.365896854 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369455976 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367101454 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.369952515 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.370843422 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.370131995 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.367447158 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.36852625 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.366364824 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.368297032 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.368202734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.370892927 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.367868131 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.372330639 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.385644163 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.367437756 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.366205949 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.370668525 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.370604272 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.365685665 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.372033378 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.367082561 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370686777 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.366450333 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.370949701 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372580145 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.371704194 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.371452605 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.367630167 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369842034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.371309685 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.370331615 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.368300095 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.371828057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.371427546 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.372763266 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.367505508 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.372909878 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.366578937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.370079594 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.378739934 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.372671759 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.372217518 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.371382744 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371069548 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.373173671 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.372354454 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.373272104 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.375920492 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.373905267 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.375658358 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.391963575 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373841586 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.373337358 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.368861259 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.36913535 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37372147 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.37285889 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.38076464 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.381532976 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394392542 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.370270661 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.376693337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.371745372 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.377870792 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.372576214 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.374657837 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.375611379 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375128276 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369988639 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.37508273 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.370846688 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.374745475 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.369903861 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.374925649 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.376173103 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.374931883 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.376029439 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.371420505 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370345937 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.374547491 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374613255 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.376074303 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.369822265 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.37558154 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.371176435 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.369635608 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.375813453 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.376520744 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.37757876 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.374951188 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372725101 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373314268 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.37047357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.371000966 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.375780164 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.372417348 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.369697962 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.379892556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.391150548 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.372312815 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379015523 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.392966977 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.372324939 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.375023044 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.377234999 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.37744371 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.37564951 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.38406703 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.377474067 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.377259115 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.37830938 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372474398 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377236752 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.377809238 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.397319027 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.373863129 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.377405165 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.37391659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.376921053 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.37393912 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.374583175 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.373827551 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.373990967 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.377501012 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.37800031 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37525572 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377796358 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.378530554 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.378389336 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.376058988 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.384846441 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.379307757 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.374253474 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.37540587 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.375256334 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.382833025 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.37552321 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.380443817 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.375797889 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385284282 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.406569953 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.381048001 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.395328911 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.379885698 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.379775855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.396262207 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.378825473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.376550133 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.374594321 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.376495706 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.37498997 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.381300007 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376592195 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.38016415 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376610641 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.376618458 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.382051056 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.381918866 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.374225604 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.380922424 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.38021513 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.380007517 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.375924168 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.38003283 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.378368426 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378267177 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.376070124 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.376521259 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381906792 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.394797974 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.376860287 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.376032178 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.377565813 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.375728467 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.377484076 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380672929 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.380721562 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.388737983 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.379590565 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.386119706 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.378408301 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.386384734 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.38115143 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.380668801 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.388911688 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.381017326 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.377683329 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.38065466 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.380969746 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.384426361 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.401531786 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.379376213 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.384945616 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.384338143 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.383574376 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.380763315 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.381050463 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382391479 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.38406102 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.386090021 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.398744246 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.384321333 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.380788412 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.382394555 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.383915016 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.383149603 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.378679607 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380163126 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.381848293 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.379904378 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.379399595 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.379755668 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.383260363 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.383245616 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.383994246 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.38339094 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.383597457 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384662335 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.399528762 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388900374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.384707329 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.386636053 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.403977513 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.386996135 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.404257341 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.381173674 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.383857127 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.385555697 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.381606532 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.379817828 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.381060655 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.384370453 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.379783041 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.388412389 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.385818218 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.38415602 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.379710289 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.38501128 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.381160257 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389398228 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.402251101 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.382436882 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.389557681 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.386793459 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.381975496 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.389470181 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.385559198 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.380655429 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.383015694 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.391400219 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393380474 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.381440571 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.386521161 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.382547496 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38605177 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.388498177 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.385897893 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.386904165 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.386471985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.382110969 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.38724215 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383557219 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.387715944 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.38299899 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383975015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.383302143 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.394771824 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.405687922 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.383276098 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3857103 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.388173055 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.383268871 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.382184149 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.387541148 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383835773 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.386930039 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.384230134 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.388053495 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.391246392 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.384646226 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.383394563 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.388238158 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.38398811 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.384189369 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.389342526 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.388827823 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389041709 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.384748655 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.388319664 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.38594225 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.382776943 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.388440579 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.384834874 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.390323057 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.386715173 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.39103978 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.385263072 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.389872504 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.389325189 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.389630132 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.38356253 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.385113317 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.391436608 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.407809671 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.393648172 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.393427815 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.392924078 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.385242496 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389366796 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.393053278 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.384003978 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.387379477 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.390299406 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.386618863 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.386611469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.394030311 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.390665484 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.391916308 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.404719255 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.385205877 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.394358143 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.40645066 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391241901 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.386227163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.391001421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.38666216 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.390028839 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.391265608 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.386059329 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.393582184 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.405601409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.390886223 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388962674 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.385112974 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.387051542 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.395254044 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390184037 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.386603061 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.3902977 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.385897782 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391431442 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.392330012 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.391239618 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.386176624 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.385645722 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.389427565 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.392779813 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.391665003 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388877562 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.388203179 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.387647436 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392882507 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391598271 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.391874173 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.392033852 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.387010242 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.393116748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.387962282 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.390757386 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.387351142 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.390093245 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.395382612 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.392320546 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391060138 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.399435488 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.399259299 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.393246597 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.387750588 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.388670256 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.390350078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393054009 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.392647038 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.389098492 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.389234801 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.392525371 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.392147006 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392688114 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.390708353 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404482682 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.413429386 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38969146 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.388733881 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391559407 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.394250931 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.394052775 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.39308086 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.391803847 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.391070984 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.401974512 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.394795716 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.396021492 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.410617549 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.390946438 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.397995891 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.39403843 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.396413769 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.391692756 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394790075 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.394327079 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.393365523 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.406189346 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394293883 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.399438793 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.413326359 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.411497942 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.391524812 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.395993402 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.390358 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.397545889 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.391678086 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.395414931 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.39630314 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.395721274 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.397393604 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.391901274 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.396620099 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.392428655 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.397200311 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.395745733 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.392102724 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.393007793 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.398361397 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.395886456 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.395576921 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.396882384 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.397141533 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.39801266 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.393244203 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.403917713 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.420584337 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.398072129 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.396258861 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.396398855 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.39491274 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.395894419 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.401677429 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.404635798 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.399790573 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.397190477 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.39386531 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396989789 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.398478813 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.39435098 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.393032777 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394276898 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.398129751 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.404533379 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.42423662 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.397932872 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.393895106 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397964391 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.398724353 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.393995478 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.398177862 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.398333171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.395198222 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.396815551 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.401701477 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.399361396 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.399557052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.398196654 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.40846386 seconds)
  done (took 824.348313602 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399954705 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399055202 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.398412091 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399900936 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.399575614 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.39975007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400147982 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.397728373 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.399390909 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.399527906 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39936222 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399871406 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.399839804 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.401297934 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400326509 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.39995542 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399999181 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.401170107 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.400644676 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.401780828 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.399907036 seconds)
  done (took 30.699012738 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.399777439 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.399476944 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.400942513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.400117502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.401387522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.400262423 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.398932983 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399739096 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.401201295 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399961492 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.400466673 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399931256 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.402366069 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.399117558 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400641129 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.400011679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.40093813 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400939452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.401014955 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.401112668 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.402253818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.402508495 seconds)
  done (took 32.114280533 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.401314753 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.402441596 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.396239162 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.401411657 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.401798933 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.400927113 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.401935748 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.402401198 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.401823411 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.39827051 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.396644196 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.398680609 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.404160863 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.408759757 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.399179309 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.402035877 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.401588312 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.40200997 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.402462631 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.400500556 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.403865302 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.423006346 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.4028949 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.397627066 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.402993399 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.402909646 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.402673466 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.402606949 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.399720199 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.407247744 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.401456593 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.399580477 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.40144221 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.398093532 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.400247249 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.407249511 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.403994559 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.40307011 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.404839166 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.407451856 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.420748895 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.404380146 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.404000882 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.425791555 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.403591644 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.402519439 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.412247737 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.404388814 seconds)
  done (took 68.680462229 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.041367828 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.06432276 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.056486442 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.058302869 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.05958263 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.068866118 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.060184113 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.061046198 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.070580682 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.058139768 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.062853924 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.057299029 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.057568796 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.054924728 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.05629045 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.060755008 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.053830399 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.057133546 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.060682664 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.053730512 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.052390361 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.060323487 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.057280707 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.059520573 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.059801145 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.062403823 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.055182057 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.055173542 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.067686734 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.058422102 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.056828005 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.06185428 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.057813465 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.054910455 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.056738935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.063552189 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.056756596 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.059111319 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.070127619 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.061081122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.062209092 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.063134102 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.060072031 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.06008111 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.059125099 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.064414742 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.061354022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.058495019 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.074388688 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.061321077 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.054704094 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.061038923 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.058639084 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.060456046 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.062476396 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.068591958 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.059237473 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.060706656 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.066171146 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.059765192 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.060252729 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.057943293 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.058366241 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.058738261 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.066790836 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.064487928 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.060533127 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.059701962 seconds)
  done (took 141.392316484 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.408950424 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.408055553 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408826765 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.409735642 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408630963 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.40892036 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.409334676 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.409854987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409680557 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.410184762 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.408740478 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.409857993 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.409834121 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.41063708 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.409384901 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.410321608 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.410202283 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.407887822 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.409564943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.40880983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.408837377 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.410555067 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.408646892 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.409930633 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.410511907 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.410455915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.410249644 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.40837598 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.410655633 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.41133449 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.409562248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.409175063 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.411138118 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.409718411 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.41040999 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.411472257 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.408927168 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.4096424 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.410671968 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.409624533 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.410888889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.409366032 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.40965881 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.410336611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.411725523 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.410535222 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.411872568 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.411829447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.411780612 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.40978674 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.411528435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.410505173 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.411712424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.411947632 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.411967436 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.411946205 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.412673497 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.411157678 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.411391892 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.411986602 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.411354321 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.412583778 seconds)
  done (took 88.749385899 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411991393 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.411414275 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.411717669 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.412750271 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.41363799 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.411712308 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.413415891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.41224901 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.411625388 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.412746462 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414789601 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.412405611 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.414424817 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412858502 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.413858627 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413930547 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.413353304 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.412840467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.414153349 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.413119758 seconds)
  done (took 29.571372569 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.41274611 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.413589363 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.41403275 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.413642633 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.414545292 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.412870107 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.414769041 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414471674 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412857552 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.415375425 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.415172227 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.41511187 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414207541 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.413689905 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.41463002 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.414517384 seconds)
  done (took 23.93981171 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.414324808 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.414220093 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.415687786 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.415775376 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.414459355 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.414162646 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.415269688 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.415821628 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.414450986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.415019644 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.413950082 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.414695329 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.414324455 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.415792511 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.416072949 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.415893523 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.41554884 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.41436872 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.414546599 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.417909295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.415991466 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.415380519 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.416774646 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.414951689 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.416620264 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.417179238 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.416408423 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.416171896 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.416267295 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.415793643 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.417258602 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.416491315 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.416558596 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.416263905 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.418094886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.415641789 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.416397507 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.41701722 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.417046746 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.416952126 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.41614673 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.415741481 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.41797885 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.417318861 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.418037321 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.416812989 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.416061135 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.41884225 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.417559111 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.41682791 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.417214507 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.417714278 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.417518057 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.418240344 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.420723636 seconds)
  done (took 79.210111392 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.418311324 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.419099571 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.41688606 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.417038345 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.418319009 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.418118862 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.418022794 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.420286103 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.418701402 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.419467267 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.417015376 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.420088974 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.418854207 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.418180278 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.418217553 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419606901 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.418863788 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.417739722 seconds)
  done (took 26.849754746 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.419321138 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.419326655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.420287846 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.419064369 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.418452405 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.41915637 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.418751891 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.418816891 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418647335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.422314518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417476749 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.418417425 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.419066068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.419650253 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.418791091 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41862033 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.421079576 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.419625579 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.418748747 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.419531771 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.420025228 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.420745772 seconds)
  done (took 32.544232867 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.414238474 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.415660752 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.414306702 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.429959523 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.434372041 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.414657762 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.416046697 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.415469425 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.432740856 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.470692921 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.468150626 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.433768523 seconds)
  done (took 18.478554332 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420327433 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419982265 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420092755 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420863156 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420388412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42075643 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421758901 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42126162 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421967882 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422778648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421501697 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421176902 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422494039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422006878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422724863 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422914002 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422607796 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422698763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422903827 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421931695 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422529223 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421715702 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423405779 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421174174 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421638226 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42227951 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422942958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42261804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422791925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422817547 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422493945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423127463 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422346083 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422885282 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423648745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423442605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422378887 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423149095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423601957 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423779757 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.423976895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423629102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425653074 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423145746 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424766372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423396797 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422796369 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424334174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423854389 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424957608 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425157483 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424039523 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423609517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422632422 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425034473 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423716669 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423695282 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424724018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424834978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425595027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4247238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42467023 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424272137 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425177675 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42469298 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424919045 seconds)
  done (took 95.243789806 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425233559 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.423871986 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425166636 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425998408 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425818364 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425596953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425350047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425336056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42431888 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425399243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425554015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425021447 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42575415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426888995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423980682 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424723734 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424676629 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425948857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425643363 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426905019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425345859 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426506349 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425526989 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426419032 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426449846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426946367 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425596688 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427430112 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424877342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426785519 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425624383 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427833613 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427765886 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.425750398 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426674716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426692644 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427305553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426618885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426672365 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426247778 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426816342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427259263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427764658 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42733286 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426968164 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426584145 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426553472 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427429584 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428335405 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426920172 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427588369 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428163589 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428171156 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428193019 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428562088 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427250715 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42812856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427497204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428125892 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428177764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427795608 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428696675 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429682876 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428952156 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428621553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427178529 seconds)
  done (took 95.486623113 seconds)
done (took 1975.988626599 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.590345171 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.543361736 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.422370172 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.434884152 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.424283848 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.449012304 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.43702903 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.423216183 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.423952328 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.42379933 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.424352291 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.612233983 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.479639755 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.423223819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.424742559 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.519390178 seconds)
  done (took 28.792620057 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.454193816 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.431588561 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.548489467 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.448167157 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.454696382 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.625390307 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.486623489 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.430290188 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.606263312 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.449988517 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.430425142 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.452354021 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.428301516 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.419295007 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.465799372 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.625112758 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.681744915 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.434698242 seconds)
  done (took 31.200739097 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.898042509 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.42871479 seconds)
  done (took 5.656612176 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.449125117 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.429130702 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.4300077 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.427732354 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.421520006 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.438441621 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.426639675 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.420889813 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.449768625 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.563181619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.433218227 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.443500657 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.450690248 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.431049562 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.435131013 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.475094505 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.577107315 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.435786027 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.433787915 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.435127822 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.429738032 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.519128873 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.473466406 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.435999794 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.56110455 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.439037586 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.43665302 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.439350827 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.576902329 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.436563528 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.42938775 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.430478768 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.431061884 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.424399689 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.96303358 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.454213307 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.4412816 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.458098853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.43583498 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.579360403 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.432476807 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.436244768 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.422809827 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.946822624 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.567867057 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.554118951 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.455931528 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.431900712 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.433080277 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.497648272 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.433900899 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.431406207 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.49016867 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.23844782 seconds)
  done (took 90.915109543 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.458400798 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.423971868 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604102616 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.448380884 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.424771393 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.423306958 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.444329935 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.72080279 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.429373706 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424705521 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.71544548 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.012486171 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.45209859 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.47037463 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.274235346 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.488577329 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424664235 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.440541387 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.427939387 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.428558838 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.983420801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435963498 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.423658012 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.492377673 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.465945885 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.957077519 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.427993288 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.443323242 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.451610882 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.425212402 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.959594195 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.453574594 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.485188417 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.429311498 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.700649458 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.820530588 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78464741 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.432431865 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.454887966 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.426964943 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.451225059 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.936132557 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.794596167 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.426619765 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.425915429 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950053248 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.428379127 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.430596728 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435452338 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.677066307 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.426581274 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.427100902 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.446214416 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.427419909 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.427029059 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.507006982 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.508375247 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.961543828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.431295428 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.42731126 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.498959631 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.426956904 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.436214284 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.428608437 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.445623516 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805677665 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.630039592 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.432673316 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806287896 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.960054551 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.449515058 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037947849 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.449081258 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.450460827 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.612926812 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.426880694 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.428722464 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.975503349 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.442393747 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.427176554 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786192439 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.434904638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.728763297 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.448600255 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.43249001 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.001959887 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.44170843 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.435146104 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.428324521 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.428741076 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.449860167 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.463980532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.713418454 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.451481226 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.428510943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.429870786 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.459460542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.433818881 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.432380165 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.433568194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019432899 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.456826955 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.428969067 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.428577701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428864086 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.434330575 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.431557876 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.432192512 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.69747003 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.443442312 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.440465864 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432600456 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.428868102 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.444217917 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.503360981 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.435274903 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.75526236 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434631599 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43036532 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.457931983 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429948131 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.466474756 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430901804 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.438840501 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.333008203 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.734296671 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.4490685 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.434348049 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.432204919 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.448204278 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.457243639 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.435633807 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.494733549 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.434101899 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.229791009 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.456235123 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.441146918 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.431852729 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.438964466 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.43477798 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.437760862 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433651343 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726775019 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.715002058 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.618846186 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.436434151 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.430148387 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.215523038 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.493686294 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613358445 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.452629447 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43196385 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.683247998 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.637845712 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.434688995 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.433047864 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.434004427 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.693195592 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.432208073 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741357946 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.991991576 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.453431034 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.436325474 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.236233691 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.155761316 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.438328532 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.435872234 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.722143282 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.449537161 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.433967737 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.433540036 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.434483282 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.450048167 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.456495879 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.438607339 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.434297219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.434925105 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.762346471 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.626717307 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.45260722 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.440576142 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.95923212 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.457251887 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.439780572 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.437369715 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.437435566 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.434190524 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.502930441 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.436565259 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.46188053 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.435688833 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.444746024 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010913091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.438625304 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.436808733 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.628991924 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147841705 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.456082482 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.434355443 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.455152049 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.331761527 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979280991 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.453480441 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.75290784 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.43331131 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.475348718 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434774483 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.532210174 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979286535 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.440593606 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.455588457 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102612961 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.453708994 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.836339632 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.435712483 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.438739354 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.054209043 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.455197432 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.443081811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.441508327 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.443396282 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.739617419 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.43678119 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.450994072 seconds)
  done (took 521.408222446 seconds)
done (took 679.299779355 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.440178331 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.439268541 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.430274379 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.438881403 seconds)
  done (took 11.094053028 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.451340986 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.44399435 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.449388709 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.442140196 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.449769759 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.443182098 seconds)
  done (took 10.022976521 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.436818125 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.442377068 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.441136155 seconds)
  done (took 8.665199849 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.651763162 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.458546983 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.790867571 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.461783943 seconds)
  done (took 9.709529913 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.448427836 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.449564061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.450366327 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.450747658 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.453018593 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.45278029 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.452270507 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.45108224 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.452861121 seconds)
  done (took 14.40335998 seconds)
done (took 55.239677044 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.489657937 seconds)
    (2/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.452721864 seconds)
    (3/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.55872946 seconds)
    (4/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.520767321 seconds)
    (5/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.625226 seconds)
    (6/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.636556162 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482794266 seconds)
    (8/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.489507392 seconds)
    (9/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.433416461 seconds)
    (10/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.252494987 seconds)
    (11/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.455386422 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.4578081 seconds)
    (13/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.570268068 seconds)
    (14/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.469967085 seconds)
    (15/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.433690256 seconds)
    (16/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.451490687 seconds)
    (17/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.482846638 seconds)
    (18/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.451274013 seconds)
    (19/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.596661714 seconds)
    (20/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.600261131 seconds)
    (21/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.436748066 seconds)
    (22/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.148480875 seconds)
    (23/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.459816048 seconds)
    (24/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.647723902 seconds)
    (25/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.466249863 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.510612886 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.454956571 seconds)
    (28/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.297802303 seconds)
    (29/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.659611254 seconds)
    (30/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.517896728 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.432222555 seconds)
    (32/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.498655432 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.506078468 seconds)
    (34/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.649370338 seconds)
    (35/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.626276491 seconds)
    (36/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.790708814 seconds)
    (37/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.499345491 seconds)
    (38/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.092007005 seconds)
    (39/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.767314378 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.492937951 seconds)
    (41/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.786789356 seconds)
    (42/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.473552748 seconds)
    (43/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.486201457 seconds)
    (44/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.465317812 seconds)
    (45/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.471308649 seconds)
    (46/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.456474094 seconds)
    (47/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.527557119 seconds)
    (48/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.595411235 seconds)
    (49/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.213250069 seconds)
    (50/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.165541286 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.47448452 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.497825783 seconds)
    (53/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.542462017 seconds)
    (54/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.544740153 seconds)
    (55/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.579381665 seconds)
    (56/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455685824 seconds)
    (57/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.463603386 seconds)
    (58/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.643335676 seconds)
    (59/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.526406732 seconds)
    (60/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.192263804 seconds)
    (61/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.692746309 seconds)
    (62/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.570143115 seconds)
    (63/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.435031189 seconds)
    (64/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.556526779 seconds)
    (65/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.469365325 seconds)
    (66/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.515717264 seconds)
    (67/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.536071957 seconds)
    (68/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.326048146 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.539183265 seconds)
    (70/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.46404197 seconds)
    (71/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.458254206 seconds)
    (72/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.457435025 seconds)
    (73/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.46312297 seconds)
    (74/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.19991456 seconds)
    (75/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.548807911 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.627654834 seconds)
    (77/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.462152007 seconds)
    (78/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.602061899 seconds)
    (79/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.09946666 seconds)
    (80/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.475207425 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.527571192 seconds)
    (82/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.434627943 seconds)
    (83/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.511393308 seconds)
    (84/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.463229392 seconds)
    (85/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.484405839 seconds)
    (86/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.666297312 seconds)
    (87/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.544980807 seconds)
    (88/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.437016454 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.597970694 seconds)
    (90/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.591821968 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.198786781 seconds)
    (92/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.484499239 seconds)
    (93/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.44529232 seconds)
    (94/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.500697388 seconds)
    (95/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.473922586 seconds)
    (96/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.437671379 seconds)
    (97/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.32723067 seconds)
    (98/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.502052053 seconds)
    (99/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.437209967 seconds)
    (100/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.610650784 seconds)
    (101/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.46483207 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.534270734 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.483246319 seconds)
    (104/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.530467347 seconds)
    (105/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.592667901 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.500555589 seconds)
    (107/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.436873669 seconds)
    (108/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.652463333 seconds)
    (109/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.195405656 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.553339036 seconds)
    (111/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.529029271 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.467608003 seconds)
    (113/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.437169333 seconds)
    (114/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.535547318 seconds)
    (115/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.563380767 seconds)
    (116/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.517358695 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.47652332 seconds)
    (118/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.531876508 seconds)
    (119/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.652198158 seconds)
    (120/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.467761911 seconds)
    (121/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.535692467 seconds)
    (122/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.462834065 seconds)
    (123/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.475331715 seconds)
    (124/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.462739882 seconds)
    (125/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.55970095 seconds)
    (126/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.562035678 seconds)
    (127/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.525615188 seconds)
    (128/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.533735618 seconds)
    (129/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.574659854 seconds)
    (130/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.584469315 seconds)
    (131/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.466940048 seconds)
    (132/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.637955894 seconds)
    (133/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.524439301 seconds)
    (134/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.48527996 seconds)
    (135/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.595038073 seconds)
    (136/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.50128223 seconds)
    (137/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.465773008 seconds)
    (138/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.537544929 seconds)
    (139/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.528211674 seconds)
    (140/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.539669037 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.555021848 seconds)
    (142/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.56565657 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.523306583 seconds)
    (144/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.485477956 seconds)
    (145/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.45528551 seconds)
    (146/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.535327352 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.537743417 seconds)
    (148/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.476918009 seconds)
    (149/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.537568503 seconds)
    (150/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.439498046 seconds)
    (151/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.53688827 seconds)
    (152/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.462833588 seconds)
    (153/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.504952714 seconds)
    (154/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.606050704 seconds)
    (155/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.568206675 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.47946584 seconds)
    (157/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.709544606 seconds)
    (158/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.156894472 seconds)
    (159/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.670058036 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.550020235 seconds)
    (161/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.467558068 seconds)
    (162/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.104143054 seconds)
    (163/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.448116278 seconds)
    (164/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.466830683 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.552288911 seconds)
    (166/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.20650993 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.568970611 seconds)
    (168/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.833822289 seconds)
    (169/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.154217436 seconds)
    (170/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.448509809 seconds)
    (171/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.636819076 seconds)
    (172/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.633138916 seconds)
    (173/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.557290779 seconds)
    (174/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.105037513 seconds)
    (175/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.638012329 seconds)
    (176/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.639687605 seconds)
    (177/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.482225406 seconds)
    (178/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.652138961 seconds)
    (179/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.478452043 seconds)
    (180/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.443059566 seconds)
    (181/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.345175248 seconds)
    (182/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.482135448 seconds)
    (183/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.587116698 seconds)
    (184/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.462935438 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.55355227 seconds)
    (186/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.486223894 seconds)
    (187/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.524810275 seconds)
    (188/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.576181169 seconds)
    (189/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.499416606 seconds)
    (190/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.476389742 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.471489223 seconds)
    (192/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.470946546 seconds)
    (193/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.506982857 seconds)
    (194/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.207365867 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.518555412 seconds)
    (196/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.581048509 seconds)
    (197/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.450131221 seconds)
    (198/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.464995421 seconds)
    (199/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.097893757 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.574983542 seconds)
    (201/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.277557629 seconds)
    (202/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.601222684 seconds)
    (203/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.625314998 seconds)
    (204/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.480729846 seconds)
    (205/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.215998893 seconds)
    (206/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.512789256 seconds)
    (207/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.479937041 seconds)
    (208/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.471548168 seconds)
    (209/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.472751314 seconds)
    (210/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.506367021 seconds)
    (211/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.488566623 seconds)
    (212/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.607516403 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.65728356 seconds)
    (214/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.589125308 seconds)
    (215/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.521556057 seconds)
    (216/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.463401182 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.62152041 seconds)
    (218/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.093926026 seconds)
    (219/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.109262044 seconds)
    (220/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.61091777 seconds)
    (221/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.53559934 seconds)
    (222/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.509367858 seconds)
    (223/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.453123381 seconds)
    (224/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.126607156 seconds)
  done (took 394.946653269 seconds)
done (took 396.292825005 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.509615717 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.643419213 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.462583975 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.46327617 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.50646346 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.454742557 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.505844753 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.471271626 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.474350671 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.474216903 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.454971852 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.47518012 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.476370926 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.503472144 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.576406525 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.471716519 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.464685863 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.470642883 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.511928843 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.530846999 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.507227942 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.5094788 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.484958002 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.462678671 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.510978958 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.511183738 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.470647736 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.468190537 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.471379882 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.513085909 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.456097345 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.471328202 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.523959278 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.520797217 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.508088868 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.472221762 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.508988445 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.647685386 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.508170655 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.505188491 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.47642762 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.523263962 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.476208606 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.476405681 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.522111315 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.485338341 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.513786189 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.589354909 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.45802043 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.46902876 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.514336253 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.532529251 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.477838607 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.46756592 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.468785462 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.587829841 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.472579186 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.51289366 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.474189925 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.510983196 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.581174741 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.515677131 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.5337118 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.515278905 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.47548931 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.482014241 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.471939751 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.535478047 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.47254389 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.507821325 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.509775557 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.476663991 seconds)
done (took 117.384899617 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.584887381 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.459265198 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.590423279 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.459542149 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.617176537 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.601095053 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.46356774 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.452920115 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.450764536 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.237301698 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.451250589 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.450298491 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.447699642 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.446086947 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.567046879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.443054182 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.442279483 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.127330263 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.447835191 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.568871123 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.432961664 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.435513442 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.434878726 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.228301667 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.433786139 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.421144491 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.563748283 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.430813224 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.119543949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.427705208 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.418797542 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.113612337 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.560117119 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.444053996 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.438065006 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.430013278 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.578606653 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.43777625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.537225282 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.537435456 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.554223105 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.461307188 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.415569078 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.417692943 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.420647105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.420495069 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.420828533 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.446505349 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.411036925 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.417922339 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.10482702 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.425934263 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.429209911 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.415000798 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.416191291 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.434705117 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.416260778 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.415900456 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.551863754 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.417135961 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.534555756 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.20743791 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.202684364 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.416074082 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.409746641 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.416676022 seconds)
  done (took 114.696184528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.475322484 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.486614075 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.522791845 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.428361577 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.465915241 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.526278061 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.426984092 seconds)
  done (took 11.64596978 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.41309237 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.413545513 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.45831416 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.470433761 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.409488348 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.617252598 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410252013 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.416195529 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.409675762 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.48178895 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.410410632 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.408638972 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.416502953 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.404447699 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.450859088 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.415032443 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.519228949 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.403707351 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.406971468 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.558636509 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406085188 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.415216939 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.476754652 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.414756357 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.407639794 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.407951469 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.307797547 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407990585 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.407574166 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.406731708 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.407408554 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.503584908 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408579456 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.394747203 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.406232069 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.561331741 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.408382867 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.407553603 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.408531034 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.404473571 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.406003609 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.408718484 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.407227234 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.408448403 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.407783553 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.427135267 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.407972386 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.407581795 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.407284548 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406940685 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.478200465 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40824336 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.408409706 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.407284229 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.480319141 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.417340659 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.407379836 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.407336014 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408857382 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.409139338 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.560448087 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.452113276 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.408160072 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.450884484 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408949402 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409304766 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.408325684 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.408512018 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.495662668 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.409654309 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.453042912 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.41080414 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.624132284 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.429804072 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.410905263 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.406502871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.409358645 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40861177 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.403370329 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.411086556 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.409786245 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.406734884 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.411295499 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.411107362 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.410232518 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.588639373 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.567272047 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.41094822 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.417826519 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.413307385 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.412042646 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.479984696 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.410802383 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.409965095 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457882198 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.522962263 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.483624006 seconds)
  done (took 145.312780438 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.417318903 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.420063317 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.412547927 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.434962417 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.411240443 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.409814251 seconds)
  done (took 9.816212601 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.412062167 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.416855763 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.415058904 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.414577515 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.413831543 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.44360131 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.415478805 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.411396037 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.418208536 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.415277918 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.417169729 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.418064951 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.417278733 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.415696992 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.417001169 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.41727917 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.417509633 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41648044 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.416710772 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.414963663 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.412153958 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.418001088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.416460266 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.412337053 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.421556018 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.41594142 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.432010016 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.417737212 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.415659742 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.420412213 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.438095481 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.418003617 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.414920026 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.416790601 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.421071305 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.414186915 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421801905 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.420719546 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.418670545 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.418811632 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.421406298 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.418024137 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.419387714 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.423152168 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.414942529 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.418434769 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.425150425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.434558203 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.419674832 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.421410097 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.42161978 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.419429601 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.419535919 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.422123974 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.418094693 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43719812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.425769322 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.420628911 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.419712342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.416441463 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.423732345 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.420112793 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.416637774 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.422771896 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.419141543 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.423292537 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.418072895 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.422095333 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.419453634 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.419404739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.42156572 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.420783775 seconds)
  done (took 104.530469886 seconds)
done (took 387.361307063 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.210492853 seconds)
  done (took 4.528854499 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.562927227 seconds)
  done (took 3.884527625 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.564209475 seconds)
  done (took 23.894571501 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.436436277 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.487687855 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.43091274 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.41627305 seconds)
  done (took 11.092669788 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.778747432 seconds)
  done (took 4.098040345 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.416449548 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.416667438 seconds)
  done (took 6.15713375 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.74706804 seconds)
  done (took 4.069731199 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.922953725 seconds)
  done (took 4.253408207 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.437875758 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.435915587 seconds)
  done (took 6.202860475 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.403346152 seconds)
  done (took 3.724402742 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.297723339 seconds)
  done (took 38.620526444 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.420541721 seconds)
  done (took 3.744181966 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.452116834 seconds)
  done (took 3.773180457 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.184102933 seconds)
  done (took 6.505905067 seconds)
done (took 125.868474795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.412025938 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.413289081 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.411766617 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.412661565 seconds)
  done (took 10.97065636 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.475239416 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.477009525 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.476303875 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.475418572 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.475429981 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.475397825 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.467412534 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.449446133 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.476238316 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.47578835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.477490723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.476213188 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.477067932 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.458469089 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.475270229 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.476523605 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.477040323 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.477288947 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.464948195 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.477368988 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.42435462 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.476907191 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.476698495 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.425183273 seconds)
  done (took 36.587763332 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.916118544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.492005664 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.573777916 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.474197007 seconds)
  done (took 7.779788486 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.502583194 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.501753392 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.530383866 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.555098424 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.567285957 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.514872553 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.451870343 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.448435334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.433730283 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.502805291 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.553504582 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.495643528 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.581422351 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.425316126 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.632726573 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.425117726 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.425995196 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.502785151 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.556948478 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.569278059 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.427205414 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.503957733 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.504440427 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.505364028 seconds)
  done (took 37.443563765 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.434538084 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.442792352 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.429616596 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.442845971 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.429445146 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.428955794 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.431231667 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.434686952 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.428081081 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.426830711 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.428877873 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.442224775 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.43261302 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.42895995 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.436761613 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.429541862 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.436162106 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.433412518 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.429372534 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.435691633 seconds)
  done (took 29.98786916 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.41899907 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.420794769 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.772053753 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.677791927 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.421526519 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.420141151 seconds)
  done (took 14.4569101 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.496743181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.660017835 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.423550179 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.800298627 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.886282774 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.42825324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.424995933 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.686120358 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.021339693 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.00311561 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.487851019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.496835028 seconds)
  done (took 21.145001289 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.418233216 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.439440661 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.434157 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.438357428 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.481887693 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.447440288 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.432332773 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.418004547 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.484477532 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.505311833 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.447080938 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.482292774 seconds)
  done (took 22.756757508 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517630873 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423760364 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436969458 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445706872 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426307327 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271565911 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441490654 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174954074 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.453423086 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699799091 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428285503 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52475326 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.679841258 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431063397 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427934535 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.411356342 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656924219 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956550049 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428198225 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431490026 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460826185 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429941211 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430667201 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652840929 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448506294 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425494638 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.723479446 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426484137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725597259 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44296971 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436933985 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426501117 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702439769 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103410908 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548320962 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647765033 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455347277 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427283174 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.415321376 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.457780434 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432125652 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449294626 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438443396 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427072619 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426145233 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429434933 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161391657 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.455560152 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.427565469 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427467141 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701013727 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526531117 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.432762154 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426825441 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495711703 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430529634 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.4372817 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556921406 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0302437 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436067113 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433598206 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.431495459 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427295849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456415084 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073851925 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.458433467 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.434512271 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435167022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429271338 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435297542 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451409583 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428722521 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.454259563 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4289419 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167554267 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460972685 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434417669 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029344283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441143316 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.432723507 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660371227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429713644 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430772935 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.428949531 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431342604 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197835388 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440042242 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.416943054 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475736276 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177208544 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673999094 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473236965 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460730749 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.653621031 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.416222156 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430132102 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.438364567 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435701807 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453509322 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160291509 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451191963 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.437807784 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688222714 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.643178285 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435892124 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.422416367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937991503 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460479347 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.452162375 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435350993 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.656650731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.057954112 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467840549 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440399321 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451627855 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.432289748 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237474548 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444296162 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.536940166 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440991086 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719649524 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.29578742 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435914104 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967920376 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436917117 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432542268 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440485234 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433987749 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432384001 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.642512236 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454279195 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.441404445 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.430396226 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423206201 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.42443067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457165633 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.429716944 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.647734832 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432314893 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705258155 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423612973 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42443434 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425799207 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.648832789 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.429943644 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.763316196 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687060662 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428763167 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432865952 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439055223 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442619912 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526981276 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445098251 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.429893752 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.684190347 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.432530267 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.432368848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438473221 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428837541 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428976884 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.434086344 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439848799 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031700245 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422460279 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432590758 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314939867 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.441598312 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494279576 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434999951 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650242405 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.455063486 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423120528 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.452267118 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.425328189 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653055473 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437529774 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.441357764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509248842 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.917917603 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051874493 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465243921 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.427203515 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.426566378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.427177125 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425104555 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42694055 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427408468 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649534774 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.462474185 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430075098 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04305792 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448823702 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441374516 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.439146924 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440775346 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.436710428 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428045918 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.438211002 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440392726 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435734719 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.441977049 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572817122 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.444205792 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42742648 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.947285922 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435937165 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429537371 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429258915 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463415093 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441669241 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258388718 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710877216 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425386889 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704125338 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.442180951 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.44992371 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.429426745 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428832182 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435983291 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.451536014 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437106844 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.440447955 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442140495 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433779607 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005673533 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186580073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996393096 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458838379 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.436705336 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43379059 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173604887 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452637596 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430109052 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6751564 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179656159 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449508474 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935561195 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.468197608 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24170423 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705966323 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668079387 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43690929 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.432576775 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707148246 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646393175 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46470408 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436103662 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4336203 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.417972147 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006245795 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451135425 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514687905 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174111452 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453363443 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432920627 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.44789884 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.434871661 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861400275 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.456368546 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431648216 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441833957 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.443520031 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259157155 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459006555 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431169353 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074861049 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451970696 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.942453879 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455394738 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658682052 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.466848594 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.437692229 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.433629175 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.433232 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.689923107 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709648745 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439402018 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434002675 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002659491 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.327754172 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.443269469 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434316211 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24508924 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453883562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739266436 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.446144072 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.449675991 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439054511 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434118117 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434203335 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.434068691 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441876407 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409270137 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968827076 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.436573932 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450620874 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446602342 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438187894 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.690769988 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.450850227 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048186444 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683633816 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449372921 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458736924 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.441287697 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443503463 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.42466668 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43579622 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434562257 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504757106 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658424904 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451482429 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.426204627 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.460323123 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647696906 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435848731 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445975362 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689889826 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.459098454 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.437134232 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200196454 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490288189 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.444873002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437294254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435901269 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477687414 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526211475 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662202448 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.472204607 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.448761523 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866982385 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471508645 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438808122 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.453954603 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532734961 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437015478 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.474443633 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.212457973 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054377034 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21211605 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.056084519 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734316073 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442364497 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44683689 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437210333 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600483108 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437052607 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714462025 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439002055 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.440691754 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462534853 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448468476 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448217008 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653152232 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715638941 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438556821 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438616146 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460302294 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.438780754 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449320374 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.650361737 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977139369 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047468904 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446415314 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447478513 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.202059258 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740618624 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439710252 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438924038 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440215201 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.442470315 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.441985256 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.450933284 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440331483 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603623742 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716783837 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140450566 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.475096813 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.470614861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.959173124 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440058995 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.715771611 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440813115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672304128 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079732768 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.198003937 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708114832 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510660187 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669008599 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.463809209 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604651538 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.445726057 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.44094865 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440719059 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441196007 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.441490491 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.450601517 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062987622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728058262 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.447987368 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.446102099 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472644865 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.453325718 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665754645 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221072513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668343504 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452294176 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447952698 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442334089 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065639104 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741046132 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448145983 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.448916447 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696986286 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466647599 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469226628 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.132734636 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.444028237 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047216974 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.419407786 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466381648 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452301823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186318622 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065310442 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.463992033 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000220589 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448841497 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44386787 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724068249 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.451858587 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.453887662 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728452116 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.450643839 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453122632 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676717103 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.080901563 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284612212 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.446984675 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446626884 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.465261261 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444699198 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517700933 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445301194 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.44630358 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.889994269 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468644894 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444967639 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457559768 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.450624575 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45472065 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.449179518 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44651807 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.452695097 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.446941821 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.46990831 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455563661 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57873388 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026276476 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466371633 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.12394329 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.772496421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.700428192 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.453735398 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.436404409 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.451998385 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445542142 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446346135 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447608703 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442707288 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049285396 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.459335182 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.459736488 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.453039077 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.447764156 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657665602 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461660382 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675806806 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47807218 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46665258 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.434818806 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447271964 seconds)
  done (took 1009.515052346 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.463309603 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.48157677 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.475776648 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.500533873 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.459385708 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456598649 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.494019956 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.519235348 seconds)
  done (took 21.199295685 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.444685503 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.451765388 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.444980424 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.454369428 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.45594765 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.944181532 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.479438237 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.452645381 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.465649639 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.445967471 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.4428449 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.436243049 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.453579657 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.451119211 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.440844695 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.454631677 seconds)
  done (took 34.074247793 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.5483477 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.648362035 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.630321762 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.463800239 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.497061701 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.444913115 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.747844847 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.466395856 seconds)
  done (took 27.798216181 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.456764616 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.45557631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.455553466 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.455912066 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.458154551 seconds)
  done (took 8.633193871 seconds)
done (took 1283.671405268 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.457149018 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.455401686 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.454743131 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.455999786 seconds)
  done (took 7.174153572 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.43801112 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.439565697 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.441986439 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.452233062 seconds)
  done (took 10.123641385 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.201441372 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.11472425 seconds)
  done (took 5.666981175 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.988436327 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.987199815 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.985792624 seconds)
  done (took 7.313296373 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.745979022 seconds)
  done (took 3.098336042 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.421268516 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.448018915 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.16190717 seconds)
  done (took 8.383924146 seconds)
done (took 43.110747838 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.448902713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.698193663 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.604817139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.459006225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.606879925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.60468817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.249451675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.459317603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.445892203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.481800599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.452875924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.608712635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.165403265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.69830886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.164228861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.793333176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.608909626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458235469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.44688868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.454574652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.248997723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.458404571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.453894666 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.458971097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.608869373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.594698817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.449834279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.791455117 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.450057937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.453831633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.594732213 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.463437649 seconds)
  done (took 85.291449723 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.449571629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.448845123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.449631253 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.467579388 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.454926353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.466643367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.451546269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.462892251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.464289562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.459845048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.451511021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.452178496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.450539576 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.449472383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.452428534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.449786993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.464068935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.452407617 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.451270641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.466210514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.451929017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.450905196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.451289163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.467391421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.449390937 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.449267137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.467313934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.449471496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.480723275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.450463622 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.451301748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.467628727 seconds)
  done (took 79.959136568 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.459404615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.455008854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.45064441 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.450646497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.484157835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.452053833 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.453615859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.455799046 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.45025416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.469341928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.471580067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.483254636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.453530028 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.4507928 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.451912322 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.451531615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.451454172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.450910506 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.47082967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458042191 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.452266077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.452493647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.473107574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.452005524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.470018947 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.469824394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.452741181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.45641569 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.456858669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.452649889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.453034917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.452688695 seconds)
  done (took 80.025264831 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.736280896 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.463571323 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.466380518 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.458504122 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.466900358 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.462291364 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.457800637 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.743052452 seconds)
  done (took 15.612255524 seconds)
done (took 262.240540696 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.469485389 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.9849093 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.507426757 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.472497529 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.482157353 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.484529536 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.695584751 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.501148943 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.691315426 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.480828505 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.477918026 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.463621623 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.308290039 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.622790214 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.31999454 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.427734168 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.393685684 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.45730694 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.077272286 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.744894229 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.487279361 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.454315081 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.31564531 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.424745207 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.45118156 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.542952279 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.563996268 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.681868166 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.623476723 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.542843748 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.997197049 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.45950692 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.490828078 seconds)
  done (took 67.459397148 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.461316375 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.589811095 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.465209281 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.465912476 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.592994913 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.487348893 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.46130887 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.466629685 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.467079586 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.468264826 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.465387171 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.468598815 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.468534313 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.516779103 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.596193383 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.483257265 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.46116249 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.590125785 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.461372171 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.460304101 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.516524395 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.467259238 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.471495616 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.517567658 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.466079698 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.466400013 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.593039326 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.490977532 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.47050784 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.591357984 seconds)
  done (took 46.309665146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.467825055 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.082202931 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.234117835 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.473517909 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.463493294 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.467897154 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.769196622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.471757743 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.467815272 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.468750333 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.986537631 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.492806481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.497617103 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.259677612 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.469623379 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.468881863 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.4694117 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.465996634 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.094304903 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.477535061 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.791975856 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.472440143 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.771177654 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.47912732 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.489947323 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.465735938 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.470894241 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.312606439 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.488399557 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.98488242 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.345405145 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.771369661 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.243341031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.263213335 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.327509689 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.475767862 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.47137832 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992479582 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.486147579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.467282538 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.771732729 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.469984717 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.243388089 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.164356178 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.485829152 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.471080352 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.331524364 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.009856452 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.74679146 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.476393858 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.266226523 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.473804264 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.471974632 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.469210109 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.727403379 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.469377528 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.467198211 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.343494109 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.496713077 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.773422413 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.474305588 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.468574794 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090864984 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.471078367 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.086259821 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.472493742 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.475585721 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.488474152 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.246897097 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.474433226 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.184576554 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.49165657 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.473161588 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.990335179 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.10714953 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.40401978 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.473388173 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.09300388 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.274973218 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.793498658 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.472989097 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.29170736 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.798017124 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.476341229 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.475940317 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.474609615 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.474478327 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.547533677 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.772402682 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.11153337 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.1746269 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.356128163 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.800237648 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.4816324 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.47156645 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.337146206 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.497661412 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.474967017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.243672789 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.178263081 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.489109066 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.47739821 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.185777725 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.491533604 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.779274821 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.479297692 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.255348172 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.474443514 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.548467949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.47652997 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.477587564 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.495262321 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.777818586 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.479108416 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.476007459 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.162846153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.024650949 seconds)
  done (took 205.613942 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.474924083 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.46619032 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.467892256 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.466318664 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.465252452 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.474128925 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.465501286 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.465806788 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.47103587 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.465944015 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.466535491 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.476130019 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.472117848 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.465818869 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.471957403 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.466634963 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.476984854 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.474913852 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.467322396 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.466067623 seconds)
  done (took 46.7574212 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.477914489 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.067373004 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.057074122 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482037907 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.476661247 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.474222827 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.532805201 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.496947427 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.477787297 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.790560631 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.657214485 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.500707063 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.479409478 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.478740925 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.042286167 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.471919628 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.79358677 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.068263183 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.479502499 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066606461 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.468382132 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.479223122 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.472233229 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.068196607 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.817135327 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.779467904 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.535211182 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.088810126 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.496719141 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.479243056 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067873709 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.479864163 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.475802678 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.069386972 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.497778129 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.493908011 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.479717616 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.536534589 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.555055739 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.811361102 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.483741233 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.78952145 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.49353266 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.659945239 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.482200836 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.47016168 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.077645565 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.499682153 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.469153279 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.482655766 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.485414978 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.051001958 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.497903565 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.050219757 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.503693648 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481000666 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.070990326 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.051879023 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.066584194 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.663083793 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.494663257 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.782729763 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.481214896 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.081484113 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.502669842 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.482322388 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.48333572 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.692917996 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.093455803 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.784458823 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.795797227 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.797234826 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.482823153 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.544449719 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.502838884 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.471759748 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.542465815 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.898222968 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.799992603 seconds)
  done (took 135.442425499 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.760436261 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.59847411 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.900267956 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.099817192 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.515527784 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.602491524 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.596097295 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.742457334 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.476352052 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.553836377 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.160107072 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.572710352 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.230023016 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.571343505 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.595962142 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.641901072 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905483416 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.473678624 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.139456869 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.138297234 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.516652962 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.585180662 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.05312658 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.69319154 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.48498712 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.036373532 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.43582722 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.174297313 seconds)
  done (took 56.628597544 seconds)
done (took 559.569199484 seconds)
SAVING RESULT...
DONE!
