cset: moving following pidspec: 9431
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.316085421 seconds)
loading group "string"... done (took 0.586407927 seconds)
loading group "linalg"... done (took 7.291783605 seconds)
loading group "parallel"... done (took 0.160280176 seconds)
loading group "find"... done (took 1.104482206 seconds)
loading group "tuple"... done (took 1.704858744 seconds)
loading group "dates"... done (took 1.188535221 seconds)
loading group "micro"... done (took 0.22431176 seconds)
loading group "io"... done (took 0.986684704 seconds)
loading group "scalar"... done (took 37.468927305 seconds)
loading group "sparse"... done (took 11.070611044 seconds)
loading group "broadcast"... done (took 0.905805874 seconds)
loading group "union"... done (took 11.897448287 seconds)
loading group "simd"... done (took 4.243646583 seconds)
loading group "random"... done (took 8.517083212 seconds)
loading group "problem"... done (took 1.860863852 seconds)
loading group "array"... done (took 19.766230718 seconds)
loading group "misc"... done (took 1.670001122 seconds)
loading group "sort"... done (took 3.130495493 seconds)
loading group "collection"... done (took 16.563099125 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482997149 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122204235 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113847835 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11757589 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138927121 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11454564 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122166832 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083414448 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.792924449 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142906387 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118037444 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411072682 seconds)
done (took 4.944578176 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172935353 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082259028 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081358098 seconds)
  done (took 1.308372121 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064608275 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121287605 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066330186 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066420496 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066602124 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065511252 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065284008 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068804575 seconds)
  done (took 1.665457655 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072428397 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068394763 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068307722 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067893673 seconds)
  done (took 1.423153304 seconds)
done (took 5.790334856 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760810005 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20027408 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181739172 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394268009 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125985973 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152432162 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644562999 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318509285 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183860795 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080595551 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102312275 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314778616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106549883 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643096924 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079453517 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089561269 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138078752 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436048501 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066743038 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081606709 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088821972 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127511447 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087362855 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073748135 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141677081 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067117752 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129125634 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079664768 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066473632 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206473608 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171615487 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654276504 seconds)
  done (took 10.178313787 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0948225 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09623527 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067494413 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136168294 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.0982686 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070403848 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070356536 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066520239 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086000905 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127200795 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090922225 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103316934 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06662577 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069365583 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08510373 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205000887 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082166644 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08265603 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071596507 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07684 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117309109 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07849434 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077298772 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077150254 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128762809 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181579994 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095428911 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097148798 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068381619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082157241 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115675469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128530297 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066936522 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067518854 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124088008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09574548 seconds)
  done (took 4.627143539 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.942630912 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13891308 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089839112 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166551006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066906028 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10587925 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064998937 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083262783 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.1981744 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.36666261 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0835373 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.565620745 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11032502 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099835639 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067109077 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068138818 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065874261 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.338997614 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124018183 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112562467 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084829012 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075479391 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07000115 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.343443951 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069084681 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067708923 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069184726 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059133679 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112021812 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067032036 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.914627534 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124437338 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066729577 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100433897 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168743163 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089708889 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.265235231 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066295304 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065578965 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148917858 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073522891 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066034417 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083481091 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10281021 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112275224 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068667095 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067074045 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161364525 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066845201 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082882363 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.975429221 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15368033 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094052223 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075576396 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066165606 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244684763 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084948652 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065799443 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06455493 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17815772 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134292537 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064157155 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066804651 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065927987 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066036514 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063475182 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068516513 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348735412 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065873848 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.73667553 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069966851 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078215212 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069047485 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065835553 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072237522 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071936447 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084156473 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066016868 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074531493 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06550567 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065247478 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067403918 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083854537 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358545198 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067791204 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067607779 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064177726 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085691875 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096118286 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07576382 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066625986 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.204962883 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068994271 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067249557 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102348254 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0671941 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083600154 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068976876 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113061097 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066569009 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092216318 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067346125 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097142576 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069138696 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098887911 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08188257 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067716064 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397882656 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064421642 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064414878 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067212398 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067398343 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066987651 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068541518 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078673772 seconds)
  done (took 20.937279533 seconds)
done (took 37.831274123 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.275844118 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074365998 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074073729 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074384761 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074834091 seconds)
  done (took 1.80242742 seconds)
done (took 3.014826645 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118742585 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09783537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064438022 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094698713 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063672387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098541415 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098007061 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079876382 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098948758 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064001145 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095569926 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063528525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064159974 seconds)
  done (took 2.335591102 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08220976 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08257775 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069280405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081585334 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063499886 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081966661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080135564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0878727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080074514 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071131855 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063207081 seconds)
  done (took 2.051754308 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080855021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083050719 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068861807 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081161416 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063057601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080676628 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080332362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084410058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080320094 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072226437 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063633504 seconds)
  done (took 2.041710782 seconds)
done (took 7.633363727 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076693756 seconds)
  done (took 1.272655122 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581112648 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.028994453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08051694 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110879046 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182493825 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118064947 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275426454 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086064472 seconds)
  done (took 8.839311731 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101286682 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070467318 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068039246 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072002418 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070535865 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068080851 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067955299 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067786503 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070717729 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071132929 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068920775 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068398752 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068793087 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068825647 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070007653 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069919657 seconds)
  done (took 2.410001341 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090979213 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089717557 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072872745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074028081 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071189589 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071418476 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073348956 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072636253 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070236359 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071266493 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074218704 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072705483 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071007844 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064529606 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072971427 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074732376 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070150443 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073312563 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074406003 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074596754 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073808403 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063809412 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070889883 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073046238 seconds)
  done (took 3.064066721 seconds)
done (took 16.790828533 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111247166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07131786 seconds)
  done (took 1.386578636 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081302492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082150835 seconds)
  done (took 1.374873223 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080781855 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065418335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088879481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077114734 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065604836 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065258772 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086165974 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06564834 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065209914 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0657238 seconds)
  done (took 1.93780109 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068019709 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077488358 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070391662 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080955453 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073148939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063396756 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072347841 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067180848 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077021935 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062029253 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070046553 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081340542 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070275204 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082845072 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071632189 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067223511 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069755544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066611335 seconds)
  done (took 2.506022095 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065362151 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067253788 seconds)
  done (took 1.350432559 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06586637 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063690813 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066005363 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065503192 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062974414 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061975927 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062689213 seconds)
  done (took 1.663013175 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381853559 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109735995 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292391475 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070501829 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080831212 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248241236 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064886685 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069417532 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069754046 seconds)
  done (took 2.644180463 seconds)
done (took 14.082484554 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078493927 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084724628 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093712599 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.342200381 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090944049 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065323065 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113168865 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188537824 seconds)
done (took 2.286640422 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210096283 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608145107 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.377815361 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193792493 seconds)
  done (took 2.398552834 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323487072 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085799693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059286789 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066097619 seconds)
  done (took 1.762878585 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065325403 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068034127 seconds)
  done (took 1.358033032 seconds)
done (took 6.955582083 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065353389 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082325721 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065114704 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063140691 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065066246 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062934161 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063106715 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065130399 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065325081 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065238605 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067658761 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065108569 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065394226 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063224942 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063132853 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062816633 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064952174 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062706095 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062820933 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065626472 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065200509 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064863095 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062885187 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062791081 seconds)
  done (took 2.821382675 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082888173 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065848899 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070985861 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07077558 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069274465 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070652628 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070261786 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065788574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070718015 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067820218 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068879921 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069132756 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067790389 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069440419 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067376228 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069166958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070824986 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067488151 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067753504 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069635482 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070327359 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065676568 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069620786 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070224637 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068845774 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068977038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067310062 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065862247 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070505347 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068866038 seconds)
  done (took 3.312683351 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068931752 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062456472 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063313941 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070627177 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063156875 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064265193 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062626878 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063576796 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063575637 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062757807 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064070752 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06264333 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063418594 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063738235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064078872 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06668565 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07825589 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063381169 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062946471 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06370249 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066677662 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062974845 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063037573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062777774 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062775135 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062631209 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063321598 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062675034 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063811569 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062926852 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06602415 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066342636 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06284511 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069405802 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066506906 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06270285 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067017801 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062575242 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063395064 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063188205 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062358259 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062601462 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063302387 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069581968 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063028019 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064207709 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063089943 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.175903098 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063679899 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065279761 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062195314 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062681497 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064593076 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064519367 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066379479 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062424792 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063417158 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062118993 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063174624 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062289797 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062306425 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062199382 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064824439 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063004474 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077053145 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068871143 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06231886 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064582262 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063679109 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065012552 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064294975 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075856388 seconds)
  done (took 5.998599943 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089363747 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086578844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064654446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06428009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061284391 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06319688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066806239 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063211632 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06448688 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068778371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063833441 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064324927 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064634638 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07559005 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063309702 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0649452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068941453 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061294672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063159357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06651361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063922533 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06671564 seconds)
  done (took 2.728477891 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15292577 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068988093 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104213913 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072163993 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066593675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071998222 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068808031 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068871866 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069115203 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067691247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067560756 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069313624 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067003599 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067192483 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067208835 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06717426 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069410259 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067432886 seconds)
  done (took 2.595381382 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07609016 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065828372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085699954 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065518062 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065334491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067569639 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069787193 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07336283 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067333983 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065175849 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073425174 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067607789 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067649106 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065135862 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067547646 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065260852 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06740398 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065372753 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073334338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069580558 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069997774 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073521594 seconds)
  done (took 2.770710602 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079123048 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067733242 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0820646 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068361753 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061949011 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063542201 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069321414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065222343 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06936363 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067016499 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065139617 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063232369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068354447 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065104132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068794919 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065136024 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066678405 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065096806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06676329 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061438492 seconds)
  done (took 2.594413858 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086465883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067542618 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067317107 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075327257 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066756792 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066979219 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074505841 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066641303 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066647473 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08615324 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066549626 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066403624 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074254045 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071369758 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066658318 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074662829 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074214787 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074029898 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066400611 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066448622 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086570992 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066705038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073981294 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066291512 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066352177 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066231659 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066789974 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071435583 seconds)
  done (took 3.236111082 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066081267 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064700836 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062908347 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062440171 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062701582 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063771622 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062790731 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062993046 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065136215 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062920513 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065383306 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06543013 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065380362 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064842875 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06521629 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064970136 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065182467 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062971348 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062882482 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062965312 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064996935 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065323042 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065282157 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062746466 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062679966 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065163789 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062384876 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062613217 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06487729 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062951081 seconds)
  done (took 3.16990937 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07465729 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072356789 seconds)
  done (took 1.397589989 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062347712 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07930084 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063085954 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06968945 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069974119 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066054045 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072700202 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068921191 seconds)
  done (took 1.799466148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080984954 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077024358 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067345201 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080039813 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075714567 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082415902 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131543715 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066329319 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072660856 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063661635 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078842408 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065213138 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071215239 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065818062 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071003786 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071819739 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063178701 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071239532 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067675395 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063837123 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066699858 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074152016 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068218771 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061566795 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067062571 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087195623 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076525796 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065303544 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068362304 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072749543 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071155227 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059493775 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065139561 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065476344 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06331231 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074958007 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079737866 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068073259 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07400816 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066195278 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075658398 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060603052 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069738845 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072289929 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075362577 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065611983 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065928787 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06055448 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063339072 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067569816 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061012086 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065830418 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060790153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075100949 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069143183 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075793776 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064499481 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066810925 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068650907 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069109634 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07252309 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068000663 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068071281 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065577612 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07244038 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070110939 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074814256 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060966515 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060165132 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063765875 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074936553 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087289741 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071871778 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066178234 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066351085 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063581787 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068523866 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066405653 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070989795 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071565728 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065590327 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070958532 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072655016 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065553757 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067986741 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073447476 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063892016 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068167283 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06379082 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081357562 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064049206 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063586586 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06357828 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075429038 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068905289 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06511163 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063093091 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07229183 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059951226 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065932309 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066450801 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066290397 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074985501 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068431922 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068794583 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072838025 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071343965 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064422506 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067171611 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06108506 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065106453 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063627553 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071121257 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058588095 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067107335 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06566677 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064551779 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197458456 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064791988 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066472629 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073576993 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071810249 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065135734 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063308408 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069195335 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065556292 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069177325 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073940968 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064400585 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060950225 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061225333 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069730355 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066268869 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069402758 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071027848 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068682049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060537394 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063876185 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071224828 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074612773 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066331119 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067207204 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071808549 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067399883 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065550486 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072410165 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068157318 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06513304 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07151413 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067129345 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06122874 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068716364 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068218772 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064439615 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069916159 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068794191 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068237666 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067002834 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064965514 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072844455 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066356104 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065426109 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066579271 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064097929 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076995045 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068266991 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061184846 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063043515 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075154167 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064289914 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065091469 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064802125 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068140221 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066534627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063950768 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065328676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067569673 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076729795 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069823956 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06624275 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071239732 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076522046 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065687714 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067979496 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065011022 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066818858 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066672404 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073990714 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071231503 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070242097 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068148632 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0626637 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070989433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073038109 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065106908 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063707396 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064942503 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069991991 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071245787 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069834766 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066329999 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06378898 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066549942 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06857552 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068724365 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065192512 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064871445 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072167755 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063746898 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072465908 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066367001 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075377668 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068723902 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060640639 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068495463 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063864935 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071238392 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061288398 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063729209 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064732264 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066172465 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064185876 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068062872 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05972068 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072372591 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072733086 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064595566 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064870914 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064059878 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070914402 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065962885 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068084412 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068053978 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070151565 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074488434 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064224835 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0675947 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074150519 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064385081 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188217927 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071548529 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065001291 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065086007 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065767022 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064385711 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069615604 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076053412 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072650341 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06012182 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068430588 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064672315 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065483805 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061817399 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070786877 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069607951 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067309261 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073171532 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066547565 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066727863 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069771734 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065290434 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067208917 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066830519 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069156555 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066796483 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068117176 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065658123 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069324953 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065226551 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064526643 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068257759 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06626584 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066532739 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07155728 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066016166 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06694662 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069221654 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066952068 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067252101 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067163783 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065331363 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068916842 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067809696 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066395347 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068346573 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061444789 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073441601 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066345421 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073469996 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066560201 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062195115 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072979926 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068197504 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072087912 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06656149 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067197963 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067501677 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06570644 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068815622 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072861291 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064541197 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076522758 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074104114 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067038479 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068404887 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066523803 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067499646 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06543652 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066940241 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066364195 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067013275 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065697918 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07068353 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068978697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065699362 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0670362 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066524832 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065731719 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066392217 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060048899 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065101946 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064916145 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065020506 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074591346 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066222055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06504113 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06437615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066496159 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06459807 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063147008 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07381267 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074928138 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0665043 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072929063 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065164266 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067390673 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076184063 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060336354 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063993714 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063497579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063756195 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073110745 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066521397 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074940402 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065833309 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065069706 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062795518 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06611268 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063966346 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059770921 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062668244 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068040624 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063393373 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063140844 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064257009 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066846375 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064795776 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07307059 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063888616 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064995417 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064223966 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061357097 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063733161 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063478117 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199829971 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067355801 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06525473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063679905 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066098837 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067056724 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067291344 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066111204 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067348371 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075697125 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066227299 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068814321 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069561715 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062146392 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069414164 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066383583 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065863918 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065281919 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070049582 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069740078 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067303006 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075070425 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066480997 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066715766 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066394008 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063723087 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065426348 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065549848 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066374407 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065877607 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068416735 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07410713 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064379573 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069203577 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066571034 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06698944 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072965498 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06783057 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0697533 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072818725 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06675429 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068035754 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074216322 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070087842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069107472 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067426606 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068610557 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071950478 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064969624 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073327503 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067175953 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067505819 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068014255 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064124166 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066624044 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066041202 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065827863 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072297833 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066833809 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065294127 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065295957 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064641513 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067141925 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069697983 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073445307 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068723423 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068468979 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06196374 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063036966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06715919 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064357327 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068287161 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068649264 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071685353 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067704017 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066669788 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064916108 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075196021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071620677 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.06960883 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064151231 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069734843 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066837873 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067995704 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06720287 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066465197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066817109 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070092592 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067561596 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065959056 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072939525 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069259333 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066719545 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067914519 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067626575 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066438852 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061188222 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066657551 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067786478 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071472683 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06795048 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06612891 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076780036 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063931625 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06655096 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069317376 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06563969 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070392204 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061148251 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067472402 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066166162 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065950498 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060264742 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06417772 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062910697 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066712634 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063596122 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059740125 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074799369 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073080411 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067315079 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063887942 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062968869 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059643005 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059398291 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195136589 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067722994 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068228296 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076651343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065919637 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065118722 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061752605 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066572882 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068961284 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069637271 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06353212 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061441087 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065572414 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070117938 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071730491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065118909 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065577267 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069852458 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068443223 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064386225 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069399738 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063464368 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070175708 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078671164 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066743583 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067308664 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07310446 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073698756 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066889285 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062149682 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067034222 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069784038 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066785894 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067084503 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067407942 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081852431 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069792213 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065868137 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065519362 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068742402 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065489716 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074809042 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066949106 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066602583 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070563888 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068689476 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074945399 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068997242 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074518082 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069551169 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06885923 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066395728 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066976818 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064195025 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065725811 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06729089 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067332416 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071251679 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074806507 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065952812 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076259645 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075542765 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068171906 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063551951 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065848717 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065700102 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061678312 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066988511 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064591871 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063969792 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064175618 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065093828 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067165199 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070874702 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067157103 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066460437 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065452966 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060242188 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068137418 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067829596 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06636322 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062489085 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065644402 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066361947 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069713542 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06871737 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063486206 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067462997 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067176336 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066672103 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060894834 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071973041 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064495951 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067325631 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065199368 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06596098 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066486821 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068953138 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070227602 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066975357 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068146906 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069344288 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067772817 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063119587 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063194296 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071264661 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063773079 seconds)
  done (took 42.206371294 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099243748 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062875685 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061718599 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060810316 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073132293 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062498068 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061150094 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062496046 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062669799 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064601639 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061483385 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061214288 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070287243 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077018596 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073159966 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065987398 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061321442 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062714739 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061363373 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062258823 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070618842 seconds)
  done (took 2.741969865 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073459454 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069103651 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071826987 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075403394 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066525109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070250734 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071806633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069688945 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074901644 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066307772 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075082151 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069529814 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066123556 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066575694 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075043174 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070073384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074876765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066944804 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069691368 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072048411 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069983999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07137516 seconds)
  done (took 2.877787165 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066641378 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065381229 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067216975 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060487367 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064936685 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061015364 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068590316 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062826958 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068512324 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064678394 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064612028 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0646417 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067080718 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060918179 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06508808 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063223362 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107451769 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068986896 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064965165 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066016778 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060875316 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06705804 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06097968 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061075041 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064687791 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068086171 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065850659 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063260652 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065113753 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06422352 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064901958 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063010912 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066699341 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0653774 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064190751 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064435357 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064552937 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064948981 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06057791 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063068432 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065607704 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060895758 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065196672 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066107348 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063112726 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063267466 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066621585 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064940963 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060120099 seconds)
  done (took 4.526276637 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078900767 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106829985 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067139641 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08696346 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079600729 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074530359 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068800535 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088013181 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062830862 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063583561 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080393024 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078575892 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065499607 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069806333 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071461557 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064775196 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065890676 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063904843 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069255823 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064426138 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068951727 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07115102 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079055658 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078098726 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068581338 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063964894 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064280388 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069172002 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077016389 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069078231 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070029823 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070282641 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079899831 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070281247 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06455961 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066921338 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079980675 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065027793 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06728491 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063008468 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066842376 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069145235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071209927 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080801166 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064964533 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069934516 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064375427 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062047105 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077089197 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066813849 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072266343 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079002767 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068615872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064973591 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069304527 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07933532 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06452273 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06324675 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067316034 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076456141 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062540205 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06838495 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077879363 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066434353 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071505179 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07830891 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069655201 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068536858 seconds)
  done (took 6.299517132 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074009554 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071911773 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080362326 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079080533 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071277285 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071313953 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071167673 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071279247 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071412073 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076046834 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071470474 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091737567 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066706322 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074160303 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071425946 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071437861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071906925 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071394257 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071460803 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071419174 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071415484 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07883501 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073889144 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079325876 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097064288 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066505317 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070818002 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071135959 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078936037 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071704617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078412326 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071363289 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071016968 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079068035 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078378657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07076525 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06413615 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071017187 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07125384 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071127893 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066598545 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07898331 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071174934 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066474761 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071334131 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070695524 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078640266 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078132651 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073524308 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075607003 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071246913 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078627477 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070712664 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071404007 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078755975 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102803534 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078433165 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078636823 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070980556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078737842 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07861901 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084724975 seconds)
  done (took 5.978931511 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083372798 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07352253 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075182143 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060819494 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063136836 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068935338 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063366957 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063300295 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073187694 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073527445 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075676115 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06880347 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071590046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076115545 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068735726 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071828292 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06892126 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06873538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073477343 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068971645 seconds)
  done (took 2.761062267 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073380326 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081622871 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06596748 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071303187 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068208397 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07052181 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067192061 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068136283 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065896704 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068056391 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075187594 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074857191 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066076315 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070654396 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074590605 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070724353 seconds)
  done (took 2.474309061 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073797548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07062347 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078471557 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065403047 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063527769 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062292207 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066167195 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060727957 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061670698 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077111783 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065268199 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067310055 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064930457 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063613296 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061972658 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067728885 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061369059 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062494354 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065137225 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077285656 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075617339 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063596008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065476712 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064941475 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064977773 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07009779 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064519002 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062719839 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062509244 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065445085 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065593344 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068297004 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062158468 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063187601 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063727127 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062479168 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064762739 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06527854 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06749717 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064716807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062866795 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064498382 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06454088 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065467427 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061204959 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065055539 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061362021 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066657091 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062767154 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064858273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064547649 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067089965 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065594017 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071816371 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067638508 seconds)
  done (took 4.963036463 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077787799 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068358982 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06118455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063546496 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068434689 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067094996 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068446895 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067078094 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067181811 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062885507 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066598438 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067728523 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066543217 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068357871 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066685152 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068817254 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06094615 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06646756 seconds)
  done (took 2.558173403 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070216474 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065845251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071559408 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064949709 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064655501 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067256226 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061315911 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063782926 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063824182 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064749076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065119233 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067601436 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063789283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067335618 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06482111 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064793817 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067048633 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063870126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065007728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061683336 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06688504 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06382374 seconds)
  done (took 2.787486607 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07247243 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091648864 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136190103 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082654522 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08014009 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077333785 seconds)
  done (took 1.888734306 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089910994 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078665956 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066430991 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087232993 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072304719 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06669013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066476186 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066971132 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0749297 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07511054 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066393856 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074816653 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074798426 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074368567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072066499 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071766102 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066541584 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06632532 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065336507 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083240303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066548256 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074772846 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066492641 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066225659 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066516796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074433387 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074635107 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074884625 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066130435 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074605405 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071713392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06645623 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075246493 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074721928 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068175423 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074927851 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066571675 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082848898 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072054829 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074472941 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068059333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072755936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07495378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071141784 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075132086 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06740326 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071515602 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066910734 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067028151 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084945314 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072635573 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074106778 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072754277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075383001 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075595132 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085203719 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075309492 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074323181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072705519 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077960951 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075003514 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072545277 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074369034 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075744496 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072672778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074842358 seconds)
  done (took 6.16472705 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080476668 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085386193 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067442079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075332155 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075229046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066698124 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066934445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067127955 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066746732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066480839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107124609 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067118541 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075153308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074793359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067056732 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067003115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066879512 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074628404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06673663 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085279606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066874757 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074362152 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074659311 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074462272 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075564065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072525169 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066867268 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066800609 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067973595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066867906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071716019 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067249725 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074653385 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066586676 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074713525 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066964265 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066923314 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071424116 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066688356 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072486425 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074614067 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083187087 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067141325 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066722082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075725383 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066949378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067079901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066846238 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066874017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067014154 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075565139 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075235841 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075146793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074375321 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067012576 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066852234 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066721027 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066667019 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066741094 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072147172 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074191276 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066835471 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085045023 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066358101 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066884425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074519448 seconds)
  done (took 6.085129328 seconds)
done (took 127.962284097 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183046733 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168348556 seconds)
  done (took 1.695560094 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06731109 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095352437 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076316496 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127079591 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066776476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098862215 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097573422 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077513381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065665579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065649706 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065841679 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067030181 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13040639 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066122087 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065294588 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067372074 seconds)
  done (took 2.657196847 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095928716 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156946735 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098389697 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064819278 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096293166 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072097496 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064067941 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074736962 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070340291 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064535718 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072655514 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069964133 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064370492 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07001434 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070128789 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072560688 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064255468 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072428485 seconds)
  done (took 2.773854833 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099856996 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089962161 seconds)
  done (took 1.548676179 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154333008 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104311322 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149251745 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.3431508 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.170674121 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228885961 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12640754 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126749658 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115809619 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122653647 seconds)
  done (took 2.99740037 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09719684 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149985396 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253880012 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114448683 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071333245 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093437929 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115948695 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076910727 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080482626 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079743246 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079663846 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075494092 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097800858 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072564373 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072805872 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075180932 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101464918 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07189915 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072986969 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075777173 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098637319 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065141694 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072909274 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072262836 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076889521 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076680101 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065493709 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065127484 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076359145 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072816229 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075845372 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091791415 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077937724 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105658415 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069276876 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107401138 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075475818 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073235692 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072643036 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073508128 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078202976 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077923777 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071530246 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075059832 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064699881 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075628572 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064607114 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064691127 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07685399 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065856319 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07700797 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076543822 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105561113 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065954666 seconds)
  done (took 5.921589249 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100575568 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103746929 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071035957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107339784 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096797558 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070764993 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099492538 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090335018 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101430871 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092247475 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087558027 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070063318 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080885117 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082042778 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108044434 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100567176 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094678969 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070191044 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10010527 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101282027 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068342392 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093718528 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090123247 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100233149 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066982608 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07008199 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067406492 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070148475 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07562806 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07699097 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069332768 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100536542 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083499796 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077289459 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066507735 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067547926 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067785468 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078359418 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095718003 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077598278 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07637691 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066801909 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067553594 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070627613 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089785341 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067040097 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077350799 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078852111 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077956542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068936651 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069618718 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067336625 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069331845 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078912427 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076553429 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079468175 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079300356 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068123124 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067804106 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071212085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079921789 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077693748 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0778377 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091648301 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078333194 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068207075 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079043324 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083823641 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067907603 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069482374 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067753243 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069113279 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069018535 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076612559 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076925904 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06975814 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069563377 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068157515 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079148645 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077357728 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067977792 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075917622 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066829322 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068325801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069635295 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06990036 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076596805 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078684722 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070105394 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067581075 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06895491 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068226241 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06624655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074306742 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077401323 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075986811 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076215384 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067746599 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076459935 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076409827 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068646108 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076486574 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06709807 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199853978 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070519449 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078117248 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077128403 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078778398 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070403252 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068654445 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078253387 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080109615 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068846687 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077451218 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080832591 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079495449 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067823617 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080761072 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068505525 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080383043 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070282066 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079545809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068870681 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078163776 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068161771 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067740209 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068637353 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07924449 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069943425 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068262277 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070155774 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070165357 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078953181 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082457941 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070430503 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080028155 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077287568 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070824871 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077480353 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068702799 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078848915 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070082867 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069719243 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067670255 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082018429 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067788509 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068390374 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070063581 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079866928 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06837636 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07965232 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077100074 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067334982 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080940088 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080239116 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075819357 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079598387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070326572 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068352077 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068295267 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069644666 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077301442 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079599306 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07057749 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068734962 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077212657 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078881624 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066910421 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077293746 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077205958 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07768588 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067876333 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069644877 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079292316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080008705 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077166166 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077077406 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07698001 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068133365 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076296098 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076885241 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067523648 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082941209 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067620071 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081020683 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077843788 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075462444 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077827141 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079418057 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079351355 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079297356 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081782365 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067125877 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067419211 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078348938 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067966978 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069119945 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076339419 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069187983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068487904 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080573717 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067083563 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077027527 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065951465 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076073216 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06544285 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068462421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08023761 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066756811 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201271022 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078949315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07050188 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07788689 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081497374 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078663237 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068348295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070152257 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078951989 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078187144 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068378493 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069196714 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070904819 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078191915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076942313 seconds)
  done (took 18.615222584 seconds)
done (took 37.577954821 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208271168 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149859056 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202162952 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117048156 seconds)
  done (took 2.135724542 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120025293 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100255535 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094247891 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064657441 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100465502 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064273704 seconds)
  done (took 1.940337503 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311760444 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216278423 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180416412 seconds)
  done (took 2.101933163 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195505561 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185247245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39179833 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250183905 seconds)
  done (took 2.521818964 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142213924 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088819864 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066506048 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082295786 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132540503 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159125784 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099979326 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124705061 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077047867 seconds)
  done (took 2.419175487 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142947329 seconds)
done (took 12.657812539 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.107045353 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074523335 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075472786 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.117890225 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090408985 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.223573848 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080998808 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.145473101 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081183606 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126774461 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076394794 seconds)
    (12/309) benchmarking ("sort", Float64, false)...
    done (took 0.123956354 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072970249 seconds)
    (14/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.199829551 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185971013 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195177904 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182980115 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.18641466 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07101155 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098068383 seconds)
    (21/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.156075313 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071573482 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100151769 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.138898067 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.0903599 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110025716 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207650999 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072047258 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122240128 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071195576 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.194826213 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091875749 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076413767 seconds)
    (34/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.145338986 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071530644 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.195162691 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19337647 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161040633 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165549594 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.150208615 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073283324 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072422761 seconds)
    (43/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205995067 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.191837205 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072116664 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090321591 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085925952 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103074527 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176350994 seconds)
    (50/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.193204083 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.19448502 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066375379 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094406318 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094178471 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072362372 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157240352 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.0742029 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097164345 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.173186148 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.107255828 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.19399616 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135951229 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063883181 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079982787 seconds)
    (65/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068129506 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050597836 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050460867 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166597511 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074295329 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 0.064892769 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07762502 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065658065 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051411917 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181949099 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149039769 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070674635 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.217958468 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071546288 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103425696 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075416493 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186125175 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.18771656 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052453734 seconds)
    (84/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.159679804 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.1871854 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0511336 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10676894 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051176116 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062044387 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152701903 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068739724 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071599963 seconds)
    (93/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073066989 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.196694603 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053248853 seconds)
    (96/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069526379 seconds)
    (97/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098581207 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08820333 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136223511 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06560507 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09663958 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091709964 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097365893 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072996037 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07531949 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121689026 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073055073 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066556333 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134014634 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.364301802 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 0.132986334 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073511611 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108312407 seconds)
    (114/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071561804 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074867299 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073215517 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070153062 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065399038 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090297619 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105687194 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050430937 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050855203 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13887354 seconds)
    (124/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071187045 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051866192 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067517155 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109330174 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066139915 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087798856 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074560329 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074450763 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086960252 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064127175 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07172159 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170048078 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131725089 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052935643 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137314109 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050527395 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080146118 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064680017 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088264686 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072976467 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109619393 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077858686 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081426051 seconds)
    (147/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051362571 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05066987 seconds)
    (149/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064397328 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073833553 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067323578 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070054417 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065360486 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090438568 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107427997 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051753504 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061672847 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066750678 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064603503 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050402291 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 0.125510067 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069373504 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060156779 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051995374 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149386012 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076059615 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076658967 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070570347 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070956686 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05202088 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074187879 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131540717 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186437224 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067148445 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070834422 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 0.136599284 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145602361 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052988522 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063765332 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072023847 seconds)
    (181/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051410898 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050355732 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08741618 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070849002 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069317433 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071533691 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07047799 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063721601 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.255894767 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051672823 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065157228 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062792809 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064718776 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065488087 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064193613 seconds)
    (196/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06820773 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051302355 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067515767 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158598587 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090064623 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051155565 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052868551 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065341402 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060726227 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094659979 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052694222 seconds)
    (207/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108000449 seconds)
    (208/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05261322 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074516026 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088120901 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071944153 seconds)
    (212/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098547408 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062050388 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051172896 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077797372 seconds)
    (216/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113346021 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066583552 seconds)
    (218/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062791891 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051599167 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063687684 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073764883 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169378821 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070667419 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06609316 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088736061 seconds)
    (226/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062159249 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067951592 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066273357 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077624554 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063931613 seconds)
    (231/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149219996 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050830855 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05139497 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165213454 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051987785 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131949951 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051316304 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089031678 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092458692 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05079113 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051319757 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05210254 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066623859 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064727057 seconds)
    (245/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059872843 seconds)
    (246/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070616727 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085271242 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067695705 seconds)
    (249/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051861805 seconds)
    (250/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051203345 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065616652 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085980913 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085556885 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051441519 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050488668 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064441125 seconds)
    (257/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117103075 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074256933 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075133263 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072153321 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173544088 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071696476 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064811954 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071861798 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065638824 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070645449 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064581903 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110259106 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050723824 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050431864 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072436568 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050881958 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053773343 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099365876 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09068013 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116169994 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066133036 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064046535 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131465403 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094217418 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063482253 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071760493 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063255978 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085080644 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070059608 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051211519 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092305381 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063207117 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085422649 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050922039 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064729206 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072069645 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085114775 seconds)
    (294/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068833041 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08679888 seconds)
    (296/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070670748 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131582071 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064742445 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.06983859 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050590689 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06589881 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071084316 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052180617 seconds)
    (304/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051283344 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065167712 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06473666 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064917084 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069614365 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062972954 seconds)
  done (took 30.224231945 seconds)
done (took 31.631172462 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084899251 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09247832 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075511141 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093020508 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080478797 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076616703 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072376669 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078210638 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079553983 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08157495 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078178872 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054690978 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07400266 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07360836 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0744334 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090722573 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078258913 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072650294 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072621803 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064670324 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072866231 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065751557 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066877886 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054688464 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077318301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071430579 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072329162 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073829313 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065726921 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065524906 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068837763 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072840831 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065466591 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077587763 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071803244 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073056638 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074259131 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076177206 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066988807 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065594313 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074009445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065690696 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072364543 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07328775 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071938124 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071049417 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072794828 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077679989 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09098478 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067967102 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073801974 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075453754 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075712836 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072385479 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068936702 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072515161 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070919227 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091054495 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072973998 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067901484 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073637836 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073314708 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070785096 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072413431 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072632884 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074836844 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074888397 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070852923 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074393124 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070605837 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064990772 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072656445 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06882772 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065402697 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075120913 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076500899 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064000876 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070893329 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071849479 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070840887 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064644483 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067020311 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066693366 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071331655 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067223407 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054595923 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068625281 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070903689 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064346663 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072745651 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0710919 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071637774 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066602573 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075254084 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06417301 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069850499 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064950472 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065078676 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066604922 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068796187 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064828217 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067020257 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073644927 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066266956 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070680806 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078648942 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064839691 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070841675 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064230285 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06398185 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078947713 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073947419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065337153 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067428886 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064353153 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072206043 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063824854 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065248391 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064439021 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064784588 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070295048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063914938 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065480816 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070184125 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076116018 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063577892 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066511134 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065570489 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063503807 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068778737 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063722227 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063840991 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201345651 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061799044 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068096363 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065755645 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072958722 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067544623 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073061296 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067141492 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073343592 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070138633 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071348147 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070859971 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063945004 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058761327 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068378341 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068098317 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067110643 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065779597 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06690947 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066423838 seconds)
done (took 12.39617949 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066461108 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143613584 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098320763 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094377186 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085238689 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066239765 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075755184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100856673 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067709902 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102403034 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087076578 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084512329 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112038984 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064370077 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065464165 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069244734 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066929759 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081188198 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100360176 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086104483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108222793 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065076224 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093844264 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089638079 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086606073 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10108181 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066743048 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069890139 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068980976 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090473905 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086087177 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069610917 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066557084 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099520201 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091919585 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082512469 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066092746 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081869197 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065908458 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066033611 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080252589 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097247678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079291301 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079433929 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06921781 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068589932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066525254 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08299144 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088200516 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077983472 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086223688 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102183905 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068044166 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065525659 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064370601 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084721683 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065330293 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068414944 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066361207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067700899 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065607847 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068685878 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080165504 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085967121 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.0689103 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079452239 seconds)
  done (took 6.776370583 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082727191 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090220971 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08255808 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083550856 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066084171 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066090199 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066175401 seconds)
  done (took 2.032074104 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067073753 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087535021 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088222108 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08835257 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084223259 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086623644 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075520678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066243214 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080176824 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067355691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08732812 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101362683 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067129667 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072574221 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090161718 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066301037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091176903 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066543461 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068948562 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090166908 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067927163 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082294869 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069518812 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066595047 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079902855 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066869861 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112517374 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070188844 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067477018 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069020657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06431048 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105680573 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079705139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075196164 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066520713 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08011064 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079982507 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064301417 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081520235 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070746541 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079550167 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066104492 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066930303 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064195398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069735245 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076116833 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0665216 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065920669 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068137254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085578053 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066628595 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079169023 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069978327 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06829989 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.0673546 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069442085 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075126519 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06624994 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085138146 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067125512 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08229498 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081997213 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079234598 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081873384 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068209459 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078997806 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079176267 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068204751 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067602828 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068842895 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081607732 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064284398 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06721931 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076170623 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06743401 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088276754 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08843225 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067569952 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07472881 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066442425 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066053799 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065912996 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088223318 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068370296 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065626589 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070116417 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068816969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064133145 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064947345 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069492269 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064008116 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067310677 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068754074 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069303488 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069071755 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082260032 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068357929 seconds)
  done (took 8.701253701 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068708351 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067539183 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06909167 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066786613 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067625713 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067172549 seconds)
  done (took 1.925742692 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093617152 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068760465 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080237919 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072060492 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103584881 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086113169 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086854303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078385455 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083060723 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077996558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086135832 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087496034 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0917649 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071853257 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08582982 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071757933 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086113695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075237984 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077678953 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072394155 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086236242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072389033 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072933165 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080872177 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075352041 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071911069 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067247776 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078037335 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077772967 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077705224 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071583626 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074950184 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069550907 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078308185 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085970462 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069710065 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071498087 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076542801 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071867083 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074989602 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087221097 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072437401 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073760646 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076313252 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077935811 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069704448 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076399865 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075394863 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085658941 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076364741 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07638695 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070943367 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074239668 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076094846 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069533298 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077459211 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076295174 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085501542 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071877844 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069521936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068796302 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074700208 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076884683 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074215471 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078005841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076108153 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069688022 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071622898 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072609514 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070835377 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076400579 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068298112 seconds)
  done (took 7.036520386 seconds)
done (took 27.956384167 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54081663 seconds)
  done (took 2.027705024 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61674177 seconds)
  done (took 2.127694285 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.790179771 seconds)
  done (took 8.29290256 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.380247309 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466516187 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.711043319 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130090315 seconds)
  done (took 3.231512368 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674040785 seconds)
  done (took 2.186473294 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207938811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19537701 seconds)
  done (took 1.928241269 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377376093 seconds)
  done (took 1.882205668 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104359423 seconds)
  done (took 2.611383606 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260845381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162269075 seconds)
  done (took 1.932281127 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456760291 seconds)
  done (took 1.964154618 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.854874817 seconds)
  done (took 6.36522693 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203909242 seconds)
  done (took 1.763844308 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239359472 seconds)
  done (took 1.749511955 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.701507343 seconds)
  done (took 3.211203557 seconds)
done (took 42.790551409 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080449359 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08128768 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080959301 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077419223 seconds)
  done (took 1.818490478 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076281913 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072420515 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075867436 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072415034 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076329513 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072725949 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073697539 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07624286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071696132 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072590493 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071907644 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072087233 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074248696 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07356708 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070575739 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074413984 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075779111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072121865 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075151398 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071982893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070467722 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074261506 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074349052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071450352 seconds)
  done (took 3.275936756 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077904089 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072880283 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074052996 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071670266 seconds)
  done (took 1.815755123 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077314901 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092001855 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088925965 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076842234 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091413651 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085901376 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068605 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068461973 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072472639 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076927545 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067384727 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095154238 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086921793 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076793055 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078514441 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065648643 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067916852 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085970727 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07677605 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077186872 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069722508 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076697016 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067756678 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087621705 seconds)
  done (took 3.394388466 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07724023 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103952117 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076896196 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086974788 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089829404 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065046536 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074069845 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088736301 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122791257 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065018168 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069723943 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065171818 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071796822 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064752215 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075297649 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104520737 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108056201 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067903589 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094839457 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065293071 seconds)
  done (took 3.16594297 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073223128 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069668869 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065807533 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068343601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076966898 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073073801 seconds)
  done (took 1.952812657 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067965915 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067367804 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067171034 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066742307 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071643833 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067153058 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065741602 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066791371 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066639188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066559199 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066554842 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065569831 seconds)
  done (took 2.328103252 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.412833213 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068593795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069281782 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065724824 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070076368 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065908366 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079619078 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067551968 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090389909 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066217092 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066364526 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068284901 seconds)
  done (took 2.714232029 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204328736 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076341263 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235320148 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135894828 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110939438 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114552723 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103263572 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112218549 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142471267 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101053525 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167114539 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164615769 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107016088 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136491217 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088614586 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097629163 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154014254 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1614385 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102726844 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164256313 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142425426 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123976791 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146558278 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10062848 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10574735 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121022733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071058179 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079745686 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169396601 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131199674 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145261629 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110725103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093145507 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17553888 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17008435 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141488369 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134189297 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082998598 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101244263 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131869575 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196346956 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087530882 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160738129 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245809433 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080832509 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133637111 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119376428 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120482884 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106534551 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089304201 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146386453 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182322106 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138093789 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086870899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112024596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115362892 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115083794 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102970504 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179600781 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16088795 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127610229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071312105 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098132507 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15358024 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131383117 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108978928 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126146206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09624003 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13333724 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154071803 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118002901 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143359986 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128570176 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088373011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119530613 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138901686 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127386261 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16918496 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124320125 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07296594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12447839 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102745682 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08109957 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142262906 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075344115 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174995985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098064566 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105902858 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112526128 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107980163 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107907631 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159078216 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14108166 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245493131 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065960357 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103550254 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119917728 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147448975 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087851057 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108657913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116178326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077734399 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140178526 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074411905 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122381921 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075780873 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12489852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132136739 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075786599 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121439533 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100931492 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101185542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132808071 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159070219 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088968333 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082413013 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167685991 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122979833 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105660361 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143861563 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155366413 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09902749 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102019313 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149003457 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178028693 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089225347 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162417529 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106801709 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083519342 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087432698 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123221337 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112180474 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121677687 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081928916 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117874181 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16769556 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074726516 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094997644 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132644824 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079795107 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0802226 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102315937 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099726426 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094474864 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099216418 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103068875 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135809653 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121512288 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103261747 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269634863 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098200246 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170860067 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088844648 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09997665 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103247798 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07028687 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136347086 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15763778 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079748346 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162931385 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123792781 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105072014 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11940826 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082600037 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139855475 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078755317 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070392011 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143732504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110671386 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109867354 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149750703 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104048556 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126987896 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120125864 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134042871 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131508973 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12886832 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104984273 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087958419 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11182394 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125451291 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072833596 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091511549 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079878813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103515628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095262577 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083402604 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141661439 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123909103 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099641336 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111272061 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096094894 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146639894 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076478257 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128667727 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119166537 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093514263 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150446023 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150656505 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130484435 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098596604 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143949143 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069741881 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072995193 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087496271 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.26835501 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083832143 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084126862 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11721799 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147026615 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129412817 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137565078 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111068161 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120754855 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154637581 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070398335 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11507751 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147742204 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12014302 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104150865 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090572432 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098771647 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14245224 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108375715 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180379201 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113382842 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126642782 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152271781 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099155866 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079489304 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108053359 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135467187 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104044618 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143144584 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099467136 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087393399 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109717217 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074181704 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099204985 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130196176 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118958418 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135054192 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114259161 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132100028 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076712995 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116578082 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120177431 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121836268 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064171552 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118787936 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159642327 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093204196 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117752324 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153197164 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079035647 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123150114 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320071315 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146422473 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085159122 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110083104 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119045657 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127223756 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121374101 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140091501 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108156897 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135690999 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108859199 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085913278 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087763074 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097852668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104604469 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094775975 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10799834 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114777649 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095088333 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131383849 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102644206 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109327291 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118101348 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097632758 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088399222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096893222 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174695531 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118721429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171381495 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099173402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145559753 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163262969 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074526434 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07896378 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078171366 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138548913 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083591501 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130317296 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09730215 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104973998 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123331386 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140969593 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094654705 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068208606 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107918199 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13376138 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112001472 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097660296 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104028581 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160760142 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101942071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078750667 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112703523 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103737884 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101110147 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170637619 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.205998817 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098395177 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075968547 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081651668 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128523113 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153462388 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080940964 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103445579 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118362742 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11096355 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128172945 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10182334 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099370426 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115522086 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150126406 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128265244 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089365381 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11285614 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129119528 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1571638 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10547238 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112357081 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170528663 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151440297 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159594316 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08825613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113864475 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114014446 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107703116 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138128688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083177434 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162421384 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081854928 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13555062 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103557878 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089667988 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129074857 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098893618 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088174144 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147322232 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117119763 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08233134 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077837414 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117520015 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119969442 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106297879 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074965619 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137656113 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072838227 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131046219 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166677636 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08040653 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103258261 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240801634 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079835403 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108928046 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103632344 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089672005 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098899477 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173354698 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088016811 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149747263 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141102485 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113005377 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136620531 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099466727 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635566316 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077381207 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152350341 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116209774 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172069418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097581974 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117507666 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10897142 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123050356 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143703232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104759414 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176702759 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13200376 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115605889 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080313533 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102717535 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102941633 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088575076 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104583997 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11337985 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115523889 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092994368 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115362449 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123037356 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082276724 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094842386 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155311711 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116307859 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145891404 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139712065 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084846006 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117248903 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137006053 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079498288 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120803061 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150516686 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104647974 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096788686 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079363885 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246604255 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171801371 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074360872 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162291151 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12023046 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109192182 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113618354 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11411254 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131891154 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107544139 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122225404 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093640756 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110648637 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112747579 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082166318 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077410372 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104664891 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112446357 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097080103 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098111259 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098790112 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150812725 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070948273 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094609489 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103261254 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144271968 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173442538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088041455 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082318194 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118919711 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112750496 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11292034 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120187246 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079255003 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082209256 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081288305 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07726229 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107885878 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112178953 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104278212 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111217496 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162600401 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082278598 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226846681 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09485642 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104301156 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069763903 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078627364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095566153 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097179716 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107527246 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100580652 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169008708 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093473645 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088944913 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091202231 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072514328 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082033046 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1258052 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106503059 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114561545 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094094232 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06162435 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10521144 seconds)
  done (took 58.548935724 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112400359 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083319737 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098186889 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150544512 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122580409 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212236126 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157476537 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199174687 seconds)
  done (took 2.804230671 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068091652 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094407989 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100292655 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082669984 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066817758 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068858345 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22515504 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080502454 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066597969 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088338681 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079492486 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069279874 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42223127 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065920697 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067744907 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063094725 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069019571 seconds)
  done (took 3.409568735 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.376148204 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363062944 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371956047 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07358806 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.892015998 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089106415 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075028093 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096775459 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072110347 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.269113623 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701620479 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092583444 seconds)
  done (took 14.114594418 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076665222 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069239089 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083869759 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084384831 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07234244 seconds)
  done (took 2.024227799 seconds)
done (took 102.943716731 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080793381 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39152802 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053729788 seconds)
  done (took 2.107044864 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083128224 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083971947 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083996173 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082524696 seconds)
  done (took 1.976524131 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073941868 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075726205 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084816155 seconds)
  done (took 1.870865145 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223252693 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138857098 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086585665 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082043036 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07809919 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078945433 seconds)
  done (took 1.884264849 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072141429 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075264574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072686085 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075927754 seconds)
  done (took 1.933881083 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076203957 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053282015 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055011359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056355865 seconds)
  done (took 1.879820463 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085738439 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078572897 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07862373 seconds)
  done (took 1.88226203 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106266924 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085571547 seconds)
  done (took 1.831407441 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081030432 seconds)
  done (took 1.721214202 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098852422 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112970516 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127990143 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108561838 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136185852 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109007106 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085473396 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086742124 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076531639 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086596137 seconds)
  done (took 2.667661391 seconds)
done (took 21.917005224 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078674086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359237878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360165762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091161062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667176302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356945269 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990170004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091532319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113118282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067281834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084522267 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647164687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977947849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.314010192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967379149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.409723717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651833996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068305091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06748148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068052683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97358587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067377296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067914755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068154876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655420154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371524932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068305489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412886299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067748747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070432958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354672432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068157057 seconds)
  done (took 16.298777617 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070431839 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11859216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073358231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083931705 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070358356 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069379699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071392603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068981429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119084081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067598616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084507537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067465723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072131658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068649628 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087038681 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068165659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068625972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068503882 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068109898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068230417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086719045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067620107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068301839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068492115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067723479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079641697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068216991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067998658 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068438301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069718646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070554804 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068729361 seconds)
  done (took 4.034164982 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115432511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125130867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073805304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103306632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111769307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070247535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143141219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092973115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127243126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068223253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084857878 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068360332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101134607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068334153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087704173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067997066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068761394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06823475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068237358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068598113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086840549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067930986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069131346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069145231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069102732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081032941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068491367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068445432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068726194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07055759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071482535 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069041346 seconds)
  done (took 4.293153773 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072158133 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075056608 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082480351 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083766923 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070123137 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07220697 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072827815 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069287365 seconds)
  done (took 2.249190972 seconds)
done (took 28.515409209 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078754597 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069754259 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073093523 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08057013 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072940035 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078390388 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066876617 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074675536 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071891658 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072531401 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074795431 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06751534 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071047002 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067390975 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073482879 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067879104 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07882498 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071682006 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079369079 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079403827 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070180432 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073253807 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073930777 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079145345 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078956017 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079013471 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077473967 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072972732 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068910193 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070112368 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076584348 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083662624 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068831666 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079667459 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067637829 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067553239 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071454459 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067544387 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079262397 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076375184 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06919884 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076342069 seconds)
  done (took 4.72865531 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087454282 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090902777 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084329029 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061655576 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066976283 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064956023 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088000834 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059413783 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059574969 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087329241 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055909314 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059108205 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063495088 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054187828 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059689639 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056782067 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061635745 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055672477 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059609506 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059443967 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058170507 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054199884 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060282418 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064919328 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056455043 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061825581 seconds)
  done (took 3.35238652 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073939204 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083948803 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087859331 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126720197 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103533835 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077149735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077693871 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092132833 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085044509 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066963079 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070544359 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093399373 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087531842 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073574045 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067573449 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084614913 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081906719 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068944374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073554193 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090879086 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084464949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083666031 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092957651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080782177 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066932771 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069824187 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071007192 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081060617 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072741367 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076591922 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072027002 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071283214 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069412845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079077032 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071434256 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069385283 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090615338 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077024989 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077903627 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06842548 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0707314 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068421044 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089804258 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123144291 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067182639 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074089792 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074913089 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076765261 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.078673248 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085618075 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07837867 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066678391 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070341847 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067154989 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06733543 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080236931 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069416483 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069723811 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076882378 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070442686 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085019835 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071326459 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082323079 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06688671 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074808834 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066484041 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068240932 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066771308 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092446984 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069685004 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108185324 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068249057 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068350816 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076167689 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074646568 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073127463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067620676 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082296138 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077145179 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070412659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076123107 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070501639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070134751 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087633195 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070018695 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069009055 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068174413 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073557712 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069728164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068459126 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079882478 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067139648 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070086737 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084018277 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067107967 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068863591 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073576361 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072288229 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067927655 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078358511 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072167075 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068602194 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07699529 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067906341 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070474882 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077677608 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073829972 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066306341 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071972894 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073661013 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068458629 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069067114 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070225456 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068786535 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07639031 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073537305 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071718235 seconds)
  done (took 10.563382346 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160995805 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15369804 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070617203 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144720472 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076398388 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078699126 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147042393 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094497378 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067691971 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068639652 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069119594 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115213569 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105572755 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121640328 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078424967 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067445979 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083032504 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119162365 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148938293 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142999238 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08349281 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076723447 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069842385 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068835851 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07407879 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082694465 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090307778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076799018 seconds)
  done (took 4.43713737 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081320093 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101521946 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074353712 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08866991 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091123691 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067617164 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070015132 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069493673 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080981825 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078467176 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067742168 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073377686 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074590844 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073991882 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068727367 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074906669 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074763855 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069376291 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07114242 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072742532 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077489535 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080861259 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071400115 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067074329 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07433603 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066824197 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06394509 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084259615 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067951104 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090268426 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065918819 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075024809 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081414594 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069702295 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067769948 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067751825 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067144877 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067388067 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069102432 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066074013 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066208929 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057916753 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066725339 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07942415 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073761947 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056639457 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072545612 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072488547 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07275512 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065239898 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070803195 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070271703 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071043471 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074725884 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072611046 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072834859 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068632763 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065497684 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07501547 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067742625 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064672554 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065970146 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071735008 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065661811 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075494777 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07166936 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065903946 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067457937 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069222159 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073729745 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067264333 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070681314 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065161218 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069420991 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071712205 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069036309 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068465987 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065752309 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066986711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067685261 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055536308 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067451093 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053427426 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070253614 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065642241 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066236316 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067252397 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071898465 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079455275 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069163265 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072964604 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06824859 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066563286 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07025259 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060478128 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070111677 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082504573 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082461524 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067077349 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065800035 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081516177 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071781513 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06649837 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056311723 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074691514 seconds)
  done (took 9.147240085 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094983557 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088198858 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069835835 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084041693 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091311583 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086025154 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074855083 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.0765975 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070033369 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081840058 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07333482 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076541307 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067969037 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076800859 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093363398 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076782989 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069694431 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077592195 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071714357 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099720542 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083019734 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082022895 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074859789 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068401899 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075806652 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079902567 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088695036 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080355105 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078766881 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075497758 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079845989 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088921369 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074272061 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071973615 seconds)
  done (took 4.405985507 seconds)
done (took 38.279842451 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.734797749 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.911925426 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.733243271 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110689922 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.040100764 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.757477121 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.868735646 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.726706498 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.937296983 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.770148022 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.998919239 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.762473234 seconds)
done (took 65.025673361 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.756895774 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873889371 seconds)
    (2/2) benchmarking "String"...
    done (took 2.001943272 seconds)
  done (took 5.546487255 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.032417142 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.256984717 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.971712263 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.724176026 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.731145271 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.029699793 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.528101553 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248905018 seconds)
  done (took 30.160473601 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.934762288 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.925674142 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.386684238 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.426080204 seconds)
  done (took 15.38985439 seconds)
done (took 62.63993452 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.74596793 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.726402983 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.743047373 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.703914898 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.77895861 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.725822266 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.836187997 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.931835176 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.722281291 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.710166937 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.721141965 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.146091668 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.724796871 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.850395217 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.720282777 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.729177385 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.782347047 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.148279434 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.876506295 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.725807623 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.735666337 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.750662563 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.720551662 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.723176711 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.767797408 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.716896441 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.146845288 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.720078517 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.330563056 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.716097827 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.747073412 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.031198452 seconds)
  done (took 202.821939791 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.715619389 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.690723245 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.763029233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.729034148 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.097550663 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.917982574 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.852111461 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.145316291 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.719915913 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.733309983 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.955685222 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.71356879 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.969532253 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.666446001 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.721469364 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.817973644 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.912132116 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.955329454 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.715897299 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.964133161 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.724804852 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.769638018 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.718302734 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.919744491 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.728203019 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.804116663 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.889159532 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.743845053 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.912501944 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.902153365 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.762079459 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.743160391 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944077627 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.590073888 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.727996733 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.742252153 seconds)
  done (took 168.03966972 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.126952171 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.715736219 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.714834767 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718175455 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.729006771 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.715135912 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.847272238 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848551395 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.181948914 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.155784627 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.71869513 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.765701197 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559534031 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.71696439 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782593201 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.728997988 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.716024797 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.731480931 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.74253138 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719730087 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.716232763 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.845852403 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.729825511 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.713261892 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727778964 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.715905948 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72212388 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.084866339 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717630425 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722296176 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.976493334 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.717314345 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.718016553 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.624203547 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.110384304 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809766927 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.718624892 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722425947 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.717513977 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.93899581 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717450491 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.717470891 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.720295413 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899311467 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719417873 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.84547475 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718894137 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.231181952 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.720743865 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717659483 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.404851965 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.404293917 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.721119429 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.717502611 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.71942392 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.720514943 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.718320311 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718029097 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.724794139 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.383019072 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.792977935 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.718843512 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.71981169 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.722406957 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723547707 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.718695465 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.718628483 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.793685641 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.722076454 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.275627034 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.779967231 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.934199122 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841822239 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.721827778 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786507687 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813003953 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.718861656 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.718410151 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.717668702 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.71932705 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.799569449 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.721297605 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.840688765 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727350147 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.720451594 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.771475151 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.788898106 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.719775621 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620301804 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.722934212 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.7201202 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050395673 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788932756 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.720665112 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.720121088 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719652748 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.840157439 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843238906 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.496611359 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.723289067 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.411702754 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.724638476 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.854907335 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.721432184 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907619871 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.72439558 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802142123 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724755391 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.722200865 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.721284291 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752315499 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.720550133 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.780928468 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.720434062 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.090073624 seconds)
  done (took 396.563503285 seconds)
done (took 771.274606689 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.411192777 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371014171 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.494041573 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.39766022 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.372468008 seconds)
  done (took 13.711110491 seconds)
done (took 15.375581323 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.809635153 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.811682577 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745220914 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.810550036 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.741270805 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.809251001 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791558528 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.745332855 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.77763969 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.746477517 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.778926058 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.746163477 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.73446763 seconds)
  done (took 24.713376454 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.951541135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.96782959 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.792094182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.969535842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769786749 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.95377313 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.886979096 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.875134845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889428932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738588429 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.735046132 seconds)
  done (took 22.196179813 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.960530347 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.962953641 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798038716 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.963432167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771450026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961449133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.88781527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.878150564 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876761211 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738592472 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.734357499 seconds)
  done (took 22.199370497 seconds)
done (took 70.772710328 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.731435027 seconds)
  done (took 3.398305044 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.752651051 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.888675376 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.736519668 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.733981153 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.732215749 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.732414733 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.734352851 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.732125951 seconds)
  done (took 15.71020485 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.731512539 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.730385242 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.727649799 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.730761503 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.731058187 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.728016465 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.730222204 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.728344383 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.731425134 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.731361611 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.728987185 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.728616983 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.729636461 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.728017736 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.730740331 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.732322444 seconds)
  done (took 29.347950424 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.73071811 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.731546066 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.728381734 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.728543508 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.729486212 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.729276075 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.730223366 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.729821121 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.728724011 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.729658211 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.729711504 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.729815819 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.730021522 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.729903672 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.72908933 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.730402634 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.729578307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.729276373 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.734716525 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.730617881 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.730425745 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.729216386 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.729748657 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.730361166 seconds)
  done (took 43.190098602 seconds)
done (took 93.311985898 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.415525934 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.183670624 seconds)
  done (took 8.26811485 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.73315099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.731822715 seconds)
  done (took 5.174917662 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.73189743 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.732287876 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.733159621 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.733166533 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.732364655 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.732873961 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.732835534 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.733767766 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.733312774 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.733367783 seconds)
  done (took 18.998625424 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.732514541 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.732762525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.731863586 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.733074087 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.733943469 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.730523096 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.733030403 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.733803113 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.734330271 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.731394612 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.733375195 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.732084782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.733489902 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.730588897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.734728926 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.731442326 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.730849114 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.731095182 seconds)
  done (took 32.855166606 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.734341102 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.734497226 seconds)
  done (took 5.139583572 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.731782332 seconds)
    (2/7) benchmarking "second"...
    done (took 1.733434949 seconds)
    (3/7) benchmarking "month"...
    done (took 1.73190084 seconds)
    (4/7) benchmarking "year"...
    done (took 1.733151 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.732348981 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.731590558 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.731898851 seconds)
  done (took 13.797346778 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.736486332 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.911666875 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.979288711 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.437991094 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.735797442 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.738572662 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.669838939 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.738118761 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.738992617 seconds)
  done (took 19.358556679 seconds)
done (took 105.261491605 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.546402449 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.731460217 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.089700935 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.790696023 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.749156971 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.028531096 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.756608891 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.954078253 seconds)
done (took 42.31767934 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.788004152 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.207651561 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.205875067 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.443244141 seconds)
  done (took 11.529751915 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.715731979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269870547 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.772330865 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.400785364 seconds)
  done (took 20.068774175 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.100313758 seconds)
    (2/2) benchmarking "read"...
    done (took 2.091586069 seconds)
  done (took 5.870762957 seconds)
done (took 45.930387617 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737696248 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.73516792 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.738029856 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.73496674 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.737447486 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.73618319 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.73556692 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.738951165 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.73794698 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.737516252 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.737808159 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.737962352 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738442789 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.736067215 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736392722 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.735635003 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738854616 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.736866091 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735614832 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737594591 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.738390536 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739346659 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.73655165 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.736286214 seconds)
  done (took 43.366220004 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.739443602 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.738245311 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.738825445 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.739439539 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.736780708 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.739737882 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.739993313 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.737139027 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.739060539 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.739822539 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736971684 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.73783975 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.739855983 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.737149787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.739289017 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.737500592 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.739960697 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739003841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739442892 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.737327502 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.740491073 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737427925 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.737501324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74112615 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.738095274 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737611219 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.74002712 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.737932365 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741089965 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.737707938 seconds)
  done (took 53.838856311 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.745439265 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.74773513 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.74050049 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.74167449 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.741198154 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.739884066 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.740213294 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.740584537 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.740937109 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.741183425 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.741594687 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.740756584 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.741790194 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.741889231 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.741322657 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.742192158 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.74190843 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.742055377 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.741451462 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.741321344 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.741751783 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.741395212 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.741395341 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.742691732 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.741991145 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.742087124 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.741853105 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.741748515 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.742215121 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.742685092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.741998635 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.742202847 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.74351114 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.742100302 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.741974429 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.743555299 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.746734082 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.749386776 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.743958914 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.742989189 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.742401071 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.742979108 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.74213268 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.742784552 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.74305029 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.742847414 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.741948111 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.744165338 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.74328149 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.743109688 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.742781961 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.742787119 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.743363357 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.743180994 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.74316109 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.744652059 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.74316461 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.742942359 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.743284255 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.744173102 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.743428871 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.745092004 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.743584388 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.744025312 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.744270338 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.744309118 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.74500191 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.744375048 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.74384796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.744234859 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.744086326 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.744790426 seconds)
  done (took 127.167018266 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.743112436 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.742203853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.742651899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.741205168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742197081 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.745960124 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.742196969 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745319446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742502505 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.74584343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74509768 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743646136 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74242724 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.746431637 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745812664 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.742129731 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.744302783 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742160105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.745251035 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.745419393 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745534427 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.744069915 seconds)
  done (took 40.047740211 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746190526 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745288608 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.743206784 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746078569 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.742995537 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74556977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.746055716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.744792944 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744908341 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743367692 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743594423 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745922413 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743097043 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743621977 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744123627 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743857368 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74765955 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.744554565 seconds)
  done (took 33.088410718 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.743839274 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.743830742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.745533758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.743972687 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.744472984 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.747123019 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743571547 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.746850161 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.746193267 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.745497298 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.746634572 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747592471 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.747535721 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744931278 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747524675 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.74523538 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.747017879 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744266351 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747775824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745304891 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.746343264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748172449 seconds)
  done (took 40.093038986 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74724199 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.747743322 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.745001998 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.746028383 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.744779011 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747894426 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.748224793 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.745522058 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.747925035 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.748451565 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745796456 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.747634438 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.744723974 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.746034717 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.745904543 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745330141 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.748006069 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.746825412 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748201896 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745997189 seconds)
  done (took 36.618228786 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749279996 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749336009 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749648615 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750382682 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749383737 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.749817033 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749839606 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.749500036 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.748917317 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.750660096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749550679 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.750215843 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749938999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749816968 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.749849919 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750341236 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752168611 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750437487 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.75012562 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749983841 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750719133 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751572151 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751300533 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750852413 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750323679 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750920635 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751055388 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.750495808 seconds)
  done (took 50.69215754 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749919558 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750032262 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.747574857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.748348646 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.748680784 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.748366221 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.747409225 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.747692105 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750792724 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748609928 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.750888599 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.751131502 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75033374 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.75052753 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.751932529 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.75176217 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751482951 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.749008043 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748322546 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74943201 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.75138252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751335435 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.751168628 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.748679406 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74875755 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.752607896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748815513 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.749607566 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751220932 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.748290184 seconds)
  done (took 54.18145488 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.770364996 seconds)
    (2/2) benchmarking "in"...
    done (took 1.770513465 seconds)
  done (took 5.228016666 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.749285046 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751457619 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.751274722 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.749706558 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749422087 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.752352456 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751649535 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74902536 seconds)
  done (took 15.692536529 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.753008671 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.752699954 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.752842696 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.7521426 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.753241389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.753999737 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.760785489 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.753642132 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.754838069 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.753374563 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.759362061 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.76106495 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.758414357 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754494962 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.754445874 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75535869 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.752848728 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.754371551 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.754556639 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.753201203 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7546576 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.756208275 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756033453 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.750948194 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.756149904 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.767014023 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.759606148 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.75283803 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755425341 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.762013044 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.755682707 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.75042866 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.755068633 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.754901303 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.753845142 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.75547841 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765456066 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755836853 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.762644421 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753963781 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754077722 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.751374618 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.756524828 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.758417655 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755678962 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.754849812 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.754365783 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.751921553 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.755349765 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.758498257 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.759273694 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754893447 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.75193689 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762709454 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.757925675 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762246521 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.756292735 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.758185301 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.764416518 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.767773888 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.769804588 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.762250473 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758532247 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.755978771 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765771521 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.778703633 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763403181 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.752647624 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.753462806 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.755367595 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.766075999 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772353211 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.765375861 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.756659369 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756863537 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.755739762 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758157332 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.756465956 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765402246 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.761124284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.757039218 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.758041541 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.766322707 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77728675 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.755546186 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.756817951 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.756763503 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.757531943 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.757913009 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768938519 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.757630087 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.756945467 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.758348089 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.758906807 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.762393058 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.758238804 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.757422472 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759179012 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.75522247 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.757334194 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757771042 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760636096 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.766841601 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.758098452 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758836838 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.766353782 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.75676413 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758073708 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.768488199 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.757038708 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759263833 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.759308641 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.767241624 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.755206152 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762129644 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.768721429 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.759811835 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.760884103 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.759032188 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.758812387 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768311469 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.785922533 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.759208556 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.757866919 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.763663612 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.769545485 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.759747179 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.763444043 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.758422219 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.756488601 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.756123085 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.760839826 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.75880655 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.761465739 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760634631 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762391505 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.757151003 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.759586693 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.759945128 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.761130151 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.763801644 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.761906459 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.762529417 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.76430937 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760230282 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.762220931 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.76950506 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.761154111 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.762465491 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.763068995 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.757585076 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76079565 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.762302018 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.761386325 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.762016599 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760981235 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.760369341 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.760974779 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.760146463 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.760828646 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.760600624 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.761930972 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.764849822 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761846369 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.766715262 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.760262563 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.758996664 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.760829699 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.761037095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.761315059 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.760728983 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.760609579 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.765012205 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.768771886 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.760690307 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.761435578 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.765832809 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76171532 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762009717 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761713775 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.764729342 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.770205253 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.762183634 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.77106993 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.762145882 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762138923 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.762768484 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.763172096 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.762765905 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.763317947 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.76548013 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.768778468 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778223617 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772232938 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.764361945 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.766175689 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.764387234 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.767264 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.769785434 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.762611151 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.764446974 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763577649 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.76302045 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763023762 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.766702225 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.763208309 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.764101427 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.762582452 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.762536608 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.764129015 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762745288 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.766099421 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767891271 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.761115458 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763142252 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763507467 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.763012751 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.760935512 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.763580693 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.764376227 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.763013791 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.764757564 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.774266883 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.76203312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765498778 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.765618063 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.764832414 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.763135661 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.763623211 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767329634 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.765920173 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773178899 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.765618487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.766352239 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772811223 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.765678288 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.765248958 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.767965864 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.765649311 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.761714763 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.769172954 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.771433526 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.764485115 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.765400013 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.765804159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766089248 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7650244 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.773900752 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.762071198 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.764870361 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.765884459 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.769528075 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.763541083 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.768967633 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.768451808 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.768234685 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.768441536 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766766816 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.766215106 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768192394 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.766059232 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.766352661 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.766316011 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769895999 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.774455725 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.773617742 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.768642823 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.770987941 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.768317682 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.770100476 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.768042047 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.766716444 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.766258325 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78218565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.774362713 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775254215 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.769329611 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.766916661 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774892988 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.768210645 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.773215576 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767987638 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768839813 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.769079178 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.766957805 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.764891489 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769412317 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.767000836 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769006861 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.769326355 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.770217464 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.767192244 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.767510178 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.767593173 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.768205689 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.767702892 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.767960869 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.767659983 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.773276917 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770605134 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.769513798 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.76917797 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777742649 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769838397 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.772780829 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.768783312 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.769469639 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.768919045 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.77160157 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.769335619 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.77251698 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.776472667 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.772331941 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.780257457 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.773185473 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780014895 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.770000559 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.773850373 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.777660153 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.766541026 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.769389514 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.770600354 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.769989782 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778538515 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.770866741 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.771050981 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.7731934 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770648611 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.770348659 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.769003229 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.770823165 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769937572 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.77040904 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779973784 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.771944124 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.774574512 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77316517 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.76641731 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.77106179 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.769816707 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.769954675 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.776987088 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.77136161 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.771625904 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.770813043 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.77239997 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.770464243 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.772104914 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.770680708 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.767631253 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.770014697 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779630537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.771770936 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775698529 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.770294693 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.782838074 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772219867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780573743 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.772429664 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.774017069 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.771434353 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.770855457 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.775854312 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.772439817 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.777090625 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.772730677 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.773086523 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.774305937 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772268286 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.77574574 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.773790599 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.772794021 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.772567436 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782833598 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794324384 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.774229995 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776090342 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.769795613 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.774259191 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.77710803 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.77299469 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.771605507 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.77515357 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782599897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.779506949 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.773345252 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.773482121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774548835 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773678357 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.772171966 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.772844491 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.774046822 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.772656501 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.776877896 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.773484097 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.779814233 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.772904441 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.774752186 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777596639 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.774990847 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.785822912 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.773631039 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.775665989 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774220236 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.772745924 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.77596047 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.775240748 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.774165956 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.776261116 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.774960736 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.776532597 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780974577 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.780077067 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.778135696 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.774365948 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.776850308 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.77637153 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.777034957 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774714232 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.775697518 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.775841074 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.777036084 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.77566915 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.77801974 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.774321099 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.774814041 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.777235355 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.774341333 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779139605 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.783028646 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778352478 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.772049869 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.775447205 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775405952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.774716666 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.776843479 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.788395744 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779107924 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.787193447 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.784016842 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.779564594 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.776903606 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779172054 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.785871976 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.775108308 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.778599141 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.776117872 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.77980498 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.777644947 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.781819218 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776589649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.785895561 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.777278461 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.77759952 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788514626 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.778628355 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77647552 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.777249229 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.780898299 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.778023262 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.775676634 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.777233276 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.776333384 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786107408 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.780906456 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777506409 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783036334 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.775562237 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.778325393 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780358074 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777151356 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.780234566 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.774048476 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.778177704 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778573514 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776915997 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.774655123 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.781175796 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.778335574 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.782098546 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.785096835 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.774319863 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.781429869 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.77985453 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.779360686 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778232055 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777889519 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.774881999 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.77660272 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.779224798 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778212677 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.779955365 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.782169709 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.77959395 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.781064726 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.778728835 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778101698 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782810946 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.789126666 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.785389367 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.775815249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.778647115 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.780906893 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.783434075 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.779239873 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.779743884 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780379445 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.782689995 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.778898363 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780799593 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.77844661 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.783549401 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796755947 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.778736044 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780691919 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.781619651 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.788472903 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.780212624 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.776730415 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.778748297 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.783639776 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.7824028 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.788835829 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.780304773 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787964103 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780888115 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.781404203 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.785502468 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.783165834 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.788457604 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.783747388 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.781010163 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.780401054 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.78735057 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.797942523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780080831 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791712111 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811126323 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.782778929 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.783913726 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.78204362 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78053977 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.782491064 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.785363528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.782516811 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.780492801 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780797007 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.781387739 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.783071737 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787890114 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.785186577 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.781803594 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.780997028 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.78213173 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.786184069 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.78061819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.782944971 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.781724738 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.781807075 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.782301012 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.782524521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.784807729 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798522509 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.793338852 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.781173704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.783244953 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.778733078 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.789556224 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.785213016 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793719218 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.789428322 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.782809767 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.78283568 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.784908981 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782829831 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.77958592 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.785267177 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.783498729 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784313257 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.779113691 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.79976732 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790010967 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.789142632 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.784437586 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783961165 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.783322039 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786407869 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78469635 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78402929 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.787665518 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.784472936 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788410511 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.784123412 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.783961718 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.788142607 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.79180016 seconds)
  done (took 1057.006685873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781367289 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780854919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781739233 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780651378 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782802869 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781859501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781210205 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781134251 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.781177574 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78117738 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.781228232 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7813969 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.781470944 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782012109 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781813337 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782282151 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781132668 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781825695 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78218941 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781491067 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78279209 seconds)
  done (took 39.133380441 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.784073371 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.782012649 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78212328 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785131163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780967411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.784882094 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782066748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784368199 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784932574 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783210612 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.784894686 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785011701 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.782343806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.781514793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782633224 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785591196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.785531929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782326682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.785662924 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.782460371 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785604224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.783236106 seconds)
  done (took 40.961104833 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.786538126 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.787503214 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.787253466 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.784322849 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.786960841 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.784798945 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.786893105 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.78686527 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.78650493 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.788522958 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.786722961 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.78789289 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.79365977 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.791034188 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.791731934 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.786679203 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.931387819 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.786622572 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.78773774 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.788881347 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.784592012 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.795162989 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.783858673 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.784078336 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.786990367 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.787999591 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.787770197 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.786406108 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.787666471 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.789176808 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.791971029 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.788667702 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.787652381 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.790894311 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.788030591 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.789228977 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.791565417 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.790305644 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.785136568 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.787707862 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.798736866 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.807075041 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.790738002 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.79662165 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.788354887 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.788219515 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.791756768 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.795810985 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.785915449 seconds)
  done (took 89.529534821 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.788732468 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.788128273 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.785944564 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.789271482 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.788941876 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.788195841 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.788252079 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.788845039 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.786386844 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.787802841 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.789866168 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.786774742 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.785788662 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.789913154 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.788589073 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788119591 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786553352 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.785923588 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.787191437 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787039742 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.78867493 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.788846869 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.790210014 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.787595289 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.79019264 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.786472261 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.787837212 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.789140824 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.787071522 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.787041707 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.788714727 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.790746886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.790015627 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.787232215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.787289298 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.790061259 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.789689123 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.789295119 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.790836878 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.786891494 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.790452526 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.790519718 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.790378078 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.792173615 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.787771924 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.787911074 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788136133 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.787547479 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.78822459 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.790621725 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.790944024 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.788251259 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.790866689 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.788041332 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.790981889 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.792163199 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.788851654 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.787866821 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.790954977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.789205244 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.789117341 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.791582569 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.789438922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.791918348 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.791590237 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.790713698 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.789574212 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.791417074 seconds)
  done (took 123.373400212 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793014048 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.793137685 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79438549 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793819581 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792409264 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.792597085 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793682389 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.793876757 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.792970611 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793227502 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793720714 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.792721657 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.793278352 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.792449926 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.793856274 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793335069 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794442265 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793722543 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793483452 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793440583 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.794017178 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.794389081 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.793910843 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.793427902 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.794410076 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.794021151 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79448557 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.793759642 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793744804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.794368247 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.794724705 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.793697269 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.794960387 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.79473346 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.795179957 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.794663732 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.795324226 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794734453 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.79487449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795021232 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.795022161 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79486369 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794302191 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.7935664 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794619687 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795072675 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795020315 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.795643215 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.79414852 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.795295398 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.794870809 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794903789 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793936701 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794850192 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.794502919 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.794786903 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795762146 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796232379 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795715679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796141595 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795685332 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.79543734 seconds)
  done (took 112.976314736 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796097072 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795221683 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.792124842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.792609125 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795520863 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792052331 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796252918 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.795308737 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795569422 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.795292243 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795480592 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792243258 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793200541 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795544352 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.792773624 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793569462 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793383858 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793386668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796028432 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793665679 seconds)
  done (took 37.61626198 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.793646062 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.796654484 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.793800037 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793884632 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.79620773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.794204248 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.796482462 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796546289 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793814564 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79725241 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797200777 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796370222 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795188518 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79442004 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.797221132 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794680524 seconds)
  done (took 30.458986312 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.793884586 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.797340657 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.798037921 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.797806285 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.79521723 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.7950906 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.797141545 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.796086436 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.795750372 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.798909591 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.797073937 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.797598282 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.798409758 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.799327505 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.79617201 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.798701134 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.796560815 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.796416638 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.797678483 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.799203911 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.797059774 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.795390657 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.799027859 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.799281962 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.796378089 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.79622375 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.795857039 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.796712328 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.796119611 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.799314213 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.795825192 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.796419816 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.795700378 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.796138168 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.800120842 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.795863412 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.798567428 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.798481953 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.799007521 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.798791702 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.799349504 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.797049446 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.798891696 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.798914442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.796304824 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.800163769 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.797056588 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.797009316 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.796812022 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.797350917 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.799160322 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.80104473 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.800177416 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.800424717 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.799467903 seconds)
  done (took 100.602115122 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799770156 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800378751 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.79705934 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.799670503 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80107871 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.798233108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.80073391 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.79749329 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798300285 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800450975 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798730478 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.800550532 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799265877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801204335 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798338194 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799626211 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.7983558 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.798080098 seconds)
  done (took 34.122189214 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.798133087 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.798535298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.801136139 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.797979471 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.798340069 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.80063221 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798073855 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.800882119 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80105248 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798507843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798916511 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.801430115 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800727769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.801642258 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799255891 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799887055 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.801748575 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801585503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.799334733 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798660279 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802916637 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802252904 seconds)
  done (took 41.337866661 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.801535436 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.801975578 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.81947819 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.846367232 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.833342425 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.802629914 seconds)
  done (took 12.641696058 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800526054 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803125424 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.800884095 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803255257 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802257853 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799589863 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799448846 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800153383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803196939 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800423355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80025779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802445237 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803327827 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800574799 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802937776 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803985867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801590813 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800504683 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801839976 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803774699 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801328822 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803959304 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801312164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800866867 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80300768 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801304928 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804312104 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801135675 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800977186 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804398019 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804051073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801373826 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803986943 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802457755 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804335243 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804329612 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801089394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803936545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804582707 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802685476 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804401191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804973672 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804456303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801555445 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804450806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801663419 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801938314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801982207 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802117915 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805121853 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804470848 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802819355 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806521405 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80558796 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805174682 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80600141 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80353973 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802731498 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805700775 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802935598 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802853095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805216583 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802641222 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803652943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805051851 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803235931 seconds)
  done (took 120.730433456 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803862675 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803655162 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803742699 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805234677 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804817935 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803946784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803269785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805045635 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804748726 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804493984 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806522526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80390575 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804393022 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80444083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804561995 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804432581 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803300662 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804528641 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804898993 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80732732 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804036086 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803943208 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803947526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805147383 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805571371 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807450323 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804176563 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804906824 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805653891 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804303643 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804212643 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804219123 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805271876 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.805495868 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805140225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804933124 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804970178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804719744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805668024 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807715773 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805924693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807799034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805205913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805522884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80671867 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804848783 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805958425 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805577557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805686489 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805688657 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806661768 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80800169 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806214628 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805741991 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805736177 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806592019 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80676195 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806114977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806124935 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808421847 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805956675 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806271497 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809642155 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806460896 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807042933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805614917 seconds)
  done (took 120.902472426 seconds)
done (took 2463.079506463 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.900719161 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.918631443 seconds)
  done (took 15.562908355 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.970699894 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.922671317 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.808253907 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.843565044 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.808857551 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.822928955 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.822110525 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.807885053 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.808687751 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.80935882 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.808774098 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.996788322 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.82756707 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.809543771 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.810118396 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.901783783 seconds)
  done (took 51.339765423 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.812867215 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.813694174 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.822763836 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.815305447 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.812675978 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.825255495 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.844756867 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.81705279 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.847759447 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.835449917 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.886516519 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.823683626 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.814086304 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.864024073 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.825633059 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.82827036 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.912519976 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.888476555 seconds)
  done (took 34.836835261 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.89249887 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.814555511 seconds)
  done (took 10.460661531 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.827679338 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.805049301 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.831810886 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.804852793 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.827392018 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.814944907 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.827104724 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.831458715 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.842695074 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.811250402 seconds)
  done (took 69.994696648 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.818437188 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.814808713 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.81430806 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.812505146 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.80560943 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.810187439 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.812981531 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.812511922 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.497265685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.848454098 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.819542064 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.818533323 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.813152489 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.814717178 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.810647847 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.835982162 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.930228676 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.810963483 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.809681053 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.818936697 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.814488347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.908019197 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.827249266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.814024865 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.843740442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.498006317 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.821451245 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.819653873 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.949294959 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.811512288 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.814591899 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.814853669 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.816544784 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.21085595 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.132385683 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.814403774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.82180355 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.821830823 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.812449883 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.988597064 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.81450016 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.819987289 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.808134078 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.117448276 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.896192108 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.859023381 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.181111826 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.819658681 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.817069447 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.846032131 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.817999128 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.816622315 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.828680799 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.32720431 seconds)
  done (took 129.805717659 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.810283664 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.397438591 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975006094 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.809968256 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093581378 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054132984 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811481022 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860263885 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812280922 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06177898 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.989149768 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931936254 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812761899 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.810686275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.812047044 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.809513411 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965454243 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.883118676 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.811629461 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.809773837 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84799635 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077414275 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.940320917 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.812207571 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.834890672 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041206008 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938291852 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.929661816 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.322867713 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.810785064 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.880003241 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.812928214 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.810817504 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.810240383 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976758063 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.919710714 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909805541 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.813002506 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811862472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.809666528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.474188454 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035569374 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924201971 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.950919781 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.061783982 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041641377 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458823198 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.811470866 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.45073834 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00959365 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022743797 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.066823059 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.942716588 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.814164441 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.058537028 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811811698 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.812116642 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075223268 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040756777 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.927349044 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813678594 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.812057882 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812010204 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128727439 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814560735 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.923711541 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815587493 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.813318319 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926458714 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931319866 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.044690875 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057629989 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.844144861 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.761396095 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.322012621 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.096928067 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.885969706 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078201368 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.816523853 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813008257 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909472026 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.568179471 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.986391176 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.131535471 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.07942393 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856370577 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.418557354 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.81240298 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.062112368 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064889587 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.044398985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.059790372 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.981725834 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.123193272 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.81382624 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.813551417 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.01462377 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.947460249 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.818218475 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.174417671 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065534005 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.547062719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.84547927 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120711151 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953564997 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.81775112 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.442220576 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.815211054 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.016226867 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858892282 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.815791276 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815312166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.062092834 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.689063048 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814897768 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.596039649 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.882051031 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.818609341 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082658197 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818436103 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057148652 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816618986 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127567071 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.342922259 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860567696 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.008804378 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.060591113 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.611708949 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.083641386 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13129004 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941568649 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076873468 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.640009942 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.816300645 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101027549 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817753939 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.815565138 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.9858002 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.817748793 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.972359097 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818261976 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078400599 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843766709 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988383436 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819675491 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.091212932 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863408099 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870880091 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.820386689 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935218099 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818139148 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.857383512 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002902352 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820932742 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.818446175 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.39382899 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.815767503 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967024147 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117380904 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842905613 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890066272 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.343017541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817529325 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91278488 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846457825 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.418197294 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.817239432 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.988027369 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.821533134 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.776961714 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.818362304 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.12948876 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.042726131 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.822182503 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818531807 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.614055705 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.522185873 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.817202636 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.995141145 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.055899092 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.46774516 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039722492 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822996013 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951856541 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822879005 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.894596596 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.167922186 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818913145 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.818104013 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.818202586 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.819678306 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81799555 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.046980184 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.848900089 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.504512583 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.95747977 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065042483 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.13163672 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.083240127 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.869848826 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.82402986 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087982397 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822208067 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.888206134 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.82169379 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845058997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069772507 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.82608223 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050119629 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.108435844 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.877918283 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871840441 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.822043835 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.821503491 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.820161256 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966762805 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922904568 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823678171 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.819504605 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938623404 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948443723 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011006881 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.416964398 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.996290483 seconds)
  done (took 892.163566723 seconds)
done (took 1205.90759308 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.821640142 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.82532284 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.811627294 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825242556 seconds)
  done (took 29.045373033 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.829194062 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.826966771 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.828162046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.827438869 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.829213696 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.827862843 seconds)
  done (took 12.730927633 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.882097368 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.825811275 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.824840416 seconds)
  done (took 21.294633164 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.895378827 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.233965975 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.933172567 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.271284086 seconds)
  done (took 10.096007652 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.829947831 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.828146312 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.828862707 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.830334969 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.830823428 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.831880291 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.830005534 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.832009093 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.832047637 seconds)
  done (took 18.237401859 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.993053626 seconds)
done (took 97.157837324 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.841824458 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.927423919 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.881393755 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.704215898 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.618476043 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.71329506 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.827852339 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.117850617 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.956616054 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.497666836 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.938770485 seconds)
    (12/309) benchmarking ("sort", Float64, false)...
    done (took 5.623994166 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.853478012 seconds)
    (14/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.118757717 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.809804965 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.933935871 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 6.824367775 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.215075353 seconds)
    (19/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.228103918 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.962888302 seconds)
    (21/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.954662025 seconds)
    (22/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.852917909 seconds)
    (23/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.649508486 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.830591747 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.078735773 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.827182054 seconds)
    (27/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.430280639 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.884626533 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.901045868 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.950353676 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.07762476 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.341188955 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.94027006 seconds)
    (34/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.953029981 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.178722257 seconds)
    (36/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.703201163 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.170791714 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.921021789 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.79238815 seconds)
    (40/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.456573566 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34134908 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.851214953 seconds)
    (43/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.335840778 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.815667931 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.953233967 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.080649137 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.12170715 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.048595849 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.003651597 seconds)
    (50/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.40352667 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.811666845 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.902495793 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.210437224 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.20530917 seconds)
    (55/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855042689 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.902312814 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.853804617 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.825909443 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.29957774 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.830122387 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.053595882 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.935025304 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.212511049 seconds)
    (64/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.750686803 seconds)
    (65/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.423430171 seconds)
    (66/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.728996448 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.92090437 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.828759755 seconds)
    (69/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.3210819 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 5.607105166 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.896940322 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.903873092 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.238871843 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.129840195 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.937818506 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.84571125 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.501720962 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.932472356 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.815749773 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.1286002 seconds)
    (81/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.122485415 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.363609814 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.903756844 seconds)
    (84/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.187535958 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.130582053 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.198098243 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.331502501 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.188664412 seconds)
    (89/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.990931521 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.900569011 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.895043387 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.851770742 seconds)
    (93/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.041006797 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.932638891 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.886652831 seconds)
    (96/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.435429808 seconds)
    (97/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.993033385 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.857977186 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.827320032 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.165003414 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.960700595 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.479469143 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.517252858 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.927365698 seconds)
    (105/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.835590778 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.903466879 seconds)
    (107/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.836330774 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.923224134 seconds)
    (109/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.086664317 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.83836393 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 2.279306831 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.851794895 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.335409348 seconds)
    (114/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.107065866 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.828352676 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.992641047 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.04483038 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.94466568 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.183093406 seconds)
    (120/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.02936681 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.98872197 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042283953 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.945555037 seconds)
    (124/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.930428626 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.417199418 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.894007976 seconds)
    (127/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.151260947 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.830103786 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.626744096 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.834427668 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 4.776543685 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840769941 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.079286772 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.858711054 seconds)
    (135/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.83049889 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.930403011 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.814070756 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.934571559 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.026494667 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.399260629 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.181399825 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.085116804 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.854198978 seconds)
    (144/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.04011356 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.961959461 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.66570049 seconds)
    (147/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.993066233 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.031806492 seconds)
    (149/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.232286376 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.831738658 seconds)
    (151/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.919708596 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.045368181 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.832501795 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.456701788 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.243659853 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.446069941 seconds)
    (157/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.377561512 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.005782436 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.068918404 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.022942501 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 5.588310929 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.855595231 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.00774413 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.201706122 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.067239139 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.836764214 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.971209408 seconds)
    (168/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.85654016 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.855996078 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.709894551 seconds)
    (171/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.972155858 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.83141419 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.816154587 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.893719305 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.975242877 seconds)
    (176/309) benchmarking ("sort", Int8, false)...
    done (took 4.79429925 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.855898409 seconds)
    (178/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.817838525 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.118147315 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.876970951 seconds)
    (181/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.421431768 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.937886215 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.214050093 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.859363463 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.990504667 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.997935099 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.261950602 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.137289282 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.909304358 seconds)
    (190/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.261241338 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.055058187 seconds)
    (192/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.169662225 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.082320009 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.997970907 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.893048158 seconds)
    (196/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.896103476 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.208568202 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.833897364 seconds)
    (199/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.256876406 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.482468378 seconds)
    (201/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.900443515 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.074929079 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163043739 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.015079222 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.772426897 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.234684843 seconds)
    (207/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.046685975 seconds)
    (208/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.826817714 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 4.847616306 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.858657626 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.047836074 seconds)
    (212/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.974627347 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.119216022 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.033368077 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.514790435 seconds)
    (216/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.824681479 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.211034905 seconds)
    (218/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.305668312 seconds)
    (219/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.06318179 seconds)
    (220/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.761064964 seconds)
    (221/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.922957877 seconds)
    (222/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.838583427 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.85732922 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.961145601 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.00436337 seconds)
    (226/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.122666336 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.790583452 seconds)
    (228/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.588918307 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.428099538 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.883866723 seconds)
    (231/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.139689797 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.128060376 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.012991895 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.835779412 seconds)
    (235/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.920986608 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.785071281 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.141779529 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.52837211 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.898206669 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.131687692 seconds)
    (241/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.185433532 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.824524989 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.53876168 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.21355503 seconds)
    (245/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.010932522 seconds)
    (246/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.928536663 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.851012586 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.942143977 seconds)
    (249/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.173773081 seconds)
    (250/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.977188585 seconds)
    (251/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.839424513 seconds)
    (252/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.977093721 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.760363849 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.988442396 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.44633264 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.93723631 seconds)
    (257/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.839682034 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.935384373 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.859980444 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.859734929 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.835300544 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.864367392 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.49542679 seconds)
    (264/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.845969055 seconds)
    (265/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.920228622 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.862094202 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.078562773 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.941888811 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.120427334 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.196687979 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.22632568 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.212046815 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.822323875 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.362843151 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.865854181 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.865958722 seconds)
    (277/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.919094767 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.98124747 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.840542032 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.828062178 seconds)
    (281/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.934889613 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.928401005 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.918944747 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.737195301 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.874234408 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.822204089 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.953414909 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.952743009 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.821146392 seconds)
    (290/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.945891228 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.165325704 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.048083277 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.746079297 seconds)
    (294/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.932151331 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.837568129 seconds)
    (296/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 4.308882865 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.854979233 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.217047767 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.882077024 seconds)
    (300/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.127201371 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.888978262 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.863584121 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.82407583 seconds)
    (304/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.186329395 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.842945409 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.448020858 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.840785 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.884340585 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.919967228 seconds)
  done (took 1012.774732494 seconds)
done (took 1014.550094936 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.871946281 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866571212 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.849669601 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.871458121 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.961007657 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.878209889 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.861202914 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.851796518 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.898274991 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.898592864 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.848863118 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.876334908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.852758559 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.849496961 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.849655878 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864436777 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.158148391 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.879470905 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.867867499 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.859363183 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.867009257 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.849434564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.899411924 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.877458412 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.853277933 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.852201402 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.853949435 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.870647075 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.962809706 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.853933749 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.852661352 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.861376206 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.156767322 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.875880733 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.84596264 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.87050761 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.862928924 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.860017285 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.854891005 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.882853675 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.299303425 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.857538899 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.853223936 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.852700109 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.852721962 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.855162415 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.854487502 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.858145616 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866159785 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865609646 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.296736636 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874435836 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.856390534 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.854118757 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.863022927 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.853283821 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.855486642 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868648789 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.873416783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869808607 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.149872634 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.885191897 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.855303068 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.869949175 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.860394114 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.334792157 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.85390507 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.857147401 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299144166 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.86373229 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33481936 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.868337373 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.854470483 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.867298681 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.884848648 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.160103426 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.876378568 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.852869929 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.861732692 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.851955185 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.862932667 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.867401961 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.858225022 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.854224301 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868634747 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.882241094 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.864890149 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.855779136 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.862186822 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.874179746 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.862258254 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.865990416 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.857419413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.850138295 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.866619988 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.858897156 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.858108581 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.858892842 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.860124328 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.865503228 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.299905241 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.87773204 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.851105798 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.852299849 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.854900152 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.869952958 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.300182219 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.861610546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877346694 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.903201746 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.857583015 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.152362517 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.885408185 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871328396 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.863969247 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.857836316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.850804963 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.152478919 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.326479958 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.877031743 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.857896701 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.854973319 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872743716 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.857865042 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.853641948 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.162724193 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.884909619 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869499505 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.977473372 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.866973878 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.887869923 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.855006079 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.859257463 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.88497144 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873194334 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.887877154 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.860097788 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.872850546 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.873773074 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.854044895 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.867977759 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.867204943 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.858357577 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.862176881 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.852182968 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.889423765 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870093128 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870170394 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.878044363 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.978826171 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.855112219 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.154766732 seconds)
done (took 291.556845797 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.927859604 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.848995318 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.957173758 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.85407603 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.940027866 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.943552732 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.85140172 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.851362061 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.851742429 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.241027532 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.851801455 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.851878215 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.853457964 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.851044861 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939363255 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.854655864 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.85136023 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.203394988 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.855583107 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.926011618 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.856308799 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.851762833 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.854497959 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.238953014 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.851001574 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.85250807 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.926098425 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.854414556 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.203347412 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.855019614 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848056016 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.20413532 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.946080553 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.882808319 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.865193882 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.853665274 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.942603472 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.869276475 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.939361908 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.940190037 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.959316695 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.886562935 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.85561924 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.853016908 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.858259843 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.856539355 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.852984861 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.883218007 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.858467765 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.853299957 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.205332182 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.865999734 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.863271268 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.853952255 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.853646352 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.878527799 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.854519019 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.857608088 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.947127093 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.857994731 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.920183317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.242273495 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.242056412 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.856267818 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.85015118 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.854048723 seconds)
  done (took 183.450048579 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.924740938 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.93359994 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.926412484 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.861401923 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.909315421 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.930702513 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.861101402 seconds)
  done (took 15.13652401 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.864449983 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.857770623 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.908160686 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909563865 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.859409586 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.010780332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.858678337 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.871280604 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.855391772 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.915439528 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.85892242 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.857520737 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.865286232 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.852011835 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.908416547 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.870036201 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.973701274 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.859973767 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.859272653 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.016262996 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855496065 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.865021851 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.913339158 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.871995316 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.859324018 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.865994574 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.443216457 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.859984487 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.855142382 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.857645983 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.855991993 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.900451184 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.858435549 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.854636729 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.857514821 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980483432 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.859933275 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856111123 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.859868742 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.855098524 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.85934932 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.859464257 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.859248821 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.857433079 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.859180079 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.884204464 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.860271628 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.86077001 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.860690873 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.861028159 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.911305172 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859977211 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.857005558 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.857778785 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.919229988 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.867506686 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.861211491 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.857824087 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860416591 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.858082949 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.018256687 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909146993 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.861518266 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908958118 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860571237 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.86029269 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.861046625 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.86095536 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916599196 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.860121698 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91022072 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.858737142 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.018465849 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.885031717 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861835612 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.86457422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.86519266 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.861360786 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.854496794 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.868372353 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.858311884 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.863817419 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.868158752 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.858334477 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.858806776 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.969845768 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.977364769 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.859334437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.875379087 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.869582108 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.859368926 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.915704664 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.861529899 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.860044009 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.915408903 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.977493844 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.921918559 seconds)
  done (took 204.878703808 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.307640323 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.871617145 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.864771038 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.881003911 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.864185879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.862831358 seconds)
  done (took 13.446841534 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.865526249 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.863502369 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.863038367 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.862506166 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.863513952 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.864412825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.864394094 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865512856 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.86825818 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.862912287 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.864757821 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.865546967 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.864515103 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.863935682 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.864546284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.862659158 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.8637549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860509899 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.862771685 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865343707 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.017098505 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.864430689 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864584251 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.866756354 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.869409293 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.863514714 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872186116 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.863733415 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.864334608 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.870689438 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.868089137 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.865539175 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.866214856 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.871551632 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.869978927 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.866725337 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868747855 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.866639828 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.861641161 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.865708603 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.867519708 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865615216 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.864712184 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.867782734 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.867516844 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.870214231 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.871233127 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.873114919 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.866464198 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.868545192 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.867266832 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.865375723 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.866466848 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.867343168 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.871366821 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871748738 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.8721821 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.867236957 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.867676477 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.868122419 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.866761253 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.866895208 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.869783052 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.870915694 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.864534071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.868725735 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.868666203 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870748796 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868080838 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.866803145 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.868634996 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.863716821 seconds)
  done (took 137.34858992 seconds)
done (took 556.061313538 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.093887178 seconds)
  done (took 8.892140718 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.993569819 seconds)
  done (took 8.872141922 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.537336981 seconds)
  done (took 10.334505201 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.872088763 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.890287767 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.872337337 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.86733385 seconds)
  done (took 29.310302068 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.887442829 seconds)
  done (took 8.685692196 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.874938213 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.858629861 seconds)
  done (took 15.565701313 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.020315798 seconds)
  done (took 8.818999795 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.90932228 seconds)
  done (took 8.713132248 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.885838346 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.893468626 seconds)
  done (took 15.591745708 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.846949449 seconds)
  done (took 8.645198641 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.541867959 seconds)
  done (took 11.350500923 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.864137109 seconds)
  done (took 8.676280583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.862287423 seconds)
  done (took 8.660918126 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.005938095 seconds)
  done (took 9.804076576 seconds)
done (took 163.719118288 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.864698845 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.861357114 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.86126318 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.860119692 seconds)
  done (took 29.245793046 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.900494589 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.900783396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.9020065 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.911211701 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.903733166 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.900910363 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.892499882 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.893089312 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.911300849 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.903317958 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.902837272 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.903102292 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.902485965 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.89291673 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.903312337 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.902987192 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.91174567 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.903150671 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.893168215 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.903376883 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.868333066 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.911572054 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.905085117 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.868283823 seconds)
  done (took 47.391534634 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.068223628 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.941330852 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.023372439 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.921025791 seconds)
  done (took 9.753911237 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.920012723 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.922296445 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.933771918 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.971654662 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.003895515 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.931591578 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.895266698 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.890672074 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.876699658 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.92285102 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.997645572 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.937790432 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.006503768 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.868561504 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.056000545 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.870156898 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.868499355 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.921718221 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.972488138 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.987395342 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.869691148 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.92094883 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.924207959 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.937987564 seconds)
  done (took 48.209722271 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.867727071 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.877587007 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.873804454 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.868581511 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.868518465 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.869970039 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.874099334 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.869594735 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.890082184 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.869508537 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.867472488 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.868373766 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.867580362 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.869540335 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.868148574 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.881975823 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.882202165 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.869053593 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.8724461 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.875067777 seconds)
  done (took 39.253013379 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.863723137 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.807186184 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.216050245 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.121027372 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.864014413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.864496845 seconds)
  done (took 32.539438997 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.883872789 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.935047808 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.878188056 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.927951563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.008956047 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.87938431 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.872027798 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.940655075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.982987439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943861152 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.8919135 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.898635083 seconds)
  done (took 24.847248873 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.866105995 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.867819369 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.867808895 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.884826412 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.882465273 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.878971582 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.879272702 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.865326342 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.886847261 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.889972279 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.879527093 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.883870451 seconds)
  done (took 44.339366604 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953954362 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.910472515 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.89918856 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549183673 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246330988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078414848 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.516502911 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.197040216 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.870681598 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140759883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.871768145 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970964106 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122698104 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376115559 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899060339 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.326013977 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15832406 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073430156 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894070374 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516369739 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929143111 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.073310897 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.58454682 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922246044 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078397487 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.000113274 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.127585855 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867448432 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000490261 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903223887 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878361242 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867154087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141806079 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24159932 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972903879 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878539635 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.487839087 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.583593445 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.945006161 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.548403069 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.545442304 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.985546429 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878755178 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868487877 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802153418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.040510042 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246295361 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.87398092 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.579452116 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868060071 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879827759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963203005 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.87294608 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.687308686 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780217753 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.872214519 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.867403803 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876274632 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442987462 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943611943 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069151665 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.843536918 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.961708493 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.52116926 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250246175 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.014671191 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.873477882 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873775901 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803592411 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.595587953 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923471196 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218342353 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.890869764 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519583059 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168893063 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.937392356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814044684 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136029851 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421604628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.844195875 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097790244 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870442004 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80624845 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.815674495 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.804451379 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128358447 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908787104 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.628642655 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91166864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199434463 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882733637 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888371688 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895402928 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094744418 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.827720904 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872646264 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.633665286 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024228383 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894031245 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201774014 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805989532 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.877226669 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128074902 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.083429996 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.972387649 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.375083855 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022848145 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453237988 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.924582335 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.035174046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.921252796 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.133368199 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926771033 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.952863902 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924042168 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873019135 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163803932 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479437381 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.010612554 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.850712419 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000232487 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1939834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901138625 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954576382 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882246817 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872237946 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.620534524 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423776402 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.87276373 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.875438729 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973450428 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922018478 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.874804946 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819848304 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.497505507 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861296015 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.887891175 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097209202 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461852543 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186361657 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8080561 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202163263 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965648136 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.097801766 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.513167315 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.938824522 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13571522 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976045629 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.006625984 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922902379 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894696353 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972821011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89601255 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.047801415 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167401226 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.878675172 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.878520204 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.625503582 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909095151 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884622981 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.879813408 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.628686399 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139291137 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895966506 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880186177 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.764958862 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.889059151 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939041609 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880375565 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885917686 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.418358054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586518503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.883108229 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.466427217 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100533459 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887444491 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.519154755 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991958368 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.957234755 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139812666 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932291085 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.810077001 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.588543804 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.568874002 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881077836 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812012654 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877647575 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885962341 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888162375 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.074107513 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144337434 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91823378 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.52665101 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.918194611 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887678734 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.883028989 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877559866 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388387513 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956651472 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088035088 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.92440527 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022576469 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.891933097 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812350349 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881719127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883237668 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878256833 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878195343 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910526528 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.538929189 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256765598 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139277425 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.488794387 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892609334 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.554336824 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.933856986 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.878387893 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.660794801 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06515596 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.920433464 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906451436 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.889315107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.631454393 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.57305354 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449698395 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180763983 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174607659 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307501337 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.108253041 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90764317 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215603184 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813623035 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444189306 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938981926 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219616268 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824195946 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963857671 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.517226585 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213514182 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896605532 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10818165 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258379632 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.589415125 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017204026 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092476344 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914837985 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.057888144 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843212971 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.170909702 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021896509 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.528659525 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078396519 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21237915 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544013767 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.999477721 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.880036995 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.561516272 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965822299 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.598151378 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.051995704 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.088179734 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.804006808 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344870587 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887139298 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10659757 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223879193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.077063904 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.003063013 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817781066 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892333469 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892445143 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.883822141 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.879267622 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.769891448 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.135419154 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892960314 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815951078 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.016825697 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165247348 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.781872664 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.887800516 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882450838 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166858574 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437200647 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048734992 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.001343664 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405121026 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889876725 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816816781 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816974381 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.574758028 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88845982 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.857730173 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089245523 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.985638134 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802402224 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986420004 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964631887 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140304216 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.897203681 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144160201 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154183773 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.584681734 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908149969 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.983239936 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544442864 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.983945744 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884250514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.119728042 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639995056 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111097443 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.906165863 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.839755922 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.884402889 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098584066 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884529101 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.743570329 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108049034 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.607347423 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.888753313 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195614578 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955183904 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.72072241 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.923243601 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.978172672 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895936152 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964722077 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894668884 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.895782917 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895781374 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931459148 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737481788 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.002364553 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.899012135 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980143647 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97487447 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409002074 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.891150292 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149784523 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232386476 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19869902 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941149776 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887168096 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893786949 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821060557 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035421988 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112526263 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160775734 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.017909544 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.002897865 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912056908 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.527045121 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110048898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128172932 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162165292 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.780772062 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411969644 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92748 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.887015454 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897844132 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.098526146 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094838692 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185835837 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034090365 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.99448689 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246439896 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161581218 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.887331936 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.888712802 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475904623 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.894262552 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572012459 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.927973325 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.797218729 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157069906 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898945396 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272730985 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.910658862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.043956461 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.661689783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.579942468 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177090022 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.870492633 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.941976291 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152320363 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254467783 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197183055 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956530318 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899362091 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.004250677 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036040538 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.769984476 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89039027 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88970527 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938006929 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.598813349 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.899478391 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156023378 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195224025 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.888016542 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.773326061 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912691746 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.900653269 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112908756 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148655591 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142533331 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901219418 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896827588 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.705207168 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156407772 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944452455 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824709145 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.894203868 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988609958 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138420461 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911131189 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.343695403 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.601272351 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157769477 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.890254913 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912888538 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069079447 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24238233 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200324604 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.424205372 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096774093 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477033909 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.480222521 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192756892 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.895232506 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.063441737 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194672099 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.894905354 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.99800844 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930144129 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.151418959 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199003742 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.900383875 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546416071 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.859419247 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.234337007 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451101105 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830109549 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902390053 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.952355405 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89240684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.020919192 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904577337 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.77695157 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068206022 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.67695399 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168865993 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.898362419 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.877628987 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.626409203 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.193204407 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928111312 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035496819 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895074212 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.747716081 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.243166802 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.148510297 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.999408703 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.901123371 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.897472366 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894446892 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880286458 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.089757256 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.090603326 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168570317 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.025474339 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.931349225 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.897574549 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.110234999 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106319237 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.737480069 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025616255 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997748189 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936314238 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.799551246 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.40199222 seconds)
  done (took 1678.232278453 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913177545 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.920759506 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.927262951 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.947379873 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918886514 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.932853063 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.954977593 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961803236 seconds)
  done (took 57.309311331 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.897268245 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.116318405 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.903912913 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.895300014 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.905158997 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.895882541 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.064416547 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.905958687 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.904530431 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.905929369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.89596059 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.896191517 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.212870272 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.919510505 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.89616038 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.884305254 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.904127526 seconds)
  done (took 74.856769028 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.895522949 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.958591653 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.921357378 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.910410031 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.969515881 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.906296968 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.754455826 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.918211771 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.898061966 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.05421867 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.529548305 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.912381481 seconds)
  done (took 87.463278674 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.904464071 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.90235062 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.904489193 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.90384665 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.903049804 seconds)
  done (took 11.354543679 seconds)
done (took 2186.620903923 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.148984469 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113612726 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.125523716 seconds)
  done (took 6.073554015 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.045298125 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.093258468 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.213357088 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.218058789 seconds)
  done (took 10.406256969 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.186039054 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.283250222 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.104271825 seconds)
  done (took 8.407032665 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.300280816 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.905492527 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.006888924 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.897455466 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.896613915 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.898822139 seconds)
  done (took 22.527464373 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.899597612 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.902335358 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.900854355 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.90256743 seconds)
  done (took 9.438470298 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.881290586 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.628847415 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.88211931 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.898299601 seconds)
  done (took 21.123375545 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.647083438 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.658861543 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.643332559 seconds)
  done (took 9.783010686 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.474012262 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.811015532 seconds)
  done (took 9.118641763 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.156633191 seconds)
  done (took 3.991222779 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.031171673 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.164524995 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.367809693 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.391300196 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.447922017 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.774955209 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.211631831 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.151362582 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.291609831 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.336019771 seconds)
  done (took 25.002907097 seconds)
done (took 141.066531762 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.283910263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.900256036 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.10254582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.28193169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.125054455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.106602492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.102590084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.264706311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.750351163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.748261743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.242417802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.123522295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.048467842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.143300372 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.048378919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.268825252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.171447308 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.298052014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.939638441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.138068623 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.106257331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.881455757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.087428819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.896843774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.159580218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.060264604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.45912476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.275539326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.093719803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.470890032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.06224662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.288397109 seconds)
  done (took 170.766323358 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.68244165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.900479096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901236525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.901715464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.483775412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900824199 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.900474748 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.899944502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.153350167 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.137985053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.901660746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.479466568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.901746196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.901611803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903800883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.900914598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.26128171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.714138624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900711319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.902278251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.902377449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.395311813 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901275307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.4483328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.232036931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.904171791 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.872257479 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906992095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.906818041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.901551043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9120074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.901448763 seconds)
  done (took 209.653148575 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.901941023 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.903217311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.901079418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.902877372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.916432986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.902170146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.903376414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.90154803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.47719054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.451057719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.933339783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.909284192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.909495236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.90239913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.908950466 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.902344948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.910682028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.912313338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.906765574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.911040622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.917293495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.711397845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.929641898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.719287445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.930078061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912222031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.903516304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.910810621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914493896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914826698 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.914356466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.903917664 seconds)
  done (took 221.700039992 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.105162126 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.908835305 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.90991339 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.864228187 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.909893081 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.908800946 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.901428967 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.106025637 seconds)
  done (took 19.468777357 seconds)
done (took 623.435594826 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.350160742 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.192491365 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.084677694 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.933136762 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.140109759 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.965108727 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.930389023 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.992655277 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.126898388 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.00265887 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.566755669 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.949488034 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.660163721 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.953184885 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.057990205 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.987168334 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.466129644 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.550424719 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.108939106 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.97966335 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.099647905 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.865119534 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.00246304 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.171376232 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.688534957 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.91254942 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.134888616 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.471027839 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.940048137 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.096001367 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.649691747 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.341617161 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.940975983 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.928335931 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.980087455 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.963498908 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307852291 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.940153406 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.056530865 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.669925585 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.965625533 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.998201266 seconds)
  done (took 105.9640168 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.901481925 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.900204284 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.898705472 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.900725633 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.901013146 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.900856453 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.898918866 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.898950872 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.900345586 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.899243856 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.899592968 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.901534571 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.899072079 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.902476071 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.899824865 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.899733467 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.900513037 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.902818975 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.90000062 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.899816791 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.900896922 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.900207897 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.9011538 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.90012974 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.901858175 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.901749916 seconds)
  done (took 51.269235016 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.912954706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.055050409 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.129760829 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.932197766 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.915075089 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.917663392 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.933255516 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.918842075 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.916542542 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.917175183 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.009274336 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.91990597 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.933703567 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.1314742 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.928064289 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.913366042 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914770759 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.914768154 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.063397296 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.929915049 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.93572945 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.918878058 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.934590973 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.927752298 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.917052561 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.916263158 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.918711792 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.381819655 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.922828536 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.009401642 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.957190463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.939798875 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.349093639 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144762638 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.966971243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.924747744 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.915733625 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014162082 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.920793205 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.915800741 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.932830135 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.919894503 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.132852713 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.417728474 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.928616941 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.915711008 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.389340055 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.02111498 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.966319722 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927714086 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.137386037 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.931460283 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.917371332 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.917579089 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.953929697 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.927236484 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.917216447 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.276659356 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.92752163 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.935303752 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.920864233 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.918648874 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072325952 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.925835864 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.060678641 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.92592687 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.924344321 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.917863167 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.135001304 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.931178956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.418947424 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.928944375 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.916924085 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.012332485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.062703205 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.415254589 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.929529778 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075150692 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.364681402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.940544909 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.925441716 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.372006963 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.944414932 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.925366862 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.919309863 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.91900241 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.917640657 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.960891105 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.933608041 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.351705296 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.42520163 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.289646491 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.9443695 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.935323647 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.919929264 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278195157 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.926394872 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.919244095 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.130219688 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.437424833 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.930981429 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.926312497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.403911559 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.932584678 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.937639719 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.927571473 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.138678753 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.933644986 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.962220498 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.919461924 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.926231377 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.923318305 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.938279288 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.926482934 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.919382622 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.394405806 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.029715287 seconds)
  done (took 237.52595373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.91441895 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.915544586 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.913752718 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.915196444 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.913809928 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.91936534 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.913759289 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.914674531 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.920102261 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.914562928 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.914850904 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.919448038 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.917692663 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.922642821 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.383225228 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.923784324 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.527241529 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.920703714 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.916705808 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.916644814 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.595474086 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.922797982 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.915511371 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.917203283 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.918803355 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.915218911 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.92743902 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.942581334 seconds)
  done (took 169.326084409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.922815579 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.105684431 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.941470432 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.958921855 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.933015392 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.920411207 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.948000978 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.947297281 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.928571038 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.920356234 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.920159485 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.985276776 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.939625838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.049676925 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.954952822 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.955115809 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.031483378 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.930030613 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.920871358 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.921797901 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.952412734 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.92046256 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.985123634 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.058056931 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.942122993 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.041016713 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.930026061 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.925099897 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.924119344 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.043720954 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.939513872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.984837708 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.95630462 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.942657337 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.047260866 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.042424819 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.031124422 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.955244905 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.928497719 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.922579325 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.922665093 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.913089796 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.044590895 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.942949769 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.926044471 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.034383267 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.942469341 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.926361134 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.933624993 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.92290052 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.938788796 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.944224556 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.993409422 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.059582117 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.958421154 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.951368789 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.95169152 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.204435541 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.938817044 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.02600177 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.919453963 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.044678158 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.946524016 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.913594473 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.924660803 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.930578758 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.953672943 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.95682627 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.033572317 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.933085558 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.02789176 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.961106216 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.931939264 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.924997652 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.926979464 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.045882796 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.046509211 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.961460938 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.964156471 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.957707537 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.921333828 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.927682605 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.915680994 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.945242715 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.929762194 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042494676 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.047442218 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.93465095 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.92821072 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.928365813 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.92884021 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.95274275 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.053836403 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.964309127 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.026105584 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.999224287 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.003614787 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.942381035 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.940149702 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.929657207 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.990807449 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.943072849 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.937556993 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.251031917 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.000795792 seconds)
  done (took 208.632286274 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.023399793 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.397600656 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.979805841 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.983419013 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.214225288 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.360459611 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.770528128 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.97666024 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.975662055 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.001549588 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.135553048 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.035972999 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98859432 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.963153038 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.392806491 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.967398529 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.978027838 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.997171748 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.981833093 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.521163856 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.28126962 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.103454827 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976029096 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.143256196 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.958863168 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.250997955 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.469309425 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.36348036 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.010746275 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.319895817 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.314206118 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.658958254 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.201128172 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.218495496 seconds)
  done (took 76.780764018 seconds)
done (took 851.337783073 seconds)
SAVING RESULT...
DONE!
