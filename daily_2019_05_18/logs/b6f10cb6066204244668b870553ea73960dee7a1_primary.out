cset: moving following pidspec: 28982
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.283790987 seconds)
loading group "string"... done (took 0.581483429 seconds)
loading group "linalg"... done (took 7.123323476 seconds)
loading group "parallel"... done (took 0.164877947 seconds)
loading group "find"... done (took 1.117155965 seconds)
loading group "tuple"... done (took 1.976644217 seconds)
loading group "dates"... done (took 1.263738012 seconds)
loading group "micro"... done (took 0.235209972 seconds)
loading group "io"... done (took 0.962812998 seconds)
loading group "scalar"... done (took 38.564768076 seconds)
loading group "sparse"... done (took 12.317311553 seconds)
loading group "broadcast"... done (took 0.963248123 seconds)
loading group "union"... done (took 13.035268818 seconds)
loading group "simd"... done (took 4.420899235 seconds)
loading group "random"... done (took 8.930711613 seconds)
loading group "problem"... done (took 1.9861321 seconds)
loading group "array"... done (took 21.119559415 seconds)
loading group "misc"... done (took 1.918606088 seconds)
loading group "sort"... done (took 3.199155578 seconds)
loading group "collection"... done (took 17.859750976 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530638682 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140490108 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115734705 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136798344 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182696412 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130022818 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143299901 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084232396 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.014595055 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158765765 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137053063 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.473750667 seconds)
done (took 5.015679898 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.247358538 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088738436 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09565502 seconds)
  done (took 0.905389383 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065163504 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129207549 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07975388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067973191 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066416796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080617137 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066213277 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064981683 seconds)
  done (took 1.270506361 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075920079 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068480182 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083788589 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067725715 seconds)
  done (took 1.014061019 seconds)
done (took 4.229882256 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.89511526 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.244660094 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188055976 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450449851 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14703335 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187072729 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.743105976 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.364025329 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208435866 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10062334 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104460854 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.37775378 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106083452 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.749478652 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077539408 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105211742 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170216515 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.469071251 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08033862 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081544889 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103423205 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143877333 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102444589 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076167927 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16855763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069053742 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146681744 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095247473 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067715201 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.240481056 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.1890933 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.753250295 seconds)
  done (took 10.76636302 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101404561 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116042621 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067985009 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138735158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101352176 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084981444 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070754782 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081993911 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090935694 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157098517 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112831238 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104718139 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081280875 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069581094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099689049 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210925447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108883622 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083978776 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086013518 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07499832 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120610486 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08207435 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09334595 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077181444 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151209511 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193158504 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110647663 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111020442 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068341571 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080516308 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13104121 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140720943 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064965442 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081163106 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138003322 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110036713 seconds)
  done (took 4.530817402 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.02942675 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159956724 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091027141 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152471039 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084900953 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108847079 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082594361 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099860503 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245666366 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.073547058 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.458494607 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085215572 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127189789 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085995005 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085351179 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068043799 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083959706 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.51999699 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145279978 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103584688 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102605213 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074424115 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086314411 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.71688878 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069821218 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06699798 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083965481 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059123377 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144332041 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068014856 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.213316111 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089430753 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087487978 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102138016 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19936991 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094227085 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.156572196 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081868503 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067116719 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169226716 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073346149 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083627026 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088483927 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119402194 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119742601 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068639216 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081945362 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180836494 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067045272 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098940519 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.912517308 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167373582 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080385483 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068062493 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286783992 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084433646 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084974012 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064184966 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289544638 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096283529 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.146766279 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084501011 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066443544 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082246405 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065082936 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067398586 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.727408105 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085071191 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.11229604 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069631339 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07665234 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085413575 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067781224 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088010206 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072664148 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100988095 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067044244 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067466703 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082981339 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066063851 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082989508 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085333521 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202126789 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083352141 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067956779 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065217964 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102764994 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110781324 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070055538 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065198112 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115668913 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069375739 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082968087 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101417566 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084876308 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099231602 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070279307 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128265381 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069522041 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171863026 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068632829 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111946531 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064815344 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088686144 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09987706 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092451274 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067475414 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152923408 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064522582 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081971645 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066494207 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081326646 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068213044 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068304638 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098548001 seconds)
  done (took 22.093716747 seconds)
done (took 39.136855191 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.295865754 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090113391 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090706992 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073391187 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090661204 seconds)
  done (took 1.439119901 seconds)
done (took 2.205150056 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12339594 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118078032 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063283614 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11202728 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063233909 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1161949 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113031756 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080880821 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118068123 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064908889 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110915794 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064551241 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063464352 seconds)
  done (took 2.011435941 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085257729 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086102043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085248522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081489907 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077798449 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082552286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079606828 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104297925 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080090478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087089761 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064025426 seconds)
  done (took 1.676992828 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0846249 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084663445 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085506601 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081752429 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07808209 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081340011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079497443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104935852 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081753505 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090522746 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064859704 seconds)
  done (took 1.681403476 seconds)
done (took 6.126751523 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080038394 seconds)
  done (took 0.840620676 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.690763234 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.729094105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08337821 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133764555 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222394489 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155269728 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.449644204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11080235 seconds)
  done (took 10.512761935 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092789436 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101923101 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069917926 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088675781 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071877441 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086718252 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071496821 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070755228 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083092353 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071334429 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084077251 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068875295 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084571269 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069538636 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070996698 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086923289 seconds)
  done (took 2.103247897 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095600396 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092680368 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090642518 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075324764 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089323871 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072894429 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091510081 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074526887 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086079386 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072719422 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090914141 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073890718 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087000742 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066388999 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090211903 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076060788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086376544 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075766607 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090987601 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07646746 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090706176 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065345402 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087730906 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074807837 seconds)
  done (took 2.845749228 seconds)
done (took 17.067844593 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133572816 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078026075 seconds)
  done (took 0.979132726 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084019277 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100764514 seconds)
  done (took 0.959144076 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084732003 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082780948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088895571 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092374969 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066474989 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081452267 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10227941 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066811509 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081036183 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067345155 seconds)
  done (took 1.587833875 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070718219 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093647539 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070362521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09620137 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073619937 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080475194 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073351083 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083580443 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078352667 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078166261 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071822568 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099128965 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071749867 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099878522 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072879909 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08380937 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08586374 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067266783 seconds)
  done (took 2.22504964 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06782755 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067877047 seconds)
  done (took 0.909886185 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07000541 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065294875 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084195295 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067401898 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078837259 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062918908 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078754179 seconds)
  done (took 1.283010442 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.4034976 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109150581 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243633482 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088618597 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102424505 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262955745 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083376351 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071255332 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087876506 seconds)
  done (took 2.264168727 seconds)
done (took 10.979153193 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081686818 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08602204 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110077932 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418098708 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106327716 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066324694 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132465765 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.222349243 seconds)
done (took 2.000817438 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128239295 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616369687 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400132289 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212760405 seconds)
  done (took 2.010796925 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382718842 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092344693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074358325 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066998537 seconds)
  done (took 1.400076091 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068468582 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069604181 seconds)
  done (took 0.921380664 seconds)
done (took 5.241484232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069031096 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102686473 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066565491 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064009697 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081486076 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066646895 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063911688 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.081308071 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064419879 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066858423 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082758995 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068882925 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.08195154 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.06716269 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066276966 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079488753 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064400088 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066411867 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079733781 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064102688 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063456637 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081351991 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064469766 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06302044 seconds)
  done (took 2.540210256 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087902762 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084616541 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072977188 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088275719 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070720066 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08823305 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07270789 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067157091 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087350674 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068984908 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086214705 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073691055 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084138719 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070962856 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084432665 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070974568 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087134257 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067220601 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068337205 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08612103 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07154347 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082445849 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07139512 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08737392 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070262209 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086197728 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069311034 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082196872 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07211903 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085694982 seconds)
  done (took 3.132099156 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073332224 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065478678 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081027429 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071596185 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063695086 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081691152 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064342875 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080025948 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06567853 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063546426 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081342371 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064185829 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063888756 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081292565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065908731 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083414123 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081200897 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064923808 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080658998 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06471235 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06672375 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080443658 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064087872 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081032068 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064562087 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063116162 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080810011 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064263287 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064840175 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08044751 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067235754 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06779538 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080298473 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071339735 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083624951 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064477815 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068227166 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080213217 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064784175 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063531015 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079716612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064679573 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063219535 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087360683 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064258184 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082853654 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064751635 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065205988 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080983494 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067599937 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080255114 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064033757 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065303654 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081298273 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067798741 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063935092 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080846497 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064201182 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081447772 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065130569 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064037104 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080234949 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067623363 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065042246 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095154697 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071430891 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079788925 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066586014 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065648679 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082585798 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066331302 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077427103 seconds)
  done (took 5.969079706 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119997633 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092995319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085781522 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067244896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079394851 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065246446 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067265425 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081191529 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065666793 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086183172 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064980608 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065840144 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082428703 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077104311 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081773669 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066723523 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086718147 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062536415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064898331 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084372782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065151357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084079418 seconds)
  done (took 2.491706225 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190602958 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089626588 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109691702 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090917778 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084736267 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074462352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070503758 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086843047 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070761686 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084502505 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069120336 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08697098 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068543779 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084247833 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068817452 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085375453 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07174713 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084835897 seconds)
  done (took 2.36662745 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080836608 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067763984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107892399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067194903 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083209125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069319439 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089252598 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075896401 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084648213 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067509564 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091278277 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069823185 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085332586 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06744968 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068686226 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08272104 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069440611 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082721038 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075609568 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087812053 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072631671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090824036 seconds)
  done (took 2.53340044 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083438755 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07012956 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101189275 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084944546 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062851096 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065956707 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089583453 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067894137 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088534771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068458733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067048887 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081892787 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071304428 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082831299 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071365884 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082889505 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0694951 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066422342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085252321 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062993858 seconds)
  done (took 2.320880442 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090192789 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08638406 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070161193 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093259237 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068266649 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084367091 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076821978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084791795 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068545811 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109089303 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067925485 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085935421 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07580475 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089169224 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068022495 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092325063 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076086087 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091966451 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067815639 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085072879 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.221558983 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067890065 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092542054 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068200186 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084179518 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067969185 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06800187 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089317951 seconds)
  done (took 3.191230185 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06907858 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066998679 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0806856 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064597348 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063929155 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080824282 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064602409 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06407667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083578557 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06440176 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065848078 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082735316 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067239539 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082792105 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066325598 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066793354 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082521505 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06453219 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064647474 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080288653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066789058 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066029467 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083381173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064989027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079893993 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067275991 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06452386 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079824925 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067490848 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06391097 seconds)
  done (took 2.929346439 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079256847 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092161518 seconds)
  done (took 0.973308055 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066253862 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082245574 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08078849 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070586802 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087728809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068048767 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090884966 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071538608 seconds)
  done (took 1.419893413 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08531001 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079438532 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086669357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077800364 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094757542 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082804746 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154646385 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084914225 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073615991 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082193385 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080581224 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066302152 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090695992 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0667611 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089186021 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074308547 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064971916 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088894371 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069965563 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082525737 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068764714 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091986117 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069838239 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064047657 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085659829 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076442701 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094729707 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067851176 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08739167 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074504876 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072904756 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078096933 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066684896 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083921303 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065723039 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093415563 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082605032 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08644279 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076030818 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068282118 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094542406 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062476431 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088677888 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073497252 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093469054 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067857629 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067940338 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080275729 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065657183 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085770386 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063092694 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067226711 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07836713 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074242155 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086667282 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077986184 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068246711 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085440347 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070261764 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086793772 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07373977 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085172205 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070189771 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066388543 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093050426 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072076098 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092458496 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062917396 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061717851 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082299308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077206787 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106340609 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072951829 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084546878 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068861647 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081135826 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070308327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068877756 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089227647 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073298334 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084129318 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072789874 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091469165 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067823903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069103979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091367856 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065115235 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085391624 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065073804 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099291813 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066114863 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081312396 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065446921 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077353642 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087732195 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066717734 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080814923 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074287803 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061475596 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084482822 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068710215 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084866936 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077547695 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089332881 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07393606 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091988962 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075472767 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067190833 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087095778 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065506213 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08432126 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06625088 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073472228 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078308061 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070586116 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083940799 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068408684 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074533355 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082669338 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067182931 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091499763 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072752969 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082771714 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064660795 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07023318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083552089 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070407776 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092591253 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066375457 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061619143 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079078375 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070129598 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083630526 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07073122 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088354224 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070852519 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062058923 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082519064 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071743182 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092344712 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067959486 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067718089 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089716906 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067594392 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083611317 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074051974 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08583697 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067329587 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072346008 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084662629 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063170934 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086627852 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069692099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065858193 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088365848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070400968 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086636354 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06789837 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082454641 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072554376 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067489977 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083021964 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066722084 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082204081 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077834996 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068299635 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079655468 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064797013 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090922156 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06527652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066180355 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083396965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069514893 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084679666 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065423651 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066664393 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086364642 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077735965 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089157983 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068013711 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08982867 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078378861 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083726967 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069410657 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066927212 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085212634 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068673967 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092104959 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073063218 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089085579 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070559722 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063866646 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089798235 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074490066 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083868754 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066068732 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06551061 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087624131 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072421537 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087620247 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068244235 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082351967 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068570366 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06956112 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087003303 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067470144 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083843021 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072522639 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083072588 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073640357 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067829016 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095001795 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07018356 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07951216 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070873727 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082016 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073471296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062574111 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083119418 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066613753 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085091322 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066685724 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070700156 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079328791 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074183943 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091667997 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067484572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067364231 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084948569 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073972132 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085631377 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070643759 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07039697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091635701 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077409913 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084154309 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070638223 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094710792 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067925118 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061728488 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089143519 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066396065 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083113664 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066450597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065448723 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087875429 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075883944 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091727086 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062096634 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0864697 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066776641 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066324278 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079883549 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.0718542 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087444401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06775842 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073194547 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084787771 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068238187 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088033101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06760436 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067367622 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085724107 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070732194 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085289786 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070540227 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0660846 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087600915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066485657 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082160823 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069444536 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065914718 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084967669 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072881483 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083876958 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068026297 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069612477 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085515969 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067860673 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084262805 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067300223 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087523033 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0686219 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067713911 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086599777 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062971072 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073560352 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084755569 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074056661 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084734762 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064050654 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089647275 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07008218 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071638021 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085914641 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068421453 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085728116 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067807039 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086837289 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074321619 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065107502 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095426809 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074359333 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085300658 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070545659 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066804345 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086824948 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066017064 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085299761 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068729192 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06693344 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084503132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071924286 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087008087 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067761874 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068350957 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086043136 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067503195 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086109168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063117914 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06653091 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084504399 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066923973 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094226209 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068041233 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084593889 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066718607 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067474647 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083794272 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064681469 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09167288 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076149048 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084979792 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073846475 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066443299 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086682177 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077407639 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079626351 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066294368 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065058163 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083155639 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07427095 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085295584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076100851 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08465553 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067045398 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064215886 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085362032 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066112234 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061880312 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083232849 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071537944 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083677844 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06667961 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067049124 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087624644 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068006754 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093931787 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066649309 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085619719 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068965102 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063573302 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083955112 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067451047 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087287483 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068800783 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065932457 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082303231 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067705881 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067525845 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086345071 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067735253 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086787057 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074307809 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067699427 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087934896 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070426989 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0818878 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071125864 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084660305 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06757156 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066691651 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087686941 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070836388 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085722122 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075851607 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066440597 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086654434 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067809054 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082834074 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067345457 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066577274 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084638927 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067636586 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086108702 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076013686 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082277602 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070312613 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067081715 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085286308 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074302114 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085557348 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071050464 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091526167 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068298034 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069673914 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09245579 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070790405 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088139761 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068917646 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068220759 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090110948 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066524897 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091327221 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067898067 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085406522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070076058 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065310842 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085334609 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067446186 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066769187 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092052228 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067414587 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08433296 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067016163 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065088504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086878615 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070922978 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09319648 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069911521 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087596225 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063538541 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064056747 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085800671 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065671992 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085519584 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071540398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073351158 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087677563 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068257234 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08409124 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075912224 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072382902 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089742027 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065170054 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088838445 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068561957 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087219685 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068927807 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067230885 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086024948 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071762804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086612748 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067147237 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073978241 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088040326 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06906405 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086756163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068685478 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067277725 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081076208 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069132049 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08657523 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073512849 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069159085 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0854501 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07784389 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083506406 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068380404 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08815586 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067131467 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071109396 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080784646 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06937006 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086252808 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069508263 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062445854 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085242938 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06605088 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087498126 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067724685 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063726898 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095071592 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077020895 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088474714 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066957273 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066117644 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08088348 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063035152 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084179027 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069001319 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068933042 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095886528 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066560906 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084585601 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063380171 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067291763 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089108492 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071227541 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082659272 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063216649 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065933648 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088556514 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072896204 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083622116 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068040633 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069406543 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087720592 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065852753 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087968622 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06425983 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070472882 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09849071 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067880962 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085739027 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073393607 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093011536 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068934068 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079953014 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068752797 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070428698 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085849427 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068695896 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08691213 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081728693 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087558553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067204679 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065783487 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087951209 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067197845 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09289063 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069146399 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06772137 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090182559 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069097977 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093544578 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070418332 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092040358 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07040645 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08785976 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067638 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067320963 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083811201 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066458118 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068397283 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086882637 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071903998 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092967702 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066997654 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095947223 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07615168 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086999901 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065104479 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066560128 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085013149 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063285268 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085699119 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066188264 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065351212 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083449088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066624785 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067932893 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091943609 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068304027 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086182465 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067571254 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060739167 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087992155 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069999802 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086391912 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065360042 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067067414 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08626903 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070692926 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088492625 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065121247 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068454194 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087176228 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068318477 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081374722 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074838067 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065728113 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08930765 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066663547 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085415061 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069147144 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070103807 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091302446 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067351014 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087819147 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076065099 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087717559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065297321 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064020031 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090600093 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065743311 seconds)
  done (took 46.441832764 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11112033 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085480712 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064270286 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08145297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076074568 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082705076 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063789147 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063447356 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082164982 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0663413 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080466784 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063434703 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089598215 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085475652 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093917079 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066894196 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081834631 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063361523 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08085065 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06462972 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089669574 seconds)
  done (took 2.487777018 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077319179 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092225493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074482824 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094894369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068216124 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090715742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073397233 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089857463 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094687988 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069012132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094931964 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071972773 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085599408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068616687 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08680007 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072701256 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095495071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069256435 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089950227 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074012722 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090588119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073860338 seconds)
  done (took 2.644655812 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070252525 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066645526 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086699895 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062910743 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065741075 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081090542 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070796615 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083103772 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070737758 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066062385 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084843928 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.075079564 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08619154 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062700826 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067575916 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083328041 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131159271 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071571356 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065348463 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086521165 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061889718 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087871199 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063171518 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062788003 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084261064 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071297779 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085821499 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065938341 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066422826 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084207914 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066874809 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082381084 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069285354 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067321498 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084444418 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066278971 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06672777 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085281204 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063031255 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082758316 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068264125 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063290555 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086000838 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068362129 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064290715 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083587852 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068852592 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084890908 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063021431 seconds)
  done (took 4.509185713 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087059968 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129803303 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087813345 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089977624 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102460374 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092808701 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071403316 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111824253 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063985371 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084972681 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083677274 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104151257 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085677405 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071960496 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070013579 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086221789 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066745163 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08432743 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070256856 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0849337 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070720409 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092476499 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099288875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080847502 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089433723 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066327177 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084858364 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072694039 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098724057 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072007014 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089998765 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072343718 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100817659 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072144421 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08488812 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068893069 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.1028191 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067418544 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088008965 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065286785 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088055984 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071330436 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092259725 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082679759 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086005067 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071709328 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0855296 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064469458 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098750885 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068971687 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093865008 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100027526 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071387563 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084761053 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071761289 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100508354 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067639924 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082893092 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070607777 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098208537 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065034436 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088406364 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08191887 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087006762 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074921582 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099988105 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071683988 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089128604 seconds)
  done (took 6.658731871 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078849389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091473489 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081976595 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100825586 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092192487 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073857739 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091886531 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074477887 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091569777 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07858901 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092796858 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11244826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069595316 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094670361 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074327969 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093150655 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07386691 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093872086 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072329796 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093454421 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092346849 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081646363 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092059063 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099323129 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103367695 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087096783 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074198119 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091395209 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081847017 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093183643 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103485463 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074097928 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091551374 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100442525 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085476627 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092748495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066424855 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092088023 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074040234 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092339805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069122865 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100570201 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073315573 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088137788 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073588497 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093005196 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099097637 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084783801 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0960354 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096057104 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074567198 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100995333 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073888675 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092834855 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100454208 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107148752 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100828207 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099894394 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0728297 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100987984 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09996751 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107126759 seconds)
  done (took 6.358145507 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09063653 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096207759 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097003736 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063474764 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064987804 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090298068 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065369526 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084300018 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075581423 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094928022 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07812657 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089899505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073988393 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097564664 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08892205 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074631787 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089574376 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071464946 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094018654 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071580887 seconds)
  done (took 2.512926288 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078921465 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103252839 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068449215 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072041617 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090329174 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072788866 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089022145 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070312489 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086655635 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070042294 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095497614 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077337714 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087419395 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072373719 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096263132 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072717153 seconds)
  done (took 2.168533972 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082140273 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099820993 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082419013 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087113823 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066031762 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083189851 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067961363 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063285405 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083062608 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081913439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087161797 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070605284 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087064567 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066265452 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063131319 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089529485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063599722 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084463494 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067245988 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100879103 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079343836 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084985991 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068162133 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068152981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087092442 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072124889 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087640775 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064847406 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084581346 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067677561 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087148264 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074804636 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083069635 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066411753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06494393 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083648629 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067168784 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086151758 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071087444 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067123646 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0848811 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066745024 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08602203 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068330813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082519158 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067709055 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062889111 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091672601 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065252638 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086537297 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067354992 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087628154 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069044873 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076745167 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09071042 seconds)
  done (took 5.116639229 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083346263 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070045882 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082455873 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065347115 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088587978 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069193252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070541441 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089588182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068776097 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084527416 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069758091 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088035358 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069940974 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069729487 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088108871 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071215836 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081509218 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069876369 seconds)
  done (took 2.252490402 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075712237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067558787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093928162 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067761192 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086335982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070199291 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062763651 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085451479 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065440498 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086117596 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069108365 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069634525 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085104962 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069871818 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085904627 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067295503 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068668468 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085313017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068666025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081937378 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070221065 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065206472 seconds)
  done (took 2.519558329 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075278137 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093858877 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162931489 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108031705 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082818266 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101129838 seconds)
  done (took 1.496155659 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094440219 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099877742 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068691794 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107706609 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075518412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088405931 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069459696 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087811514 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077847502 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101865445 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068109245 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097421027 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095929339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07816578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094197322 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075365983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088589084 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068738408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086806087 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106828966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070431729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096547591 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06965308 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087460853 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068980879 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095873587 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07755284 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102262375 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087595752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077404712 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09370095 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069226248 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096950321 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101382937 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071731185 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09651487 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069418676 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1060359 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074693845 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097346613 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069459671 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094059921 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096790352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074744578 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096774415 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069175244 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094041128 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068176982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089150485 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112525097 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074773253 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097468051 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094151818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078852955 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095934404 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114103184 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082530319 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096832018 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094333073 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083132606 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096351171 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073438974 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097111613 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101602319 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075248148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097813777 seconds)
  done (took 6.63471803 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087544568 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106749974 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069227909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102468041 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096828957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070292604 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087827144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069748572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087580614 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069246443 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12860526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06932102 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097295753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095912343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070049512 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088055252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069386724 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096119273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069209152 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113103023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088610338 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077389568 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096059408 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095738879 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082594593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094252521 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068581036 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088423043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068322757 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088381577 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074399351 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088937456 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095770108 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068641062 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095799832 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06913894 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088449485 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073923846 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08788683 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075055468 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097504728 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105207274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070049552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087673153 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08220303 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088475615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068585074 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088850133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069421078 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088071012 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081951045 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10256103 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102227081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09623827 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070387987 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087910079 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069684064 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088026378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070233265 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094564289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077102587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088155561 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114309205 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069544834 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088503816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077175502 seconds)
  done (took 6.512870605 seconds)
done (took 128.964677363 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218560657 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197734687 seconds)
  done (took 1.291523397 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072326429 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095927407 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098582874 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128499237 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088015636 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100805346 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119568349 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080088271 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066818131 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086684336 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067906449 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088136334 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132925406 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066787096 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08690298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070676132 seconds)
  done (took 2.334950849 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105974235 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197218098 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109354665 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066061788 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100065413 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079222817 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085977322 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077929698 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095040771 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06720354 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078636019 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096713514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065924988 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096311173 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075393183 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098016805 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065553302 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098480523 seconds)
  done (took 2.542687585 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107270595 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15103169 seconds)
  done (took 1.139895836 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.211521002 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124073596 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203997514 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412124562 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206051318 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279789093 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174182392 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17346258 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162971074 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171367152 seconds)
  done (took 3.001728102 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102974464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171190392 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312003403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137907558 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08597537 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116313356 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137941563 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088577887 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10203301 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100267933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081221837 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098140661 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097187514 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096328814 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074548332 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098325593 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121319383 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074827616 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097083186 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076604608 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118263407 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067997365 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074997452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095196974 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077367421 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09870829 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065794308 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086719958 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076556362 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09560858 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079238165 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114278217 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098454534 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132739937 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082263603 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131133608 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09811399 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071945818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095087011 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073427506 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098359879 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077391729 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103961738 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076102605 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087143757 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077590701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086327893 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067136554 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099625106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078228642 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099166142 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078628589 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128535527 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097737009 seconds)
  done (took 6.243569918 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.756806099 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110563248 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094934368 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.813669871 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089352777 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106985718 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.72200271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11871232 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209944629 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.773654762 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09081725 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09972395 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180376281 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235183659 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.878402477 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282813092 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.642553797 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105228735 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108102099 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131732216 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138896901 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175284427 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150895708 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430800703 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074734294 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093169947 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136995836 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074473707 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161961531 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08462497 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093912638 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156120586 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224490356 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15493657 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097098336 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070347331 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09185554 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147552202 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220101767 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193432204 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158828337 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068662258 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09127662 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14004189 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132066764 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068720539 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139288201 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.151346197 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170890259 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073342232 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096162591 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141705882 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138141911 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143217817 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101241811 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267390329 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288031425 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090882033 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098311063 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104120752 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215282469 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104942123 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19983298 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13908811 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16692883 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091606935 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730385439 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145635376 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091897448 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074644775 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119287179 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095702131 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138555809 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147610503 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.346930492 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163067422 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073719791 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090451086 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206314004 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083564318 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092105061 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140375492 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075097537 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121374671 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165045455 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142757409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14811337 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.205458626 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143419821 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137708509 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096458951 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123847014 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074866942 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190906106 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194291387 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140016038 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185640133 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159860273 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141328182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147731486 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075166491 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17040414 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09837777 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101209585 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137301905 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190312877 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123017534 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083767043 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094560713 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14149146 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125324321 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084910796 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137802235 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170915722 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454478082 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146503549 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067155295 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10802843 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13924397 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140794301 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096770431 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211407275 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123203643 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146301705 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121531713 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089271464 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119680152 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141282921 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078415129 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123220926 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137892593 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098574662 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215248282 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190119123 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078601155 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191817677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160607151 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09626652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149229456 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120141991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147028082 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076355303 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158796473 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076128545 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764079355 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144193586 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120720682 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073521943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172324127 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070639079 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104880751 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103493759 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069063501 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751402116 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086327485 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101349005 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082847019 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096132531 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121187877 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137191829 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07312433 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138716556 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202640006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095755214 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096965164 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104595565 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139811624 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097451091 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084476885 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105683345 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084339308 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122822901 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09504356 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082775142 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145457149 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16258444 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.170931886 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566813913 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071371632 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103992575 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179507931 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092761658 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241213985 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.157740801 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.177244179 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140113097 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101704344 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.293444727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143743693 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172817541 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08646218 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150210569 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090008814 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138572522 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142308607 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070117671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097811136 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140748321 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144219591 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.164154021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.921908082 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091878427 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205235962 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068865233 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.150873685 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097533437 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077729522 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261579122 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070838083 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.167410414 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143003534 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074457817 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104102053 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.680649631 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104347454 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.14056176 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074441058 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194072541 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142457723 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136826421 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136981975 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098472572 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139761828 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187415679 seconds)
  done (took 40.413721093 seconds)
done (took 57.849822308 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262201748 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178595239 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243429386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144115546 seconds)
  done (took 1.812313932 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14679565 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104442181 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117884742 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086605531 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103106701 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087328723 seconds)
  done (took 1.551537402 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.408752112 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26622597 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231401637 seconds)
  done (took 1.816517838 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264645429 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212916513 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.453546819 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299239393 seconds)
  done (took 2.271543431 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176194114 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114097067 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067646478 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107140874 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158946439 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251997822 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12796109 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187252977 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079769341 seconds)
  done (took 2.230548504 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197789538 seconds)
done (took 10.792419023 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.220983977 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.287392522 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099250884 seconds)
    (4/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107109333 seconds)
    (5/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.238636214 seconds)
    (6/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.243616856 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.145745332 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072216311 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094513339 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090272846 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099659519 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.208204301 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073240122 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09969177 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079164789 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.198868483 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.19178883 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074181597 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101883997 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.190931215 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116007828 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.132471909 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.200774715 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103235166 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096895375 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077495979 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.250559778 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.181746302 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095427036 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094927841 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.09589785 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.183695568 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07309338 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211121738 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096818335 seconds)
    (36/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.148761524 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.193226712 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102701142 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052255177 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064576416 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052467362 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125184934 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118743051 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.170560577 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.268316039 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053904658 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 0.151994021 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.190373441 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.149199248 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092020195 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196244529 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074368252 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072343993 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096022692 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210177076 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114408098 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.167022021 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125254732 seconds)
    (59/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068805552 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089665713 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.114506092 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161870032 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077415764 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090242923 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07527801 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221908977 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088186765 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136059106 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.170021481 seconds)
    (70/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.178826365 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097326207 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097052231 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114863603 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100976994 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134102942 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121271511 seconds)
    (77/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109841287 seconds)
    (78/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143008973 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073377571 seconds)
    (80/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07370878 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14948558 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073000354 seconds)
    (83/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07661504 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061243634 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.17544377 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.067964565 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194828611 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111895287 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.0956794 seconds)
    (90/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053635145 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108639252 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102549211 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093440316 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 0.1653138 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083691782 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052193666 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163751538 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154009069 seconds)
    (99/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.074767423 seconds)
    (100/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078060243 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095834698 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066516379 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074696012 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086929726 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.16162801 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073853855 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092955208 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053993718 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145397298 seconds)
    (110/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118893478 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072944046 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117607834 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091619053 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120164001 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116329578 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095382008 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066724514 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068628712 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116139365 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092421596 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096759473 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147729732 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119871518 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168474895 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052351627 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054459634 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200903462 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159481003 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169399856 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104947883 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06772772 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076968639 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.159107475 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076355163 seconds)
    (135/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159254144 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076735434 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119266209 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074339816 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07192584 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113173064 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066588388 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094464453 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053525388 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074404794 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07370975 seconds)
    (146/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173858613 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098435546 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067738246 seconds)
    (149/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051532352 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096136645 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066489712 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05227492 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075974784 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080953791 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087099191 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074297351 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070646005 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078833201 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168221345 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089509497 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078519307 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170603776 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147425445 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075450556 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074766132 seconds)
    (166/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097249127 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070023137 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088837867 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079123104 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088546465 seconds)
    (171/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063578813 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.172324456 seconds)
    (173/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061984755 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052145308 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08839089 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075475065 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054107374 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104148571 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052424481 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067028895 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.073926348 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.11087884 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051863695 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098759364 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069803365 seconds)
    (186/309) benchmarking ("sort", Float64, false)...
    done (took 0.14972781 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053471665 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066621168 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121513598 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073780868 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.075238013 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069449356 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158680234 seconds)
    (194/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074246303 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052070225 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172009925 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073923562 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100240402 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169138638 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110247385 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066265363 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.083388783 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.404404805 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099419685 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093355857 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114073846 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052793843 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090529003 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088413964 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09247109 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090657986 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081179337 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146391355 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053468841 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.099828224 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068641814 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171800447 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170243466 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077424237 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052530225 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071464141 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118433424 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073509683 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156099096 seconds)
    (225/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053070245 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074243967 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076955959 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052149901 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100022225 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05326346 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072046933 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.075238636 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.137005855 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07465219 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053029713 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067778266 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096511064 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066509339 seconds)
    (239/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160389639 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052093659 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05321434 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164014516 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089683943 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075336403 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141662483 seconds)
    (246/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.085438201 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072244058 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110517007 seconds)
    (249/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05398921 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094477082 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160146565 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053154555 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090559794 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066405445 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052571526 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.159613397 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.079219137 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089959646 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052002144 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053114794 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076262428 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072892922 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065414734 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0905278 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074295254 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067000426 seconds)
    (267/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.076810099 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080211739 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123514719 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053931862 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051167594 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091022877 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052141659 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171507896 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068962848 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052147299 seconds)
    (277/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.091821597 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067049171 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067051472 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.075921273 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06661521 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127207451 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117164341 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095688209 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075315829 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052595744 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09626225 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065532683 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06517811 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110975355 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082280503 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112898867 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074420219 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087765104 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09058207 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066788579 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128433167 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054316688 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095689803 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066816382 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067554581 seconds)
    (302/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093754047 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074497836 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071895753 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091365604 seconds)
    (306/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051865314 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.089581253 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178312347 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090555926 seconds)
  done (took 33.34666006 seconds)
done (took 34.267543725 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085116297 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115554518 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076863069 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116184738 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081637097 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100567916 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073832334 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078311542 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104472199 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082231031 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102657912 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055172426 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098411617 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07616443 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098437899 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093488619 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102333943 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073525518 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074488985 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088242294 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074527718 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088907433 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068212654 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055395728 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101131202 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073309259 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073343018 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098989571 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066811466 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08870657 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069907549 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073394564 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089566609 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079738982 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094823482 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074532053 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076238983 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099645584 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069003176 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089299355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074809254 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066913935 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095748358 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074427619 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072496432 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094765167 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074803064 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102511404 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092512477 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092040895 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074768699 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100701452 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078494531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072818789 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093826978 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075137315 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093541434 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092628614 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097626593 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06931729 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074728296 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097899907 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071946507 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097312542 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075292896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077363182 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099976954 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071932898 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098331378 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072302516 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066866458 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097478031 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069750923 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066282835 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100142024 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077888479 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087651068 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072576768 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072784822 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094876262 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065860046 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089872154 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068729689 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072475693 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090502676 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056245254 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070401063 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094994447 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065798371 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075526904 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095561588 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073954465 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090740308 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077847134 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066364278 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094764359 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067119484 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066359701 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091071356 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069968136 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066136649 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091104688 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076289396 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090320113 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.0727879 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080254245 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08944059 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073190249 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087801667 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066011444 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081444377 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099102792 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066764489 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091534023 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066490367 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073513666 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088444557 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06636503 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066527558 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088874916 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071990736 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066338699 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091075338 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073457138 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102568396 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066825043 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070005248 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091241021 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066712453 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071861346 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089315643 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066565666 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067653233 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086877063 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068290581 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0894257 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074631301 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068596362 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097816686 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068655848 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097689675 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071121873 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072847999 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093925853 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06631552 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060069254 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09076139 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068504935 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06823472 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089187661 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068867682 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066321865 seconds)
done (took 13.278769938 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069793337 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168949075 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126655615 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096033906 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111333532 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067459659 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10094151 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103750548 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091580125 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127418881 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087901482 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108036068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114315621 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088543172 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066968996 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070130408 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09057869 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089669167 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125353835 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086358524 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140206421 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088377134 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120532946 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091143018 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113062247 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094803183 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090560772 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070772108 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069858963 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126192962 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109075139 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07076098 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066690094 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123158441 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117711818 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08577781 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089605964 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085156277 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08972722 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06680422 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1150673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100054818 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105612301 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082149681 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095943566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069026584 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090697459 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086439109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113851638 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081417374 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112295633 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134483166 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06912476 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105412658 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065453371 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110471558 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082094366 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093133638 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067295876 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091364169 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066601675 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070220149 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111689238 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116268276 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07167646 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105010013 seconds)
  done (took 7.285565209 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087666136 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117070047 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08509325 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108318759 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066459679 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067278772 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090314482 seconds)
  done (took 1.601932458 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069854079 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089153511 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113848149 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089676929 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109901493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088121805 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101328169 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06764389 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10799985 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068793338 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088688889 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128174756 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068688502 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098683228 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091667994 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09135225 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091474222 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090830725 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07107004 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114628951 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070222879 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087504625 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09368917 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067488237 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105188881 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068357423 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139708801 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071978322 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091259373 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071032526 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066126813 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140221413 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104632842 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078863444 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067838848 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105600624 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082548798 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089238542 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084356647 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095297058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082708581 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068919139 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092881536 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065522082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071269883 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101859915 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068668882 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091100146 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07163563 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086884214 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092280176 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081402556 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090531102 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071654313 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068929198 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09646308 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077881506 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091378554 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088279976 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06935398 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109173716 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084230272 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10633121 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083724587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093633461 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082398175 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105205328 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070749559 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068803115 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095942377 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084550921 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088694985 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069815936 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078283262 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092581037 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090924945 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114417034 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069296648 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101442816 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068480022 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068302059 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091073668 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091078731 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0946051 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067966229 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072071143 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09500568 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066291617 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066289029 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094503123 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065751919 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068789196 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09463364 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068948274 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093911424 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085229813 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067912604 seconds)
  done (took 9.34802042 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07139051 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068234877 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092998934 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069329529 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069304537 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092275728 seconds)
  done (took 1.461475499 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101873924 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093373396 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082381353 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09636875 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107255626 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10606017 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083048452 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106946183 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085475382 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104429857 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083206969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107440697 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088502187 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09741893 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082152061 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096701142 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082331741 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100026415 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079945167 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098217177 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088704703 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097315246 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074426325 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084174532 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095959585 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073591389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10146949 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080079949 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103106141 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084195877 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097045042 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07141732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095843014 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083918592 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106568894 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073319633 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096884367 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072713006 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101027659 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072339666 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106818463 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074772414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078206605 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096256802 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106764705 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073127241 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071947878 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101165756 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082096576 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096073188 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072361563 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096568721 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071096018 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095936935 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072873607 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106437344 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072383804 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105928242 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073487237 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073270398 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094370347 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072166641 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107010219 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070924907 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104781839 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071809631 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096112571 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074091412 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097370639 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073903333 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071864613 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09393008 seconds)
  done (took 7.387885451 seconds)
done (took 28.06308553 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.658613786 seconds)
  done (took 1.650129936 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.786755794 seconds)
  done (took 1.780359445 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.665613636 seconds)
  done (took 16.666547044 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.62471308 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.771557549 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.79973897 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15429589 seconds)
  done (took 3.34260879 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.911144742 seconds)
  done (took 1.931201539 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239652092 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223997513 seconds)
  done (took 1.463468035 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.756151383 seconds)
  done (took 1.761420059 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.288123712 seconds)
  done (took 2.289468329 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324240292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181454322 seconds)
  done (took 1.514256199 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.525371399 seconds)
  done (took 1.531762944 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.780939418 seconds)
  done (took 7.792328031 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234270706 seconds)
  done (took 1.256881945 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275448924 seconds)
  done (took 1.286158003 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.310351207 seconds)
  done (took 4.324268492 seconds)
done (took 49.588755329 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081706638 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082860172 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106052133 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080097092 seconds)
  done (took 1.357699449 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079709991 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073767245 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10178579 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073798122 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102460597 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073708717 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100696857 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077903557 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072853641 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098465988 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073806142 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096944079 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076616721 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099531965 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07199408 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076050609 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101467396 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074302654 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100571592 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074394331 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071012051 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099168408 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076727788 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096948884 seconds)
  done (took 3.062899447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081289649 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074332669 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099043426 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073611317 seconds)
  done (took 1.342855237 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080350279 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116640003 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089178656 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078533233 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117852485 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111162287 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070709103 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070070401 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096627461 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077687267 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09251338 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099202056 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112892108 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078816274 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103699646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067536393 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069663512 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111679813 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077813928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102349124 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07080923 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079826892 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09303899 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091091029 seconds)
  done (took 3.180387616 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080533566 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129283078 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078935963 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.114302598 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09236136 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066056662 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100189098 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.116222202 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125861875 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090614264 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070480673 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066212101 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097226036 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066237103 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077621365 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134342265 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.137561601 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069645562 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12297987 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06676447 seconds)
  done (took 2.928581456 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078203842 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070163952 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090301562 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069774306 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077268423 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097883758 seconds)
  done (took 1.511964497 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071069604 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0688685 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092065644 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067046943 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072642672 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091862623 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066867752 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067899728 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09212449 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0682463 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067081591 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091364403 seconds)
  done (took 1.94020763 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.396520787 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093674153 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092702658 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066419398 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071253202 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091923326 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081188199 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069014666 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116733506 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06696611 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092511609 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069344819 seconds)
  done (took 2.335802819 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268255316 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078286693 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326746795 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170657922 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141671847 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15708436 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106730036 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141316818 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200238026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140442304 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201688641 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224963997 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135185519 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168907233 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115860939 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134301155 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186938111 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224386799 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105688046 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226673433 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209393682 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157293504 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181820621 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129851221 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136624808 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151959522 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072691864 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106443777 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233970434 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162866316 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203000955 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138602409 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098176139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233316607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227054277 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197916162 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165209326 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085563561 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159931765 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165602692 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258270946 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116178671 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195621401 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13614735 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106928228 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173972484 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147328874 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147867232 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137246192 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116253265 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177166087 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241065051 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166064612 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11474758 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138894519 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143168421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145683917 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105046995 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27190383 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197274714 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161610258 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097369095 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100789956 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213067541 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160079433 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142147449 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155150513 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120545476 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169282952 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213213239 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147766544 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174022088 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182447112 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09079094 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148658002 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197043405 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156430999 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230669894 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156797752 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074605205 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153102761 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130979013 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108704644 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146408885 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10287203 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209365425 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125540184 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140104754 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140895903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137355064 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138591306 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195953716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20442294 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131142605 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067242441 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131596743 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150704559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176293122 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115360476 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136009588 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148821874 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079442586 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193021541 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076234528 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154206216 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.104733911 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153794226 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164974043 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076464175 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181345267 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103365308 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129455694 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164123106 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221482692 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116699677 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08338017 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228586903 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156796732 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133207391 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176289742 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216699992 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102036325 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130698571 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206998344 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243962806 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091035987 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224567661 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135977265 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084078638 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114686427 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156184732 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1398482 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150753055 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109763606 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15491021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225380973 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076521413 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12237821 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167352621 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082914447 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108525411 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14142433 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127862067 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096875268 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128011452 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135192239 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170709331 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18155826 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109250689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179769658 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100429089 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226565369 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116128466 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131803103 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105311766 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097259013 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166247046 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220059752 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080669007 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226934697 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155217569 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132762072 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149302126 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084577479 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196327033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079575362 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072111846 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201114606 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139962587 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138338885 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18515683 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133308156 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155865964 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153748756 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162082167 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187602881 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163458075 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133870667 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088688008 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141270253 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153474751 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100758338 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120703155 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083691979 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132428398 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12368651 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083987651 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198552366 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157234149 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127827675 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115032561 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124236857 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20591371 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078677657 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160546634 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147648467 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122356175 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213808459 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187383103 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165192659 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126733859 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203830318 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071660308 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0743787 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118282233 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155052786 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111304612 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084449583 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171829902 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180386588 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158095903 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166483786 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139947031 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149515987 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213877682 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.0719777 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145827001 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179622562 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154757776 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156767039 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113707881 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101076727 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201964948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109383425 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274504351 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143931353 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153023505 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181973225 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131135994 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081001061 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133734782 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19490846 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134129453 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183026355 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127168678 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116218244 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111033111 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108593151 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132022289 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15628192 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149292761 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19201118 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143071444 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16291638 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078244966 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144939202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177037019 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150547769 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065854943 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149023644 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222027516 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12132597 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147955326 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194153253 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106591742 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.127682671 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237777067 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203827219 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11121435 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111653089 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15085883 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184321618 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14828963 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170699444 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139230952 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165015572 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138891488 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085427469 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114475046 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126157774 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134852491 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09688705 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140128021 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145910886 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121404077 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160660074 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140684865 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13939848 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147442596 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126375872 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092449407 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126586336 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236245293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150639786 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235312969 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102552093 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207046275 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226523556 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075867217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106931703 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080691992 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169001839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111627558 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162983584 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126308306 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133388642 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155766304 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174273312 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124002148 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069149617 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138759202 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163374646 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139869076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126405343 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134053621 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22395661 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104253507 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106730254 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15520209 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1063088 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130459665 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235739181 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087307178 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099318702 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102852458 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081936703 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159579849 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216019924 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10978497 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130231872 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145659412 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149149714 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157521526 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128693011 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126407409 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142013806 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179593767 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184487851 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090643977 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140189948 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158706754 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215339696 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133840007 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123833651 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205324654 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214247995 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223692265 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090538353 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144422893 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144431629 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138385572 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198973378 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084045018 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22726049 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108836401 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168048489 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133016501 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120894841 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158753705 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126123859 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090189892 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207069289 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150203768 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102150454 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107310556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147016917 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151354991 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135524091 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076360543 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196639781 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074365219 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166596387 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230695186 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108338263 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107861556 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123342231 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109024906 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136339574 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130553556 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088380786 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.145740216 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23106077 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091423375 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209391557 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172246975 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141389674 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194739051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127960153 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663847814 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079325005 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214147241 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149477218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238044896 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098660506 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147117568 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138116603 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15118371 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202588061 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133047281 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204912266 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162681049 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150237223 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080271496 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130026436 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138340343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118736817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135543194 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143503941 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145291485 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127966071 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150258892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157084138 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082609312 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123240017 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217491417 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146191555 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173699259 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171083909 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113396883 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148685413 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196385044 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081822331 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150474309 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216682675 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135978334 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126531352 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08240342 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134108462 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2326087 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074131631 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222586315 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154595107 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139415657 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142171116 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148048011 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162172042 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135941113 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18107507 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097736849 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140369339 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14443806 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112141444 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105006612 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10817273 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140706471 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126626512 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130951088 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122510235 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209265398 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071755216 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124136671 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131456488 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175619331 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239568242 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116892518 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084723149 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148203405 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141979752 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145712424 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154853442 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109410584 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110418707 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083238809 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138151308 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112660843 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144502261 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132139751 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139532191 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228560809 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085507368 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251606994 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123546394 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134017651 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071235687 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106969203 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09777434 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125867124 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136989281 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128300347 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204999226 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124579208 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118106933 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11943596 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074181824 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084414515 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186658563 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139814618 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150695559 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099457414 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09122789 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138338206 seconds)
  done (took 71.744929396 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147472654 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.122091712 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.131614054 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.188647831 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16100402 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253049194 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199657338 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238601768 seconds)
  done (took 2.549173962 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073408361 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118548161 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102522304 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116651205 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090913838 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069567384 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295584714 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111741872 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0671883 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114896967 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120545516 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092811804 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.473161151 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065950727 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095063927 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086048712 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068279249 seconds)
  done (took 3.265015447 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436313255 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.660014665 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453513583 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075297829 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.995934417 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108384796 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.610451766 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167898683 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092189452 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.446632921 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72691283 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154988584 seconds)
  done (took 18.035157973 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078872432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069874854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111656836 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08394511 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100180113 seconds)
  done (took 1.554431512 seconds)
done (took 115.81704324 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083568279 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.350553509 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052967027 seconds)
  done (took 1.548135683 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086425453 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085481168 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112608248 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084052533 seconds)
  done (took 1.484720761 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077589605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076770767 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111850278 seconds)
  done (took 1.379674148 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.281554494 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166914516 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088275457 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085295437 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078674647 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105956834 seconds)
  done (took 1.385893133 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07550071 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075481731 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10070051 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07668634 seconds)
  done (took 1.437433603 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078847666 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053153757 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055228023 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082938032 seconds)
  done (took 1.384171906 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093041342 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107351077 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081211727 seconds)
  done (took 1.394473746 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109203287 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113936588 seconds)
  done (took 1.33873473 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084223472 seconds)
  done (took 1.193830566 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097430052 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141202487 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156568783 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138853116 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167110937 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138582562 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.115004156 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088467375 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105460128 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.116490226 seconds)
  done (took 2.381409283 seconds)
done (took 16.653139757 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081545891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393643724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360991268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118961476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669964457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356986473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043163903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120301097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121296874 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095741689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084285941 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676527212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96855551 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350154154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955705057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415775023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678376451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068776958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094770054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069009004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.001071076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095252411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06837325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069016931 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677330771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372192962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095430631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.41623648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069466685 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09773319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355730216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095624647 seconds)
  done (took 16.24336377 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074160295 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145995364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074460771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084201678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098381136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070570899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099419102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069697224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153816072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068070022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113008741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06908731 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099344164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069852371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087583541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095711602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069721246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069466217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095634791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068690058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114087828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068813528 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068327568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096018119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068582717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107607788 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068660162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068364577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095888125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070851776 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099023744 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069511854 seconds)
  done (took 3.888322712 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118382138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154478973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075062246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130950981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114371295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098460875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172315253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093971759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15708826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068662952 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113297172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069651427 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129095851 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06883681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115645331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069591166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069344555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095745516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068755298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096126044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088102902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094837443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068511914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069053965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096085388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0821138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096296928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069056071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068630399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098128921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072188758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095825232 seconds)
  done (took 4.204026068 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075354245 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075493076 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110207566 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083699712 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09705792 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072638618 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073864448 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097225644 seconds)
  done (took 1.805479784 seconds)
done (took 27.250333687 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081749928 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070412728 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100622457 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081077923 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100574978 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079971109 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068107899 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102892432 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076847151 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073225822 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103588022 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068363681 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098511845 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06849271 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075116231 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095356686 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079916129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099494075 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080292974 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079278693 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098602927 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077380609 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101832872 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079910833 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107066211 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079891115 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082658384 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100526284 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070156794 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098455168 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077205918 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084327719 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096418554 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080505557 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096389391 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068327921 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067945675 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096106808 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080035944 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101696474 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071048785 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101477942 seconds)
  done (took 4.717205703 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091252281 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091615406 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113114936 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064484688 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099067829 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066034116 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115735734 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063874438 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059576579 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116100319 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056156373 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059080016 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091195177 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054735833 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058939399 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056401853 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089873821 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056282825 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05939461 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086910996 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058261979 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054731907 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088104148 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062994377 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055865297 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.088935683 seconds)
  done (took 3.085098127 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078229851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083893943 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115906428 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128306994 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133614449 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077887735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106407022 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08770399 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114208144 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067797399 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072106726 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.123544124 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087790186 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102024337 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06815963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115293026 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082263506 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069698499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102453776 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090869386 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112588065 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078518762 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119888279 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080692295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067611593 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098464246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071497204 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109715934 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073265776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076601182 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100747894 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071719443 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097615476 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079909399 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072169428 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09750581 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090670027 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105484569 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078825556 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068574268 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09990116 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06852844 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116786789 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112122087 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09574676 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075844655 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07566821 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105233718 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068610584 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114295292 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07790472 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067811318 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098865332 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067236514 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09565223 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082549248 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070365401 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098450959 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07771916 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099103564 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080855341 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071749182 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111704003 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068126973 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103727051 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068307907 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068734069 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095271825 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092681406 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068920449 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137633699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069656783 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097358137 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076890281 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103729162 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074372834 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068988871 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112319754 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078351425 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099778881 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077146614 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072018491 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099059186 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088521184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098418127 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069940652 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069284468 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102402976 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071141661 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097959566 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08181138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068055138 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099163308 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085643473 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095705289 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070142881 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074446655 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101402655 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067942025 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107795225 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07372133 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069021856 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105811117 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067990206 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098782976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078278372 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072890365 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095351949 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072413914 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10240457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069059637 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069661182 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09874283 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069993022 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105254933 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07446723 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073468519 seconds)
  done (took 11.404482199 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.195556121 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195882094 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071432247 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180354434 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07669528 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108684909 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180989346 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096383215 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097216544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06900358 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069456621 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131580639 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126009843 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106062357 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108081312 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069055773 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115344406 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.10445437 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183686773 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176881136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116652788 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076589797 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070805478 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098784952 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07030695 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106883201 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085432847 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103715556 seconds)
  done (took 4.335942708 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084426211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129927274 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074286482 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089408571 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120400537 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068775289 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102486245 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070517279 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108708997 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079710205 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096296928 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074453086 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075048749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107005327 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070267701 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106994757 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078397588 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070266267 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.099924347 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073097022 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106174655 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081187233 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072867704 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.096102488 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075061996 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096098845 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064953743 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114533413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068670166 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118311725 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067340719 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074439384 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110339596 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069050241 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097142157 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072020374 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071351727 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100581821 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070844577 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0672095 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095856748 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057894325 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067675376 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109014789 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074851477 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088347104 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074785341 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073481184 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101603713 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066005431 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099428967 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071543029 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071752547 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105892672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073923756 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073549736 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102148098 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066627564 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105059249 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072082848 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06440668 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095488931 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073329719 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066639066 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105069491 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072275075 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095810455 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072166267 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07364068 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103443605 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072131745 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071873041 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094569569 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070732861 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101533147 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073093063 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072322624 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09555583 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068755302 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068868504 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084735243 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068859992 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054178275 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100796064 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066740801 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067896553 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100572405 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07431178 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109764875 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06993749 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103373316 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070767723 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068062367 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100115695 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064553165 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07101403 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112865179 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112498231 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069436301 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066389935 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11224076 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074006288 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068178699 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085683464 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075170892 seconds)
  done (took 9.933360974 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099172768 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093311452 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100093235 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083925456 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124521133 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094338768 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10433055 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075474902 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070332733 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114310106 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068749497 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106313186 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068950639 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07687314 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125449592 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075762007 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099023564 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07803317 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072506041 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137678234 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083263483 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111799711 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081083092 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097577379 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073987401 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080309151 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125572529 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080543374 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107880965 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08576828 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080447808 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125122002 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086836095 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101541979 seconds)
  done (took 4.348807402 seconds)
done (took 38.943343204 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.215503123 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426281231 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199983078 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.175014508 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.226383885 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21033799 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.212042824 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.206293078 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.422872917 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.204844081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.470522172 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.92960331 seconds)
done (took 59.048780892 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.276527423 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.342961296 seconds)
    (2/2) benchmarking "String"...
    done (took 1.479977965 seconds)
  done (took 3.977955866 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.569536642 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.139424279 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462480162 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.203015757 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202877724 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.499952791 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.912270145 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.062591908 seconds)
  done (took 27.627050538 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.211501747 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.58408029 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.796247167 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.797270954 seconds)
  done (took 18.534620253 seconds)
done (took 60.133470122 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.206637273 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.273199351 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.208561993 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185268131 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309666864 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.24092099 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.257593409 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.225648496 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.202002746 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189121356 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.202652791 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.200672616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211173798 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.270188435 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.210685866 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.205493425 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.218845322 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.752852638 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.620892677 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209702729 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.214645243 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.247816665 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.207776384 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.209269166 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.222041614 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202058428 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200604251 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.205544623 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.736235272 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209176769 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206265857 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.495258698 seconds)
  done (took 189.902689474 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.205963739 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.28773838 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.367493488 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.238461485 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.890034357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40167238 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.33828213 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.944093979 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217172903 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.20678018 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.562224558 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202946841 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.550809013 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.215222839 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221640802 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.308694613 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.50078979 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.556045851 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230181903 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.465913881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224092716 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.555695754 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.490215012 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.463740544 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.24760153 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.266875627 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235431452 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.21355041 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.397454067 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.428792367 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217538925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.244981743 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823043574 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.062023262 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.221888875 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.235601204 seconds)
  done (took 151.387408859 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.483768133 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208696517 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208353815 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207645515 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240836025 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.208275649 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78849748 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788584177 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.756786387 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.300315671 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.269380192 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207304326 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.494198522 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208168694 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302836173 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217473801 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211268912 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.223259781 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.234050791 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204432443 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208494683 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789349664 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221709088 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.207651639 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215880491 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210262669 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242268982 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.607011893 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205626422 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242003975 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.534327195 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253372804 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205174181 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.557770689 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.73679929 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320827624 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206840246 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243296485 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.210536354 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484201163 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206068202 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209789692 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213735966 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.822208306 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20940583 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791511245 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21145053 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171871533 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211720839 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210470357 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.943835114 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.79619589 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.211668772 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.210543601 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213754533 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210032956 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209247352 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.244810249 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.811114521 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211803126 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311159662 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.211948886 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214549945 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245349203 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212599662 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.212370596 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.537889556 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212179768 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.379782171 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.267908095 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.321223675 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789131156 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211150145 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306836199 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329028305 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207423146 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.212237101 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.212045012 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21199491 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320367233 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208085238 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.63906568 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213743428 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214281234 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27325714 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307064477 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20807772 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586648498 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213042587 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.212795054 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.009297787 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309428364 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207946346 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213530874 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213352337 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.636922225 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790945078 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.423052819 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213270105 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.771765167 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.213390377 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651218313 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209158969 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760457873 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.868033352 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214541095 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322360725 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213388793 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214215575 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.21343563 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.243124747 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.215564867 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.272608204 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.213661298 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612996008 seconds)
  done (took 347.890983646 seconds)
done (took 691.810926747 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.886594478 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8619549 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.974762583 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.857130351 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.83603991 seconds)
  done (took 10.569381223 seconds)
done (took 11.722484067 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407688779 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407542677 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27722721 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412835519 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245689758 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.427768287 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38331134 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234784573 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318217755 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294660561 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318773484 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265628706 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242420601 seconds)
  done (took 18.390611011 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526546488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.516266061 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275534483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529272264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250423781 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52187422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412027373 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421674391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403798145 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229520722 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230225897 seconds)
  done (took 16.472725667 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.529615636 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.516099967 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277182268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526664848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252647016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531958888 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405516052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420497651 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403189274 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227079347 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230467831 seconds)
  done (took 16.476394129 seconds)
done (took 52.495867051 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.224596883 seconds)
  done (took 2.379347905 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259162323 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427268702 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24004106 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228300401 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.225952885 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225468995 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.229676408 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.224350205 seconds)
  done (took 11.217564076 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222215773 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227668164 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22344248 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225699478 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.2250729 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.223329508 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.22551609 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225580099 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222315501 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22493389 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.222342719 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.222787575 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.22338173 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.224126307 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226183978 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225559447 seconds)
  done (took 20.746899464 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.224590201 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22299101 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.22301624 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225066869 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.224735828 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.224068103 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.224817109 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.223518404 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223625265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.223868608 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.22486299 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223157318 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.225405004 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.223601995 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.224633759 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22537716 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.224191942 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.224477531 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.229539177 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.224500319 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.224975656 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.224679979 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.224811971 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.224908434 seconds)
  done (took 30.548353889 seconds)
done (took 66.047969832 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.396001837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.986170849 seconds)
  done (took 9.539509801 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.227174121 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.226831608 seconds)
  done (took 3.615751176 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22838366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226723091 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226617628 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.226956717 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22762138 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226814377 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.227919528 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.227665295 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.227253448 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.228853418 seconds)
  done (took 13.432931774 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.227960541 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.227832364 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225364545 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.228228893 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.227907629 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.225431424 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.228092119 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227277498 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.227905047 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225523015 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.228980141 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.226420626 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.228213614 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.225337467 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228389252 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.226211787 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225606073 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225872401 seconds)
  done (took 23.246126629 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228806376 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228933104 seconds)
  done (took 3.618124073 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.224723943 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225434797 seconds)
    (3/7) benchmarking "month"...
    done (took 1.226241205 seconds)
    (4/7) benchmarking "year"...
    done (took 1.226706847 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.225517621 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.226360823 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226305919 seconds)
  done (took 9.742128837 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229471127 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.415724426 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.497385261 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.846045954 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229101298 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230309303 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.036725231 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230263318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232457045 seconds)
  done (took 14.107063621 seconds)
done (took 78.461078062 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.227123273 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.215293956 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.146654371 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.237749987 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232142238 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520003948 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.260969929 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346405357 seconds)
done (took 37.348223959 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.238545565 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.978877468 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.976988951 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.222412022 seconds)
  done (took 11.337054668 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.209655911 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.158508922 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.205407149 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.256664565 seconds)
  done (took 17.992036569 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.868600716 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554654138 seconds)
  done (took 4.584315457 seconds)
done (took 41.311969854 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228293103 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.229633214 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.230193341 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.226358765 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226196582 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227661843 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226985636 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.227366247 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228159353 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.229710319 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229768879 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228382252 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.228944491 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.228243174 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229307576 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22682319 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227054301 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228458346 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.227149422 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227933291 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226807363 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230558062 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228780702 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22807797 seconds)
  done (took 30.637632651 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229573004 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229122489 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230857026 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229668446 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.230144887 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230470735 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231148304 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227564864 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230096653 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231310444 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228771421 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230269228 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231975117 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229234891 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231384277 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229377697 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.23213402 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229056248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232538718 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229337901 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.233065284 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228967024 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229181154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23272312 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229328721 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229460514 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.232407921 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230188849 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232131185 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.229741656 seconds)
  done (took 38.073228427 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237159278 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.242331033 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232451274 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.232532548 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231874725 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232129139 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231013633 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232908586 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232651843 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233099767 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233422412 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.23379427 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.2323719 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233622383 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233828155 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231561895 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232596966 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.233348559 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233668551 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23393798 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.233183324 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233074783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233339519 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.233974107 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233101004 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234726552 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232552167 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.232890376 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232629144 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232487317 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.234048733 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233280365 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239274778 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.238789625 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235350652 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233204572 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238740033 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.244469473 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.234285979 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232745792 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234193615 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233916883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233955996 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234902711 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.235399229 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.235350449 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234020078 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.23515904 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235083828 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.234725229 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.235290002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234454137 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23522499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.235966592 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.234749605 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235880699 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235857548 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.235353361 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234783762 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.236614784 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236295707 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236008389 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235504311 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23501202 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.236067164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.235422258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235408627 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23374863 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235486502 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235880854 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236534136 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23569658 seconds)
  done (took 90.060704988 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23492302 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233629965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233402374 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232437779 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233345079 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235366755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231731929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235548093 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233015661 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235410599 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235625994 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234448223 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2331557 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235774454 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236599758 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234964417 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236578295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234388373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236492787 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237240392 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236968696 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234910354 seconds)
  done (took 28.332995197 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236326318 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237058145 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234694125 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23737094 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235334216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237675179 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.23679008 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237453512 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237968746 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23483417 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235424956 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238001921 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235803305 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235876768 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235710872 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2350611 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239006154 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237035176 seconds)
  done (took 23.425662772 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235696398 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.23691837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.238051058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23617667 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236694407 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238453337 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235632442 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240084723 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238845223 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.236052743 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239571862 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239744177 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239945859 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236371939 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239628848 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237257444 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239616608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235354814 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238802134 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236884643 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237075525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240353079 seconds)
  done (took 28.403434834 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238412363 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.239425435 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.236931413 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.235088441 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.23701371 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.240155021 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239526966 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236231121 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238979652 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240471243 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237435092 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239669989 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.237237119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237635211 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237139357 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238492813 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239576219 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238386024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239992973 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236527709 seconds)
  done (took 25.934837969 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240355846 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240861572 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240701206 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241442758 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241090128 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240819522 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239673748 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240995048 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240856039 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241535822 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240081289 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240448067 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239533218 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239793946 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23977441 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2405739 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241209556 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24151475 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241164941 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241727855 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243131695 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241103867 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241388534 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.242293208 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243796299 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243898646 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243299062 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241408922 seconds)
  done (took 35.92605397 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241549429 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241464162 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238086639 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239300988 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239881884 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.238406751 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237836777 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239329864 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241420852 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23794076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240848957 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.242084809 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240866064 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241901844 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242197345 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241378374 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241285929 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239011429 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240025935 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240336289 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24178668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242170641 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.242877206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23957702 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239273448 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244035569 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242380861 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241321798 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244465792 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.240504967 seconds)
  done (took 38.397060973 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.261368494 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261376446 seconds)
  done (took 3.696436421 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.240614659 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244231233 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242842607 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240567891 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241340342 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24512742 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244943588 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241419658 seconds)
  done (took 11.114898414 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24503959 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243477842 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.244601833 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244637428 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243086099 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.24557517 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252309089 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.261918363 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246039494 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244764486 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.25085905 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.253610227 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248699469 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245081229 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.245164871 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247042854 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.24444851 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245004054 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243185871 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244135035 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245073491 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248171717 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247899306 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241436502 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245994179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.259534238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.250060353 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243603372 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245028405 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250647163 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.244626872 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242156456 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244395848 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245030896 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24498863 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.244595812 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256937636 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261597521 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.254570222 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243299869 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245533224 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242015102 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248613054 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248461823 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246844332 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244452585 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244575415 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242755374 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245454145 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250057195 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251539767 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245081003 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243770491 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254891906 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.246988954 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25383429 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260613709 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249645563 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25674844 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260840743 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261136808 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.255350238 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24919269 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.244703922 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257431276 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.276590462 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255948448 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.261829559 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24525262 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.248288584 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.25759469 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262749636 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25896219 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24772463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245740936 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.24782545 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248927391 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247234263 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257150528 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.268904802 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247370409 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246687571 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258980165 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275467071 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247098494 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247409889 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246421078 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247235687 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249496298 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26056715 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.265691533 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.248606675 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249313421 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.247542114 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250995114 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.247703957 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.247250377 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250746932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245842582 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249602346 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248595281 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253797162 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260695033 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248272835 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249406783 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259260865 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.249281531 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249103456 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260166531 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249172622 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24834989 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250546473 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257957071 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246112854 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253003212 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260825583 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25032031 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252080295 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248475742 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.24966868 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261424538 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.282704337 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.249172564 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.251006403 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.256774964 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.264247854 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250023556 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254500501 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25004448 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248228473 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248456883 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253695514 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.2507916 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253527769 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249900648 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251630594 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248362457 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.252029198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250421255 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254462153 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253878274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252501244 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252511239 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254955094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.252268428 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.254631616 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259348305 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.25238998 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253573188 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253655662 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249314122 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252852564 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255336302 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251071623 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.253565425 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250970571 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252126387 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250674423 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252174021 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253232324 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253859628 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254224763 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257408919 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.251912043 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259175132 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252260772 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250523498 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.2522211 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25243367 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254073805 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252375624 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252515485 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256380355 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263475443 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253230957 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252418171 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25916699 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252172178 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252663261 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253328328 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257019568 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263602626 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252650227 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263429071 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252912744 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252992088 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25327014 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255272282 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253861191 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251930078 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257699963 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264059962 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26954022 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265218775 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.255993432 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259438548 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255630399 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258894827 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260626599 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.25228587 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254702157 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254514757 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255167247 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253931191 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257173267 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.25407769 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254601551 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.254802713 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254542073 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254340679 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255054084 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257129097 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258421561 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251138285 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255733931 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254901847 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255562566 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.25276277 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255105016 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255265728 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256006977 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256711245 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.266338547 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254686221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25963086 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257616234 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257096675 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256252603 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.2578613 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259041143 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257579273 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26641895 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272861115 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.258255835 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26466024 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272552539 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255904667 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261115049 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256662356 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255329887 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261386105 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.26779442 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.256887312 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257172015 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25686925 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257380645 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256966798 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266837565 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252454752 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.256554366 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257843227 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.261095157 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255744962 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259131639 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.257669651 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259522107 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260018883 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255953343 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257637957 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259623176 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256108162 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257024384 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.256736627 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261954483 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267014772 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265084385 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.259468713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261566575 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.259228765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263425856 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260152593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.256790358 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257682231 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274158316 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265807465 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267692115 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25921902 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259033508 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267031706 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258447981 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.2642652 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258244892 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261278309 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259793145 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257522845 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256809032 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260610741 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.259546567 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261339441 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260724176 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264768434 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260126062 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258955195 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258214999 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258583253 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259425311 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.260464331 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.260325622 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264903676 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263305781 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.260532909 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259952012 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269412005 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27552506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263146112 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261088701 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.261072574 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260844963 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.262247096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26158097 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266197121 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269929561 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264005468 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273879114 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262450515 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275525876 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260830573 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.264943427 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270716158 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258810119 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260319909 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262620011 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.260498092 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271169981 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.275906486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263398677 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266092509 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260531449 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.261762615 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262092589 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260464357 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260903785 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.261562878 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27206302 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279820582 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266666537 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264218303 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259289716 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261641041 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262565528 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.26172707 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268561976 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261367203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263413057 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261710837 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262590192 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262054594 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260353961 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262275356 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260162743 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.262066354 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272440355 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.279727047 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266592532 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263415078 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.275303289 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263515991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272197133 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.27766964 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263912226 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.261987285 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262481081 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26643386 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26257718 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265926891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.263150339 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265278394 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269198244 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262334624 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267507938 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265119113 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263276933 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.263972967 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274898327 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289657354 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265939807 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269984227 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262496684 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268069631 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.268531756 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264246158 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264253732 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267709709 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277402306 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276223525 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265479833 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264721808 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265809375 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26434908 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266407037 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265269573 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264089861 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264473388 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268931989 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264626713 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271307996 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266095602 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.265412082 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267891546 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266685537 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278295295 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263613916 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267103606 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265288972 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265494054 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.26631024 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266502033 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265431547 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267071343 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266438118 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.26789773 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274745251 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274447325 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268661157 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.265959531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266063998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267318222 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267801861 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26525142 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266437147 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265556501 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.267798226 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26553455 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.268351316 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264784685 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266772173 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268263095 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267183538 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270248953 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276031807 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268140974 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.264385141 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266801376 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267056503 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266882676 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267784239 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279699194 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270145257 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281379852 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27910203 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27076484 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268982538 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270648269 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.279077182 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.267245132 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268759005 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267319502 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270565261 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268555143 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272578489 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267667511 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277870698 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268951331 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.268204493 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279118706 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286264928 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267025842 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270088298 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275100219 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268318277 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265926301 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268484086 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269292869 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277548189 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286332144 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267852976 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271690077 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267454313 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270796952 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27255304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269786869 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271227445 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265948855 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271938771 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268495819 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269927739 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26794205 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269818068 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268948189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272770831 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.280294196 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26702864 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273232492 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268810512 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270278363 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269443068 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269029258 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26672861 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267814674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270930796 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269098838 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271381695 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273555347 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269535764 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271556525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272003678 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270383006 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273838205 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283714794 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280985 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268393036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.26977069 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.271451716 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274211209 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27051096 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269613762 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272043765 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274188424 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270442102 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270945155 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271696078 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274896569 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293921171 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.286087205 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271824177 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272652016 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277122017 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271284302 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269130359 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272365737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275204565 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276303157 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279387067 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272229212 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280144938 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287577092 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273229511 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276931746 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275915916 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284058022 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275593922 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270801488 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271194326 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278139426 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294317245 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273583715 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283523217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31151876 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289466446 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274890626 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272100392 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272323862 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.27135088 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.276390966 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272691849 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272856188 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273712683 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.27401143 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273435569 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281447362 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274813077 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272629134 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27420953 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.275154747 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276953953 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271414536 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274059996 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273828246 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273691393 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274515896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273745116 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275683995 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289799149 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.288096224 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276014819 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274550026 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270466232 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280199936 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.277927358 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287964456 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28524567 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.27418874 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273804536 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278011429 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274815001 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272538123 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275244813 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274162543 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27410375 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272629641 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.289697058 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283580878 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281716998 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275764689 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273916693 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.27426039 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278455526 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274521786 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275129466 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278930649 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276774361 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280514805 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276257101 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275826107 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280005267 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286406359 seconds)
  done (took 753.758452809 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273824973 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275286605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273469273 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273876768 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274354733 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273394555 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274949762 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274363686 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273276537 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273739895 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274417906 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273628939 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274100397 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274692508 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274704082 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273641404 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274119479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27454765 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274880293 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275733473 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274609981 seconds)
  done (took 27.966912839 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278028377 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274652576 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274126234 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277042579 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275230547 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276648689 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274235948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277807453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278518279 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275019019 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277890344 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278297342 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274845724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275437224 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275922799 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278103852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277777688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276168129 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.280110526 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27605451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278719013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275612947 seconds)
  done (took 29.294534229 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278128482 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.277828281 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277953132 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275495228 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278686393 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.27648173 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277509973 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.278449602 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278807792 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.28151761 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.278242743 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.279738752 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288805914 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.286171507 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282817934 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.278272241 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422479065 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278092203 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278352273 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278890795 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.277448312 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.286701334 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.275380237 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.276502594 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.279210183 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.278509431 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28056917 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280316549 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.278993071 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281015948 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283095975 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280871563 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280466709 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28230128 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.27996983 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280929148 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286595607 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.279262808 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279012155 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.280088512 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291734976 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.307807498 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280321258 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.29002723 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.279427721 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.280532584 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286256973 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288430445 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278887753 seconds)
  done (took 64.134550063 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28078345 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.280662481 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.2794016 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280921751 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.280698489 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.28079303 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281393177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281414832 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278564699 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.279337989 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282445291 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.279486393 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279007506 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281654244 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.282778182 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278472735 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278773341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280065577 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279059208 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278775747 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.278675811 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28113023 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282546712 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.279853815 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282614343 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279738786 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279319444 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.284152252 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280712795 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.27991495 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282487777 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283609092 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282573399 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280863744 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279983266 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282205089 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283370924 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.280714319 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282083229 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280644283 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283751665 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283339097 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283735762 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283856592 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280773026 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280338236 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281115536 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280832388 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281439282 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283634082 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284468377 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.280921662 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283226956 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.281637015 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283453258 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283017225 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280848378 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279996377 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284859459 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282053545 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281667612 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284806416 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.281842416 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283790692 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.284294241 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281449234 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.283350084 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283636441 seconds)
  done (took 88.357910787 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283744417 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283786094 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284768736 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28333936 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284734926 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284374762 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283727772 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.283375685 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284823549 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284019206 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283414981 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284509533 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286127342 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285956467 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283906507 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284596791 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284380856 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284967588 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284806769 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284902804 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.284167958 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28366833 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284719444 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284854947 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285814249 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285274736 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284055686 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28458836 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284786816 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284818751 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285576381 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286120421 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285744141 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.28659591 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.285289662 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285924207 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285158455 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286530837 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286196207 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285599502 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285601858 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285748449 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28552269 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.285928956 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286394838 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.28610112 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287108639 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287326422 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286955055 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284967335 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.286158667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286314841 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286002635 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287526291 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286244513 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.286841497 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287244873 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286356123 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286048488 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285950664 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286667366 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288403001 seconds)
  done (took 80.912664262 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286614129 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288078149 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28545146 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.284900399 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287506079 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285050067 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287388618 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289215405 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287250757 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.287836545 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288269915 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285516603 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286288011 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288481887 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284725993 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285413835 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287159368 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285885845 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288946862 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286674819 seconds)
  done (took 26.955069176 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287117063 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288659884 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28697834 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285083945 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289061639 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286923657 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289463924 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287983054 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287135239 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288920567 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289809342 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289312948 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288498022 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288462508 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289954492 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287121198 seconds)
  done (took 21.829261216 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287062617 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290601319 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289968699 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.287975292 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287319489 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.287454426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291179334 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287414375 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.286793645 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289903734 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.290705398 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290295872 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.289776233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290230796 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.287625493 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.291113063 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289605318 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288379529 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290587369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.290428754 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289186728 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287979816 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.291553596 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.290873115 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.287818536 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.289436833 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288553625 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.288606844 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288396669 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.290640489 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288440108 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.288853689 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288787758 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289056456 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.290345317 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289145635 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.29082618 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.291885522 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291434813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292021019 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292004279 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289844457 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292075913 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292549714 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289406311 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.290841706 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289280233 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289863116 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290300503 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289855541 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29229735 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291811974 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292246289 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.2938292 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.293445039 seconds)
  done (took 72.170017475 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291149089 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293382495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290115428 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293283563 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293603833 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290519865 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291699855 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290088849 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291049184 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293392003 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291619959 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293869216 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290989966 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293641086 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291154899 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292786702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291571785 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292064072 seconds)
  done (took 24.478141784 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291423022 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29319137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.293421226 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291948748 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.29184667 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294831735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291786917 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295150569 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293911818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291961625 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291961401 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.294193766 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294637825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295294749 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292062907 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292142884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295483678 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294162834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292438684 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29250691 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294885701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2949372 seconds)
  done (took 29.677905939 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.294071754 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.294183619 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.311999408 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.34419975 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.330925166 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.293809665 seconds)
  done (took 9.093631595 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293252324 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29475639 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292702165 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295772842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29466222 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293069076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292135747 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292865005 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295436134 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293032801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293250972 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295868521 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295742452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293922245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296638966 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296268432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293428488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293847147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294120027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29666826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293674062 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295679211 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293252148 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29397683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293918664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293505235 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296162243 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294463323 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293778404 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296600131 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297273497 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294175806 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296295344 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294294065 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295961285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297124508 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294406851 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297339216 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297623708 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29469754 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297393698 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298124137 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298035091 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294718226 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297279499 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295515256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295160015 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293811527 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295042308 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298256729 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298519409 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295105516 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298437395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297833634 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299187844 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29938818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296174246 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294838612 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297646952 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296188532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295639002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298130321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295999164 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295094807 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298297897 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296463724 seconds)
  done (took 86.735225627 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296413936 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296404229 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296777769 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297116041 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295696375 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297020393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296755278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297123862 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29668589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296283357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298769401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295844376 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295841729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296569141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296823485 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295328626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296943449 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296173077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295990357 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29891952 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296346782 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296885001 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297749228 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297157996 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296818001 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299945692 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297047519 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297230964 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29728677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297015718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296898062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297649666 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297859855 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297179419 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298146377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297768255 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297920686 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297161658 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297503022 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300071179 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297965174 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300329009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298483755 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298108532 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299629738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298172609 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299279352 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298165761 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298171428 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300044494 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298959972 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299032152 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298393199 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298859561 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299722911 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298908754 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300327313 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299827892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297904607 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301780255 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299557712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298177236 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302027104 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299454781 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299643847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2995085 seconds)
  done (took 86.895841138 seconds)
done (took 1757.424784873 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.285518036 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.379943112 seconds)
  done (took 13.895198731 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464595025 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416245199 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.300704368 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.330186311 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298387888 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.300405303 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.307243135 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298626003 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300369752 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300517354 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301170134 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489418413 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.304416517 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298879152 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301587922 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393441349 seconds)
  done (took 42.646273411 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330140372 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30653766 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.429495434 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.324092175 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.330543503 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495950756 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360609453 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.305549318 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.494886009 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.348714825 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.958114915 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327380234 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30320542 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.489185097 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.320904426 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496801926 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.571781684 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.091791205 seconds)
  done (took 30.51769868 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.798704799 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.320332749 seconds)
  done (took 9.35311667 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.326526052 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.323463423 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.302967564 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.334027111 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.320635683 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.309811784 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.319403765 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.340326684 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.315217722 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.352224745 seconds)
  done (took 64.484119479 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.325451779 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305539387 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.307640948 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304600177 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.297210427 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.308544971 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305775022 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.301611401 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.26472727 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.442250346 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32087872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.311651957 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.306027637 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304242487 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303418805 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.343189203 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.453912465 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.303145312 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.302606501 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.312571926 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306251303 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.428849426 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347029346 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303726528 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443990858 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.283345627 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310337574 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312319993 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427613332 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30347768 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306909543 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.306546135 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.307371926 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.912526751 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.888509539 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.319086881 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330583875 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316633666 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.305903454 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.454577969 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306781385 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.313571349 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.299846743 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.83641039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466914006 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429329883 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.693332707 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309008474 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309072525 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.373577832 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.309630032 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309504943 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338331508 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.092071657 seconds)
  done (took 110.963981399 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.334171817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.797023539 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471957213 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.325625887 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963959105 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.002711078 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301608808 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.613138021 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.323306375 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300827324 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593730918 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823337703 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303133999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.310778533 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.319879248 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383067256 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30273388 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.09952659 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.299489494 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300455582 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735066786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315832101 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31288035 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.576345575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340917708 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78888647 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.861441335 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.771394394 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.300227767 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300321059 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787684674 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307201972 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.353394381 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.299908408 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.597801475 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684031392 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65729416 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.30464767 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326268647 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299831733 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.321467361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786977633 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.668498075 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300420585 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.315433383 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79450387 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299601099 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.313003299 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302906771 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509459346 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.232846158 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301902988 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.994038895 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304146102 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.573202504 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.323978061 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.389489505 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840574126 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301091146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.437427259 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320259258 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303734557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308332217 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30155434 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305676147 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.697566895 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.599520474 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306457899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685010673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797181112 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.304719009 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858526903 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.179908375 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305178003 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.343541237 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302707737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.942986966 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845208448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.304940896 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.301101955 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671266718 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.305953212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.607772743 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317456774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302625628 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746077555 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.325134492 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.364512821 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.305994196 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.301986881 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.943481008 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306057887 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.587306912 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.340630279 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305101348 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306126224 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328674261 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302483779 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321326074 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310071075 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852026062 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.303013643 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.465686115 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32713841 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309005734 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307127899 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309806423 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305950672 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528239749 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.831768462 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.31447086 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307597116 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.303811777 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.309548271 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.55104604 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.30409586 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.634668996 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305496225 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301950124 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327092436 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.044601153 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335478132 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304077273 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.312403967 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.175862879 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519314273 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327650032 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.305034925 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31153923 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331216443 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.881638298 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307474568 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.345806049 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309850589 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03488776 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307852399 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.322446622 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.892865418 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310162417 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307999756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.311025808 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308411097 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625522334 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608204964 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.492039942 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.306418364 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.32983489 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.036523297 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.308051082 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.457732706 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330745875 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294707479 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509244033 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.500304006 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307339986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.86480852 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.306663224 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524730277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30994584 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634974697 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821488536 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.306961006 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313401164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.039069522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974073027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118323162 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.309314483 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.609571753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.314466722 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.762350096 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308819653 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309047669 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.746068634 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.312684692 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315742946 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.312268005 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.310652662 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.450115487 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490919719 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.505844908 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.308820446 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805856173 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321283304 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307699893 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330916536 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315672691 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.6682058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397412722 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.311390182 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.360815747 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.311502939 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310462859 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824337688 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.240398462 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312054685 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470679558 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977525497 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.31105407 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311872593 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.00916806 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.558813801 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888203924 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340545379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.649531125 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.31255945 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353952826 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932961664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.371873917 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815419868 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310021228 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.310797841 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.951267348 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.312319148 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.478405301 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.31273665 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.312199596 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874047212 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.312582213 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.315154478 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.907342439 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312879439 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575728114 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.312053509 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.355387145 seconds)
  done (took 1106.8330695 seconds)
done (took 1379.924729379 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.314204372 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315366295 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.298512635 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312655393 seconds)
  done (took 26.489029589 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.320418315 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319039596 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.319587823 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318701247 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.319741229 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.317247959 seconds)
  done (took 9.1656642 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.698754402 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314555261 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.313788222 seconds)
  done (took 19.577678438 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.560852419 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.657937873 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.711462848 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.639924045 seconds)
  done (took 10.822967372 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321575722 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320954017 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321388748 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323111447 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.321853481 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.323460004 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322473242 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.322944772 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.32416047 seconds)
  done (took 13.151239416 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.624612517 seconds)
done (took 86.079616618 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.255255656 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.028384068 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.396613693 seconds)
    (4/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.822888379 seconds)
    (5/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.3073675 seconds)
    (6/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.125536207 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.770997283 seconds)
    (8/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.440205242 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.602073691 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335868691 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32534865 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.594370215 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.39564272 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357035797 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.330972276 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.855864531 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.329582021 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.357118878 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.340861289 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.46058446 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.980781699 seconds)
    (22/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.995575121 seconds)
    (23/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.6656187 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.833043594 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.324219051 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.367187352 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.453222392 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.99756215 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.068282328 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.585691855 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.314462451 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.302384669 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.441359604 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.314188895 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.341283238 seconds)
    (36/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.717101397 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.884676059 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.439638039 seconds)
    (39/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.081056516 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.990005765 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.315257702 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.313246206 seconds)
    (43/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.510009495 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.270867217 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.757100274 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.116246999 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 5.373497611 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.423775939 seconds)
    (49/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.301303975 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.316346389 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.316137286 seconds)
    (52/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.345051212 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.39955279 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.429228231 seconds)
    (55/309) benchmarking ("sort", BigInt, false)...
    done (took 6.319096099 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.591446787 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.900746177 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.366365978 seconds)
    (59/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.441169243 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.369742292 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.633453227 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.139829594 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.691908889 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387068883 seconds)
    (65/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.421593092 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.333092223 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.107062587 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.355534014 seconds)
    (69/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.08147092 seconds)
    (70/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.532788156 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.368830608 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.94392491 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.643194126 seconds)
    (74/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.990012895 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336557354 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.109634687 seconds)
    (77/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.847918542 seconds)
    (78/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.319130863 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.267545925 seconds)
    (80/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.329545493 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.395926635 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.218320026 seconds)
    (83/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.332859732 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.713256982 seconds)
    (85/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.816573166 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.622671985 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.315154785 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.154872143 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.829919685 seconds)
    (90/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.480160104 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.84425998 seconds)
    (92/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.425624449 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.317739843 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 4.343213703 seconds)
    (95/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.967051177 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.677124021 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.320699045 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.338590619 seconds)
    (99/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993111281 seconds)
    (100/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.440853785 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345642165 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.206803712 seconds)
    (103/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346064438 seconds)
    (104/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.326067138 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.55804077 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.037401973 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.952345967 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.312132054 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.311785369 seconds)
    (110/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.51753276 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.401933355 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.702211995 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.418944541 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.983540739 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.312134488 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.344317577 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.182194208 seconds)
    (118/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.406023824 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.366158121 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.955948189 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.519973434 seconds)
    (122/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.88265052 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.367848296 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.32188987 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.840571054 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.303043924 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.319408021 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.840516004 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.420020551 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.865162823 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.322834633 seconds)
    (132/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.418855721 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 1.848499107 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.341475467 seconds)
    (135/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.833934036 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.322172244 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.261107378 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.578579886 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.34087575 seconds)
    (140/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339513493 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767938245 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.171479597 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.322852227 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.603875537 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.864604727 seconds)
    (146/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.32067959 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34429461 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.755561176 seconds)
    (149/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.50806265 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.424250352 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.979371338 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.28597784 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.04212044 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.075806824 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.186532151 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.345868496 seconds)
    (157/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.436649915 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.642299744 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.338017782 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.38774941 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.320213676 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.657461646 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.346369823 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.343530442 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.442755181 seconds)
    (166/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.450278778 seconds)
    (167/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.387019052 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.32258927 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.320421603 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.420338818 seconds)
    (171/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.744220698 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.924074629 seconds)
    (173/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.719339084 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.414034342 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.775064828 seconds)
    (176/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.361387765 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.627366972 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.844507872 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.773466341 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.005988493 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.047704888 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.150883644 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.220479957 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.345877365 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.388667866 seconds)
    (186/309) benchmarking ("sort", Float64, false)...
    done (took 5.665805967 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.334386358 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.306726377 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.321052086 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347851388 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.545648992 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.385338395 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.324393654 seconds)
    (194/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.429569791 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.294178136 seconds)
    (196/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.671160765 seconds)
    (197/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.521955669 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.382830719 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.310074781 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.052897142 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.306837999 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.722243537 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.322589719 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.381396455 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.35216069 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.217305583 seconds)
    (207/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.377262173 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.642446453 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399728111 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.096639365 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.326858623 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.085100918 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.387527688 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.952640419 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.39179429 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.332948544 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.323322529 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.071040109 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.329362143 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.521076053 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.357887481 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.866067629 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.543592726 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.420649635 seconds)
    (225/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.739973188 seconds)
    (226/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.281329571 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434914286 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.815781838 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.335608321 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.323438177 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.345408674 seconds)
    (232/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.985686588 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.995725548 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.311671678 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.247141136 seconds)
    (236/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.323812861 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364683177 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.366811749 seconds)
    (239/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.985996109 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.771992194 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.3123004 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.355640373 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.664983256 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.731601122 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.432102862 seconds)
    (246/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.731142706 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.350168136 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.033295008 seconds)
    (249/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.89239466 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.219945231 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.179195103 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.939239916 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.464834325 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.563634867 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.877130083 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.438425206 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.33288722 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.824433183 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.658072153 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.314498813 seconds)
    (261/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.640095091 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.352703442 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.408723353 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.328133904 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.761496813 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438471979 seconds)
    (267/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.312664881 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.966661282 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.335006152 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.755080462 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.708136675 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.76512609 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.667512653 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.329707233 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.411534039 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.99244459 seconds)
    (277/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.477810823 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.117107217 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.04492721 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.025331943 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.567625619 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.418750808 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.449239132 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.273397996 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.418814422 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.615918144 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375164031 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.413390644 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.447951917 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.79863498 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.095106224 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.332684519 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.505189221 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.851415903 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.327348618 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.371705293 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.401919244 seconds)
    (298/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.386873775 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.401409484 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.140258544 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411681356 seconds)
    (302/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416591571 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.340184642 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.35502573 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.331309735 seconds)
    (306/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.751927511 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.328191928 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.329368177 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.325367404 seconds)
  done (took 939.395216392 seconds)
done (took 940.64677244 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365077305 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357990088 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.34242318 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.363718126 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.453223807 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.370038011 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.350829689 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.345955237 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.38956789 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391684031 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.342559766 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.368969829 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343996302 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341679602 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.341631015 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356437902 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.503549017 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342777309 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359527755 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.352302376 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.358106453 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340745559 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.391613648 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.368757312 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347393766 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346372683 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.346706302 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.362029361 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.455237959 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.345982972 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346633726 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.354816166 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.458443547 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.338910545 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339211824 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.362818531 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354426794 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.354422178 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.347122791 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.374996491 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.970321637 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.344631848 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.344295006 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.344667821 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344874081 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.348603532 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.344085649 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.349649979 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357707998 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357104301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.986409586 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.36024503 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347255608 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.345173054 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.356029795 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.345894257 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349673329 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360781699 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.362985154 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359970421 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.506216395 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.351341159 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.348472579 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.360918864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.35230673 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.032134902 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.342405499 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.350730428 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.975993895 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.351185716 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.026019822 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.35446126 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.348097447 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.359205502 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.375450504 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.511765903 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.341274952 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346783447 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353637533 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.345361915 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.356164108 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358175369 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.352524276 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347679909 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360437426 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374053694 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357782946 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348142889 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.355949678 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366913186 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.352847034 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356604924 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.350133487 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34221225 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.357236875 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.351898923 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.350076106 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349173689 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352901905 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358331931 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.974468256 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364486407 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.344244044 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345588274 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.348849661 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.361190026 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.976267337 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.348149584 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.36901123 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.395639563 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.348758678 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.512899032 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.350014552 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361494934 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.356538735 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.351658857 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342845319 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.514283258 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.997490028 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.363583127 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350168332 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.346645017 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363873341 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.350485904 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346154111 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.520852519 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.351427976 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362864176 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.468896504 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.359179258 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381411088 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34693719 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.352196034 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.380196887 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365093082 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.379642051 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353664023 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365626548 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.365023623 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347620615 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361258249 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.361089211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.351928947 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357560761 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.345815023 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.378469915 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363224416 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36344254 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.371771904 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472770434 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.348269179 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.519012122 seconds)
done (took 230.046093476 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.413746205 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342904763 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434956667 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.348689744 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.456506421 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.453541195 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346252038 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345767889 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344951362 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.723488495 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.344856101 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346340843 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.341311465 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344361362 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.433529758 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348085204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347434226 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.689728663 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.346744009 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.423802632 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.348483651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346659479 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349382201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.730778535 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.342155934 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.348692899 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.422899476 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348557842 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.69695048 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.340699068 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.343272603 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.697061893 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.443393446 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.365848706 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.360161927 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.356424573 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.454986107 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.367939197 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.433716765 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.432518664 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435760768 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.38700969 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.349685004 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.34476683 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.351902244 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.350915429 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347378807 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.377356854 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.350817088 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.349003384 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.692583467 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.358303791 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.359540682 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.349137263 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.347676395 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.37005151 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.347029334 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352374594 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.443776048 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.35070636 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417340061 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.736045256 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73349059 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355405769 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.345152569 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.350004546 seconds)
  done (took 149.538457786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.418749617 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.421913675 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471243432 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348453637 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401181645 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.476175564 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.348013346 seconds)
  done (took 11.166141138 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.356638961 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352599317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401838128 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401492357 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351298199 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.49829574 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35195197 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363884109 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349287797 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404688879 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.352654872 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.35204602 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.359195278 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345057741 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399439428 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.361919445 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46638284 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.353962818 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351675129 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501061391 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347803779 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359146026 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.403663867 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362430331 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351768504 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357827635 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.920354374 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350472176 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348625021 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.352224629 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350907791 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.390242055 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.352855006 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.350860632 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352345285 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467945131 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.35032084 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348536928 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.35307582 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.347412431 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.352072595 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353079777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354180489 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.350604116 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.354184042 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376693235 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352915277 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.352892434 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353400748 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352973486 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.401900947 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352400506 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.350797743 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.350117531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.410098603 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35851189 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.353943845 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350104097 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.355273576 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349982233 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.506104037 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401160343 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353175073 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.403229305 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355452385 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3566402 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.355510338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354774965 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.408393306 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353023677 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40188344 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.351244178 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.50823891 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.379233563 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354731687 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356570947 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.356125124 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35303086 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.34749719 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.360072811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352011772 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.355839921 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.360869794 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352296611 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354147326 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.457607319 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46270615 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.351052757 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.367474404 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360186434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.3518192 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.407765987 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354528311 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353332572 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408127641 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.468069151 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.407686941 seconds)
  done (took 155.105598344 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360166776 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.362700443 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.35628247 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.371261967 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.355769191 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354882387 seconds)
  done (took 9.446821235 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358956307 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.357935237 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355410399 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.355802015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.355247377 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3548616 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.354377424 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357941627 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359885053 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.355783889 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.356919046 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.356463622 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.356501789 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.356061053 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355356782 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356499679 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.356812799 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353172088 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356483108 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355858657 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.451469331 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.355752251 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354862885 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.358432576 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362039387 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.356607389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364399623 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356624863 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.356862875 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.362918327 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.359274181 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.357339822 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359922816 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365206764 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.362661348 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359637993 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362208567 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359286248 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353600208 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.35883077 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359605222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35649101 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.357454537 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358640682 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.361539587 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366800512 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.364152133 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366385263 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358927714 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35940701 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.359010069 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358475902 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359089615 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.360384559 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363739385 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362248923 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.365619594 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358694325 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358074973 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360476673 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361287044 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.359586488 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362625323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363948046 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367010586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359849329 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361040186 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363655505 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358251296 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359503181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36008456 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.35707841 seconds)
  done (took 100.240007234 seconds)
done (took 426.773505894 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.38870138 seconds)
  done (took 7.677734554 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.520320966 seconds)
  done (took 7.810377662 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.606969189 seconds)
  done (took 22.903473927 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.413092843 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.44979355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.362804283 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.358923289 seconds)
  done (took 26.873637265 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.478078884 seconds)
  done (took 7.768722606 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.354034649 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.370978027 seconds)
  done (took 14.016740673 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.513387198 seconds)
  done (took 7.803097553 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.851149497 seconds)
  done (took 8.146960311 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364204949 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371983139 seconds)
  done (took 14.297061544 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.342493747 seconds)
  done (took 7.634026114 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.553183054 seconds)
  done (took 8.845541559 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.358251692 seconds)
  done (took 7.648909538 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.379730157 seconds)
  done (took 7.671185455 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.774451213 seconds)
  done (took 10.066820882 seconds)
done (took 160.454311757 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.351791163 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.352960585 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.350769445 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.351622306 seconds)
  done (took 26.697417137 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394758117 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393970145 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396274483 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.404584956 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.397388798 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393992707 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387299836 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.386938856 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405606056 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397903884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.397969165 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.397209183 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.394979545 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.387251238 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397991262 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396595915 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406711978 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.396806822 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387749588 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398554124 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.362628233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406901582 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.398232769 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363126295 seconds)
  done (took 34.741613396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.559287543 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.432810968 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.514989817 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414519663 seconds)
  done (took 7.21360221 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.414085485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.416895416 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427816728 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470878271 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.493588761 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426373186 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390188143 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.383689673 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.370718682 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.41718613 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491101484 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.431793183 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.499165636 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.362940432 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.541273344 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365165129 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.364015357 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.415154132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467206311 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.481602386 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364516234 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414935241 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.418753083 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433155532 seconds)
  done (took 35.555630041 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.361835784 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371194593 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.369424838 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364369684 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363868248 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363944493 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.369135669 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364645838 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.383776261 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.363954079 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362004693 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.362416837 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.362870921 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.364222964 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.362743856 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.375681275 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.376102989 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.363912446 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.367339077 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.370193416 seconds)
  done (took 28.637633065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.357812892 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.211498488 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.709103415 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612310017 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.358419423 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.359408979 seconds)
  done (took 27.903175167 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.441833595 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.576405406 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.363616361 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.784313951 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.873155121 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367415611 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.364111923 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.617612755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.964526323 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.989038057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.427898756 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437632061 seconds)
  done (took 20.505602501 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.357685152 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.357621193 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.372284461 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.37628617 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.42686213 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.36821181 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37183314 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.358018624 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.426729182 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.431908939 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.368583229 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42779909 seconds)
  done (took 37.940425833 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447825038 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411434914 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.53867144 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214006173 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.742981548 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570970286 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.254929087 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.819791799 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.363559541 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63322169 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363029712 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451859411 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617872927 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377461462 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358771322 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.4880616 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589782546 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922328587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362511722 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.688936247 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387433029 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369703497 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.804660112 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.391575885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573734644 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494223605 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.62173984 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36187406 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674817709 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373587259 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372967177 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361915649 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63557403 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07319546 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452693516 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372722544 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241242361 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.078469722 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.370878185 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.711562343 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382404378 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363742475 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373174583 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36313432 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297686684 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362518212 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830707576 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.369218742 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.074587511 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362978328 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374149628 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459132271 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.367173299 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.181366481 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430396016 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362209346 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.360622227 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369780979 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934589264 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.313717477 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367490592 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.299036626 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.533483711 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.691342363 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068278212 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.466004151 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36623219 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367175004 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298836092 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.766534485 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382568989 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508760904 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.383537194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014788388 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122298933 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367751804 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295326293 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97284831 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374699402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.297929728 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594597416 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363663561 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304487886 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.309511658 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298906167 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181102464 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374736229 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.888633698 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374530017 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816805782 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375290134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383101876 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388697783 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.59066446 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.249447731 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364753889 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.380223137 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502141723 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386471544 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.826013259 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300574291 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.368039633 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622921742 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578473903 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378308964 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.497872391 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590893631 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384453272 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.381377565 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379365047 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.377533522 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.01282155 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380240761 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325744962 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383649397 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366105469 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25036449 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373993478 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.464599122 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373273683 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646419351 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.270000022 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368350012 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4486348 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367024463 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.365379105 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.822552381 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.885862045 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365903758 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.369494417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368057189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.377849128 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.36694175 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328394408 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.378960467 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369498217 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.370826957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593544974 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378909136 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641648865 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302578287 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507331951 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.46734358 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.59067207 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.66187442 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.364159235 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628793359 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382534721 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367717595 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379039343 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38717523 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466956606 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390649867 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.37978125 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623019892 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.372085634 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.373138274 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.318615197 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371417985 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37591043 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.373618935 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273826596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014622951 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340905749 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375530541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266005388 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.383060817 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43367957 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374772304 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.379782353 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.439104603 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.370360329 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.371758521 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.372457552 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59398323 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380485519 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.734764761 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448156456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.590294167 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01950122 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383519411 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.303271393 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.081685285 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.062733854 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369196277 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308565066 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370657363 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379095897 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381022508 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.698325664 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018336099 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373078713 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.730253785 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.377391356 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38158284 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.376192143 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369620161 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.438099773 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353548275 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382072952 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38372733 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514973769 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.386386084 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305071504 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.375512919 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377470882 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371237325 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372450286 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404570492 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.735336951 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881642464 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631335039 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.214021369 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385110995 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.869108294 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.407164257 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.373872036 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371306301 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387621372 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.383489047 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37881097 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.3828415 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.749429893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054298183 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937361431 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207413485 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967906316 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474334132 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.374438203 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374630007 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841277645 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309466312 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932067354 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592104769 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841408938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329930963 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595104028 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.668887576 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244563827 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382965594 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603029584 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463032129 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.375073589 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386435863 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585977897 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407811344 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374845292 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303751818 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.658872074 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621607732 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383480648 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456087601 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833122626 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379761064 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376892708 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.371839908 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.823062429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566726644 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.090544803 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.553449896 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377727995 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384235668 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880426323 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381395646 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.604595688 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055714051 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387933737 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.596609872 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315616682 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.385524349 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386412295 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.376107747 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.913007328 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.375095329 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.631142755 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386545813 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311176561 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380447542 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972577031 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.231768306 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.38132925 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375164925 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237493181 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394799003 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691987138 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.387361134 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.357878031 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38151593 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310193558 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311049532 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.069394588 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382548173 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345356943 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942268547 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.492849062 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42750279 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410788642 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228418485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632055111 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.390807148 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026756275 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603367945 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.328893063 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399572279 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.47706745 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389883325 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.363342783 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377095308 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612736971 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273072788 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601743826 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.57371248 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.291069116 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375306492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591768785 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378500887 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377619598 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656819791 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.087515885 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.378263885 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149796394 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401779611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390587862 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301091658 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546429198 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384875061 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457618053 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389444013 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.38865658 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.388550519 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57250489 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382606448 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381521264 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.393274273 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471991145 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380183449 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.370365284 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.380091764 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03841926 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16997078 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034162921 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392770895 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379600938 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383080582 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31357235 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526151731 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.60877865 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653318862 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498683207 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.59997117 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402930328 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382174172 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38851083 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593640478 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655109589 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281102001 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379997428 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396054852 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.380216151 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391723506 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.593184112 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953196097 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003144791 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498529045 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39387255 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.843204054 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654987105 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380770887 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380415024 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976987535 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.390648225 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.840395254 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.385026901 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395167437 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529678087 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393087514 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100171443 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.389534164 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537878737 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.154717036 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763780678 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638537799 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.931280263 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394838829 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039566661 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177834245 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648498657 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448171377 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391832819 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.496432233 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528884314 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.386964735 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383334371 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382153267 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234167712 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.092385079 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.393918371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045475778 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648209424 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.37954525 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.387150325 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405990975 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.393241699 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608684553 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214863388 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609325294 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392753958 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390173925 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.20447524 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048223079 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398366584 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318515041 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.386339491 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657128582 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.618714653 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402490094 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.836594309 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.093862873 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002582404 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358332488 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4044691 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389291227 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.181990753 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045539621 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.386206354 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954737039 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943661061 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402179409 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659394079 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.389341445 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38520343 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661143051 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.389010415 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400881144 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397249692 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043373366 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.267637228 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.39821495 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.799512856 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.322180335 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732670862 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09265297 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322274322 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394490329 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.594624603 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38673041 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504906104 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39568493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.396185744 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389500384 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.144038531 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677900962 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.389340718 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.370804842 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.369517378 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394645524 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39356518 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63718233 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393171872 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.060776752 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.735336404 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643578174 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390275813 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.371768843 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.391090369 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385676728 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.384126557 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.589938646 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.714850515 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000800784 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.393925892 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.399279336 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390276756 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.604709676 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598664169 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400219511 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400219275 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385767649 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405171776 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.292352154 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.895794161 seconds)
  done (took 1627.932718724 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.385730896 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.43405612 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.39939656 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.398540133 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.411858205 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.470384424 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.399924204 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483063406 seconds)
  done (took 52.704442398 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.387149811 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.604536252 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.420090267 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.402263288 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.395827341 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.397894895 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.87172119 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.390511953 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.39549874 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.396718959 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.401862625 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.392871962 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103296731 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.398041628 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.387750466 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.389649178 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.395962766 seconds)
  done (took 66.461860356 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.402015297 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.934314092 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.421079087 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.390592192 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.960125799 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.401970721 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.846929625 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.443645504 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.403040656 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.407571231 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.04434192 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.413068911 seconds)
  done (took 81.393754754 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.395320148 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.394623531 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.394601017 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.394575552 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.395562895 seconds)
  done (took 8.298309931 seconds)
done (took 2057.27889233 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.640770025 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.204678823 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.168324837 seconds)
  done (took 5.697853253 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.537901335 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.587731791 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.72937993 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.713917245 seconds)
  done (took 7.895851307 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.669273462 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.767746773 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.573022511 seconds)
  done (took 6.334879337 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.986268758 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.395143195 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.465452251 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.389370382 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.387299123 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.388692656 seconds)
  done (took 20.493005092 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.395223771 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.397792363 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.394949788 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396997234 seconds)
  done (took 6.912276592 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.377215842 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.147652941 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.374929009 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.390502378 seconds)
  done (took 18.61528393 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.140958751 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.153968712 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.137977965 seconds)
  done (took 7.760472315 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.395595535 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.229864159 seconds)
  done (took 9.952094178 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726102828 seconds)
  done (took 3.051452949 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.52496971 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.659273106 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.566902872 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.463828781 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.551630499 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.929682007 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.340890491 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.838560459 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.457159257 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.9727184 seconds)
  done (took 30.634864225 seconds)
done (took 131.161049192 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.590535348 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.409725144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.595802101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.604310932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.622410454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.598530402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.894234516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.573827294 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.070765816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.058808459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.566969086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.622534485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.621318002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412342985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.621342354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.787797732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.626672128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.621760057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.29685454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.390142902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.895278959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.198150651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.394388628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.218032721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.623135945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.549454814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.772957074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.784755064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400109005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.797849032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.546966777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.408453041 seconds)
  done (took 198.502746057 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392793731 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391863851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.392047931 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.403411379 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390976195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392364088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.392669538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.405934028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.391595848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.391042472 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.401260741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.392885007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.393730469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.415800309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393667734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.423714445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.392059149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.402644919 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.391795953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.404699748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.393145257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406858696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.392372114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409128187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.404053511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.40112337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390812718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.417148132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403052554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.392988653 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.407453729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.392922453 seconds)
  done (took 206.097566833 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406150681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393341721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.394115387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405940154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.392758706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.410423022 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39545708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.392967313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401539615 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.392333281 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.393368108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407053844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.396090743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.393810599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393340737 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.393004085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.407248394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.393920121 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394183091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.405943241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.396013876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.394148536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.40664143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394310056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.410657933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.394372549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.394103896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422542194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.394401879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.415492913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.396033038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406570443 seconds)
  done (took 206.11809247 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.594088252 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.403840504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.404318953 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.337600963 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404378325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403495063 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.403631781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.603265119 seconds)
  done (took 14.886414451 seconds)
done (took 626.932968431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.851124032 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.552170495 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.618177489 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424759009 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.320584278 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.425175417 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42467324 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.62210614 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.404022436 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.627784275 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.74953073 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.420773222 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.896818228 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420460762 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.704841873 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.531876899 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.322931784 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437273877 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.771519855 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.024537653 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.707116287 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.061140422 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.621934279 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.405171981 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.894150036 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.060059339 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.292229478 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.321940334 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.423587515 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.777076428 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.218202142 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.545753845 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.497483566 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.474902914 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.530044213 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.513297178 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.462192686 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.471173858 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.616014552 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.735289997 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.019600232 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.172926026 seconds)
  done (took 96.705708983 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.394398962 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.395984037 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.393078138 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.394905885 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.396137108 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.394004701 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394755542 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.393925625 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.394714234 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.39392012 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.394327584 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.396352346 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.394163653 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.397347172 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.393814003 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.394178058 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.395790574 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.39646214 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.394783372 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.394390898 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.395007429 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.394863825 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.395938252 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.395119855 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.395337434 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.395172309 seconds)
  done (took 37.604444212 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.40779279 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.664539014 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.863591775 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41300909 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.407413393 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411685123 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.498791351 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.408095952 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.411359719 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.410376122 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.570621674 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.410568212 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449196832 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.879103184 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411160773 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.410029724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409555769 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410151205 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.673462388 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418649364 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.500496922 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.40866472 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.499903518 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.420934011 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.411613822 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410230368 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.414153126 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.920481476 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.41041589 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.574450997 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.292082195 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.49863229 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.870511932 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.884210628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.294494099 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.411565604 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.410342584 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.585466696 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412061837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411234446 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.50038434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.412037654 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.883160507 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.076587164 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429735585 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.410595989 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.945970232 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.58024277 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.703917797 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419957203 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905852426 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.415125826 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.411966822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.412493743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.704166433 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.417423653 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.411748629 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.985340646 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.417675422 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.501694877 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.412815311 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412230401 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.68465518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.41168002 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.672687304 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.413163224 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.418916765 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.411161003 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.882512537 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416427641 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.090399425 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.430640385 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.412366668 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.580712031 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.674781135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.983191066 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.415881508 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.688149183 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.886399146 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.501584328 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.416443948 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.912885263 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.50534707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.418075779 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.414923331 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.415291018 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.412976719 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.45626676 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.501752779 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.026410758 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.086662692 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.002814352 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.506008685 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.425197217 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414195752 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.981362474 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.429715959 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.413249022 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.881166996 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.096205712 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.432272839 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.420252264 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.080562078 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434040122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.504745014 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418642809 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.892276284 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417322984 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.458119452 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.414990787 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421993226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.418017439 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.505690241 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.418131109 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.415529093 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.067491725 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.602547381 seconds)
  done (took 186.108108954 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.407891426 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.431521909 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.406398314 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.406769338 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.407464972 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.414677374 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.407981184 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.407865086 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413609939 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.407356219 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.40734423 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.411045828 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.409136239 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.407468147 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.416409298 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.416184761 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.019090474 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.409250354 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.407884107 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.407479045 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.232230237 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.412847136 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411078198 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.407758838 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.411311029 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.411384657 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.417177593 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.411256106 seconds)
  done (took 154.280634013 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417243822 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.053635215 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.414172647 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.570253259 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44006295 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415155276 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.562390738 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482439943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419013087 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.414330679 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.414984085 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.761821794 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.417403035 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.9936446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.631761607 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.568442871 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991948754 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.417430291 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.415378604 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.41659721 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.566619407 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.426354186 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.757513917 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.051267117 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417501816 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.054096934 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407756263 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.416684182 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417437318 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.054276116 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.415020522 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.759555071 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.507410748 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487761764 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.057923324 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.999502321 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.005094268 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.577773202 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.41743929 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.415528965 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.416314113 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.40849255 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055175044 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.417960235 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419125591 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.048510476 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.434740135 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.420466491 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426864962 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.416014894 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.487291669 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.489402522 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.763274513 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.059673772 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.507995891 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441259031 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.565066784 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.790382834 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.420550505 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.005709739 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.405405838 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.059331644 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.419790627 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408485456 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.418312979 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.425305899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.594032968 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.567200684 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.000525528 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.419460462 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.999686141 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.594770251 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.41999581 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420703068 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.421198523 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057762708 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.000872607 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.594802869 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.579866737 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.641532287 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.410390896 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420365251 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.408145055 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.509692835 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.419955309 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.057986825 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.004366529 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.42158913 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.42285382 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.422389331 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.422042923 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.624673018 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.059947978 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.511161785 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.996286585 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.776885067 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.761174364 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.421039364 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489538793 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.419056921 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.765553174 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.422321132 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.485674286 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.852813173 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.765389026 seconds)
  done (took 170.496094616 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.701221263 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.794808927 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519249407 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.544818033 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.988291868 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.03369698 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.660245175 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568947882 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.540572941 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.689740678 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.681361022 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.509181411 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.640358996 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.505460943 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.137910287 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.49809598 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.518676145 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.552080612 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.543022993 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.545474674 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.089410015 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.72374403 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.619916726 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.599824219 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526612559 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.268327557 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.023347527 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.956398312 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.613964079 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.790857659 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.967663034 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.638516152 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.428262125 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.13576161 seconds)
  done (took 68.907062618 seconds)
done (took 715.43526259 seconds)
SAVING RESULT...
DONE!
