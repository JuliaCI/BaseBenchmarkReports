cset: moving following pidspec: 29042
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.297699451 seconds)
loading group "string"... done (took 0.567078799 seconds)
loading group "linalg"... done (took 8.363220156 seconds)
loading group "parallel"... done (took 0.169832764 seconds)
loading group "find"... done (took 1.250363809 seconds)
loading group "tuple"... done (took 2.004184265 seconds)
loading group "dates"... done (took 1.314277534 seconds)
loading group "micro"... done (took 0.208433364 seconds)
loading group "io"... done (took 0.5537463 seconds)
loading group "scalar"... done (took 41.227052086 seconds)
loading group "sparse"... done (took 12.647148626 seconds)
loading group "broadcast"... done (took 1.108043916 seconds)
loading group "union"... done (took 13.95655018 seconds)
loading group "simd"... done (took 4.820385457 seconds)
loading group "random"... done (took 10.037826689 seconds)
loading group "problem"... done (took 2.090313273 seconds)
loading group "array"... done (took 23.584011847 seconds)
loading group "misc"... done (took 1.102935277 seconds)
loading group "sort"... done (took 3.511791501 seconds)
loading group "collection"... done (took 20.694426471 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522404262 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.113953171 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142631215 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14515777 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.197115738 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136150711 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136913995 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10871089 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.007760032 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180458536 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121988428 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523636418 seconds)
done (took 5.118515818 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.21636827 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082432376 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094408737 seconds)
  done (took 0.887473359 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088671362 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142363322 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089529324 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074620031 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07304273 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09130571 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073346516 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090645601 seconds)
  done (took 1.349025726 seconds)
done (took 3.260854104 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.797382342 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.847905429 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.498815413 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.116000765 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.150131784 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123813743 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.280433404 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.153787214 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12582387 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.081278239 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171132766 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.361236511 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.462665272 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.927374702 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08173289 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.117113768 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.076140426 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685900502 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076028465 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112897142 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506991808 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.102985968 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.096539794 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.137555978 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203407614 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112228281 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165851433 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.084422571 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.679778555 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097468242 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.175109681 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.07824669 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162247919 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.191508156 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.073973008 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104767716 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677217073 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185847251 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107388685 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092675815 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671469394 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077414877 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191973913 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.096017112 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.079223244 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179826804 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.107480719 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.089663378 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081170888 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.093006126 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156189287 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.457031531 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103022049 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.135368682 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092427441 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686627109 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08986386 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149939487 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121983735 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105927513 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.074557373 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.083333041 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.174629547 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095834378 seconds)
  done (took 19.233094842 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112345768 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13285585 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073831959 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.149627499 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134080348 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076543339 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095888946 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074201189 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118616439 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175233873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11125168 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137384436 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087780284 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076584301 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112319258 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.226871122 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119441565 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.115458837 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078286521 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.099412716 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11723161 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107818378 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08651656 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.104287631 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.162947232 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201094272 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107260192 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124555231 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077333339 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.109543912 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138747705 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15293073 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072898905 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073444331 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171418689 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118691306 seconds)
  done (took 4.96357354 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185380986 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.096649092 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165758551 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16000496 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13997564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.150039034 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10784968 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255631002 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.167248037 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160561147 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126722812 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111768304 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075622501 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09723511 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074890852 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.690023927 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161643035 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110644593 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112077009 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093762928 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07896945 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383492868 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080860337 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072310076 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095991867 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067129099 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156679691 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094983832 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.195613093 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115457984 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077792652 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128778922 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.189259692 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108597652 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127962003 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093594351 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073372331 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176275177 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07959044 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.13400233 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09366613 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100509492 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132827544 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131390912 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089111315 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076393935 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201081053 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090363998 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072547352 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08758046 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.01296472 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074232792 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17783501 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088634842 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09106495 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325950135 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093644958 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091919933 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072725447 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278244761 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109884984 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.091660126 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073592504 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093051927 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075927658 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382018913 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090481454 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.992183225 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078988306 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08596037 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09497861 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091173076 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083232728 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080829042 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111273253 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073430172 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094168075 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073444875 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090833748 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077072756 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11086974 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07978295 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092273409 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142488303 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.087915848 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093836086 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121497056 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076687831 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090337198 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123493724 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077754811 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073428235 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130043801 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074383946 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111125045 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088811104 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075273791 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137988738 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091691611 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.158675524 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088659833 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105202483 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095982993 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124361499 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103729388 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076168344 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095691794 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073970615 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.071441088 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159271024 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075533142 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094652155 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074778035 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105278594 seconds)
  done (took 22.35970902 seconds)
done (took 47.266202668 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.340491071 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105003655 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104749896 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104566508 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104111856 seconds)
  done (took 1.548648197 seconds)
done (took 2.311111976 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305857158 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.168586154 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090476054 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.162507483 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070306946 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.187464454 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.155108975 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.089330324 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.19834532 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071642628 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159494594 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070352678 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089284068 seconds)
  done (took 2.608721978 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089596541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112453798 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076527081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086378534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088687796 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08656364 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102716653 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106861437 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103348184 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080698644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087608131 seconds)
  done (took 1.77916561 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087928144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094003457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094151039 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085501429 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088224925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086217264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102698864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096972447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103621974 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081430725 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087750552 seconds)
  done (took 1.766748617 seconds)
done (took 6.907041771 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.072755721 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.439007732 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117150185 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164187209 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319277716 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209753651 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.591276642 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129264682 seconds)
  done (took 15.978819249 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.123670881 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095921765 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075920889 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092763803 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077107293 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091975973 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074588661 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075801512 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09311709 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076551347 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093708753 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075965467 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09166744 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077650256 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091500807 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078532024 seconds)
  done (took 2.212608785 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111101349 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109656249 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099011146 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084095821 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097552484 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079847288 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099937175 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080848387 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094931335 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079826191 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100865321 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082767841 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09816625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077292057 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098037164 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084461946 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095905456 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082028225 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098606209 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098527153 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083284356 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096333231 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08206398 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099902839 seconds)
  done (took 3.083763114 seconds)
done (took 22.033963885 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161822179 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079378122 seconds)
  done (took 1.005943713 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097207893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115172794 seconds)
  done (took 0.985485711 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103853075 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095122116 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132847602 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095609792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096713926 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07832847 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127663996 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096013533 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079185563 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078639 seconds)
  done (took 1.755953613 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080867004 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081993929 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104067284 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116441572 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08904692 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097153122 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082458916 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09957698 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084080072 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094615835 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085282129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112649256 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084953305 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113157786 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.1010372 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083281322 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104219309 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08231864 seconds)
  done (took 2.472190572 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078320006 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079954665 seconds)
  done (took 0.933109894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080157978 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075936054 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097723149 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097006268 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076085414 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075717387 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093032607 seconds)
  done (took 1.369615892 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.451076411 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122205315 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.28334044 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080988189 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118715563 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.321570151 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073710324 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098201967 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.081939511 seconds)
  done (took 2.448981446 seconds)
done (took 11.741119147 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088869849 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127271896 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.462929107 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.096428496 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090434336 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.139467323 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.251109378 seconds)
done (took 2.036497848 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332121389 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.111212194 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068682648 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089663228 seconds)
  done (took 1.374785478 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073952781 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076742291 seconds)
  done (took 0.927023183 seconds)
done (took 3.083789052 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074358199 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073587996 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.124282557 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.071983599 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092862455 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074249946 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.091247637 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072019016 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075048609 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093286745 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074802893 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092924558 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074835049 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072465713 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090515215 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075097642 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089850212 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072670439 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074238152 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09003815 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072643793 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09332654 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.195342711 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072758662 seconds)
  done (took 2.896123406 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101648669 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094488697 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082144748 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099583898 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080129598 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09991256 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081202299 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093597717 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081053134 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096205896 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08031691 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097280111 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077803529 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097499115 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079028007 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098134949 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081268393 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093883075 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078130045 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097866958 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081066925 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093845004 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080237755 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098457832 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080263241 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097347333 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078413134 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093670416 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080971917 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097783597 seconds)
  done (took 3.456420479 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079152792 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071168159 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090119994 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079584721 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090976353 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077877163 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072834909 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091612239 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077223469 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091832426 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078938941 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072837151 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091149079 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07739614 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096807234 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077366309 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105289388 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073237059 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073183356 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095484575 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075924807 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091869994 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076264575 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07254945 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090722982 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073020122 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091377017 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073400248 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074299047 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09103555 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07614911 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094805464 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073729605 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.079869411 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095473527 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073789681 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094482116 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073584829 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078199408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09119687 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073381187 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091665086 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073853758 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081055258 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094479762 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075639542 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092180857 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07904281 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077483016 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099533294 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073015795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091684904 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079380472 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09612176 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077628202 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07340548 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091886053 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072485913 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095481959 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073917509 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072961245 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090654036 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07564665 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092190101 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090259619 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080216957 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091094393 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079449419 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095162424 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.077200937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096334112 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089142224 seconds)
  done (took 6.783410681 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079855308 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102047022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075371278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075289815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08993576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074026067 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098877986 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07430627 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09357944 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093412657 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092045019 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076082004 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076118038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094952117 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075044444 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093469703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084424641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090286085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.073997405 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095706439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074234637 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098583333 seconds)
  done (took 2.673097288 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218317855 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101749898 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139115717 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0932823 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112919603 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11078842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080681476 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10067588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081259967 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102076953 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086989123 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099329036 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112605869 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084028139 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102229315 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085174946 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099004673 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085747486 seconds)
  done (took 2.686976059 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088747517 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09377256 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098037356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092370553 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074718893 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094747922 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080685406 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109428345 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079246605 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092766861 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085131375 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096079496 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077714046 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0952018 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077583406 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076213633 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094419087 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07547879 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102478946 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098975894 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081191494 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102624394 seconds)
  done (took 2.761424053 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093700861 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096061326 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095273471 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096978443 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074331713 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094435969 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082665839 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093287112 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084691218 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093845925 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074756084 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076397838 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.100135626 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092942142 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.080944379 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092527594 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07694416 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075332378 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09478522 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07595653 seconds)
  done (took 2.538426268 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116731601 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109505618 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09095292 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121986468 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09178892 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109729018 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121711906 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091826621 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10997877 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104634697 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10986956 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095019076 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121370331 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117175301 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091606508 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120902578 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102684345 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121147353 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109530414 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091685931 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122569653 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091320052 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121320118 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110614868 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091911775 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110624598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090720735 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11433701 seconds)
  done (took 3.800922959 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075767823 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076046856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093469847 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072981491 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072885713 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090424828 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07242341 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09043803 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074848833 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074621337 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09334121 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076155261 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095043732 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076546922 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077126846 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095645197 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076309849 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092962889 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074354287 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07455793 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094966609 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077861601 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094829719 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074530688 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074342769 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094859958 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074242 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093066763 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076440544 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074269261 seconds)
  done (took 3.252037762 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084669239 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100996 seconds)
  done (took 0.985241179 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074985729 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112899082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074146451 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080278085 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100755599 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077985291 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10656071 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082275277 seconds)
  done (took 1.505799964 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095766207 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115170299 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084383744 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108757858 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095984393 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112412524 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140291961 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102931602 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083906712 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094489492 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094400999 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095635545 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083434822 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077437803 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102842789 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084752961 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097149522 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087745085 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104350771 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080532856 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102030061 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090410076 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098712054 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084907693 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.097644476 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089733212 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106792307 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088733912 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099261721 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088047115 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083526925 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090438093 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082875354 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102086386 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078862576 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113393216 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091957155 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100281784 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08701006 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103079227 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087471399 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094846763 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.083480092 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103072549 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089278904 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083250902 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103603081 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076479078 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094160002 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08151726 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095035403 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078374281 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071776002 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103919333 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083914116 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111219511 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081156216 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09880368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082437004 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099867808 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085254591 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098740135 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081307229 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099924535 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085667162 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082907127 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105508281 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077079889 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091215447 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079718918 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106169308 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10316077 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107231538 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084751452 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104018128 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07873809 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100111795 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085953407 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105048533 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087898226 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102211789 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086578409 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104935584 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07844823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08094483 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104972949 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081411722 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100608279 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076167613 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114180497 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080872902 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097877961 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075906368 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106468098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081228689 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082292012 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094568031 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086440872 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091242101 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084460771 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102634468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078684649 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106961679 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084290777 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103117571 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.08660426 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087923353 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09793277 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082743665 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094451564 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084863786 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099205724 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086069016 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07217093 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100738992 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081063283 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103039276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08660626 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100165352 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084618308 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105646173 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086189612 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099202672 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.073329239 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098800065 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081309158 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104236465 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.084885942 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078806498 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093035424 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075839033 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.101478169 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082587132 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10320568 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084461281 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100387867 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07091788 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079831811 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099714287 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.085567774 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.094483589 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076690373 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099807096 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.077349619 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096859164 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081996278 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.078166723 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.093662002 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.081494413 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.096402081 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075357203 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10449415 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079526492 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097007944 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080742749 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106743891 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079532934 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103246187 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078916932 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081427625 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101378898 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075777575 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095449354 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079643557 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107120951 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07916386 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094450274 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07281703 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081701532 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.092163374 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080511448 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092771508 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07891612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100496869 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078468285 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080059217 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095850727 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091713689 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108197023 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083009649 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.100528166 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088287259 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098154957 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078704899 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100843344 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082727812 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101008286 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084885548 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10058286 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082271856 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.097056998 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.072616191 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083199387 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103437436 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076087288 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0963849 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075225889 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098976801 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.083900142 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099671117 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.081854002 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078441256 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095608031 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086282286 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096814632 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080770867 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.093734968 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080187246 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103819872 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082766831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082759242 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106376343 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079904233 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093191521 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08555435 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096473578 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082848546 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093426393 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07448158 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.092843345 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082817819 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.07937411 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098053821 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070513288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102318442 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085666207 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095130108 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07541008 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099750264 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087232833 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.078726475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099464507 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080108936 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.101179686 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090484469 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.094156142 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080351636 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.105273697 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08170989 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088392889 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082801255 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096894116 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.075664574 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079536377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097453265 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08022602 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102316467 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081563408 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088372977 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.079095136 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078260282 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.094064439 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075976752 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.102866885 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080998333 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099366428 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097393295 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105741228 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085294131 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102607598 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083348445 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104513745 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085816153 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101637644 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085437202 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082046147 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097516349 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081906175 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.096931026 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080691622 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101610501 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.0838965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079000338 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104540785 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08326247 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098799871 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082465713 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104287153 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080663238 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098943612 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078705132 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082790551 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098940653 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.079973652 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101304758 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077428472 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106030386 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084044144 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106635668 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079854647 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075027588 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103952091 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082559124 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104670265 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085918538 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104597851 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080248325 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102383652 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082644599 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107787085 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.07730198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089301151 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105314051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080239829 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100622202 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.078011807 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097224833 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076349306 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.097227862 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082850075 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.077199336 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098916964 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08195336 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09865415 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077334605 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097192296 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08331338 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077019577 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101662359 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.070775781 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.094433733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076292876 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099808943 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085751672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101220229 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079731036 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078919085 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102316929 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.079927827 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092223384 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085404866 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102565549 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083730686 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105922249 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076332933 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.096732412 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088173597 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089201406 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079501051 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078491113 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.093361009 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085714393 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101772652 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085546291 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09556143 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076547325 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.073988544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100900157 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079367093 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08990654 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078313375 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098715669 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079417596 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079152897 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100919289 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.079912672 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101740923 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084715678 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098703115 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.079308923 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100097678 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074348437 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.075407605 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095314161 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.079876151 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101934161 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.075471974 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092250607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081059706 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097540499 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.078183294 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.081069871 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097686322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084732375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099559111 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080444745 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105784886 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071506302 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098245925 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080926282 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.080464043 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094367683 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081104489 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100055098 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083746829 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104197741 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081245186 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09692621 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080978035 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077323478 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100411968 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081558294 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101458147 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.076597652 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102224076 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085325408 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097165598 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080852972 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095567369 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078009597 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081663211 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102194401 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.079326085 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103561017 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.080188281 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097203177 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.084775525 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099950436 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08067968 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101365356 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.079391182 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082939621 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095272618 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.086408477 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096621971 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083774361 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.097426028 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.074856256 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099498569 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081724374 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080406278 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102165584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082969006 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09514102 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07691701 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097731367 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.079781726 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105638291 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086206885 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.097763005 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081000085 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075790088 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093337797 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084434562 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.094082556 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.079195245 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099191183 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084024725 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079880654 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097256441 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.079607167 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.104502912 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084227829 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101773492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075187237 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.101391537 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083710855 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.099225433 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078987867 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.076696582 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102120928 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.082951368 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098006061 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.076780394 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105493458 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.082590057 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103084093 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.079751008 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096223987 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07805034 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076266276 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102472135 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.079795322 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10348 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080090525 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103125066 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088517739 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096075705 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078641926 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105382974 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081542835 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10419946 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.075540983 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.078473935 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103215493 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083875945 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094913247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077386051 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093573178 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081068681 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.076303671 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09527575 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087930063 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.104688859 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.079966332 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099535881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080684028 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095317707 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07605929 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.076502542 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102594188 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.079641967 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10685592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.077059514 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095764102 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076068766 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100893474 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081094699 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080685695 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094250088 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076493051 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.095472811 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.080853696 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.103930652 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080479774 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101204789 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081038022 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.079443092 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098193661 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087782847 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093630171 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.082249949 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108004259 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083888659 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097107127 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.083625802 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105713021 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084543132 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095460774 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084186964 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.079963528 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097028061 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083862519 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103641421 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092904008 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099776966 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076824338 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100321827 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08145754 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.096287979 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085730651 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103308698 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084410653 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.101754176 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081655618 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084427355 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099934155 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083997402 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09991395 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.080712891 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099838212 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078678514 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079454516 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.095184974 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083938761 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102871212 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081897882 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103701136 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07784982 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108377927 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.087030295 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10047461 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074661715 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.076455792 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09769475 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077273887 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103629104 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076722396 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099647267 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080225967 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080576521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098084651 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084924014 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100318106 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084584773 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10087228 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072721007 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.078320015 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.099847353 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078529093 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093798647 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083294795 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103417026 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.084358591 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107025748 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07897659 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.078832108 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10019092 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078284489 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095855695 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.084441095 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100651856 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081039165 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.076649244 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1023213 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083386577 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101018863 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083791106 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103912222 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08051169 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105700448 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085394818 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094965647 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074965431 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103574828 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079520613 seconds)
  done (took 54.397575966 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12178712 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103141827 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073149255 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092928609 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119407195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077439249 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072892487 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096535629 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077642109 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105605469 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072458431 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09167413 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113752598 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10004859 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116917981 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107136674 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073388111 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095927509 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073562348 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096637384 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093578315 seconds)
  done (took 2.827654361 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100928199 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110144029 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08858175 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114862584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102910693 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091620805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108585511 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111025468 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095375053 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105366703 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113008991 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091579811 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.103975084 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104064919 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085266077 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107249402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094404543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103408379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.110319747 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089444755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106552416 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088861594 seconds)
  done (took 3.077528056 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087280519 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.080567134 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100952518 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.072825425 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100597256 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.072444681 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.105718869 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075264721 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085371641 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.095321491 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.076635698 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095444636 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.081932361 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.072125712 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09688658 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.075807984 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105117694 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081436178 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101556811 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075528506 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.079365159 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09522351 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076141022 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.095755968 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091495463 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10130021 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.081390588 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081227487 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.096797083 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081672924 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094970032 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.079552218 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.097705009 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.076538518 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.076771809 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100992547 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082091046 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094932943 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078508419 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078056479 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09612914 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08271505 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098848379 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.079024437 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.074877605 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09989114 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081883856 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.092470698 seconds)
  done (took 5.037369151 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112422805 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129334534 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101740654 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140200825 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.116074871 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09076727 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101834568 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139378529 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076256549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079021432 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119524425 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11524006 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081194923 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1072686 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104212559 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081182652 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102719877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077024678 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.105732429 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077407668 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106518528 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.084988644 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115266166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112207563 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086196127 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100072286 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077403273 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106412085 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111928629 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.0873541 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106478643 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089064856 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115588361 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102770471 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.077792731 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103065664 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.097485701 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101478709 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084347374 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.094383816 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084178785 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10618064 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084740398 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118125691 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101069262 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083384384 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100499265 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075104944 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112221018 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.083727926 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11168483 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114404303 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.085767462 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101626049 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087223611 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115722907 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100205702 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080626251 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104805139 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092056214 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094721127 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086108648 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114576707 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085080911 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111190535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113475842 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08292051 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105432865 seconds)
  done (took 7.748534239 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110050565 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106718463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097254971 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118624858 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105903714 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087121356 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105796861 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087131472 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106220948 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113178292 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087810263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.152858602 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.082955651 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113692457 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106274343 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08761327 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105794238 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087485749 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106350786 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086392638 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105779281 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117733965 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087197001 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11686996 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118847037 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083800056 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106159186 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087197133 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119435937 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086635338 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119722441 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.106972478 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087556374 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118260066 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119616978 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.087112569 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100606381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087310289 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107008117 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086124667 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105287639 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118730964 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087970418 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104817599 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08753902 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107241373 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118359482 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.100097741 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114420416 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114231721 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087777272 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118001529 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086689997 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107353063 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118549572 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1284941 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098099812 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118745726 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106331863 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09907854 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118411746 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127069039 seconds)
  done (took 7.338972603 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111997471 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113259364 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119022511 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074776166 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096527856 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085666831 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095345306 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07622993 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111741441 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093266072 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115465939 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10485199 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09028875 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1148894 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085678352 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11015054 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105933528 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08623937 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113431502 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105629842 seconds)
  done (took 2.874487879 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089851858 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118695313 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079796904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106836281 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082021985 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105888442 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081759822 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101029707 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080082007 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100976853 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092709036 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111295254 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07966179 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106412902 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111666465 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087437782 seconds)
  done (took 2.397652138 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101104971 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120089828 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.10176755 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106222176 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076182388 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103094858 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081602064 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095175045 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075563643 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106676177 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084904507 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104313377 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082285264 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076060642 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100363835 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084577251 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095602367 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082770278 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101402904 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102427017 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104149792 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082236101 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102682258 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08149008 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102081832 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084820643 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105331277 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076890529 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097718559 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082512114 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102794986 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087091271 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096727228 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08418401 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097685391 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077318336 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081013216 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10287355 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084577633 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10249303 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077129198 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.100937543 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082228099 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100672968 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075576091 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102157239 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075628478 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105491584 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081409469 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.081520052 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102666349 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086623865 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106552408 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.089302416 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.108728337 seconds)
  done (took 5.967702178 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095400003 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103458825 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084236967 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096489678 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083341679 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085987084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.1059609 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081483233 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10181816 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076793802 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102558163 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084093253 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101631986 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083523038 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101806871 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085003886 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094485788 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082127189 seconds)
  done (took 2.523077941 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085681859 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078654494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107089807 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079085118 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099278178 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081806079 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095295245 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078021951 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076457767 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100635155 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078767599 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101877742 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077928762 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101562119 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079497652 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100209571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081958112 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077579043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099680684 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075015633 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101374953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078507788 seconds)
  done (took 2.812022509 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.093989577 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.126361403 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.090457192 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.135240472 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.07909815 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.078004522 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111703031 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.078971386 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116951271 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.078766172 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098845847 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.078818945 seconds)
  done (took 2.044371186 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103957169 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136523835 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080017481 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103033799 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093259235 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105399869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08403205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104818749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117754669 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096752831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105067884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117909069 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097843443 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117145186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113680541 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093239906 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10577174 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084039236 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101874403 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127531783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08441207 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119021464 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104410245 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084842638 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104225887 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095438517 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11951572 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117700428 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084218109 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11879216 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113059584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084115311 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118760484 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117529706 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083490259 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118901246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083688585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127308225 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114694075 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116786721 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082792205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113734183 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097506542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113134989 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117768931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084453822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112969026 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104783322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084822519 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134116758 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113537034 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095107852 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11471113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117784262 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097075199 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134286578 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117136929 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117154264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113315406 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09828384 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116532582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114148936 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096165479 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11832287 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113519181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116418528 seconds)
  done (took 7.917333437 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119463475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102102912 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084743022 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118311102 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116888095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084239988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108680655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084232336 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105997819 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081071334 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150590554 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106724124 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116674522 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095781645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106287162 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083124899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1062217 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116642661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08158395 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134250276 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106109129 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097212776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117059457 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117566264 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117965474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09371056 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106428919 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08433719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106156323 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084115074 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112296813 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105083266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096742975 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102284275 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115993436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085417966 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104924833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092418961 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105298287 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092678511 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118357279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127158373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104972792 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085406753 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118062464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105979263 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080686943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106458598 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081515558 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118650107 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118193889 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118756986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095511537 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106740632 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083966156 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106775644 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104785211 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085566697 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114189503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095698508 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106788958 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134934909 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084791386 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106571062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117218372 seconds)
  done (took 7.734088242 seconds)
done (took 148.818773649 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096697493 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.133590095 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.093750284 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.162830392 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080863226 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.112696765 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134394509 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.093868184 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10119814 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079848324 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101305554 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082502187 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144345805 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102694554 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07942476 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103654119 seconds)
  done (took 2.581094095 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17382812 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.27508473 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099372989 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.0775209 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107194446 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079905984 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.100501396 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085724476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101787277 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.079818249 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080224763 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102162192 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079857965 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101611811 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081817881 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080350463 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.101312424 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079679467 seconds)
  done (took 2.769989438 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107280913 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139545882 seconds)
  done (took 1.131983044 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115428802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171037052 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264687653 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149603416 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130373191 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09395135 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152405276 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.359143635 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198669647 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125264185 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10374928 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108326771 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132208903 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.090834572 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.108441446 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086174566 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133892199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.08630014 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109061923 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.087441503 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133369751 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.079135151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.111739177 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.086068333 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181214701 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123802054 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.078573847 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101696126 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.086464033 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109879843 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.085642093 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114373085 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122099267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144289077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.090660379 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.165929835 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.087385054 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08406778 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109250913 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.08378311 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112276588 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111274667 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093582957 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107491811 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08004557 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.085341346 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101282161 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.078934908 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10888597 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087955472 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109942405 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084814162 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.142522674 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10935888 seconds)
  done (took 7.276727928 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785485821 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147780329 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085733606 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.866266685 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134422871 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120877861 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.765481392 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130345918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226546061 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.806266385 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098770725 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124446027 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226148633 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248406294 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15291516 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312133364 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671100798 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122470446 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.134952448 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120788039 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113934903 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132576387 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102766416 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.409374012 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108174737 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085076384 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112085905 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094764316 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155224773 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109043971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087125425 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195905298 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259624423 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.177554074 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108214082 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083701056 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106046321 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163610066 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261548955 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190988121 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171382498 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080795354 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105989558 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094607075 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126607459 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102762764 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158224211 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.168852364 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167278881 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110126076 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095750056 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114635211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.095150424 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15449087 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105111885 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338879081 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314186256 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106835268 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091638073 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123410521 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259925776 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085394241 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224291147 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132498036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18783241 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106011272 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763624029 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162688364 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106247604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092595283 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114122901 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088620548 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117129124 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159165871 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.385904587 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097124714 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111332777 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083711422 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226239026 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085616055 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10587552 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157228553 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086521299 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114125715 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097833677 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118630908 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164884479 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.243638981 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119571256 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114439694 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090046756 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117502209 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.086794603 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206195682 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217234599 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154657531 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208049909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118309026 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159239556 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161603755 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116971984 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166449438 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112834215 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102056165 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11844978 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188922102 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137530767 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108267729 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089766683 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113636995 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139759771 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088914812 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113289396 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16420135 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.441221883 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160673999 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104331943 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089608461 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115618695 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156989766 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091617291 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257093233 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115405006 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162934652 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091441119 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104358632 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092645106 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156885945 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120084272 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117507429 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096033665 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115137783 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.247208348 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214158239 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098484109 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239079997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174382476 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093826826 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168935675 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114799996 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163410846 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116459017 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095356348 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108613865 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752819163 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120090245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090966951 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113220264 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180519286 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084418133 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108530841 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086018466 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081361525 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781164997 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087121762 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105641201 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086578505 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115555748 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091916181 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114157103 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088792366 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177948991 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206213544 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118207739 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113375003 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085089046 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155985945 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.108511939 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085315232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084174071 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108086456 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.092732596 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111196822 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087319408 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164802157 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175897187 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194643537 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586548423 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084627435 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10780922 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203853051 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107546245 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303406921 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09310747 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223730051 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162008677 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081810706 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.334860128 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160769411 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18024513 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110947461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168704175 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08154617 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11343149 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157711245 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084429197 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115113533 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154202015 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121846565 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097464132 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.156340597 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084231077 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243464793 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082526085 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165170918 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108927279 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095914028 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312588285 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083994215 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126725462 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155827573 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111931295 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08612789 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717422686 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085710339 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117083128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09299401 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.218986498 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159296997 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115369239 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092220167 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118659585 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158294197 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206486814 seconds)
  done (took 42.572877339 seconds)
done (took 57.214192912 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25818375 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210517465 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267151613 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165643279 seconds)
  done (took 1.903884939 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173052174 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122000834 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140799835 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078662649 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.146797791 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101411984 seconds)
  done (took 1.669915229 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369731459 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271698942 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.216134332 seconds)
  done (took 1.768914074 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243042912 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.238711405 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.340567269 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.392773952 seconds)
  done (took 2.221843635 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198576264 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095733383 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119079212 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109121933 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163366633 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.201153222 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137684297 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145621225 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104055374 seconds)
  done (took 2.229076152 seconds)
done (took 10.706757253 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.130082418 seconds)
    (2/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.297278787 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119011071 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.162025363 seconds)
    (5/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.248205592 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.174985471 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.265488653 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081351294 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125483603 seconds)
    (10/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083738755 seconds)
    (11/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.134023139 seconds)
    (12/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.227689126 seconds)
    (13/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091695202 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.118391203 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.107349017 seconds)
    (16/286) benchmarking ("sort", Float64, true)...
    done (took 0.231108258 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111143695 seconds)
    (18/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091709831 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158445489 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.150506587 seconds)
    (21/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193276438 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093190789 seconds)
    (23/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.226777769 seconds)
    (24/286) benchmarking ("sort", Int8, true)...
    done (took 0.223041895 seconds)
    (25/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087550981 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11092414 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194793496 seconds)
    (28/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.186490834 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110847675 seconds)
    (30/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090283488 seconds)
    (31/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.087015279 seconds)
    (32/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.218913525 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130345873 seconds)
    (34/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.080397438 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10331756 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106397237 seconds)
    (37/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.115285602 seconds)
    (38/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.216457504 seconds)
    (39/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089969984 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120150661 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 0.224567219 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081276167 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088563481 seconds)
    (44/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.259662197 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.134991108 seconds)
    (46/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133557516 seconds)
    (47/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.162724187 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.116138858 seconds)
    (49/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.090352952 seconds)
    (50/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110445844 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158722733 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13107078 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110454277 seconds)
    (54/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149480227 seconds)
    (55/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.202369376 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.201411369 seconds)
    (57/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.19970496 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106775507 seconds)
    (59/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177167057 seconds)
    (60/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.08691126 seconds)
    (61/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.093208694 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110119071 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.092834018 seconds)
    (64/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087925759 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11582621 seconds)
    (66/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090883573 seconds)
    (67/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116427693 seconds)
    (68/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.133023476 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092053449 seconds)
    (70/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091819007 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081728343 seconds)
    (72/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107197627 seconds)
    (73/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084063741 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176345457 seconds)
    (75/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222227281 seconds)
    (76/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.092992905 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170449407 seconds)
    (78/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.114031897 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109296344 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.135738251 seconds)
    (81/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.079459354 seconds)
    (82/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11224666 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086304113 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162130182 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079863266 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.173622887 seconds)
    (87/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110748391 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.083580894 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.080600966 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.149620399 seconds)
    (91/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.144509424 seconds)
    (92/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.133568138 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 0.104445306 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080453311 seconds)
    (95/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169026344 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.16725244 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181739533 seconds)
    (98/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.144029705 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06940656 seconds)
    (100/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106047995 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.16112293 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1436792 seconds)
    (103/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.087178677 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103760621 seconds)
    (105/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072570409 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.116532144 seconds)
    (107/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068717574 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081742137 seconds)
    (109/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.105708322 seconds)
    (110/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109303279 seconds)
    (111/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175550616 seconds)
    (112/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.235542379 seconds)
    (113/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069106835 seconds)
    (114/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191573931 seconds)
    (115/286) benchmarking ("sort", Int8, false)...
    done (took 0.187443045 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169648093 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.079926525 seconds)
    (118/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114433993 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083252426 seconds)
    (120/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078156141 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096833916 seconds)
    (122/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081949514 seconds)
    (123/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.116880305 seconds)
    (124/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.07338405 seconds)
    (125/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.117964837 seconds)
    (126/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.15260638 seconds)
    (127/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173930967 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068698118 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 0.177851176 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116115044 seconds)
    (131/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069675076 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111287522 seconds)
    (133/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160527724 seconds)
    (134/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.119809325 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.086723327 seconds)
    (136/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.118520047 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104587754 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.114634357 seconds)
    (139/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078396271 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.109346215 seconds)
    (141/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.119578184 seconds)
    (142/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108704094 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089752007 seconds)
    (144/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070076729 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185900918 seconds)
    (146/286) benchmarking ("sort", Float32, true)...
    done (took 0.232262944 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080595458 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112676681 seconds)
    (149/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089075505 seconds)
    (150/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.145353658 seconds)
    (151/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091471492 seconds)
    (152/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187353639 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18510864 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.091076496 seconds)
    (155/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.117220311 seconds)
    (156/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.135725687 seconds)
    (157/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.119059413 seconds)
    (158/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069330558 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083291254 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097838799 seconds)
    (161/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080817256 seconds)
    (162/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113282381 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.16151881 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10681852 seconds)
    (165/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.07905997 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110247667 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081444399 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.108757423 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.11423423 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08233929 seconds)
    (171/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.09189112 seconds)
    (172/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072896087 seconds)
    (173/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082760989 seconds)
    (174/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.114547198 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069608889 seconds)
    (176/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160460139 seconds)
    (177/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078452869 seconds)
    (178/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.093221024 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.094792447 seconds)
    (180/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.082692968 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.108495863 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087371383 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070561158 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.115952361 seconds)
    (185/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.172439202 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.145308443 seconds)
    (187/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105380029 seconds)
    (188/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079655231 seconds)
    (189/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.131274585 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.081437848 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.223298697 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.082338691 seconds)
    (193/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.104592895 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.153313167 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106384608 seconds)
    (196/286) benchmarking ("sort", Float64, false)...
    done (took 0.167739018 seconds)
    (197/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106780149 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080705912 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111280177 seconds)
    (200/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186674726 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.175142629 seconds)
    (202/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.106305936 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090716082 seconds)
    (204/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093494967 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.089257234 seconds)
    (206/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.077232534 seconds)
    (207/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.094234657 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070102197 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.1042547 seconds)
    (210/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080841419 seconds)
    (211/286) benchmarking ("sort", Float32, false)...
    done (took 0.169748772 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.166177359 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112878588 seconds)
    (214/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083168862 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105199166 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.080496001 seconds)
    (217/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070242979 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132377842 seconds)
    (219/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072388305 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105984438 seconds)
    (221/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.123106456 seconds)
    (222/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.094029241 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.074506522 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069440009 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.104283535 seconds)
    (226/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.071825403 seconds)
    (227/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.180291391 seconds)
    (228/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108657183 seconds)
    (229/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.103662591 seconds)
    (230/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111394434 seconds)
    (231/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.130185297 seconds)
    (232/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082517877 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.094498422 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077925877 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080626117 seconds)
    (236/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.104074699 seconds)
    (237/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072629179 seconds)
    (238/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094025891 seconds)
    (239/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.083227361 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081282437 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.123299349 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.105255743 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104981646 seconds)
    (244/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070899264 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111196486 seconds)
    (246/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079605207 seconds)
    (247/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070737675 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113965367 seconds)
    (249/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101081553 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096557042 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.095739036 seconds)
    (252/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111795235 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070977221 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081286226 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163729875 seconds)
    (256/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0836247 seconds)
    (257/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235947623 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105902807 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070777858 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08255209 seconds)
    (261/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109265563 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.094945023 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11323702 seconds)
    (264/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07003341 seconds)
    (265/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095813284 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079575198 seconds)
    (267/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086038986 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.104117849 seconds)
    (269/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070529914 seconds)
    (270/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072364309 seconds)
    (271/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11206272 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089855493 seconds)
    (273/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.106482715 seconds)
    (274/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.160004445 seconds)
    (275/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.100240955 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082114166 seconds)
    (277/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072241775 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.098070413 seconds)
    (279/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.111439369 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.104412422 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.082400851 seconds)
    (282/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079008255 seconds)
    (283/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.096480667 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080182092 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.096195872 seconds)
    (286/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080880814 seconds)
  done (took 34.914577093 seconds)
done (took 35.834715337 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096316014 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147088779 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091183971 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133427688 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.093769251 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120184505 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.089218369 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093372736 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.118748786 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095199029 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.116871878 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07224371 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116511657 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09273155 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.116344933 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112601598 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119357386 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088117551 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109472661 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080041824 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084741761 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.105763433 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082949949 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07143222 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.116723587 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.08898104 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.112062674 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092467358 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.1058692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081039578 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080496629 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.113541534 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081644784 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119721681 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087627638 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.109413485 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093316561 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09062603 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108246793 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081762929 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.113877086 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081272652 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088588793 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.112996205 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.08331238 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105143547 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085131782 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120133883 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113362588 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111386863 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.089972299 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091679573 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.115841052 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087478861 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10564208 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085995053 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104908452 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112297547 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109258265 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086799317 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089558512 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113872934 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080630613 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.108600527 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.084683316 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.091934995 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.116239367 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080422011 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115903233 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086293415 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.10600237 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085498841 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.081179776 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105743778 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091181903 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.117547854 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080181746 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.083138876 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113298695 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086879699 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.104567363 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084929082 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.082937261 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.107465887 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084109463 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.09558999 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080368014 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087803317 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104910704 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.084709495 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112322223 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.087738362 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.082796348 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117239412 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081541419 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.104359489 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081772099 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081379218 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107448545 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080530529 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105882768 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084796883 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.089964646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.107096148 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083369975 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11775901 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081925372 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.087665549 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.105100522 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080558463 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12097694 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092073961 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.10546129 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087099727 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080415903 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107695361 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080894635 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105916476 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081863273 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.082137028 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.106755084 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081485459 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109326942 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.082723207 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.095264705 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106158625 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08108531 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109355067 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082001048 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087515426 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106966014 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081863808 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107715475 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080426465 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084617506 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.106530399 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0831754 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126898052 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085366619 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082762203 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110192213 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.085788338 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107306032 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.08077807 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080567649 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100362822 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086878165 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108456658 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083047253 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08405108 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106947969 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081814722 seconds)
done (took 15.658117517 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081998304 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185414976 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143912533 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115181127 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12962039 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.081678937 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117958588 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114988959 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108820195 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139914616 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.104532493 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.126662977 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121796906 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105187535 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082256477 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085570557 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107528077 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.09840565 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145905182 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127569039 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118465227 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10558677 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.113609733 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.131835919 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092208977 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13438955 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082758858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110364737 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086283947 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124127161 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1029687 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11060364 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082350858 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129979635 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099503022 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090254326 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106672996 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088911916 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106639619 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082766348 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132880576 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104885111 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113240175 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088544236 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11076206 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084690596 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08330119 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116082737 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093921268 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111064228 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097805199 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13820228 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109880559 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092292606 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105538482 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093107364 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.116882187 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084166687 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.082541833 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10931621 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081856877 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110527509 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098528797 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.134674219 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086961731 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117441471 seconds)
  done (took 8.082161374 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103334234 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133487072 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100027347 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125520498 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081700532 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082234481 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107560292 seconds)
  done (took 1.713767789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0832797 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108487685 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13341282 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108626263 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129446408 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.126382791 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089199603 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082957897 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.128505396 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084886939 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132569513 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124673527 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111068148 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091566453 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138388527 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08283177 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137155311 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082838371 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110979233 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110133192 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111593759 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101801143 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110861795 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.08317487 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100898954 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.109140268 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156614585 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088124438 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081361646 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111356572 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081463474 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148664586 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101247877 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117203108 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083048269 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127738585 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100932025 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106555079 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10150903 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114680682 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100098507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083552569 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109105141 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081449252 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112726467 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.095956702 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.086847862 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109403881 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085880043 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132412681 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08387769 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126032164 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08338512 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.087561511 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111373474 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087138381 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118203576 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084126341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132265513 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081341287 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128806159 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10232912 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125045092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.102618067 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091665313 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12678085 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.100355653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11093376 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084957974 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112228523 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103176959 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.10632177 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.086102548 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09677474 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11066237 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.10984469 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135654988 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084746059 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121006229 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0843567 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.10904124 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084040947 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109443494 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113444571 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083582775 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113222354 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087268358 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.081498323 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108265893 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086762821 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106889959 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085460216 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086105952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.108644609 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0880551 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129012437 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084347795 seconds)
  done (took 11.102790416 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088273966 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085803071 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114065974 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087509604 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111196182 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085934654 seconds)
  done (took 1.569416707 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114216037 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.110725202 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097605688 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11421101 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.12509827 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134726377 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109126654 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118180586 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101803883 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12102673 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.10884 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135616905 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140085835 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090309805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134721578 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.08841579 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134126991 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090095842 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095681807 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115694058 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10085446 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11527465 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090094108 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128953711 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093787845 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114399903 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090999767 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121362646 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094996809 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.119272001 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089522529 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120753881 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089775368 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118730943 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109475559 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115011917 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088695597 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121662171 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09029266 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120553477 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110991938 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115150283 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.095663445 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121284624 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094004784 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116006445 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096542081 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115955795 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108565372 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121379619 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095916797 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114322577 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.093396513 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121922842 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.089957033 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119238692 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095877763 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.134284693 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.089577181 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11610017 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.086164018 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119825296 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093212201 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119250998 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094347479 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120817639 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.089942677 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114679986 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090270663 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089074231 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121226661 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086384675 seconds)
  done (took 8.805832546 seconds)
done (took 32.251127138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669657048 seconds)
  done (took 1.652664672 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.81406957 seconds)
  done (took 1.802079163 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.593276613 seconds)
  done (took 18.607511456 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.463469685 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.550066251 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.963030402 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160578676 seconds)
  done (took 3.126453167 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.946594293 seconds)
  done (took 1.956014011 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286457914 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232267687 seconds)
  done (took 1.511468611 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.776458455 seconds)
  done (took 1.7847698 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.439403909 seconds)
  done (took 2.436361644 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325969041 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15478566 seconds)
  done (took 1.492911198 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550108839 seconds)
  done (took 1.560461121 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.239592935 seconds)
  done (took 16.248802261 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237894126 seconds)
  done (took 1.256700469 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292667809 seconds)
  done (took 1.303118882 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.604165384 seconds)
  done (took 4.614010691 seconds)
done (took 60.357742114 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094954035 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09698487 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122996445 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094693319 seconds)
  done (took 1.410856212 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102086663 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.090131028 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.123897844 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.088967186 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125792246 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090110459 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119366356 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.163770366 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.089531563 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091859251 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117673657 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089134922 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119613509 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093261421 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113427408 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093066549 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124061575 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090585242 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120847304 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.090946855 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.088135355 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118621163 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09391058 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115251771 seconds)
  done (took 3.572245326 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097162646 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0890517 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117280996 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088214344 seconds)
  done (took 1.411401108 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09631914 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101144072 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.126364998 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094034209 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127234122 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100179018 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112922754 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086085246 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114267305 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.093524553 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.085101967 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134300528 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127005853 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094023984 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.122555413 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086593984 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.084882213 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.12714646 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093422604 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121600676 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086568657 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119683583 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084642653 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127711088 seconds)
  done (took 3.569081462 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.16376063 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122721965 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106668215 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116062106 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.12838715 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.136033326 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082366212 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135346558 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082044557 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.12625846 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087057768 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16070633 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.095299721 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108988999 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08236202 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.081939463 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121945927 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095298847 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.112227886 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095772473 seconds)
  done (took 3.254003626 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.092876167 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087335207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109606538 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085939314 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120245416 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09021926 seconds)
  done (took 1.612331445 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085539335 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084676457 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110861849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084626156 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.088366009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.110304754 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083741304 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110686575 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084553242 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084772516 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110157603 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083244906 seconds)
  done (took 2.147960324 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.375947284 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.112128527 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.086619526 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107518997 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.092238847 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.109869169 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.099112469 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085649687 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140200967 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083247126 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111520385 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086792725 seconds)
  done (took 2.518973109 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204911766 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093759382 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258793134 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350405838 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152122444 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16119629 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272366293 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160341882 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180081402 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134834753 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189953951 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12650769 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149938667 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176607223 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136885686 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133278365 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170193649 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221481085 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117597003 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19925121 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159002796 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163509889 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175524356 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149743234 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134419866 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127113235 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115842716 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097721272 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167969861 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165536042 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196042159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11837038 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136381649 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195293197 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228512808 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175362204 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297187155 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102365995 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17542586 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161203059 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245393769 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110150511 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188986184 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148706808 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126571941 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17735105 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152670786 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175755665 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101363779 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138592441 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175994117 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171715325 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175962875 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133946576 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296498603 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143398982 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11538439 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178448648 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181165458 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183285286 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162336629 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116373578 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179495809 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176071289 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174221837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142507496 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163865451 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094766551 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170343948 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190762163 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171451976 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160310267 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208228273 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10432536 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160290988 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164188474 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149672565 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174229545 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155847654 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.090539701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146602685 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10640803 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125482672 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185837552 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093465024 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198510588 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13184549 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.175505318 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197941135 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155060265 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129294513 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161138759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160577557 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143429206 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085824832 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142401485 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148739859 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151947534 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102077981 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153481146 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140404439 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.097139271 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148576688 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.091551043 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156295121 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.124874623 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160978797 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159685838 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094447376 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161526553 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145429829 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119525327 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165111873 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181172793 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129957302 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100259761 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188615899 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153284715 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131917538 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170133399 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182330205 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125017742 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13482111 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163014006 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188467883 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139754609 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184582572 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137202365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10265193 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137833877 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155837634 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124509318 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154258499 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128228436 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150255568 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186543717 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.093513141 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133483253 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169734616 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096085804 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126383911 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110791608 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131684827 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132192608 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.109749682 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134001917 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153731769 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155740622 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122521526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15050517 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13899338 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185611317 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129937393 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.119489284 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144709892 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088762202 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172864742 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206230794 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098205156 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19184958 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164280799 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217425814 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133033978 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128045463 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17671221 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097251484 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116206203 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161342541 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156792458 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130082697 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17744176 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215108834 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162258553 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148584206 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117622195 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160611877 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161121571 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15185985 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106648127 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157931767 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154898802 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119009734 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093924775 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12478157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111035353 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127918353 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101188913 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205046327 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131021803 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210586408 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156144002 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111407464 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176971557 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124048109 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160589662 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167678232 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107490346 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180118276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176252411 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163224107 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140091196 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168948838 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.087622551 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120198317 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102606276 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162138721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129468954 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102440907 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140198983 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177687721 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169440721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146712234 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197250479 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160903343 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186320491 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117430517 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133752629 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16436065 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155067803 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.149479406 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126678084 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.146909226 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172219618 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110213268 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183779326 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158184012 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164193746 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219360267 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.118170161 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127142309 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11700608 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161648844 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137007991 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162738784 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141564432 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10493379 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148416186 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.094435217 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123786015 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169307477 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141246814 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173930368 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143413789 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163974034 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095402998 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139948464 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157162076 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114444696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112576444 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162610715 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181247132 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112592364 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15523005 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168152599 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127283828 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308061909 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184583829 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180448033 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13255467 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111501243 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15787228 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156210287 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159642007 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174259172 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115666082 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174903328 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15527125 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132463332 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104354721 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144298352 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146767159 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10937991 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129200954 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150004451 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104784619 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171174533 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139725424 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154384495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161713746 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.116331849 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14014655 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140140055 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19523248 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125554817 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173015329 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146575496 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163289311 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193982014 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122295316 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096848943 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124592827 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173343622 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101546767 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15618848 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183323539 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192177283 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154488915 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162921906 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135209507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.086630291 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155891212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145546086 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19273647 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137986712 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1041525 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209123362 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112693355 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127185812 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131120807 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308583881 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114000791 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171206877 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110868276 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268634114 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09474569 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129196211 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128548964 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166656477 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135741963 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.146554528 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158027399 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142154353 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157871866 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105678269 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211287528 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201330476 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165567852 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168665516 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.100208417 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154629003 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159521554 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172260418 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142081408 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104897143 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160707656 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1786157 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183980673 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130816217 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130028981 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159371994 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157274857 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165576979 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131259678 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194348703 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099086443 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160790303 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137178641 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121041125 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124851862 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208318752 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103332627 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167816931 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156159398 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100511735 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123567564 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148479004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155358371 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110046269 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.123375904 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168776221 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09150139 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159791492 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176143176 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099094168 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151709599 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143163811 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134623906 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11153206 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143637087 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133071716 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.132334899 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178355379 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12893503 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171101855 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172011816 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158141512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127962558 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141514873 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664538999 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097167657 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178828772 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143679342 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181944569 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145045134 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134429521 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157912873 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147059646 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163257419 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146761743 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18991904 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160901761 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154798522 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128444859 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141387332 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111765771 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129799682 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11855449 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158317858 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138206107 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13427828 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.125509653 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141768564 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129552686 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106950344 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1804531 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143600077 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171924186 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17656943 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10571022 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162939363 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165226784 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12784727 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156876234 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168362278 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108972557 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14734191 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129173832 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102933429 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176206211 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119826106 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128105085 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15679693 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157412207 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160229431 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129724133 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128019311 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139634282 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157925946 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098284446 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151885638 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155707696 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128057136 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.096852288 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154940592 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150915942 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.118500393 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124168195 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.133196111 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17717163 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.118571478 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101107578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286125363 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152117554 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187926945 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141816878 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102015282 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141092225 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143837542 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120798122 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155725578 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126731378 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100171 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128453117 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162082764 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112151703 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154019371 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181022674 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15335078 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195877634 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103434523 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.264049746 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136698744 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122100268 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120823387 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098301323 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140022199 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132442947 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110456471 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213217286 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146927391 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.142016287 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.130931241 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095466007 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1209507 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101303817 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159039159 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150778416 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125460028 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139009119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112308391 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111577012 seconds)
  done (took 73.112140106 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14263206 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.127153739 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143831205 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191664128 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163062447 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238788171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199973681 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223021983 seconds)
  done (took 2.541138124 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.088488632 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.150204123 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.128354522 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.086268837 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.113630435 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.298281407 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.12937373 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.111929142 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.11455118 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.131901957 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113243441 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.522994194 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.085153259 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.116711561 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.108478686 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.08642462 seconds)
  done (took 3.487351951 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.182424814 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.475213311 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.968653694 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19053405 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.17469671 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090433663 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70852522 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090492175 seconds)
  done (took 11.990148173 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117894104 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112517287 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.1587232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157712786 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115657925 seconds)
  done (took 1.783971177 seconds)
done (took 113.413857063 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092496097 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094634733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121522103 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096420707 seconds)
  done (took 1.505379274 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099828901 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072866281 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106309284 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076733929 seconds)
  done (took 1.47019771 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407429185 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074340265 seconds)
  done (took 1.629258281 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.108471983 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127219859 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100669638 seconds)
  done (took 1.457722389 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.098318042 seconds)
  done (took 1.215008935 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092648076 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094687229 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135729954 seconds)
  done (took 1.440209242 seconds)
done (took 9.833738312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101580171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.521790912 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.381327801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134130316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.689567673 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404800132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.000340292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143114387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159520144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087563033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132322936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668069643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017764858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439431052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976240245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.461846364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669700532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116368869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086772055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116131849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985481419 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08684124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116338625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087629376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697290394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.393137596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116682558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.437931937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087267151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121319632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374459825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116652408 seconds)
  done (took 17.037492169 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093138557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174658032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.093790941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117994255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.089849802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088812601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120364823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088438324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172973582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116161919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10451766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086658743 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121120378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088012127 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137075115 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087707176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116861266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088749259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086798921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116732577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105638275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116393705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08771097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116819797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087347159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129183549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088775915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087044839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117636481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093587482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118624769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088150749 seconds)
  done (took 4.544678181 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137842705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183838505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094664225 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150256164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164104957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089712552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194808052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143740648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147492242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117169862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104951016 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117117258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12160423 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118206693 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107466478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11730006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088857468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116720597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087592368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088210052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135844396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087255904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117341355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088212563 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117475535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10136908 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117441211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087937442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087924918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121849248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090642254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117526238 seconds)
  done (took 4.886414321 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.090532583 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092553222 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131944824 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103204842 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117703757 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090679667 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.119536287 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089075289 seconds)
  done (took 1.955581547 seconds)
done (took 29.53968323 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104946155 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093048202 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130776695 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099781848 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126760894 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099380497 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115178795 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099141058 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100284484 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124246199 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102798113 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116244215 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08899661 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115330384 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101429765 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092456187 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130534689 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096326135 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132017102 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101015839 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118088563 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099033223 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097601994 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131481136 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102022552 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131182909 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10299911 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123375462 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088277815 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118178174 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101199416 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.137351698 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.089745857 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131809762 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092866776 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09133055 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118273319 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089209029 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130546943 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098818069 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123786372 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098832688 seconds)
  done (took 5.700699976 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.11348242 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.159180967 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088406719 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.117863592 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088811432 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.149945553 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.118056597 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117061138 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089407026 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.139737787 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.1120304 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.088227114 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.117919669 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.088427475 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.117802371 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089049211 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140648841 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.111699402 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.146977193 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.113064099 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.157256594 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.117491978 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.152020911 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.138936295 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.125402248 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.15131357 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.10844296 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.152015146 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.139794412 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.088107934 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.115586883 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.144344348 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.087335002 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118449251 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.126106905 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.148922217 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.142885956 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122353755 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.142821693 seconds)
  done (took 5.919953641 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09411176 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101893017 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138403413 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.177406662 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125744317 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12480126 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097068961 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134437978 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103828169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085946319 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.11979465 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.113700033 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134752144 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.096667491 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.116435506 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10199874 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.09999438 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.118693219 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092831193 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138541817 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104146983 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127268862 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098764058 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130569206 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.086804792 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088942184 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119087027 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103266298 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122574027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096825054 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120676019 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.091056322 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089239337 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128575677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09160719 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118247485 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10754178 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126715159 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096329281 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117916705 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095729463 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.087741475 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139084863 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126664296 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116222262 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093793827 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125162247 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096906478 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117653753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106362481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096403487 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11721015 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.090291028 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117330956 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087648438 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131681069 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089908119 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0890206 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129787316 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093547568 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129202757 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092101296 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102667628 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117168202 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094412679 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117996195 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08866042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115804538 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111454553 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.089282919 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15753877 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088034648 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.119730764 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095749165 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125474169 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09536642 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117978488 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102327282 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098951041 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12073945 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.097298611 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.119558763 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090890132 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13532308 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090050459 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.08817507 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.118275302 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094399666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118717382 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089029325 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101270554 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.120861279 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.090134812 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.134542981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087251361 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119198402 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093653822 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.092638325 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.116680474 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100755025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124036301 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088502097 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128008486 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088417397 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120362002 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096993925 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092176366 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117295611 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092720966 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124243145 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089697918 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119296715 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091969449 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.08946786 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.12749219 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104511154 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121178127 seconds)
  done (took 13.86610051 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228100334 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212560802 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182839355 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261082938 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135609644 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112402063 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.207809552 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158525955 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.087544702 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156239478 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170606341 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181464288 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168045613 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179318931 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16830737 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088247649 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137942717 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132803979 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.209789895 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287591346 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.107687262 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128496809 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.157839918 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126146403 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133687937 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097667161 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137245234 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133689468 seconds)
  done (took 5.634856521 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104147293 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15057021 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093675098 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140862003 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114547176 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118803087 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093224646 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120929537 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10081667 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13294942 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088265867 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124440792 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095551008 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.096973652 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120252998 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096927409 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128747108 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089868884 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121251322 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093585094 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098407753 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136766337 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.092496606 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.118302421 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096832104 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118131896 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091242041 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140583173 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.08861578 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141099385 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08651611 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127319956 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101957575 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119941919 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088683216 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090426773 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120924826 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090024059 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120761173 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088580397 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087507933 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110932065 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087793013 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133675751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094956323 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113388461 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094496949 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124510503 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089341501 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085804744 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121959919 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092181219 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.091437194 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126334042 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090653535 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120536237 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092046697 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.120198744 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095239918 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.09028579 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117738759 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087358209 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123283462 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092344299 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127554459 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093496919 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086135271 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12108356 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092575646 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124591096 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090636028 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09379227 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116592846 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091014413 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121034238 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.093846408 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09167219 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117920828 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088449628 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119181192 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078326489 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088193069 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107311996 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092765426 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.11721548 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087763815 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090783361 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124926325 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104659566 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120400358 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097003501 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120833754 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088037344 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.091464983 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115792716 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091483768 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136227529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137842834 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088964213 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086181115 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134213384 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091411724 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117997053 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079274624 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096688799 seconds)
  done (took 12.2743794 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.124097094 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169314865 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090428879 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137214293 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121839322 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155290518 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095431328 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12716179 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.089701543 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138647538 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088616363 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.127331424 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.088690194 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103230456 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155943732 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129887262 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090642593 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103500196 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123856184 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.166819672 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.10777185 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.157049989 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.154721628 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0894798 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094436504 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.154849002 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.157246017 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103527254 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132945492 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.126215366 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134680865 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126795475 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.15808965 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12321621 seconds)
  done (took 5.412231073 seconds)
done (took 49.933928558 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.217604275 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435650707 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.214036955 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.212331491 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.271691486 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.236610128 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.233929084 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.218612253 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.009137517 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.212729992 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.212730563 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.213724106 seconds)
done (took 27.837400439 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.232377892 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.37658944 seconds)
    (2/2) benchmarking "String"...
    done (took 1.519567205 seconds)
  done (took 4.057016252 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.216031695 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.213602249 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459016444 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.213785466 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.232243427 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.23238963 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.215391543 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216655575 seconds)
  done (took 15.928804065 seconds)
done (took 25.580249549 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.224618501 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.425655485 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.501634114 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.243872254 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.21483943 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.222028548 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.216390005 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.266420962 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.219270337 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.220542337 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.217213714 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.505280672 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.252166272 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.6133883 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.220486954 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.229366338 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.232322213 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.450997075 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.216023624 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.282564706 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.201197862 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204728202 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.232528276 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.237045045 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.230016019 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.218856298 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.234786329 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.220809976 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.495354632 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.232801842 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.258846242 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.221582672 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.230032999 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.225224365 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.329884873 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.247028282 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.42831195 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.241840258 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.211901093 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.218421172 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.430499197 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.630979635 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.217655077 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.217470748 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.224543604 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.233591259 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.217224095 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.942355775 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.227636976 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.229142701 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.304000468 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.609368794 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.219531478 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.24216743 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.231078761 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.493573253 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.218076898 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.273256438 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.249215564 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.220469443 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.217869085 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.219031294 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.265310885 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.225866248 seconds)
  done (took 144.803348542 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.219733151 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.225263271 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.225038809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.24069997 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.225812151 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.226291542 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.221349572 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.21966424 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.226666439 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.250660984 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.225727379 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.226599502 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.225124139 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.239651868 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220560037 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.243659875 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.227573958 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.225475238 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.23861686 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.221170475 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.226090086 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.227411895 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.226480278 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.228673901 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.228201009 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.312162774 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.240170753 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.224789459 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.224713967 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.223977569 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.229493909 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.230080589 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853337985 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.077640877 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.225689326 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.25006183 seconds)
  done (took 80.956608248 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222829444 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221235562 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220641914 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.253660486 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.220696467 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.812167186 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801215247 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.949902435 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.647748454 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.574069912 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53267682 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.228117141 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316505072 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.238858314 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.222842967 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.241580291 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248385702 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228173743 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22363806 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.81133849 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.241922867 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.473171615 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.405856016 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.237545673 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25569349 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.621004879 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222698843 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254849694 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561409981 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.274432719 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221957413 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631867976 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.681261779 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337589707 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.223330302 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25563594 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224695054 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506969763 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22491263 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.224134789 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.22413135 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226649938 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931427909 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.229259449 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.815889814 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.229876457 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.186711805 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.224628909 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.223407168 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225255238 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.128581948 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233929183 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.893291569 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.225633258 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.224702205 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227212388 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.224298899 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224787694 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.259679507 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.184434897 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.331809306 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225714999 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.228365395 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258731272 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.224734517 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.226299036 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231599512 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.232025588 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.29229394 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.440801142 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817831299 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233213911 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323541267 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.347078925 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.226075427 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.225399643 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22852848 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.224927093 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.336858024 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227200834 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.654033089 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.405770456 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.243657385 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.577318785 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.326103763 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.230380605 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.688350958 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.231200177 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.226050341 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.002523487 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323158928 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.226802351 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227962901 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226657047 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.653162973 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.225744747 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8050059 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.56830001 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.231788545 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.585319942 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.229352366 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.661604615 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.799783533 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.986046346 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23132511 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341791434 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.404527201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.243424847 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.225958516 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.581074767 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230380439 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.2873729 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228429249 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.625932106 seconds)
  done (took 371.417788612 seconds)
done (took 598.325796216 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.874318993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866923599 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.976724551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.864145541 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.821253117 seconds)
  done (took 10.562296875 seconds)
done (took 11.720675746 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.420170701 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.420457326 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289411509 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.423642898 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.267486755 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.44558595 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412222987 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.256387741 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334809145 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.322545608 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.336333261 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.288317985 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761656521 seconds)
  done (took 19.138421599 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569948595 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.229331205 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291365505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581511194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26570511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572370446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431496679 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.247270064 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445442129 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24542094 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243012512 seconds)
  done (took 18.284587696 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.572613273 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.230512337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296461377 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.584448323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270637908 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.585420547 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442394187 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.24911082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449588037 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246589456 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242295518 seconds)
  done (took 18.328806267 seconds)
done (took 56.909982929 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.272250008 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402287625 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.260567424 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.242492533 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.237593558 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.240142326 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.243235257 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.24048571 seconds)
  done (took 11.300901035 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.238728762 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.238360818 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.23767055 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.23689766 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.237292718 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237591931 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237705588 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.237913006 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23859547 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.238110883 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238771304 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.237807097 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237403324 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.240868114 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.236472318 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240956925 seconds)
  done (took 20.973443398 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.237890839 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.236917027 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.23527039 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.235364005 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.236281595 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237702308 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.237581478 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237199036 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.237739977 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.236930012 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.23617839 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.23535576 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.23691505 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236784583 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.237432854 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.237899497 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.237205408 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.236996726 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.242881367 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.238149134 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238251922 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.23860876 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.238800211 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.236992233 seconds)
  done (took 30.861912483 seconds)
done (took 64.296813875 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.232978347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.23468335 seconds)
  done (took 5.631097388 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.29828167 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300139032 seconds)
  done (took 3.762987549 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.241742266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.239980226 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.242502332 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.240952731 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.241179244 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.240778822 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.240595807 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.241136829 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24070322 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.240947633 seconds)
  done (took 13.575139339 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.242136725 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.241879971 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.238859625 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.243160216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.240295332 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.238151036 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.242279211 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.242319527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.241610473 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.238446959 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.242820723 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.238304201 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.241745207 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.239565961 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.240652842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.239983958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.239574223 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.240310473 seconds)
  done (took 23.497209238 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.25601142 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.263644634 seconds)
  done (took 3.68506318 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.486480189 seconds)
    (2/7) benchmarking "second"...
    done (took 1.282016789 seconds)
    (3/7) benchmarking "month"...
    done (took 1.350915161 seconds)
    (4/7) benchmarking "year"...
    done (took 1.337863771 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.282329916 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.26198685 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282264368 seconds)
  done (took 10.449327538 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.244540118 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.434419504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.543094334 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.854713108 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244407331 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.248918068 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.152605144 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.249520501 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.251843945 seconds)
  done (took 14.390541195 seconds)
done (took 76.154214359 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.237487154 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.252816914 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.246990473 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.242101049 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.579708576 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.269331408 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.244671162 seconds)
done (took 16.239560489 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.228826457 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.244625071 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.236382813 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.240587988 seconds)
  done (took 10.116453896 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.254259777 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554620818 seconds)
  done (took 4.975477511 seconds)
done (took 16.260620672 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244296645 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.245443502 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.243767995 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.2431893 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.24415102 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.244385093 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.242540674 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.243457316 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.246196728 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.246928467 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.246767112 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.243530618 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244448104 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242021224 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242806718 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24439248 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.243171628 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.242077923 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243819594 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.244166432 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243741054 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246433425 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.24323117 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245473259 seconds)
  done (took 31.02920178 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.246282248 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.242164635 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.24614022 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.246079696 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.244992659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.247528961 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.245346366 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.242904952 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.247300133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.24714882 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242176005 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.244779448 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.246779498 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.245412356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248016478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.244011205 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.245443844 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243310843 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247074962 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.245118139 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.246976166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243131999 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.245433767 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246655313 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.245540029 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246828124 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.24754903 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.244495674 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246673691 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.247323034 seconds)
  done (took 38.537487741 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.253130298 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.255868158 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.249645355 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.247001119 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.24831851 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.247729547 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.247849279 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.249697409 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.247393357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.248773449 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.248796199 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.248851259 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245894251 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.249209641 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.248156518 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.248689572 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.247628722 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.248293045 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.24851801 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.247781401 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.247240109 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.248455814 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.247859133 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.248711528 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.248700676 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.248394244 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.247885726 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.247403622 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.249521525 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.249127053 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.248768437 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.249293009 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.252293334 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249238737 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.248269692 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.250200419 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.255670737 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.258241522 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.248184189 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.249001353 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.247645913 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.250060518 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.248669043 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.250457028 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.250915113 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.249353839 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.250588241 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.249726418 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.250597746 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.250338255 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.251029761 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.250958995 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.25202466 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.249583123 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.250468197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.251396098 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.252816221 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.252552272 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.252000248 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.250197087 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.252199734 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.251593693 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.252378504 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.251800256 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.25277401 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.253720151 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.251563283 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.252792712 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.251340689 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.252343484 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.252482532 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.252712426 seconds)
  done (took 91.18261623 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252447882 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248644639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.248535638 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.248721804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252578241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251994889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.249751804 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252644913 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250739217 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252937817 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252643199 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249639872 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250257117 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25335533 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253552307 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.250601087 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255076279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250572414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254276134 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252973167 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253488473 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250169488 seconds)
  done (took 28.712225617 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252865808 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254254892 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.251070346 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254432654 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253147144 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254662148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251105084 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254940215 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252535515 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249290442 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252545472 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250752902 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252807203 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250984794 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250945006 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251235711 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25396466 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250895853 seconds)
  done (took 23.717752892 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.252408378 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.252226819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.254789305 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252093996 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.249982283 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252632697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251962034 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252587047 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.253797929 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.251318237 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.255014341 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254095526 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.255523012 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25349722 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254631028 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256452391 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.25683016 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254523388 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256349082 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252936027 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253723534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255113446 seconds)
  done (took 28.759482244 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255638699 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255958939 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253716684 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253733039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.25450396 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.25543707 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.256565895 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.254566431 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.258948235 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.257517841 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254488588 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25711929 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.255071469 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255777231 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.255796105 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253902207 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256728758 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.252275009 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256261525 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.254942782 seconds)
  done (took 26.286892347 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256227998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258900146 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257246252 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257427525 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258707958 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257556109 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259284855 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258332783 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256715694 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257780039 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259161616 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258524543 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257334584 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258656236 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25936201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259388954 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257645948 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257800637 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257819033 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259272092 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260037264 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257947986 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260143845 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259327456 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260386518 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259595589 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259538881 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261299398 seconds)
  done (took 36.421699024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258457258 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.259573897 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.256336234 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.258129473 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.257018209 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.257529308 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.257492253 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.258811562 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259386761 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.257055312 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.259922127 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.259166242 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.260305183 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.261384981 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261674637 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.260922511 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260163414 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.258807197 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258436708 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260458593 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.259865195 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261993928 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.26158455 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258489352 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259270457 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.261950542 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258372927 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258419639 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261874369 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259774154 seconds)
  done (took 38.965728479 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.308250032 seconds)
    (2/2) benchmarking "in"...
    done (took 1.307061018 seconds)
  done (took 3.798553489 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.259294536 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261936532 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.261798611 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258640089 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.261310624 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260974271 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262160537 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.261557605 seconds)
  done (took 11.272148789 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.262490295 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.263359605 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.262560391 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.262281007 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.262419856 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.262871629 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270164148 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.283199979 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.263597661 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.265848818 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.270858538 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270052505 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.266877258 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264667065 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.264284065 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266695522 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.263572012 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.262752857 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.263441037 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264094288 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264087305 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267761521 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265038596 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.261717013 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.265901984 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.277023443 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.269257777 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.265890613 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266083891 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.26933711 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.264140234 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.259695167 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.262861738 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262011078 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.264483756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.263469931 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27227383 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288843283 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.272424378 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265537185 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26619061 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.262644821 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.267671822 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.26577452 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270869785 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.263820578 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.26467345 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.262260877 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.267307198 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.27097841 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.2697332 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266309171 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.26434728 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268118686 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267800146 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272796144 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.284679375 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.269678827 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276110408 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.2780891 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278346318 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274815399 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268675601 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.267037403 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276311761 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.290491993 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275348602 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.284286147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.265288733 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.26883239 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274149919 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280078654 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.293608385 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.265924726 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267745947 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.269107941 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268020969 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269552918 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275048506 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.290643242 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.26901686 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268832878 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27972858 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29214198 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.269405513 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.270344865 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.266831458 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.266730929 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.268298184 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27812489 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.288095845 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.269053778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.267643267 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.271227533 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.269433591 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.269814728 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.268164518 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270932303 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.26912675 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.270228942 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267795452 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274440914 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.279712375 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268901821 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269586999 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.276361903 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.269809656 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270350938 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.274183203 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.270158177 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269153714 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.272319957 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.276614102 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26820949 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274445551 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.278575582 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.269253292 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.272123663 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.269498921 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.272065199 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28095778 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.29683665 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.270207602 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.271938986 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.277047405 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.282984591 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270399503 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.275640388 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.27195805 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.267392493 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.268082274 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.275979435 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.27203333 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.271583939 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271913474 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273785968 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.269649151 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.27162519 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.27212516 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.272613736 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.273241148 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.274382688 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.274751213 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.276748783 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.272074579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.273902823 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.280507484 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273081051 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.275129862 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.273733593 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.271201119 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271444206 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.274997959 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.273556556 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.274080677 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273751454 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.275465041 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.274059427 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274275596 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.273728083 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275860834 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.277639135 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279343191 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.273893832 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.279207492 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.275231967 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.273546026 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.276398945 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.275146239 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.276771265 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.278106829 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.275959525 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.281208664 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.282796989 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.276049151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.274847131 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.278680178 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275618915 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275776608 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.274073786 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.280639003 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.283915331 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.274599552 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282596555 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27683528 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27488437 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.27713393 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.276983316 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.276904995 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276075242 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.280003902 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.283858893 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288790113 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302744517 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.280131339 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.28164562 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.276714287 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.278174246 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.281634833 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.273652414 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.276802155 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275806824 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278196757 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275665864 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.279776795 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.274294803 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.277842477 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.279156166 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.278225782 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.273247942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277600844 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.276171399 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279914064 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274601034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278365824 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275840805 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.278658274 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.274128327 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.279546273 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.279253829 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.279187186 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.277613007 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.282629646 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.276430784 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28018832 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.280233401 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.279536625 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.278972996 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.27889955 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283524668 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.278925621 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287363653 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.298595923 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.280124201 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285532455 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.298623998 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.278747581 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.281676646 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278086664 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.275715116 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.282377578 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.287157733 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.278996247 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.279848478 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.281335459 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281752742 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279517512 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.287624356 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.278219341 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.280308138 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.280624533 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.282473003 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.277949981 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.282475393 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.280767716 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.281359445 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280838115 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281620772 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.282315855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283881008 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.28038017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.279203397 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.282231504 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28497605 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.288744403 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.286343127 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28057496 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.282613143 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.283917924 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.285278359 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.28204001 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.280084213 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.281083239 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293914736 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.304306985 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288407124 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.282795207 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.279116024 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287043715 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.283887564 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.284030156 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281063608 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281027998 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.282837901 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.280362641 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.27937559 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279547672 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.28137755 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284121825 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.286239425 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.286756175 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.283642455 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.281858091 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281901769 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.280557262 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.282374797 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.282112719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.283548624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.28441931 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283859525 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.282270484 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.28211236 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288193335 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303200072 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.284150541 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.283475914 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.283905533 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.284673657 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.28682926 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.282965465 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.287983205 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.29422586 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.287950559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.293063045 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.28521939 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293289519 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.283150701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.288785479 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.292806855 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.281532206 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283440754 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.283282624 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.282977442 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290921532 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.30258776 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.285701427 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.286664876 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282769188 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.283664924 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.285393546 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.285860877 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28500066 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.284680705 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292633478 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.309719022 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.289612337 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285534843 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.281518928 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.283491381 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.285072039 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.283907072 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288046655 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.285373146 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.284845605 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.286547463 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.286900575 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.285971775 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.285557373 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.286267259 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.285959936 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.285766771 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294319188 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.306612549 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291749939 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.288113496 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.2927688 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286528535 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293741832 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.30642344 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.287700483 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.283093363 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.28617313 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.288726832 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.286532882 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.286761055 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.288404892 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.290090881 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.291320048 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.287085722 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.290657548 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.288186691 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.286431961 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.287683687 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.300508819 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.308946192 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.289950704 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292955218 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.2857862 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.291392843 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.291603233 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.285942599 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.289979789 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.292324806 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300770059 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296575102 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.287668245 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.28866332 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28863167 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287672639 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.289410774 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.287358309 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.28757216 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.289166452 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.288158285 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.28918604 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291546801 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.288135254 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.290897984 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290922197 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.289956268 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.298780255 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.289032255 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.289950697 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288503949 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.290984217 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.289682708 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.289246538 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.287806722 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290304681 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288669789 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.291667962 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299025903 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297121017 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.291642448 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.289702477 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.288005235 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.291741609 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.290515245 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289934695 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.289616021 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288816928 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.292405446 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.290633026 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.290284258 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.290345193 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.288489133 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.292133671 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290410931 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294688471 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.298433043 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290519986 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.289233939 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.292647281 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291614657 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.291633901 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.29308054 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.296481569 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296470061 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.302352702 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301116628 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.295099394 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.292821942 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.295864313 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.302051352 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.291227239 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.294259251 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.291049043 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.293010198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.292828222 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.297271892 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291024303 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.298338388 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29294458 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.292225098 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300187514 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.315994283 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291935464 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.294339184 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.29683363 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.294469945 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.290439613 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.292734842 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.290605376 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299806194 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.313233384 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291116044 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296859065 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.292995785 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.297270228 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296932283 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29314491 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.295616555 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.290903835 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.294763758 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292484525 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294052453 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.291997977 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.29272642 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.294234254 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.296288469 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.300461083 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.290460069 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297095337 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.294942279 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.295874178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295978461 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.298906545 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.293476751 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.291969416 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.295527414 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295306241 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.298995701 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.300812008 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.298694107 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.300291803 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.300525924 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298007279 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301662708 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.310758999 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.307005355 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.293539075 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.297210377 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.297596729 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.299304765 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.29486281 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.297694207 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297825793 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.296838891 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.295098411 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294890816 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.294519081 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29905508 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311625311 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.318289975 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.297492409 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.297207458 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299043341 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.296236998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.292839875 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.29571656 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.297753054 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.300214514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.302562157 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.297458614 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302954988 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318349252 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.299695455 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.301238396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.303908289 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.304998473 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300926287 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296367288 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.297409329 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.301929181 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.315839711 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298668977 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310697652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329560535 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319575917 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.300733796 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.297104885 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297277793 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.297610054 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.299799646 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.297897647 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.300435714 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.298326267 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.298493231 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.300337943 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304753547 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.299529941 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.299984124 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.299677556 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.29753154 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.298858781 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.295035937 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.298138517 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.300137646 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.298164509 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.298329375 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.297301007 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.300679245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.311324938 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.33015453 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.299148851 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.300108339 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.295365153 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.302403587 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.303968717 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.312205525 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.308916476 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.297115653 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.299716091 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.300499146 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299484859 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.29856795 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.30097375 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.300638604 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301909756 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.300078624 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.314659623 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310314085 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.306161163 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.300948135 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.301510715 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.301156124 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301558562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.300994133 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.30214941 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.303205021 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.305351369 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304446762 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.301231716 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.299574842 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.308530796 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.308287665 seconds)
  done (took 767.254268528 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299082326 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298732312 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299794695 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301254551 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298405957 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30001812 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298149851 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300742384 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298559786 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300369196 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.298344866 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299496792 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300192847 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300899022 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300615334 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300943539 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299204975 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301189429 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300266067 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300069451 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299361633 seconds)
  done (took 28.513874037 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.299826034 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.301108152 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297776452 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303049639 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300541432 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.303243365 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302139386 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304386106 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303619418 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301612009 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.303821909 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303746935 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.301511501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.301753036 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300753289 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304441446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.303950661 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300699831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.30490037 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302235145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303135475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302961999 seconds)
  done (took 29.872998113 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.304508775 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.304447739 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.305324518 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.301698114 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.304627305 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.301852506 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.303390012 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.304932626 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.304570259 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.305277926 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.304516602 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.306927866 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.311635067 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.311474565 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.307518041 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.304329127 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.304403714 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.304164187 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.303723099 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.303239855 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.312732144 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.302355603 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.302323816 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.304373582 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.304432703 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.30768191 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.307203659 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.30423777 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.309159065 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.309865586 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.305737741 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.305646929 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.309624497 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.305134789 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.308417082 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.31191314 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.307422286 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.303357605 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.305030165 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.316350131 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.331325522 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.309343762 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.314522247 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.309579752 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.307538116 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.311539364 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.315492813 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.303796814 seconds)
  done (took 63.971266874 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.307866588 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.30784218 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.306678154 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.308893538 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.30733711 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.305728632 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.310296341 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.308554632 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.304963803 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.305284479 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.305725014 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.30685824 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306855842 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.306734451 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.308606514 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.306847506 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306142209 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306998544 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.3052128 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306787109 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.306614841 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.3082918 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.306322025 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.307004535 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30928338 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306411583 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.308579176 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.309664687 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.307412949 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.307086996 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.310291193 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.308821298 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.309607413 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.307325032 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.307723456 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.31088661 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.309846436 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.308655122 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312178467 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.306695905 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.310879818 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313264323 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.310506366 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.310655571 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308720877 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.306979163 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310344867 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.309205835 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.307725474 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.312464961 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.31272075 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.310099317 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312260322 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.309644446 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.311449853 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30966712 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.31095 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.30717821 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.312590589 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.308905755 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.309580218 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.311994657 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.311455908 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.313733267 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.31095194 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.31032551 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.312797336 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313111991 seconds)
  done (took 90.237904496 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312784707 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.312777747 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312485516 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313404992 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310938117 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.313411002 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313747481 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.313844143 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313210804 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.313548448 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313446984 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313517564 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.315211855 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3150694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.313767587 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314481054 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313585333 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312769241 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314704828 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314697988 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.313830735 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314373926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315151574 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.314411812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313438262 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.316175579 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314714244 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314665019 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314461523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.314827818 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315380653 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.315460963 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.315799617 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.314182111 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.316814527 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.315046004 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315502571 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316023647 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.316669824 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.316393822 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.317715772 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316935312 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.314974975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.315171439 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314639973 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.315886611 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314136911 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.315435922 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.31896213 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315813712 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.315788332 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316815128 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31719193 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315435728 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.315851612 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.317526074 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315106956 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317760778 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316770389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318267573 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318326064 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.319270243 seconds)
  done (took 82.772713998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31814043 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318439824 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.317123073 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.315184806 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317062746 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.315073608 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316607956 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.317917831 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.317957945 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.318159194 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318592331 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318290515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318365494 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320605901 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315112775 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316095652 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316898602 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.315339854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318061739 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.316070237 seconds)
  done (took 27.579411896 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.317307193 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.31878831 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.315667046 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317824921 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.319946704 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.315222329 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.319972112 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31720406 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316566346 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318992152 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318965528 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318804217 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317744046 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.318011957 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320884091 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.318702959 seconds)
  done (took 22.326254681 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.319249842 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.319913512 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.319333864 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.319169427 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.319940264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.317975696 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.318032428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.31692564 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.316730003 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.321276024 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.320849156 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.319876998 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.320300069 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.318270396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.318577371 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.319372902 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.318959636 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.318440127 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.322898252 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.322752263 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.319613919 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.316938503 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.319947755 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.319955243 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.318657694 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.31917727 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.31886832 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.318808753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.319271937 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.319894042 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.316842216 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.32005983 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.317534665 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.318640683 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.321357677 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.320167406 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.321396001 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.321357801 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.321684504 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.321757241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.320417433 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.320874595 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.32129456 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.321878167 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.3188785 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.321399458 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.319925684 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.319777863 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.319161316 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.31983963 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.321042878 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.322037414 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.322531522 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.323495391 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.322682748 seconds)
  done (took 73.833546555 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323867841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323579662 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.319922881 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323480351 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.324978995 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.320181294 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.323270266 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322058591 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322324943 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.323869282 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321171729 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.32471268 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319579431 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.324251155 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.321487753 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323153287 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.323014442 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.32164189 seconds)
  done (took 25.045863665 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.322341326 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.321043039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.323721273 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.322403407 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.32075517 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325481631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32375383 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.323974515 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323607941 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323772865 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32173427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.324035691 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32599719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.32437175 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323871859 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322519859 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.324442674 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32466017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324435486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32426155 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327489775 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326023613 seconds)
  done (took 30.364135345 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.32605113 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.327325114 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.324664093 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.342337891 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.346641517 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.324649382 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.32459046 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.327298171 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.349440922 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.381332311 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.37499696 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.345637328 seconds)
  done (took 17.336321958 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323680171 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324919858 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32449047 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326077072 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326456064 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323089287 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324002871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325679819 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327420051 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324835117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32577636 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32634971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32649768 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32224444 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325566361 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327896111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324381162 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32724982 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32595625 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328243821 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325892666 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326416319 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324865172 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326587346 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326976952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325146666 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327211396 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326198555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327644505 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330375471 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330276572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327898902 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328852615 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325870407 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328538907 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329904951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325066473 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329696363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328192999 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326726207 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328316326 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329156502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328238784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325319988 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329290696 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32613367 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327308369 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326642027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325173665 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329037818 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327692714 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32735987 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328192949 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328464988 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329446981 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328189284 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327301277 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326572491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329703382 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327726974 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326720286 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33005218 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327387425 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32737216 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330118863 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325711417 seconds)
  done (took 88.827185701 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32654249 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327590654 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327177279 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327442871 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327769367 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329272972 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328445023 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327611192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32985415 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327702063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331350211 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326821955 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32951309 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328829546 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328731156 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327767893 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32830188 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32839224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328401475 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331914556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328117161 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327746306 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328819206 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329156881 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330609604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330071068 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328944997 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32847512 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331474355 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329088308 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329646044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328515585 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331725911 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329101202 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330383006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330826423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330808419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329525534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331190812 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331521596 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330244299 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334193528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331744317 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330053012 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330279062 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331646045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330363629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331161911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330734201 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330202137 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330303667 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332030548 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330405009 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332776787 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330648434 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330901706 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33121426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331045817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332213948 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335867392 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33215361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333194296 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334623627 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333550607 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333093606 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333977462 seconds)
  done (took 89.041935266 seconds)
done (took 1796.828529601 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.503160478 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.459685336 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.335149062 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.344725926 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.336039985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.329730767 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.347106929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.335560379 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.335982706 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.335918317 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.338535116 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.555736127 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.326949406 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.335205664 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.33565543 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.428479792 seconds)
  done (took 27.237287234 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.365085918 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.349209214 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.463563144 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.36313921 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.366583508 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.547023527 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.404355823 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.343100137 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.532316821 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.391067819 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.335080273 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.370988916 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.345540397 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.333418624 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.367711657 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.53952453 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.615700315 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.353359125 seconds)
  done (took 29.639197991 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.843873877 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.36444704 seconds)
  done (took 5.462083442 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.361807463 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.342143668 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.344040115 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.340049161 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.333174084 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.34827905 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339048554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.341075103 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.346539614 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.488640786 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349823664 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.35356868 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.362379248 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.342725684 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.336084814 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.380608879 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.50004002 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.339223409 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.334433587 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.346333605 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.341995413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436508333 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.38612253 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.346317085 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.477164772 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.355555407 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.347527398 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.346131648 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490522903 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.334831624 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.33796706 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.3410554 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.341529159 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.29936307 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.897851973 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.337964608 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.366495703 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.348072704 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.336502824 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.525225608 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.345733591 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.346190034 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.348557468 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.869908453 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.496043756 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.474355148 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.356445962 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.358968717 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.344963863 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.412825294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.341119298 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.342971118 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.386401907 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.156303008 seconds)
  done (took 86.070598568 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.385457703 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.335140417 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515393023 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.369225246 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.33457315 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35781421 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.341778009 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.663433782 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.407185146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334248813 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.705552481 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946184084 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.367029753 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.388623074 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.227150664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.397345915 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333191744 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.341774469 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.339887587 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.336141172 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90841378 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344478645 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.338113983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.491770852 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.379512454 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.887990577 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.336000268 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.356169666 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.34380068 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.338314772 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.893017529 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.370771539 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.406866793 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.340083275 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.61846839 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.76697107 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.728519135 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.342308876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.370588282 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.339101723 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.342128913 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.885632769 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.730420703 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.338950344 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.357483399 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862984049 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.339176795 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.341218007 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.34667204 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596828182 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.337470976 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336249687 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.337690433 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.340683313 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.333678276 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.344775036 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.422508857 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.864699759 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33832926 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.338250779 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.408393281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.337705886 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.345054055 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341833261 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.339740335 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.727855807 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.514928966 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.345029933 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.724524874 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889714646 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.368572117 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961587699 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.362856434 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.354860013 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.350416159 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.338809267 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.335480705 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.888137627 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.353801823 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.338386698 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.713587694 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.34260875 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.683362459 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.361487742 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33751427 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.938583635 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.352991357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.341469144 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.337116885 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.368789229 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.356047117 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341983069 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.622904779 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.407867498 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.335127645 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.340017162 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.34189143 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338686478 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.354679153 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.342800813 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960166347 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.36154819 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.337769182 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.35051593 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.339859641 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.347311004 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.339339747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.339912012 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.611429913 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.34566539 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.350528738 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.34341073 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.340322588 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.350705459 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.446910877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.344575274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.696263509 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.34847511 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342139953 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.347205505 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339148476 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390806327 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34341147 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.34650055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.272712351 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.645510536 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.367753746 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.341380188 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.34174832 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.339725978 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.357932548 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.365947081 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.380463426 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.342773852 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133877334 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.375856588 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.355884412 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.341274222 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.345402523 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.342764203 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.350731255 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.343809893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645114168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.63915556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.493987192 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.344377895 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.343959997 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.144538499 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.364027833 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523600366 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.372920311 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.340638964 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590019212 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.528790184 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.346274791 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.343652392 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.346087448 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604174441 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.346618143 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.673340767 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.929491849 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.369993102 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354431907 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.137244241 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.067359025 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.351568536 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.350671605 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.692083336 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.369647588 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.345057511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.341972434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.343915291 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.343945886 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.350348182 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.346958204 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.341852426 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.344339007 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.508771822 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.535431051 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.371898935 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346790253 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893543678 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36411235 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.346585412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.359477648 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.347848601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.34438213 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410408199 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.348220242 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.349349136 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.347871578 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.352976794 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.963987857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.35018513 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.352418435 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.538017487 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079034926 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.365236895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.347171159 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.347262784 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.255959577 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91697173 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.36728992 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.708384597 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.350600574 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.3876825 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35510891 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.413091526 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92336114 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.356902904 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.346636888 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.047440689 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.369301139 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.875322369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.348211982 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.346018215 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977597328 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.369359206 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.353605164 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.363519596 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349401015 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.663156027 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.347545846 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.370828206 seconds)
  done (took 502.029690187 seconds)
done (took 651.690494467 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.34621746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.354828857 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.337799695 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.354658546 seconds)
  done (took 10.656424454 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.35630869 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.354564197 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.353847668 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.354749248 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.354143814 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.356548959 seconds)
  done (took 9.394131695 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.349521139 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.35987284 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.358713636 seconds)
  done (took 8.337844769 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.582960808 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.379503067 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719174946 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.370189902 seconds)
  done (took 9.318480078 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.354160758 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.353929423 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.354926092 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.357788429 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.358076848 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.358110644 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.356433689 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.358218518 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.358819784 seconds)
  done (took 13.475583964 seconds)
done (took 52.447243609 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.365416425 seconds)
    (2/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.351120491 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.439352494 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.368874797 seconds)
    (5/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.34411233 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.28224914 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.336542088 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.39768331 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.628580426 seconds)
    (10/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.431034023 seconds)
    (11/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.359292375 seconds)
    (12/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.767558408 seconds)
    (13/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.470238414 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.386528246 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.349318835 seconds)
    (16/286) benchmarking ("sort", Float64, true)...
    done (took 2.421766366 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.375956059 seconds)
    (18/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.47379451 seconds)
    (19/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.343925413 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.359461813 seconds)
    (21/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.350415367 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.34792872 seconds)
    (23/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.401564092 seconds)
    (24/286) benchmarking ("sort", Int8, true)...
    done (took 2.37794635 seconds)
    (25/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.249086386 seconds)
    (26/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.322625218 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.341954088 seconds)
    (28/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.338222113 seconds)
    (29/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.384839732 seconds)
    (30/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.480674915 seconds)
    (31/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378921919 seconds)
    (32/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.346592205 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.776916723 seconds)
    (34/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.45641318 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.272579566 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.069575054 seconds)
    (37/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442219282 seconds)
    (38/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.341120544 seconds)
    (39/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.38191754 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.360100343 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 2.359837822 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.000982274 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.377407573 seconds)
    (44/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.352420149 seconds)
    (45/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.390776834 seconds)
    (46/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.110861678 seconds)
    (47/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.565064525 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.364305126 seconds)
    (49/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.470244629 seconds)
    (50/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437387573 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.34145698 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.351952542 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.353464299 seconds)
    (54/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.337814958 seconds)
    (55/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.34771893 seconds)
    (56/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.373282287 seconds)
    (57/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.576376762 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.369787745 seconds)
    (59/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.340874055 seconds)
    (60/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.514651936 seconds)
    (61/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.231376015 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.260393545 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.355889849 seconds)
    (64/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.623253517 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.339728903 seconds)
    (66/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.412541774 seconds)
    (67/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.363855629 seconds)
    (68/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.352821566 seconds)
    (69/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.995920925 seconds)
    (70/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.414760322 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.407416315 seconds)
    (72/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.415152261 seconds)
    (73/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.413403973 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.349861487 seconds)
    (75/286) benchmarking ("sort", BigInt, false)...
    done (took 2.35894271 seconds)
    (76/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.343276751 seconds)
    (77/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.364289199 seconds)
    (78/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.36540635 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.36232077 seconds)
    (80/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.376739922 seconds)
    (81/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.481932633 seconds)
    (82/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.381177157 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.642991241 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.368032344 seconds)
    (85/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.343178285 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.362935256 seconds)
    (87/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.216913043 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.421780431 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.258243735 seconds)
    (90/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.4163062 seconds)
    (91/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.588533381 seconds)
    (92/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.343820531 seconds)
    (93/286) benchmarking ("sort", Int64, false)...
    done (took 2.364155018 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.065433188 seconds)
    (95/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.35913125 seconds)
    (96/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.470966162 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.348295847 seconds)
    (98/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.042940857 seconds)
    (99/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.35271004 seconds)
    (100/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.374277798 seconds)
    (101/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.341379414 seconds)
    (102/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.346177447 seconds)
    (103/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.384325648 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.735226032 seconds)
    (105/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.369747312 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.35953993 seconds)
    (107/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.047598601 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.371604568 seconds)
    (109/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.376579407 seconds)
    (110/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.246657962 seconds)
    (111/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.362502179 seconds)
    (112/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.366252548 seconds)
    (113/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.277706165 seconds)
    (114/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.911995527 seconds)
    (115/286) benchmarking ("sort", Int8, false)...
    done (took 2.365794034 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.346858579 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.601027555 seconds)
    (118/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.581109366 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.398410662 seconds)
    (120/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.357391539 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.351723278 seconds)
    (122/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.382626057 seconds)
    (123/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.449354738 seconds)
    (124/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.364661793 seconds)
    (125/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.127724047 seconds)
    (126/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.368164503 seconds)
    (127/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.352954887 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.353155365 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 1.895277088 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.389612793 seconds)
    (131/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.360042252 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.64746891 seconds)
    (133/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.491531518 seconds)
    (134/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.372244308 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.198616089 seconds)
    (136/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.581298667 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.620246471 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.79326541 seconds)
    (139/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.37508471 seconds)
    (140/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.374836217 seconds)
    (141/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.557140747 seconds)
    (142/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422720388 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.466492586 seconds)
    (144/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.346081359 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.346396984 seconds)
    (146/286) benchmarking ("sort", Float32, true)...
    done (took 2.380245575 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.196341564 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.388073494 seconds)
    (149/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.460176597 seconds)
    (150/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.768376716 seconds)
    (151/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.385738606 seconds)
    (152/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.360563662 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.489566954 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.382820105 seconds)
    (155/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.385980274 seconds)
    (156/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.346042026 seconds)
    (157/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.355794005 seconds)
    (158/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360568801 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.392898694 seconds)
    (160/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.370385949 seconds)
    (161/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.355611633 seconds)
    (162/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.413763659 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.350468171 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.473606459 seconds)
    (165/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.249120441 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.388304433 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.790857429 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.389300439 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.467170989 seconds)
    (170/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.389035277 seconds)
    (171/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.067637371 seconds)
    (172/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.368001047 seconds)
    (173/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.489763493 seconds)
    (174/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.498352948 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.355931795 seconds)
    (176/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.371242697 seconds)
    (177/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.783849553 seconds)
    (178/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.305006636 seconds)
    (179/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.371115595 seconds)
    (180/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.420739671 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.366448219 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.391311913 seconds)
    (183/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.35155669 seconds)
    (184/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.423652505 seconds)
    (185/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.351234663 seconds)
    (186/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.513301926 seconds)
    (187/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.374235623 seconds)
    (188/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.456943383 seconds)
    (189/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.37423961 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.368102557 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 2.379578116 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.42587518 seconds)
    (193/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.758083063 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.621344923 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.362274305 seconds)
    (196/286) benchmarking ("sort", Float64, false)...
    done (took 2.361955308 seconds)
    (197/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.381004553 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.329932637 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.885210276 seconds)
    (200/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.350490916 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.358163197 seconds)
    (202/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.367446344 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.370102205 seconds)
    (204/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.93515321 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.614086442 seconds)
    (206/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.767415049 seconds)
    (207/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.370214863 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.344028915 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.384751965 seconds)
    (210/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.202460881 seconds)
    (211/286) benchmarking ("sort", Float32, false)...
    done (took 2.368635066 seconds)
    (212/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.353121566 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.409556743 seconds)
    (214/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.474187974 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.879971968 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.389416304 seconds)
    (217/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.630655077 seconds)
    (218/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.369595899 seconds)
    (219/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.360292735 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.368944244 seconds)
    (221/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.075214753 seconds)
    (222/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.308050699 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.383786183 seconds)
    (224/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.364365724 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.415000793 seconds)
    (226/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.352704578 seconds)
    (227/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.433201157 seconds)
    (228/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.374637298 seconds)
    (229/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.371870649 seconds)
    (230/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.415569425 seconds)
    (231/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.396238167 seconds)
    (232/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.456150927 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.235725781 seconds)
    (234/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.772749471 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.752260032 seconds)
    (236/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.413855181 seconds)
    (237/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.35486187 seconds)
    (238/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.409973177 seconds)
    (239/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.515764116 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.605476111 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.393327863 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.383613037 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.36775153 seconds)
    (244/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.353800478 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.398848435 seconds)
    (246/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.469376141 seconds)
    (247/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.355375425 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.752361806 seconds)
    (249/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.377613519 seconds)
    (250/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.360490587 seconds)
    (251/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.378799876 seconds)
    (252/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.399359489 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.353377904 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.802772182 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.412134914 seconds)
    (256/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.451178009 seconds)
    (257/286) benchmarking ("sort", BigInt, true)...
    done (took 2.368977136 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.37258431 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.356157166 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.46273066 seconds)
    (261/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.433405948 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.370604517 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.452510239 seconds)
    (264/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.35517754 seconds)
    (265/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.391749577 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.454879106 seconds)
    (267/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.875760125 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.477245774 seconds)
    (269/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.934973724 seconds)
    (270/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.366226317 seconds)
    (271/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.395358015 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.364957737 seconds)
    (273/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.405508355 seconds)
    (274/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.396278 seconds)
    (275/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.357425203 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.387962412 seconds)
    (277/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.356944556 seconds)
    (278/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.357600409 seconds)
    (279/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.370281386 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.41035721 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.315111763 seconds)
    (282/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.280591825 seconds)
    (283/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.36310158 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.393496434 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.354571664 seconds)
    (286/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.383504284 seconds)
  done (took 579.206372443 seconds)
done (took 580.472404785 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.40079963 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397768714 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.382764009 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.40128331 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.49321953 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.557799345 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.392168719 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.382083119 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.430053263 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.429591801 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.383390935 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.559138857 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.384483896 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.382185673 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.38056456 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396793163 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.384676333 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.384858358 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.39977176 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.391448003 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.40023374 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.381705945 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.431897307 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.558860179 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.386991582 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.385442913 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.387570542 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.405169567 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.495969734 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.385288232 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.385080939 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.395849485 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.386741334 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.380289333 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.380404869 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.404159263 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.397117263 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.394863888 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.387298029 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.415586169 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.372935138 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.384537858 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.390135779 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.386201111 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.385030389 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.389139181 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.384880436 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.391838415 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.4003568 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402129701 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.38991569 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.398705573 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.390426844 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.384892399 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.396311703 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.388507708 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.388025496 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405784948 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.409172543 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406418647 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.37987687 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.391022232 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.389787114 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.40337439 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.393826399 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.391195065 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.377959402 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.389185418 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.378178593 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.390923198 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.393272838 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397768379 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.389190267 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.402109495 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.418632103 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.395532824 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.388121285 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.38622361 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.395581233 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.387659095 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.397894813 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404642451 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.393133484 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.388867112 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401342746 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.561909552 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.395539931 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.390022418 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.396887582 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.410538332 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.398579245 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.398485736 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.391619075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.382399559 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.396896345 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.391528041 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.391886427 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.389955541 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.392042466 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395571004 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.376964436 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406620408 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.385858551 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.385396936 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.389492771 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.406156235 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.383020928 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.389752588 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.410057001 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.436280301 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.389742654 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.386699186 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.400777674 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408988167 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.397446645 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.393426315 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.384886316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.388513998 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.387943837 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.406950843 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.393143589 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.391243639 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41085091 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.392163621 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.38818017 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.378994046 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.415257327 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407787229 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.515253246 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.400804212 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.423951236 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.39005064 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.397490158 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.43780765 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414251323 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.424151682 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.392802423 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409917694 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.409802749 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.388589619 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.404370842 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.402666161 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.391621898 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.394563132 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.387367244 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.425619585 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407124907 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408255407 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.411809962 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51484526 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.391562753 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.394569567 seconds)
done (took 230.544740674 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.451811583 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.38613906 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.476117754 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.388802802 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.492271259 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.489017659 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.387898059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.388042436 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.384917926 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.772872355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.386949043 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.388579334 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.387510019 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.386689067 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.472567164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.390092842 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.387125742 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.733500704 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.388638108 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.461132681 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.386454496 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.390438516 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.390865356 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.771267268 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.390003266 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.387713509 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.46428444 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.392352087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.743097929 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.387111383 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.387921347 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.739202628 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.484655135 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.409378565 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.400381584 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.398293956 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.495185816 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.410106527 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.474355821 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.475950573 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.479683809 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.431532371 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.388032433 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.391126003 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.395762427 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.394383455 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.393790379 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.420040805 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.391885497 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.391603502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.741313492 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.402381151 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.405306664 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.392533592 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.390590098 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.413088834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.395698616 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.390231372 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.487080637 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392588994 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.460215837 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.773721536 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.773702937 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.390891274 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.388810218 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.3929256 seconds)
  done (took 108.345886277 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.465446177 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.468094115 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.517005042 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400707194 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.448187071 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.523044708 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.400506736 seconds)
  done (took 11.523279561 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.402554558 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394293449 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.443497516 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.446468714 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.393601493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.580243021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394626441 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.41104518 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.39066542 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.449689551 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.399515068 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.39554852 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.401859029 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.395596473 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.453772879 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.407688484 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.512461513 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.397127523 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397441965 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.552692942 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392776019 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.404587629 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.449502173 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.409667356 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.396641076 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.401150506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.229533006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398535905 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.396215374 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.396832218 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.393124189 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.484049481 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.397095813 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.390427272 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.398954177 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.515364101 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.400545483 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.399130738 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.399816422 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.398990291 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.402656181 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.395140289 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.399755348 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.393419748 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.396288414 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.422479665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.39815148 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.396083478 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.398629627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.39938957 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.449370232 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396645986 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.397814231 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.396988843 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.450742469 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407147706 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399456291 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.399502886 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400214725 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396789999 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.559243077 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.449294336 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.399344506 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.446962825 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398641582 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399685583 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.399331031 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.400145846 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492540814 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.400101351 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.448890814 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.399995217 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.584532488 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.427066872 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401673835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.402885934 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.40450486 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401055719 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.397434288 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.404869614 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.397313586 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.402863349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.407640078 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398647804 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.396842032 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.585485397 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.509475803 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.397496555 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.413137588 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.407868502 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.398474821 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.455966405 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.40144121 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.39633446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455379826 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.516468715 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.450805901 seconds)
  done (took 144.084682686 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.409954218 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.410434375 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.409251491 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.43041099 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.406737187 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.401874485 seconds)
  done (took 9.775423071 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.406067472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.40697896 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.406659309 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.407186076 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.402975643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.405046191 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.401592453 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.407006458 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.408032637 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.407294476 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.404231212 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.402464757 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.404397522 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.403291024 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.404378782 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.404618214 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.402423705 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403580065 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.402492675 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402779122 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.403354466 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.401403355 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.406640821 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.410378172 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.411568345 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.406182996 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.414267956 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.403824627 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.403587966 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.412920177 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.409960748 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.408204172 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.405706798 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.414065048 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.409371844 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.41200729 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412288978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.406812812 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.40255681 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.404124036 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.405422807 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.404444563 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.406959563 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.405441765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.405914356 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.412646929 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.409554483 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.412400811 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.403157374 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.410223382 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407876567 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.407678795 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.405194617 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.406010225 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.412011797 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433640274 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.416421741 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.409781561 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.408191343 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.412941736 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.411724202 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.408290911 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.41192576 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.414561938 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.409473442 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.405674158 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.408920776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.415252255 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405599574 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.406492906 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.40684788 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.405678198 seconds)
  done (took 103.668990937 seconds)
done (took 378.693165085 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.427606981 seconds)
  done (took 3.739484449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.533374675 seconds)
  done (took 3.848322202 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.352287435 seconds)
  done (took 25.673119953 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.461257987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.49030321 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.434060486 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.405043939 seconds)
  done (took 11.103227798 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.715012429 seconds)
  done (took 4.029082103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.401035213 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.399465702 seconds)
  done (took 6.115876762 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.72420102 seconds)
  done (took 4.037417986 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.862420665 seconds)
  done (took 4.180344486 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.431849278 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.401531246 seconds)
  done (took 6.158586241 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.390370796 seconds)
  done (took 3.703477043 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.227858002 seconds)
  done (took 19.543110213 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.416485309 seconds)
  done (took 3.73383027 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.46103485 seconds)
  done (took 3.772978399 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.468277936 seconds)
  done (took 6.781972901 seconds)
done (took 107.733782903 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.404957825 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.398304274 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.401149707 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.397682111 seconds)
  done (took 10.913602669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.446022125 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.441718479 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442924879 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.45468149 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.449415573 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.44535749 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.434100878 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.438085648 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.455347191 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.447303032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.443184981 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.444233638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.444628407 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.437899701 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.449377791 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.444415769 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453160414 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.44678417 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.434499973 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.456103553 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.412590744 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.457536088 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.449917719 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.410192732 seconds)
  done (took 35.95460621 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.92960446 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.483290015 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.567693616 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.465831681 seconds)
  done (took 7.760352323 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.4672224 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.464520207 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.477884449 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.519469342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.546038325 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.477546656 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.439940823 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.435366965 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.419286652 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.464423726 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.537923933 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.479527618 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.558017871 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.408783248 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.599998501 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.411667538 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.412079035 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.463412596 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.520057728 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.530981359 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.413789015 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.46358127 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.468548136 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.485534801 seconds)
  done (took 36.780013849 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412727633 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.428723622 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.409885323 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.409819579 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.417242451 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.411712143 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.410249288 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.412161824 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.412277248 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.421441979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.413908601 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.4271142 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.414391873 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.413889021 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.41797089 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.414402207 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.420092452 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.413297138 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.412842846 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.421687465 seconds)
  done (took 29.631526822 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.411332098 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.410939889 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.75857258 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.660223267 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.408348407 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.413474274 seconds)
  done (took 14.380771395 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.49663732 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.652679421 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.412216243 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.825209971 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.897603382 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.411861339 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.415336499 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.699938657 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.07420872 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.049831989 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.485496906 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.49845788 seconds)
  done (took 21.238674536 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.411809432 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.411429854 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.431163394 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.43253876 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.480510339 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.423078916 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.424242604 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.409339364 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.483788124 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.489321342 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.427567412 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.483092254 seconds)
  done (took 22.629975448 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501575845 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411443668 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4198465 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485583834 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409447554 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619984159 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463312906 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223149143 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.42026447 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687267147 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418816982 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502733589 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.672442867 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411144224 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413483031 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.396213603 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642195745 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955272062 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407591835 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406093789 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43935954 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418372629 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414861103 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.683392685 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63032227 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406230717 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.671675961 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410684626 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735440327 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431046527 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424013573 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40917103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684784133 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139896481 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532230379 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662566005 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432091204 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40938707 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.400913692 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.417763411 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438730861 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42063003 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424952005 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415206505 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415840589 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417088201 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186346703 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.415445748 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.415119551 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411999728 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716538953 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515143987 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.419680986 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417039022 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440439447 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410595047 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.417567799 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519847399 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982944487 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415961771 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425176459 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.417808184 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432223508 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412406165 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121374707 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.417092374 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.422068391 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423597795 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415817584 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410485622 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43646803 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414504757 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.435765982 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412874643 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195703691 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428304121 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421615087 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015791922 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416982712 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.419639083 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647741779 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414690105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415168461 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.413825878 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413363323 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233278232 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42728553 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.410458684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435962493 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24077151 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680878145 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444520464 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443697561 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642765295 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.403359682 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414756235 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.424904959 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421424737 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43547774 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.185788007 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431620741 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.416922921 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673384694 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.626506853 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420785004 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.418327004 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9837808 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448800796 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.439418659 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419756647 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671885188 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.095596309 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437938839 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41870749 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43993917 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417850019 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274350792 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429000935 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.426226494 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431930056 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719728925 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.312246644 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421865624 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487866463 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419607891 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418323969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416082762 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42465494 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413752198 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.658837833 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447769247 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.434448977 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.421776908 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424247081 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.42010204 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42291657 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.441763869 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644642338 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42805784 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699514263 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41920656 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417182597 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419017502 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.641374106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.425332026 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.430527358 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679342612 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422791548 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43107857 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43689883 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437309458 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525835225 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446075088 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.440752629 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.684307797 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.420553506 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.428373352 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4225343 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42760401 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426414618 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.42510652 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433656612 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093897478 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398069351 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421789071 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392664651 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.43184517 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486904743 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429799359 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.673109593 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.436400206 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430352001 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.445820991 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.429914404 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651236509 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43247805 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.420416528 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503872342 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.953650647 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11137179 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441460831 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.423792681 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.416535505 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.417785168 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421045771 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420362287 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.417754424 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671920156 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442623278 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42448987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095844084 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429022046 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419570241 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.435077353 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437962887 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.425642831 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419658603 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.428031565 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427509563 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438048821 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.437630323 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56585934 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.440811309 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423217696 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.940158351 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432071246 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421786531 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420538739 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458651789 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418572991 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306633188 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684331862 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42631108 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722314887 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429695489 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.445643521 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.426264959 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423384162 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461800654 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.45009611 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458254169 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.435363088 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4252652 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431499292 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989055474 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284483264 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05056885 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446181058 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.440257087 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431012844 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204726099 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440046875 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42247857 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683659861 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191553308 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441093459 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964123756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.437787686 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311110903 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733156027 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664614644 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436700054 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.431446627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766203518 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646291643 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456898718 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439669523 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430906757 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.410136667 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038287069 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457521652 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511108121 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252862232 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443252831 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452592935 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.504090655 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.441509066 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904711973 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450387728 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423544041 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437921656 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.432034714 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304381901 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431706563 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423681753 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145191321 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432937183 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.963482499 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441250876 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67994959 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.446406677 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.433115852 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.426149137 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.429915851 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.691409914 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726319439 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433685073 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425933896 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058566778 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.30891231 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.432678692 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425819751 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283107129 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437136633 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764952976 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.438008635 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.446264276 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436699425 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427132387 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427435905 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.423525924 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436160355 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397554106 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974077734 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.445721402 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450932389 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433754062 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310494363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.688339923 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.440325989 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105685375 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662648036 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432695655 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47278446 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.433182864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431397427 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.426354123 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429315925 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664986707 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520419485 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655167711 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428347556 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.443977591 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.521401609 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642628207 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427452941 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428287533 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718241813 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.432914207 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.458226318 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255315559 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45648412 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429306135 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4391263 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429526179 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452267566 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506320821 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683433118 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.448295348 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.441240837 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911505239 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456203504 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436456611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.44514036 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526812308 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438311127 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.437854577 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.233187444 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120078538 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256089536 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115966056 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748512219 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439616284 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43376534 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430238424 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579014966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431224304 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705620514 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431057576 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.430667776 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471442328 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439665924 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439043232 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650851884 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709625506 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432627481 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43451485 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438041474 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.432162457 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442464274 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.650366197 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984746422 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045697421 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43308571 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437098698 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21240475 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707405033 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435429214 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43212961 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433390306 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.434604641 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.479297709 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.446324943 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442730913 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588199148 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741984873 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179013181 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.469004119 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.463261733 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.207687783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441973566 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.699833801 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431878967 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694502345 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123327587 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.259600132 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706122867 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503347688 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690046667 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.439951123 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581211751 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.443671133 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440003855 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434343186 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285023549 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.431161038 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.446184175 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12525671 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707292849 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.436898259 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.443184606 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464950388 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.448129004 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66279567 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.264241647 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.67000015 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446500744 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446880007 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441477976 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124943429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75788473 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442720509 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.439630821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716174423 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678748475 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461805998 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.89272994 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.435756858 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051332001 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.436822542 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461903387 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444450275 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264775046 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1321679 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.441547142 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994700998 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437256624 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440692678 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718671955 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.446972288 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449574055 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720473788 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.443334221 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437954311 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700284765 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.129429981 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310396717 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.440179753 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476961125 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.447825731 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439459793 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446819802 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445231733 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446625217 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.932066814 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.464711231 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436662276 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447682497 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.448087019 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457757955 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.442265984 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437268015 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.442825547 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.448703449 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.43466472 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.458873757 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550594122 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063533519 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464090835 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.114015473 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.772739559 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.697846733 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439003726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.432755848 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.444942535 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444861293 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439183703 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439883674 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.444254582 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073136748 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.442434134 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.457287693 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44536003 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.658792532 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651652036 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440116251 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704556329 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447846623 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462330385 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.428666883 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439834765 seconds)
  done (took 1003.798671603 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446181594 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.493772975 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.455834725 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.500561983 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.460398351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507948566 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.543115425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482575028 seconds)
  done (took 21.242886003 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.451641103 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.448828911 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.446171358 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.450302895 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.451807601 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.967658345 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.462877152 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.448372212 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.453222916 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.460264593 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.451598496 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.181659927 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.456437612 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.456912045 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.446273131 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.458780191 seconds)
  done (took 33.852374047 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.83730102 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.726890164 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.107613639 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.524164201 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.453494511 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.452085429 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.833408865 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.465233863 seconds)
  done (took 28.754083095 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.459927641 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.458547274 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.459438317 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.455350004 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.458111974 seconds)
  done (took 8.64355906 seconds)
done (took 1276.895095908 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.453481318 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.454769854 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.451780202 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.450014228 seconds)
  done (took 7.159976489 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.435696901 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.433145626 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.432616125 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.453854185 seconds)
  done (took 10.111086332 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.275930543 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.192707428 seconds)
  done (took 5.824627244 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.449670428 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.210660452 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.182389902 seconds)
  done (took 8.19952954 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.770916265 seconds)
  done (took 3.125820337 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.869942002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.819905676 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.650772327 seconds)
  done (took 6.696288483 seconds)
done (took 42.470376997 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.447225908 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.796971078 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.603290194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.444128622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.605043012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.601365306 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.206633902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.462735807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.457171388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.446529958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.443009501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.608267241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.193810603 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.799105266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.192133348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.796215055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.61264208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.455675867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.451346147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.459924361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.208649289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.446816644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.470617926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.4467799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.633667051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.59428883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.465824286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.79667343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.458276492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.445479057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.600863043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447247393 seconds)
  done (took 85.452895813 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.447795881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.445897758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.447597341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.466255822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.445591467 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.46501283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.477320463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.445144669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.446084017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.460882149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.447563672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.449869312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.445495031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.48552156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.448002322 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.481115674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.445128292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.472767551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.450759161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.449436758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.481841623 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.446869245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.447460178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.445386502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.447252679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.448248358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.466997443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.459432724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.443565629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.466055304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.469406148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.469178021 seconds)
  done (took 79.972838708 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.448757292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.448521909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.447095107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.477598649 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.466162663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.473597734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.44869223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.455523006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.454641284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.459323494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.459358298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.450918784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.449616234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.463067846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.450519188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.453974493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.451784595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.457004717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.456985158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.450619747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.449177374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.447965015 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.449512337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.449085803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.471498871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.454150282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.460844713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.450373164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.451525189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.463393804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.47130916 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.461549658 seconds)
  done (took 79.964754685 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.661330691 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.462204003 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.45935444 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.396763498 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.461171301 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.460344592 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.45546956 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.650889153 seconds)
  done (took 15.371265337 seconds)
done (took 262.117447539 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.452658861 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.469211069 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.673679662 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.482337733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.453284438 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.487139774 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.480947804 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.675030967 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.455205615 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.661026658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.463762245 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.47590864 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.456936296 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.474125667 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.771225739 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.601317652 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.414610677 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.452260813 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.845329336 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.490150096 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.755191733 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.457416594 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.690888036 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.466712289 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.460777542 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.452986541 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.469199142 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.4271242 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.477663377 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.83974037 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.469959827 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.458601041 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.536347472 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.539488495 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.598314068 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.584410983 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.468470306 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.536320875 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.680094866 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.45792521 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.459273764 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.261043839 seconds)
  done (took 86.644667881 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.465204406 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.574465797 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.469104722 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.460806745 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.460520302 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.561248861 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.553442336 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.470290333 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.463778179 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.464729152 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.463547276 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.460642251 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.463459397 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.46338464 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.461586705 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.464033135 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.46378583 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.467129442 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.465655559 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.498622837 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.573304007 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.469011661 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.457125234 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.468572042 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.556449209 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.567747461 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.468535516 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.457893958 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.512326134 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.469112493 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.469679897 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.502815779 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.464784767 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.462598744 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.569274266 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.556354221 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.471671548 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.463745693 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.566845838 seconds)
  done (took 59.508950238 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.466923412 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.740598531 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.934797923 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.478928382 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.466392129 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.472940629 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.556402314 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.473840873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.474094075 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.470750338 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.65086824 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.466725102 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.50372631 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.976054839 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.476255072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.465006618 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.468836669 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.46804357 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.740880572 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473494575 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.57901322 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.467929034 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.559454831 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.483971651 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.489600946 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.465964612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.472509372 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.047662972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.47012595 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.650790658 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.389176948 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.563788692 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.005735863 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.934618376 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.389538515 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.476776036 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.471764319 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.659446745 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.469128768 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.468294899 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.558241756 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.469336985 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.936879495 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.162284139 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.486765713 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.466224907 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.070825175 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.653608839 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.758920313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.482701162 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.968194818 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.471488596 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.470950067 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.470467755 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.762143918 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.484453394 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.473592188 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.088113078 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.49176779 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.562187511 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.477591368 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.469812746 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.751698526 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.469374722 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.740313414 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.467838792 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.479741474 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.492250789 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.9532322 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.47821046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.191463615 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.491055185 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.469871829 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.65777552 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.755951838 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.122162415 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.482197016 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.757794944 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.015339364 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.55990566 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.480358042 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.041118224 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.563688752 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.483101352 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.475584348 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.471866265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.471813736 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.528061814 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.561896659 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.132239886 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.183892682 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.11633189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.584397665 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.492411573 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.475261458 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.088979654 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.487609815 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.47417549 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.95189844 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.196262538 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.492924542 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.481232423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.187172364 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.492666721 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.567686105 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.484368785 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.948514421 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.472398668 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516123307 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.475803132 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.481219686 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.496723361 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.566488611 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.48421481 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.471163548 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.171531544 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.688698571 seconds)
  done (took 194.424590988 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.467059697 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.481535529 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.486156376 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.464207047 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.464844315 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.474388265 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.465796598 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.467572264 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.473633778 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.462416926 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.465131527 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.467678354 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.46848819 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.470044608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.48130862 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.478427701 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.468442704 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.467831905 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.473541706 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.486014912 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.471938946 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.491009047 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.469735221 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.4885248 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.471165039 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.46927793 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.472324826 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.469057589 seconds)
  done (took 66.614474012 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.474408876 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.134595959 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.474541376 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.634687166 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.501978724 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.479512488 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.631354843 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.541626628 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.484311131 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.475389789 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.476293997 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.831283229 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47505709 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.10742532 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.709514249 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.633276065 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.066172172 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.491762991 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.478114287 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.476252661 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.638030419 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.496027411 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.824281354 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.122026943 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.475844029 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.119861331 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.464658473 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.484423045 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.477567822 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.123497437 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.473968528 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.823626135 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.565429048 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.546589893 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.120676213 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.093795894 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.128847816 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.647939013 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.476378922 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.474958463 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.479121084 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.473995213 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.128289263 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.477872506 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.482931163 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.118532065 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.49357672 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.482127772 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.486908205 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.477147698 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.547984229 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.545263257 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.826182093 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.126347932 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.568952956 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.489373625 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.632325078 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.866978891 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.48466301 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.080282861 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.46523283 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.137964335 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.496403707 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.470097225 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.482864807 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.484176342 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.661151262 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.63750931 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.076026503 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.496778292 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.075753219 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.675986254 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.477133677 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.47508972 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.484545592 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.131185154 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.075291925 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.673311378 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.645519333 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.703949646 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.470923019 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.482697755 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.471773528 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.578897957 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.483614878 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.132580548 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.091143266 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.499520001 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.488152297 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.482490321 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.484460112 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.69072648 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.132324031 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57207096 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.077351267 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.850480651 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.8331905 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.480943924 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.581806265 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.492425048 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.833976662 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.480641635 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.545737024 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.932557617 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.833919333 seconds)
  done (took 177.634886492 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.762391672 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.502606538 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.576937609 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.646711317 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.128008385 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.106071466 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.474338973 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.63095711 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.603518089 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.767952536 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.488534048 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.567994405 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.71938252 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.568309465 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.261158616 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.566127569 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.583717389 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.642293272 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.631569656 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.493539915 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.19592698 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.799316027 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.688107881 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.497229272 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.593311587 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.355593669 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.118777177 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.04191235 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.666553824 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.474936374 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.045765156 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.488722496 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.477771409 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.224035517 seconds)
  done (took 68.774195843 seconds)
done (took 654.961992689 seconds)
SAVING RESULT...
DONE!
