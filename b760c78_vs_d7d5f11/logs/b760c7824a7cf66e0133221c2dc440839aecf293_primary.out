cset: moving following pidspec: 25381
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342678014 seconds)
loading group "string"... done (took 0.585457633 seconds)
loading group "linalg"... done (took 8.535240173 seconds)
loading group "parallel"... done (took 0.177041103 seconds)
loading group "find"... done (took 1.396701084 seconds)
loading group "tuple"... done (took 1.992685084 seconds)
loading group "dates"... done (took 1.36587178 seconds)
loading group "micro"... done (took 0.20877367 seconds)
loading group "io"... done (took 0.566179727 seconds)
loading group "scalar"... done (took 42.796823067 seconds)
loading group "sparse"... done (took 13.421334118 seconds)
loading group "broadcast"... done (took 1.175282774 seconds)
loading group "union"... done (took 14.97827574 seconds)
loading group "simd"... done (took 5.330463104 seconds)
loading group "random"... done (took 10.285923372 seconds)
loading group "problem"... done (took 2.052992356 seconds)
loading group "array"... done (took 24.116254459 seconds)
loading group "misc"... done (took 1.0887574 seconds)
loading group "sort"... done (took 3.553822054 seconds)
loading group "collection"... done (took 20.94045605 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52877811 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.117771396 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147226776 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149994417 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200161433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139511891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142163026 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112714943 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.995399958 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.19102471 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126712952 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523739984 seconds)
done (took 5.138386667 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.215041269 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081250003 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094511493 seconds)
  done (took 0.860488194 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.089184277 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142036984 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090953454 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075119134 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073896443 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091738201 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073777219 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090673786 seconds)
  done (took 1.327075287 seconds)
done (took 3.189274547 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.78393118 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.83903686 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490597274 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.126227213 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153815624 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127494547 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.287137815 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162582629 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.118783432 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08201866 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.179768758 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.350123969 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475485916 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.927143396 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.0823864 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.120077603 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.093309761 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681337835 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07700827 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121485218 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.511266514 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.103897904 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099208008 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140686753 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.201312254 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115475171 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168548501 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.084594199 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.677760421 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097859755 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.175897585 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.080332354 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166744393 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194369624 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077100326 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107096559 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672390723 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188393353 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108751183 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103522563 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671400973 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077663517 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.201222497 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.096408977 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085053811 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.176411608 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.104989721 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.090616778 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083659034 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.097046246 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.155351889 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.451263195 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10515887 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140617924 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093520939 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.684312487 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09190398 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152236595 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.134847516 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.11340783 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.078022776 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088407751 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17233129 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.091040342 seconds)
  done (took 19.318032122 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112211632 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13635268 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075632928 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.153315552 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136103912 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078893717 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098067871 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076371828 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122095007 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18070835 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115269133 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14060417 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090567365 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078804154 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115443696 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230178041 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120123244 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11864897 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0803691 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102570664 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119802442 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112211871 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090400386 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106251034 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166413005 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20447537 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108005462 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126127033 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078520057 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110284571 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141129768 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.156965745 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075762669 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075813359 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176277589 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120973558 seconds)
  done (took 5.040111412 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19191876 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09985999 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170997588 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164394516 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145537882 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.154613677 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111789679 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262050331 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.192005156 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160688257 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128692396 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112071478 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077913017 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098741424 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077106531 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153545066 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671865461 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112348777 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164449959 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114075113 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079712607 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098645984 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081834693 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092424847 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078710396 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.130538632 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.324861731 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142982134 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097729982 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.210242259 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095849067 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09831843 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097710598 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113189871 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208836522 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075170142 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127233733 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131018252 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078248819 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072247278 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181053084 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100118883 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076081612 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120661023 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130812039 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116213885 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091540431 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077263878 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222001444 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.075654433 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089438211 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.015149423 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073458458 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176976668 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088447797 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.090145186 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331458785 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095054096 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094189617 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.074562428 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282789327 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11016651 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093960365 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075584139 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095592004 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07811694 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394059694 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093137734 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.741665641 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079010545 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.087555059 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094326812 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093035427 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084251204 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082497259 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113619271 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076078383 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096293192 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075690188 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09287731 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077512725 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112704453 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082800128 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09414924 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145022868 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.090984968 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096546868 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124345636 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079037362 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093004524 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126013693 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078965662 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075296211 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134372545 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075868927 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114884869 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095439953 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139077821 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07770507 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17599488 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074568143 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121618378 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081306792 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126995857 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.108014382 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078244279 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100176959 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074500411 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091342909 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145047819 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076409518 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094865477 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08000627 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107969588 seconds)
  done (took 22.35124264 seconds)
done (took 47.396370417 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.397989755 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107821478 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107577956 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108448888 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105497421 seconds)
  done (took 1.590280494 seconds)
done (took 2.334093571 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317105917 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175217492 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091933192 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17027798 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072321282 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194915399 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160182303 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092116885 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204444947 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07369968 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165547245 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072361742 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091525773 seconds)
  done (took 2.645836569 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08973965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116872167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079516832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089708063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090319065 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09026759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105629937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119484047 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105747943 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083913868 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090037193 seconds)
  done (took 1.80378039 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089239948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097520358 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096776705 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088512429 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090481826 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090622387 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106181515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100677585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105706606 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08416544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089741221 seconds)
  done (took 1.776203926 seconds)
done (took 6.959805942 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.070816674 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.207370065 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120844392 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167369035 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.334320492 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214582547 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.591383844 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132592437 seconds)
  done (took 15.756071772 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109930546 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097079814 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092640894 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099888521 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079817635 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09833365 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078447574 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080106021 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093408208 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079689292 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093293424 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079849367 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092918963 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077492583 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093405043 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080648125 seconds)
  done (took 2.232813813 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114320261 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.113403155 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102512608 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086232023 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10021971 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081581155 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102791994 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.083593831 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09752569 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.081741937 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103217605 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08539958 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101319389 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079613731 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100692068 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.086385104 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098322884 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084799882 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102611357 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101636365 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087187008 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09832845 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084931115 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101837311 seconds)
  done (took 3.133267151 seconds)
done (took 21.860673062 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161679226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083059268 seconds)
  done (took 0.986934653 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096770201 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116611976 seconds)
  done (took 0.967243924 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102424357 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095816662 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133300092 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095706785 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097656101 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079204773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.1282845 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09703568 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080320606 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079039652 seconds)
  done (took 1.742901357 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081749714 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082833286 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104429708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116292337 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.090997872 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097692624 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083914089 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099935745 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08442489 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094267707 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086859544 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112268887 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085847138 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114646831 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100786842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084986936 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105220663 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083003003 seconds)
  done (took 2.467642781 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077331923 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08155416 seconds)
  done (took 0.91534369 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079555163 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0770515 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097863262 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097261563 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077877906 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076338164 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093991006 seconds)
  done (took 1.356558298 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.455256708 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125964084 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290241732 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082059724 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120012727 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.330772628 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07574943 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102643762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.082557347 seconds)
  done (took 2.466250665 seconds)
done (took 11.65401429 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088231887 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127563856 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.470380494 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.099321521 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093267503 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.142602937 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.256529198 seconds)
done (took 2.039937903 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331621947 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115125756 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.070339379 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0937092 seconds)
  done (took 1.361899433 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075049474 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079548726 seconds)
  done (took 0.914074451 seconds)
done (took 3.039858439 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075868 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.126349594 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076488617 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076684255 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.093919678 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07619607 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.0932844 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074424011 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076250511 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093130519 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076876478 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093362532 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.076830505 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.075501421 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093593783 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073657341 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090676066 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076533508 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073221323 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091058002 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074523917 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093092507 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.195929138 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073835127 seconds)
  done (took 2.910261862 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100413462 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09558866 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082412743 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099381889 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081225963 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099865847 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082025929 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094690732 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082618223 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09740217 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080993767 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097795308 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078582485 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098317285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078732564 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099199201 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082565721 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094851656 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079220009 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098443724 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082453907 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095430382 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080621902 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100725405 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081079749 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097843816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078758285 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094817752 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083079739 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097909671 seconds)
  done (took 3.459841406 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079993965 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072846379 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092242179 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081286561 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09174307 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07873096 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073624923 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092469404 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07903756 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092890979 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081383015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.074073665 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091768313 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079288014 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096820527 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078927628 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105463246 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074547927 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074662991 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097056068 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07672932 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091751751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077106979 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073684061 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09266925 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07370256 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09218347 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074591094 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074557576 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091858485 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077121632 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095758394 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074657687 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08065748 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095961389 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.074137588 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095426973 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074450515 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078822068 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091960267 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07377312 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092078223 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.074759525 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081894387 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096122581 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076881927 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09292776 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07901694 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078067274 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100111436 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074263071 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09217307 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080117381 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096715098 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079176192 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07422117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092953093 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074830384 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096116838 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074295926 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073698006 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091333049 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.077160798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092396724 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091075954 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080847353 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091472229 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079951248 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096477317 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.076949172 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097426122 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090496144 seconds)
  done (took 6.83028413 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077888013 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103149268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077048474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076356418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091309173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075005954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100079576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074683136 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094797287 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09324126 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093252622 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076396512 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076057349 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096189897 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075564904 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094986912 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085215484 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091194913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.075300078 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096004606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075470849 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097915081 seconds)
  done (took 2.672221931 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218807417 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103587502 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139170448 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094285772 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113253241 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110674941 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082351746 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101760393 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082454426 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103166482 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086702992 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100012482 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112630543 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084607182 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102936126 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086016707 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100917002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087323774 seconds)
  done (took 2.681322301 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088480286 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09708794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101066738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095800032 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077903905 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097880152 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084447741 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111970195 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082439794 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09585289 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08836586 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098083709 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07959584 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095167916 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080188975 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077961239 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098380673 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077772289 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106218996 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101573061 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083929154 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106323691 seconds)
  done (took 2.803510713 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093032743 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097309583 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099530025 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099893241 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076720687 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096757281 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086147163 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096222315 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086568517 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097596274 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077491137 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078982072 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.103364392 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095579007 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085127146 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09619844 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08008463 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07827602 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097420763 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077299744 seconds)
  done (took 2.573485033 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116558013 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110455142 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092960292 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121735875 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092766514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110663391 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122405135 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092583146 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110137978 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105636499 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110511192 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092381734 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12174681 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121682848 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093151307 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121473272 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103777231 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121698588 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110957568 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092849748 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123271614 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092793387 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122653898 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111071683 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092313125 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110775843 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093412755 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118326722 seconds)
  done (took 3.80975913 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07534274 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077078136 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094316833 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074921415 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.075333714 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093673902 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075022716 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093864186 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07771828 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075327747 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09592112 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078192446 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096355459 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07692825 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078144762 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095894482 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0774242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092804392 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076213271 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075617738 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095838652 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077790337 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095870799 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075756257 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075430209 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095558529 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074958152 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093916879 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078096342 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075171024 seconds)
  done (took 3.274764667 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083661778 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101216571 seconds)
  done (took 0.970210449 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073897881 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113196013 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075373064 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08200177 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102530024 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078817901 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106099717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083425606 seconds)
  done (took 1.494844098 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095091353 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116061206 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084437451 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109391647 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096665355 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113388602 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141501369 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103279726 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084898023 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094595804 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094950796 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096248697 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084502607 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078465954 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103490164 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085304873 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097940324 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089833223 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105533809 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081685863 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102607014 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090538915 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099543173 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.086402885 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098499302 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089850631 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10737534 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090117212 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10040012 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088766479 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084412554 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091151282 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084052886 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103473457 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079622864 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.115564671 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092261315 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100689489 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088208556 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105217613 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089161141 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095892214 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085117107 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102947768 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089602115 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085944507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104586262 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077583015 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094940059 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081463839 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096323567 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078913188 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073132273 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104449463 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084653534 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110805065 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082533889 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098991801 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082273777 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10079432 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086445934 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099245933 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081350066 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10154886 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08698183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082713634 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10492133 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077218458 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091335051 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080159751 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106620278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10276323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106724524 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085446311 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103952088 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079709964 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101215732 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085446875 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106167982 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087920602 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103094656 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087272374 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106275095 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079163435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08175163 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105330643 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081442533 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101305427 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076618995 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114324742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082013664 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098878241 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077034888 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107116643 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082950139 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083208169 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095190638 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087508977 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091728836 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084770507 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104246835 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079462887 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107810904 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085507502 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103980203 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087439815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089372413 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098445843 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082916445 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094467551 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085693094 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100014593 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085856737 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072832164 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101648718 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081409898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103846998 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088241727 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100669196 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083859735 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10662517 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086872553 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100305399 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075656512 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100756239 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084520419 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107601827 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087136408 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081455522 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096698287 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078142812 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102110143 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083872832 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103747132 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085354751 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101095273 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07382154 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080807608 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103681276 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087719002 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097771432 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.079272395 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103031351 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.079683424 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102406776 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085598551 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081836424 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097269288 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.084434554 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100354962 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077829735 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108779677 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082652778 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100821239 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083267258 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108673873 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081812909 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104256723 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083475258 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084125965 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104319725 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077970869 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09784714 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082290805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109019636 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081746348 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096804898 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075876984 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086234828 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095598979 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084320044 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09727277 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081399525 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104296989 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08083839 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083157905 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.099347249 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095266451 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11278609 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085467257 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104809024 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092524958 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103356765 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.081533274 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103400558 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086003027 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10475747 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087189266 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104434789 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085098245 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100908208 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076183172 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085336177 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106437398 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079880155 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099838931 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079037702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103406517 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087792079 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102919645 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086141279 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08206018 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09852377 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089979499 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101905476 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084994529 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098449355 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084679153 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107915092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.085697769 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086008427 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108819126 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082863796 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097887887 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089182118 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100800685 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086162773 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097168407 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077157594 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09689018 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087074452 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082865908 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101365286 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073993445 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105926958 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088114253 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099222477 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078635138 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103706804 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089864714 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081318807 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103343639 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08256029 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10533626 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094183439 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098327728 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08292078 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108386292 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084955784 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093259764 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08610597 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101576345 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.078885628 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083599586 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100691317 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083679724 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106864656 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08626285 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092815783 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08241487 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082902244 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097847289 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078781918 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107045745 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08406583 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101172861 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098544459 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105960106 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086396938 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102825862 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084807773 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105615964 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08633628 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102234722 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086902968 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082154238 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098223264 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082827104 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09787025 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080974731 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100508267 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085446787 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079822255 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10536442 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083740696 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099036018 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082443482 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105418212 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080936534 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09983641 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079472581 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083346635 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099451159 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080703202 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101697062 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078869779 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106525347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084927146 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107136835 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080260991 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076076404 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104622773 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083477301 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105216138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086928572 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106553418 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082544044 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103639113 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084250695 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109189091 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077562396 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089894444 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106139341 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080699746 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103306343 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08055013 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101580576 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079022254 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100607137 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086972641 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.080074057 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103362783 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0864522 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102383154 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081321111 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100929515 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086951028 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.080499366 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106048662 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074786355 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097952182 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079248217 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104649242 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088108045 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105035318 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083623178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082787374 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106643346 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08376546 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095902647 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088976202 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107474507 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086179143 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10876982 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079428138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101174579 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090870478 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09413992 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083033341 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081798426 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09697932 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08848869 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106245372 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.089613297 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099100822 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079054602 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076824815 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106023787 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083575892 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093957209 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081229277 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103184764 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082569044 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082805102 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105275737 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.083765146 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106708465 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088336808 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103775739 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082873061 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105193632 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.077934605 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079132084 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099063268 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08397378 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106503047 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077672574 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096849392 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084684949 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082308033 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.100952681 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085157751 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10166338 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089321057 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104454041 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083739885 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110629509 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074384481 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102670807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085535396 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08545947 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099155883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085283963 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104039432 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088155533 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107896323 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085806368 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100761976 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085389832 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081860135 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104686602 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085083025 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105369043 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079771539 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10821559 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090373148 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10103572 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083135594 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080774924 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100761604 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085774204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106759834 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083360575 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108643099 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084234777 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102250282 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087597215 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104987884 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085370506 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087059143 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102988176 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087504767 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099212088 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090345026 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.100285842 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088334176 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102574682 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078704801 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085219583 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105654032 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085001949 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106404753 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08797165 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100385278 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080095782 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102135153 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083908802 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110467109 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090257184 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083085015 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104675432 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080068513 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09793486 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087753882 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097802032 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083783358 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.083611229 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107223626 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08388458 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10119902 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0839492 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108649512 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087960494 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106258418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078980857 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106010909 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087684928 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102989275 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081924359 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.081320797 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107689121 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087678194 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102298244 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081065427 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109640583 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086029088 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107391252 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082931868 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100967308 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082118703 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079726898 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107580073 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083124791 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108179546 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.083480747 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107215492 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091580602 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09974282 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08119071 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110481409 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085140333 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107770085 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08057755 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081670389 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107588543 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087282253 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100014895 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080126773 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098053371 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084332954 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079663372 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099833974 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091771194 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108750388 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083347701 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104333679 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084359515 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099785167 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079249136 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0801928 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107761007 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083056261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110799543 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080441612 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100226456 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080636998 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105298749 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084352568 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084290981 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098680083 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079679094 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099153064 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.084617318 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10849725 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085076984 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085207523 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105758299 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083384734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101902487 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091776536 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09745791 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.085786969 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11296378 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087578366 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101621395 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088117858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109605203 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087680424 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100003161 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087682996 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084203333 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102028264 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087580491 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108124041 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096652108 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105300241 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08050818 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104617409 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084565183 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10068082 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089678591 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108353918 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088759922 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086361049 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104551364 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088079485 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10404404 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088212406 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103720458 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084169667 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104652958 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08230605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083406634 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099459093 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08808967 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108301446 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08641645 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109206674 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080603066 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111933242 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090400476 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105519806 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077758316 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080263751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100859109 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081038512 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10769567 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080175608 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103831628 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084725549 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084787903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102134342 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087945072 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103575938 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088487559 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105313715 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075700971 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.082794043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103980953 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082563253 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098145505 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087845156 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107773788 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088189101 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111446893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08206289 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.082473256 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103935313 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082942066 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101080212 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089007227 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104356563 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084367063 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080469814 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106740078 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087456009 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106080974 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088302556 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109187823 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084878136 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.109756914 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089478205 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098804346 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078893414 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107637329 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08278181 seconds)
  done (took 56.120587563 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127127087 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107061468 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076795015 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097871543 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124924876 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081639337 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076725449 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102045632 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081949157 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111426593 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076893181 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097106099 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117946117 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104714686 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12210634 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111371573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077247023 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101463827 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077570734 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102117786 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097996968 seconds)
  done (took 2.911990834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103538299 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11580394 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093524066 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120184362 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10822509 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096530921 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113503285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11501137 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099403771 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109361819 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118514866 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095624888 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.109400215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108678472 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089982503 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113026611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09930308 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107504183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117866269 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094585116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112398604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093205179 seconds)
  done (took 3.172146814 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090319034 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085181013 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106417193 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.077097793 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105736944 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076862791 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111240232 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.079799295 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090774115 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.100971913 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.080480735 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099811121 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085740533 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.076574723 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100288335 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.079679879 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110662964 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085423806 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107789262 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.079679062 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083468517 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100801185 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.080438123 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.100182968 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095052703 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107665861 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.085398619 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085437311 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101313357 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086281072 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099391791 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.083770692 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101621611 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080137134 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080282673 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105791006 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086294027 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09966201 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.082552827 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082072273 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101531408 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087156878 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103344298 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.082329813 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.078323326 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10371082 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08609472 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096705835 seconds)
  done (took 5.238994294 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.118472419 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134289083 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.107271365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145820337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121829309 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095306526 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107438629 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146052502 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080073502 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08412439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125083276 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120459194 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085836143 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113611748 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109536451 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08650386 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10682731 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081666774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111904897 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082170564 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111369611 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089041849 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120516766 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11777157 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090010871 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105052529 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082049815 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111695379 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117681858 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092600672 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111696279 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093644471 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121138085 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108248304 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081758261 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10871522 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103054997 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106455461 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088664304 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100362472 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088651335 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111651071 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088994894 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123128976 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106177805 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088365581 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106346126 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079468918 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118097355 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088769273 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11665908 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119163514 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091103049 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106209861 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091707098 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121394724 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106767177 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084043923 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109643826 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097026088 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100660544 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091943616 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118940231 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090092908 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116795126 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120766467 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.087189829 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111034653 seconds)
  done (took 8.098031131 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116319488 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112452309 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103300754 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124495896 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112068028 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091658288 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111116906 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091459058 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111610397 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118255744 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092697426 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159495907 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088970214 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118927215 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111638304 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091353059 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111497105 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091713245 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111310296 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091383063 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111887468 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123579356 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091163733 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122184331 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125479012 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08831628 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111529099 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091257962 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123517244 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089793705 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126187446 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112094453 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091413533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124571663 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124049832 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091138549 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106721595 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091389664 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111896068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09177995 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110651262 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123579227 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091790525 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108952444 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091737013 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112020765 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123302773 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104830272 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118671878 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119043281 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09228654 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123795425 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092251861 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113151946 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123189221 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132632102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103472679 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124233892 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111731211 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102958038 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124321687 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131602634 seconds)
  done (took 7.637215913 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115646381 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1188547 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124299566 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079016862 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101992163 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091494485 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10104014 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081195182 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117535486 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097240332 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120364511 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111258309 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095515668 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120915438 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090396406 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11594418 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111418294 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091169373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118888881 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110574274 seconds)
  done (took 2.962982057 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091582416 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123937727 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083795767 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111520775 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085992983 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111795228 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085573533 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106753177 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084402201 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10646581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096576992 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116370343 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084027997 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110872977 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116238091 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091700312 seconds)
  done (took 2.454876709 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104001826 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.1242618 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.106440615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110196607 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080116142 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108491157 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085464683 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100260062 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079536214 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.112476405 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08925127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109630712 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086443662 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.080572685 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105074812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089484016 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100338754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087484831 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107509549 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.107703099 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110050474 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086715354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108472093 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086271088 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10757562 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088944946 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110503237 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080770152 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10264049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086563371 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106951414 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091539485 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100853914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08792404 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102364607 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081098234 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085209391 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107316598 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088905249 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107534214 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081659581 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106888021 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085492561 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105633725 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079662934 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10769916 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079290317 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109550827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084772461 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085557699 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108605153 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09073834 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111780385 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.094233042 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114745489 seconds)
  done (took 6.204584361 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097854261 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107905743 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088262698 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101111449 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086519521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.090987094 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109888439 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08624996 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106623025 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080452843 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107297601 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088247704 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106889431 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087856246 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106852473 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087573998 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099598459 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086247403 seconds)
  done (took 2.583594023 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089361683 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082914987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111580713 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082743016 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105114051 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086387497 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100208519 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081586245 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080711399 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104611088 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083593076 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106735413 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081573067 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10664286 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083998135 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103819499 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086763477 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081491788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104628604 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07975862 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10618268 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082176936 seconds)
  done (took 2.890169369 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.0956152 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131271324 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094097486 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.139678896 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.083257843 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.081840096 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.115221584 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.082177385 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121919758 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.082992108 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.103072246 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.08298152 seconds)
  done (took 2.076364433 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108305059 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142562791 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085009919 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107838937 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097819384 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110806023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087970721 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109990857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122507209 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101169194 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111066493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123711341 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101972369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121421918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118123468 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09802434 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109995706 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0888599 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106772433 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132850659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089081509 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124656359 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109602509 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089588267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109576655 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100139854 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124324036 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122625442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089482299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124265881 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118477195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088893463 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124330982 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12246773 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087176458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124530931 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08904266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132121019 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118860991 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12139859 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086522179 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11914378 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102800247 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117526633 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122698071 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088802425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117982474 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109327384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089305549 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139211486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1192281 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100037987 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118188455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124281629 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102943127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140171249 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123461773 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121276044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119440497 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101689732 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121013747 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119815088 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099889856 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123378883 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118298083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122043847 seconds)
  done (took 8.230514033 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124201308 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10771848 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088843069 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123823122 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12127456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088971192 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112744557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08957376 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110128458 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08538878 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157627688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111487065 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122345286 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100506344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11112947 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089620636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111605015 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122710793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085783545 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138789917 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111328748 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101779253 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121731691 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121644441 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123819743 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098440694 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109802067 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088805025 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110040947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089385631 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117727079 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109590379 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101174332 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106864972 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122057738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089408238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111568931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096552749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11085964 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098343629 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12228977 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13285313 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110087178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090326004 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123417574 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089055907 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111307275 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085968196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111357993 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085761334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123092097 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123905572 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123273927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10020869 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110479856 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088395491 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111510235 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110656481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0897356 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118725156 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100303911 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111343294 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138819288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089509782 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111042593 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122633013 seconds)
  done (took 8.045246823 seconds)
done (took 152.870606947 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100894996 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139254276 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098783729 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168014631 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080133573 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118312654 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133222866 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09496641 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105714087 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08454604 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105779652 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086883428 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149301643 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102073923 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084570099 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108088978 seconds)
  done (took 2.620264197 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181015719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.285836221 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104020379 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.082183171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111874144 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084241507 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105206659 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09043514 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10714568 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.083862242 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084479309 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106822005 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084121485 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106298759 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086658601 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.084161427 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106728413 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084103448 seconds)
  done (took 2.84715178 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112919054 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145248055 seconds)
  done (took 1.130676689 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120868268 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176611132 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272238476 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156812124 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136076127 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098930352 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157735089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.358970854 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198310893 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126609097 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107248487 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113183279 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139271528 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095437853 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114376123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.090906694 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140850262 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091789083 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115586621 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092469975 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138835485 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084303765 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116749299 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09150825 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188521122 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128853026 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083977974 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106136646 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092442274 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11486908 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.090525205 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11983381 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128117555 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.149529704 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096551462 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172195925 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.092266233 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089396245 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114829553 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089144601 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118037863 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116837967 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.099079452 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.113040228 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084257119 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.090861504 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106479077 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083915592 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114549941 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.092761247 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114693036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.090701478 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149192809 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11467242 seconds)
  done (took 7.543335459 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799333271 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1472956 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08694232 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878853127 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134942807 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123540026 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768020043 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130618283 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226602039 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.794797736 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099918675 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124929549 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231107491 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234409022 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.928607687 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308834702 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673870904 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122642867 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112306898 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150891939 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117828317 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135131564 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107792116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428179557 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.107459675 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086697099 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116656456 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100466476 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160263972 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.110656007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089487453 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195849311 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24096781 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176825982 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10837394 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084584897 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109028621 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.164012502 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240463037 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210873124 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172226159 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083252337 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110015153 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101015123 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131280027 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085581983 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186247329 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170534958 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171020338 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115375027 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100894744 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120615641 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099578505 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160691167 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.110240835 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319620762 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285707963 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10643743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095837519 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128871871 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261177143 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087485753 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226684502 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135403358 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190364698 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110300382 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756294139 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160607569 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108821859 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096112257 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118490674 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093803071 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122534023 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165587593 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406391845 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103239833 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115442776 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089160217 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229362607 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088707023 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111363125 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1638232 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091742222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120425969 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103397986 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124224272 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16678395 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230613107 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124011077 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097260398 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11833865 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124731421 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091429507 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211727442 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220646236 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155563826 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211937644 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117451687 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159842937 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162204178 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122686959 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17149987 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096207356 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128394995 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123094977 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194225911 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.142078466 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.111560005 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09491541 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11983228 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14614976 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093760459 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119793331 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169656418 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461362169 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162751348 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108668212 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094639521 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121639891 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163438236 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096664581 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262360001 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095643759 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18635676 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096049256 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109423884 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097531631 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163775012 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124237125 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124493578 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101966625 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121505442 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23774796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219283196 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1011714 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242472678 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.154070272 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118358521 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168605029 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119042278 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169731997 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098600656 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12410046 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114889107 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752902029 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119511554 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095304826 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118072866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187411763 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090216432 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113666402 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091017202 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086721653 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782257897 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092378938 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111294535 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091923393 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121723744 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096929514 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119573522 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095067054 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185359009 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211595488 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123823339 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096254598 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113697353 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163563013 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09084042 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114536563 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090523469 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113623598 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098724808 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117741392 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091511942 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171997183 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.189577767 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.200549608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.592329651 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088330729 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11304302 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208871333 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113697398 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290688781 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093273037 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224643168 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161158624 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083457352 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317250656 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166247345 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186256863 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116219995 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173514402 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087363392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118881706 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163526846 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089644243 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122143662 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159081251 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129201126 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103626648 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.024336141 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084851529 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24483017 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08303659 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1649631 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114745367 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100472051 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301031924 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088264148 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130491869 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164010316 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118372943 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090779347 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.881214184 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087420958 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123102671 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099042592 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222832682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162236806 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11991885 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098498539 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124524421 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164044807 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210861168 seconds)
  done (took 43.126578122 seconds)
done (took 58.13581056 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267126827 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216935321 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.276304868 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173795822 seconds)
  done (took 1.928649362 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177326927 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.129133398 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.148546574 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108120474 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.131255048 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107196427 seconds)
  done (took 1.696319613 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.379182091 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282919711 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224951076 seconds)
  done (took 1.7845238 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252278909 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.275757292 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.334386492 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.405850209 seconds)
  done (took 2.269690936 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208343854 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.103462874 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126253526 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11624124 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.172047729 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209721747 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.145423822 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153703471 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.109946267 seconds)
  done (took 2.290701532 seconds)
done (took 10.871465359 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.253362258 seconds)
    (2/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.133734909 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.215968436 seconds)
    (4/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105999305 seconds)
    (5/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118563828 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105578591 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.238840071 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131622373 seconds)
    (9/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.244955889 seconds)
    (10/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.206913315 seconds)
    (11/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093462098 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100993226 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.19378206 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118087923 seconds)
    (15/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097366866 seconds)
    (16/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.20497354 seconds)
    (17/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09511032 seconds)
    (18/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.239492148 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137180241 seconds)
    (20/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139477888 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.193539153 seconds)
    (22/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.244286171 seconds)
    (23/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.18633807 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.111222456 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.073904649 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.236546183 seconds)
    (27/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141417819 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19486126 seconds)
    (29/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.190250296 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.223557854 seconds)
    (31/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118937311 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.208966573 seconds)
    (33/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.230224587 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123085239 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113883668 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120411315 seconds)
    (37/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207630541 seconds)
    (38/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101533064 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110168675 seconds)
    (40/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213722295 seconds)
    (41/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195157912 seconds)
    (42/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120106891 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093255774 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134319461 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087000307 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.130984261 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117174153 seconds)
    (48/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.187794363 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085820061 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107872873 seconds)
    (51/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087080791 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.152836762 seconds)
    (53/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076891993 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.150047487 seconds)
    (55/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096896769 seconds)
    (56/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200143718 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202709563 seconds)
    (58/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.183592442 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109750449 seconds)
    (60/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175595515 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116847291 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141680439 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.161166501 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109710915 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161631317 seconds)
    (66/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.125478984 seconds)
    (67/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.083252079 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119951026 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075883841 seconds)
    (70/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.153069694 seconds)
    (71/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.16175623 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.110550055 seconds)
    (73/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099318458 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116707736 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.170424346 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.214862938 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111537953 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109265486 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.103422392 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144203962 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110671875 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.083775434 seconds)
    (83/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184783585 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099139961 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.100732778 seconds)
    (86/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172149528 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121951396 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0993614 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075722233 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14015184 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092275199 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122175985 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085681244 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.105806967 seconds)
    (95/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105318405 seconds)
    (96/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139574726 seconds)
    (97/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.088288472 seconds)
    (98/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12293737 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.074863112 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079575585 seconds)
    (101/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198620613 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110853305 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094728067 seconds)
    (104/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.245280762 seconds)
    (105/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094461026 seconds)
    (106/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.168715732 seconds)
    (107/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192481015 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087930931 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138689445 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094151152 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185403251 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076496278 seconds)
    (113/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134172891 seconds)
    (114/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.126854349 seconds)
    (115/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.11438278 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086317497 seconds)
    (117/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118122199 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077631985 seconds)
    (119/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.183442647 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.185506516 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097453361 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094227946 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.101386475 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092773542 seconds)
    (125/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.108798267 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093206716 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093782061 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124315253 seconds)
    (129/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183768987 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114362274 seconds)
    (131/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.200889503 seconds)
    (132/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08878636 seconds)
    (133/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.20194146 seconds)
    (134/286) benchmarking ("sort", Int8, false)...
    done (took 0.195844417 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119632087 seconds)
    (136/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075068714 seconds)
    (137/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.202949318 seconds)
    (138/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093599458 seconds)
    (139/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087129669 seconds)
    (140/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.099310726 seconds)
    (141/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10460344 seconds)
    (142/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139914088 seconds)
    (143/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123646601 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087428399 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094636841 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11005096 seconds)
    (147/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136155454 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.143397891 seconds)
    (149/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.076553815 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109195788 seconds)
    (151/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.084861533 seconds)
    (152/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097104144 seconds)
    (153/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.15101872 seconds)
    (154/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075549349 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109991283 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.184358741 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.172190076 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11521062 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097630656 seconds)
    (160/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.104311107 seconds)
    (161/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.14055524 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.099372995 seconds)
    (163/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096844108 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087174251 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125888364 seconds)
    (166/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.117865807 seconds)
    (167/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112976545 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075108129 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110940612 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075846832 seconds)
    (171/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092698931 seconds)
    (172/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11798822 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11303636 seconds)
    (174/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.112652411 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080851953 seconds)
    (176/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.12079616 seconds)
    (177/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088075517 seconds)
    (178/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.074501403 seconds)
    (179/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184326917 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126588275 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075517088 seconds)
    (182/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.083473638 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117236934 seconds)
    (184/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100057975 seconds)
    (185/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097448211 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123740285 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195973515 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113866731 seconds)
    (189/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112435674 seconds)
    (190/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073831433 seconds)
    (191/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152963776 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.178366037 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.232019018 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109886995 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.140101172 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113639202 seconds)
    (197/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.074619755 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088383577 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120947113 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095126397 seconds)
    (201/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.165829102 seconds)
    (202/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088311577 seconds)
    (203/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.100085275 seconds)
    (204/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.076257372 seconds)
    (205/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075035366 seconds)
    (206/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107814472 seconds)
    (207/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074521661 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136337406 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.083033188 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.076818883 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11263566 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085436485 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.193960672 seconds)
    (214/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091511541 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.180003513 seconds)
    (216/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074456748 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115324506 seconds)
    (218/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248896364 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085559024 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111311306 seconds)
    (221/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075285559 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086581597 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135881322 seconds)
    (224/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07663443 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.099047147 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093568876 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090769828 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110802062 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113705512 seconds)
    (230/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.109738535 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086496028 seconds)
    (232/286) benchmarking ("sort", Float32, true)...
    done (took 0.241561061 seconds)
    (233/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.198612137 seconds)
    (234/286) benchmarking ("sort", Float64, true)...
    done (took 0.24372329 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.077776088 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078327293 seconds)
    (237/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.103666279 seconds)
    (238/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097833233 seconds)
    (239/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111440174 seconds)
    (240/286) benchmarking ("sort", Int8, true)...
    done (took 0.207264668 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113448588 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087117053 seconds)
    (243/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.109091336 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087024927 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139400088 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.07587648 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093770351 seconds)
    (248/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100813895 seconds)
    (249/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090452496 seconds)
    (250/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100922768 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093651995 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100668703 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119955651 seconds)
    (254/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088470907 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.102310843 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101550525 seconds)
    (257/286) benchmarking ("sort", Float64, false)...
    done (took 0.176230181 seconds)
    (258/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078156056 seconds)
    (259/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111338013 seconds)
    (260/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085444235 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086999057 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.113756607 seconds)
    (263/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087252658 seconds)
    (264/286) benchmarking ("sort", BigInt, false)...
    done (took 0.232549302 seconds)
    (265/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.109436203 seconds)
    (266/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075457503 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094960581 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.114136118 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085650466 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110641894 seconds)
    (271/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075650898 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087350384 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12026255 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086813325 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110332985 seconds)
    (276/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075963286 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077540858 seconds)
    (278/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.099565227 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.085908951 seconds)
    (280/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.075309235 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112888047 seconds)
    (282/286) benchmarking ("sort", Float32, false)...
    done (took 0.153467842 seconds)
    (283/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116545797 seconds)
    (284/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.075471682 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100291847 seconds)
    (286/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093684637 seconds)
  done (took 36.845855824 seconds)
done (took 37.757151711 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099503571 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15366558 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097081576 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141930135 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100743007 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12717369 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095840334 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099688342 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126158867 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.102304155 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.123601235 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07806413 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123030059 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098616481 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122699816 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119716069 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124495299 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093968748 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.115684863 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086479301 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09115497 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111791927 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088760321 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.077598657 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12413047 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095250527 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119231403 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.09881724 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.109465576 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082952306 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083425701 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117637595 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085974531 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125283154 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093519529 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.115166364 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098631113 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097161548 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108849933 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084168002 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118109043 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.084797486 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093697761 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.1206075 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088679712 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111219534 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.090433165 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127139079 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119721591 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117536826 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096038011 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097497113 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122861045 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.092788818 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.111353284 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091223 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.111397859 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120476862 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.115317327 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094027498 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095117993 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120812547 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086737145 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.115672384 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.089907202 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097684478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123625328 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.084908511 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122051648 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.092877127 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112536755 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091371199 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086450739 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112306124 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097566899 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122717493 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086517729 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0889779 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119357518 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093225224 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11166377 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091331031 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089024889 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114005816 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092582611 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101542793 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.087083776 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093775456 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111837236 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09130774 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118583993 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094173041 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089390154 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124867714 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086782785 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112078714 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087713462 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087634189 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115060846 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.087120378 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112737532 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091183558 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095923466 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113917381 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089080135 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125011508 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088082008 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.093511806 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.111943264 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.087850359 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128705426 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098074353 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112209288 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094063594 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086294876 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115018698 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087680166 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111773245 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087568167 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08743822 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114451665 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087534625 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116832753 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089171579 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102442767 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.112645594 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.087161571 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115884194 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087048804 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093577813 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113480266 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088001064 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114371048 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086037321 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091387938 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113145773 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.089601946 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132796218 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091172722 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089882697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.116495134 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092244481 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112172429 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.084340058 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084676072 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.10735236 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093793321 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113687619 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087544249 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08908038 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114898168 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087304733 seconds)
done (took 16.570478561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086411439 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191452049 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151322636 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124008296 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.136604095 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.088282926 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124895348 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122697499 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115664254 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.147799047 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111008596 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134983959 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129485502 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11292619 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.08860964 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092045822 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11533735 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.106406539 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154944515 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134819341 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126836323 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.111921672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121129227 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138909155 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097482118 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142731542 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088806603 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117272024 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092131056 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131683367 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110702752 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117088295 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089537947 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137934693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107604675 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097449648 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113852507 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095992889 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112915152 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088886861 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14045704 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112305445 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.120324336 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094207464 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117733967 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091651391 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089576428 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123354729 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100467924 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118883292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104483697 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140284453 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111494121 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092913243 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106656192 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.096674952 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122184732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089669162 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088672282 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116659163 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088167115 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117056302 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10542998 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140534327 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091957398 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123322742 seconds)
  done (took 8.505592552 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103586457 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135778362 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100386462 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126638191 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082396472 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082903485 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108404819 seconds)
  done (took 1.697752083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084400035 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113014434 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.141952747 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115220391 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13943421 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133290774 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094660671 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089262117 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136958221 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088541673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13932269 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133073154 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.119814014 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096383323 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140972064 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086221142 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140258562 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087659949 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11885974 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117306735 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119124444 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109720889 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11760479 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.087097122 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106180579 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116221295 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158788803 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092781535 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087304786 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119310343 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087769957 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15806993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107939099 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125122088 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089346004 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133860474 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107937224 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112932279 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.105509706 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120547795 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.105888695 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0892939 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116729375 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088120132 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120702401 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10146459 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092578592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11164107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087664408 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131971906 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.086530074 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127727829 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087916037 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094105064 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11045122 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089588878 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119820632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.085303077 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133965804 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084903764 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130281896 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104709709 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133931973 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110831219 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099143479 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.131257404 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106632717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118687457 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090643821 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117853207 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108145152 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112528567 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089237328 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099867069 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11374394 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112716819 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139027906 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086862551 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122628505 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085075803 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108273105 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084727995 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110277164 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113958812 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083604872 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112935051 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086778875 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.081789189 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107927452 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087662729 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106646281 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085740813 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086360489 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.109552351 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088042786 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129356182 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085202284 seconds)
  done (took 11.493364543 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0864694 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085588345 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113850506 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086560776 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110640295 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086900148 seconds)
  done (took 1.538568885 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114152405 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.110970004 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098984761 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114598422 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.126707557 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135953002 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.113660903 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125210124 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105638375 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.123247485 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109272747 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137040639 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140768264 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090558623 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13421709 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090818662 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.112040621 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118415959 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.096920071 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116084699 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101847813 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115612379 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090562042 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129091573 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096123649 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11536461 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090572436 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121796385 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.096083853 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.119547323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.08996927 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119852424 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090946767 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118041173 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110318689 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.118478406 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089017611 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121568414 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091903608 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120660206 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111225673 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119359499 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.097776898 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123071594 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093302313 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11510206 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096800202 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116390792 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110224059 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123469011 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096810146 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114698032 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09482628 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121928864 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090340865 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117971705 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097305644 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.134374719 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.090313031 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.115094206 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.087937354 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119712151 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093046094 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119648255 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094692063 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121412371 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090595677 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115220865 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091105164 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.091028093 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123414683 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086286963 seconds)
  done (took 8.847361519 seconds)
done (took 33.042797342 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.680749879 seconds)
  done (took 1.644595113 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816665557 seconds)
  done (took 1.784895974 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.81233227 seconds)
  done (took 17.802828459 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.458397625 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.547010412 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.959732026 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160346262 seconds)
  done (took 3.089409389 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941559551 seconds)
  done (took 1.923196188 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285381607 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231866239 seconds)
  done (took 1.48599986 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766440377 seconds)
  done (took 1.747708037 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.413424273 seconds)
  done (took 2.391350583 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323795551 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154427402 seconds)
  done (took 1.468091858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553611158 seconds)
  done (took 1.540850944 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.866952917 seconds)
  done (took 15.859229638 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236439198 seconds)
  done (took 1.230808283 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293780865 seconds)
  done (took 1.276904033 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.493407476 seconds)
  done (took 4.477589865 seconds)
done (took 58.699567194 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093759091 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096700121 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122783316 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094596861 seconds)
  done (took 1.388785166 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099013593 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.090405591 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124204668 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089760152 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125677514 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090736883 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119067339 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164030763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.090024278 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091587254 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116512189 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089483247 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118994154 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093236129 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113995809 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096040463 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124396331 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090601098 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120441429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092118349 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11407458 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.093066233 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093743383 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115944915 seconds)
  done (took 3.54901634 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095637229 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088959451 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116549422 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088329868 seconds)
  done (took 1.383249941 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096105386 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102031923 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.126048661 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094550352 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128405124 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.101471161 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.1129221 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086950717 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11500493 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.097056683 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.08723018 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134739895 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128583959 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094596371 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.121713572 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087958231 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.087858705 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.128387771 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094980207 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121846065 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087912038 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120701294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085476819 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12918493 seconds)
  done (took 3.568430071 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165589685 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.123246399 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108686937 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116560755 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129928848 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137532687 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08351773 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135832263 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082275699 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126361965 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086857943 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161058308 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096864714 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108579552 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.082682058 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082508387 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121420905 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095571185 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111608108 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096896679 seconds)
  done (took 3.246800148 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093062175 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087464063 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10917137 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087565005 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119831153 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09032584 seconds)
  done (took 1.590732642 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085746091 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08482985 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111280014 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085544483 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.08919822 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.110610683 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083646743 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110772428 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085646335 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084426583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.111326563 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084091762 seconds)
  done (took 2.130863436 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.373470124 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116314116 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.086328036 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106971383 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09220835 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.109270412 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.098619167 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086013432 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141219839 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082683569 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.110755926 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086581192 seconds)
  done (took 2.494585564 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203182366 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094036368 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257859952 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351330434 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154618194 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170089294 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274908697 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166598952 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179244367 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134122952 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189345435 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128245923 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150900853 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174230192 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136616491 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.133819669 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169821093 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220772832 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118064943 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199318435 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159778071 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161937143 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175855004 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148434747 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133866241 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127735551 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116577144 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09883247 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168287844 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162927391 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193898268 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119457573 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137317442 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195862697 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23158735 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177414174 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297952874 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10418019 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174661577 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162122132 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246342383 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11171781 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18901827 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150216589 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126865345 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179048281 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154024931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17801725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101379628 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139084 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176284817 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173084608 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175111721 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134505894 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29808644 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145162794 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115685685 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177944589 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20656281 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185588699 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135948365 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.114371721 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180362238 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175854086 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174139273 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142405247 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162905648 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09476163 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168926639 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189311721 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170829095 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159553412 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208395488 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131161026 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133633747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165552668 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149124434 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174634414 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156571546 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.090653926 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147316955 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133180121 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09821144 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189779251 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093394165 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199240886 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132057097 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.175912918 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198689839 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155185876 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157641346 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160502816 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16086582 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117529247 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113537813 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116082145 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14878671 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152416117 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103257845 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153726919 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141670408 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.097527452 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147034228 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119903378 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12869224 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123937093 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160936794 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160147269 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094544291 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161691171 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146152263 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.120063744 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164404403 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18043112 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130710977 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129229039 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190028695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127177986 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131372098 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170805797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181876618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152961382 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106850094 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164042067 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188371724 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138052516 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184032479 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137803033 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102980127 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136988994 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154798855 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153210875 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128159438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127085296 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149090803 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186284542 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092289167 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13497006 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17113469 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096387261 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126175399 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139293803 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104157937 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133661433 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110612885 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133285069 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152585721 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155863946 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123039529 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150217752 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139740797 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184680517 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13040369 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.11972188 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143652707 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116383052 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175287318 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180696348 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098990219 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193163801 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164127838 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217712846 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159357808 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100339245 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176559054 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125866757 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088245682 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160867855 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157707198 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157550491 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179265586 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18818169 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162011513 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150262824 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117117117 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159283135 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159742491 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15273121 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.134166627 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13105366 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153934486 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.11946606 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093707552 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124648337 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11147849 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127684928 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129363591 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177986306 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159584041 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182051093 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156788301 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110796023 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176701864 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124225293 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160932748 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168983862 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108301781 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178724805 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175989843 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163210476 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140810562 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169581069 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088627649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12103327 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130063814 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133337873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130272326 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103740459 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138800763 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177173379 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168549095 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146745568 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195495882 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160373758 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186348614 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118029489 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.135776875 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163426669 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153977736 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171911016 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105251503 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.147141513 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173491379 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110446886 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212620667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130421775 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163684287 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220014923 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.119047533 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127544355 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147043385 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16141429 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109572994 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163530709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142604442 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104522345 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14777907 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123161978 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094928643 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168652554 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141708084 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172987905 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144184073 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163751789 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095228685 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14019914 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15680449 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114583799 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112003019 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162859975 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180442363 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141071771 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153587859 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140766879 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12777472 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304891659 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182513906 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179760233 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13420972 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110724121 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158100688 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156965151 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159378033 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174294006 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143498927 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175579432 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126615502 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133494322 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104636021 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143811955 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146732136 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136311047 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101790355 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149604443 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104657558 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198870368 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110846051 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155243301 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161686966 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.11827934 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139979204 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139229874 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19705146 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15439012 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173133561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.117842542 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162762758 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192995669 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121802305 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097372943 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125183684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17433472 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101460332 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156013042 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182646262 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216667717 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12877392 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159462064 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136257162 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087139047 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156140873 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146177379 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193528532 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138191501 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13409776 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182132452 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112698416 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128163318 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159109154 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280789087 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114082849 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168904221 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111227354 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267769132 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095328572 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126447174 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128408278 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166446791 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135437683 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169530332 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134325126 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141414377 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157272179 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133974615 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182225612 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199021306 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165464955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168516459 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.100694219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153634665 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159664181 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171762348 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142031538 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105644743 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159287395 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17795829 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183538438 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130437649 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15936315 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158699476 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127834695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164503318 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13098267 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193076791 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128284297 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161758345 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108713396 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122852211 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154334461 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.180580611 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102735367 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164572227 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154310947 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130660051 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09579533 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14849955 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154696517 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137253526 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.095686844 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167905637 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092149533 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159338788 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177278758 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127727447 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122723891 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143631744 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13537837 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111946879 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14311702 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133267069 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.132842849 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176664851 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127866001 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171886966 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17107018 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159551641 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154647382 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112180025 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664326134 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096760917 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17724348 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144206903 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180855674 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145258742 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163255395 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128950124 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146406856 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162902321 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146154402 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226098374 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161270379 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.126849845 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127927219 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142176588 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110877566 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128828168 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147137746 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130163687 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137719885 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133990623 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154636757 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113237761 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.130357763 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107613515 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179157705 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143683511 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171830732 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17635011 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133242534 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134275609 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191197189 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09954168 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157405386 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167682732 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109872617 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146809758 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129493395 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102819558 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17633556 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.121133682 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156848209 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127673137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157252978 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160139091 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130640051 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12696264 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139606635 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157436081 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127018841 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.122188474 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153636753 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128293495 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.09609238 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155395762 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151102262 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.118211365 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123009448 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135668647 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172566479 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120231512 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100824444 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281867561 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149777202 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187084868 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.140186928 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102113446 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139919363 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143809309 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149081478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128162723 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126147534 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100827027 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128086286 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161206028 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111607615 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153869459 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180474291 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155146629 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194704728 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131865918 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243807687 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13639888 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150524585 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091835204 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126188027 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111466455 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132023009 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138263255 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183245378 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174238112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.114493712 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12956105 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095308957 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.121954184 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102321319 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158520791 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150016205 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154709504 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111934686 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111094607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111788017 seconds)
  done (took 73.129517345 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142622114 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.126404355 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144055567 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196264794 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162419321 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248198789 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205307944 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231716476 seconds)
  done (took 2.544654059 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.088476221 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14973388 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.128589695 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.086953468 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112994535 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.297656674 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.12973033 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.110828943 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.115328793 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.13156429 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113017814 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.518411251 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.090900434 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.116657285 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.107060094 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.087040284 seconds)
  done (took 3.464484833 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.19822002 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.475248533 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.927639021 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189161204 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.173665321 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091023745 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.699192163 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090417817 seconds)
  done (took 11.926350937 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118576788 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.114271154 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159966006 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16673861 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.124574774 seconds)
  done (took 1.777767301 seconds)
done (took 113.178210643 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092778165 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095524287 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121681944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096765842 seconds)
  done (took 1.480492681 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099579664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072873526 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106202695 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076600053 seconds)
  done (took 1.442380011 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.408428312 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074891994 seconds)
  done (took 1.603065957 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.10901277 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127561961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100524391 seconds)
  done (took 1.43440292 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.09972515 seconds)
  done (took 1.190553799 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092943688 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094202025 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135688436 seconds)
  done (took 1.41575516 seconds)
done (took 9.658547388 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102460583 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428926024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.380905667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133341737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.689505613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404931219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001066882 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144228568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158504739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089409577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132301522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668942934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018510355 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339620751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97826781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367307438 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668952286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115894482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087026407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115169214 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986345059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086504688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116462649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088693054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696244082 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392139243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116159047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.33853009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087217863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1215408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373481362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117122931 seconds)
  done (took 16.627311696 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094583666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174297996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.093714463 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118292999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.090201867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088775974 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119530369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088511154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173195231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1163158 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105165034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087812597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120079217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088855081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136361961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087605489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117548071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089128197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087307516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116653469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106878353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11643698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088043207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116686317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089247615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128375486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089524082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087068363 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116730686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093820361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118822405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088566355 seconds)
  done (took 4.52606151 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139566808 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183943204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094548357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151306805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164565938 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090985553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196637235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143773417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148176693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117132583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104947359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11700527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12235457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118371844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108611884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117084369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089150344 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116519554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087919295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089323076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135625279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087094266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117016683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087992269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1162934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101666125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117327484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088870005 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087840589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121240778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09269022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117539354 seconds)
  done (took 4.87438713 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092450826 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093147691 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132928221 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.108571336 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122306648 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091458126 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120259732 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089899512 seconds)
  done (took 1.94701672 seconds)
done (took 29.068484561 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107398015 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.097914178 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.135271024 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101223527 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126825459 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100356984 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115919944 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099402492 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.10057091 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125514203 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106537111 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115578492 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089041364 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11540668 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101573934 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095805041 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130728317 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098922781 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131784878 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102306633 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118276812 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100871337 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099647199 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131297275 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102215655 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131165571 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103865307 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125591745 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.08895665 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118941993 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.102003002 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.144704745 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096737203 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.133851985 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092640676 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092168559 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118759693 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089487408 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130052509 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099212224 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12370669 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100560574 seconds)
  done (took 5.733255967 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.113475525 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.158262779 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.09306265 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118184607 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.090414681 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.149330228 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.121398773 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.121872584 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089286941 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.139852499 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.112115133 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.088805525 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118605686 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089606205 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.117382692 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.090342481 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140123868 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.113546602 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.146293877 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.114516392 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.156814266 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.1188089 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.150809713 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.139720993 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.12618261 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.151278086 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.108140077 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.151408643 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.142333371 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.088452282 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.116059014 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.143522017 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095028926 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118110989 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.126880817 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.14803742 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.147244558 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123137572 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.142663762 seconds)
  done (took 5.931646603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094976184 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102205407 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139142007 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.177702173 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124901989 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125109656 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.09715684 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.1352359 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103476889 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086569206 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119032569 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.114863438 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134356102 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095809584 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.116554375 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102952391 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.101448532 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090208206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093243153 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13749933 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105853709 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127408185 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099540461 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130202631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087475179 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090228696 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.118964104 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103981486 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.128153945 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095733113 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.120645906 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.091551649 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089741389 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128202499 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092672952 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118018165 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10699976 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126423126 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096971401 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.116912027 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096395833 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088184608 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138142281 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126904238 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.11696949 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.09482985 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124726369 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098003471 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.116816387 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106490426 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097270803 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116622439 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09067603 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.116800239 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088013339 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130360901 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090377101 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089150702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129219574 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094204917 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.128994309 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.091968948 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102018411 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117215735 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095489214 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116492847 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088599579 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115031537 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110618075 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.089353876 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15607922 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.091787378 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.118410552 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096609745 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124497638 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095612019 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117219783 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10309386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097994867 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12032242 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.097944858 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.119157421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091788413 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135016203 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091136118 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.089871696 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.118952505 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094899774 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119467886 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089079272 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101175497 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.120833771 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.090734493 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.134376623 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087684011 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119351808 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094849405 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.092797895 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.116781266 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100733569 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123736808 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088370472 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128043646 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.087646437 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119987814 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098012899 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092459756 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116960322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092526083 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123973836 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089071121 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.118166713 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091525593 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.089716565 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127417949 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096177511 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120967004 seconds)
  done (took 13.853426126 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227715709 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212605905 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181234289 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261038376 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.140487774 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.142994952 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178342903 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157656569 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118287578 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.125471172 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170204464 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180243934 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167994558 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180016139 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.166958426 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.08789041 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137424274 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133378396 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211908599 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287037194 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108545902 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127275332 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158259965 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.125683365 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132490543 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098179495 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136391506 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132832557 seconds)
  done (took 5.608095619 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106172518 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151498369 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094259812 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141046959 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114732607 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118774141 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093737201 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120223345 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101579657 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133931012 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.08850599 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124297004 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096627813 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.098255842 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119775582 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098526115 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129246818 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089814885 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121348949 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093634412 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.09941021 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136259693 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093132621 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.118462869 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097930125 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118810703 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08995877 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139897276 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089111797 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141687133 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086517359 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127963339 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102490745 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119463464 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.08899009 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090683022 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120975862 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091002901 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120038308 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08760257 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0867242 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110887783 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088439563 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133934388 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094841523 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113179125 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095699217 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123629435 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089979359 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086714203 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121492751 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091801347 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.091754086 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126115922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091562767 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120098532 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09184805 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119352358 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09616763 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091018864 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117868094 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088015438 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123502443 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092889215 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126908094 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094099556 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.087577475 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.120809026 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093443213 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124566627 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091782862 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095013465 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116656199 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091347108 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122353188 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094967414 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092780005 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117406752 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088441347 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118996764 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078259741 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08961328 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107295893 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092608574 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.117074723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087988689 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091071826 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124655469 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105435754 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120617137 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097943536 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120211472 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088294126 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.092185411 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115637902 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092433278 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135948503 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138499442 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089173722 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086870023 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134837328 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091528074 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118114769 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079373095 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.098626055 seconds)
  done (took 12.283397754 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.124346194 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.168110854 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090731436 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138379335 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124487164 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15779828 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096135428 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126754139 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090939085 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138760783 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.089343755 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.12710861 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.089157666 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103415254 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15531167 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129449114 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091356404 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104120213 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124079043 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167951567 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108695618 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.16051583 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.1542185 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089839427 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095256752 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.154479161 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158104801 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.105213447 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132533015 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.127164578 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133853125 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.127608341 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.15775695 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125041988 seconds)
  done (took 5.408127241 seconds)
done (took 49.92267202 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.198972583 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.417222639 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.190858334 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.197091527 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.20668667 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.22243623 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19818585 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.194286016 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.93026181 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.200130402 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.195723128 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.195743444 seconds)
done (took 27.47249006 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.27322926 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360876321 seconds)
    (2/2) benchmarking "String"...
    done (took 1.533031528 seconds)
  done (took 4.014810085 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.200435662 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.195837411 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.438688771 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.194871676 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.209774626 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20472516 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.195535765 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.202858445 seconds)
  done (took 15.763232546 seconds)
done (took 25.375667063 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.256975809 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.371962832 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.458196006 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.205193848 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.193040236 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.192600058 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.197734206 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.22573518 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.208074659 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.199325052 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.191443584 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.459268694 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.226019322 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.580645675 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.193198276 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.203559156 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.207908706 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.440541465 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.208546775 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.235745309 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.180703909 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204223568 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.216260497 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.213564313 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.204859393 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.206620046 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.228781266 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.196071841 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.390293142 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.200385238 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.235668999 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.194370389 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.220006241 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.196040905 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300844105 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.219306101 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.392250642 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.209126978 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.191743704 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.205632726 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.401942748 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594523947 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.202336175 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.198775032 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.201103133 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.269935428 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.185073368 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.904164847 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.202610675 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.194845243 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.243107459 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.582802804 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.211960599 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.200089669 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.20361946 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447235328 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.223550081 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.226007143 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.22774605 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.196044035 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.19607583 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.224182887 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.217753919 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.197314992 seconds)
  done (took 143.140084506 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.196467739 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.195481379 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.196694037 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.198007665 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.200575042 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.196417447 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.202428232 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.201015931 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.195795238 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.199400848 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.203628798 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.197322492 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.203511112 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196323436 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202529577 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.221343517 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.204304521 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.214432142 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.199868194 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.200799998 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.207507673 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.202854314 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.215226836 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.198243359 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.245165608 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.276922151 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.224767792 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.196165274 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.203357014 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.20102978 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.239053132 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.209053237 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.811194473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05691634 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.211868943 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.221923248 seconds)
  done (took 80.073555042 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19897194 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200517825 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199929592 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23487501 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202471728 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.77630139 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778811529 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.726202551 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.603071492 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.572960461 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.462847386 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198610343 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294636433 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213661257 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198986121 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201758087 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217916817 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201838463 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227475986 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200015492 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778964698 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.219083108 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.374558741 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214702271 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235826402 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604035595 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.191434753 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198592328 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233041042 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541289309 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214630603 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235230379 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199210698 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586815207 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.853495892 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206260313 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316909282 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202816726 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239213432 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204404171 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.489107565 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206092219 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206277809 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.207469782 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895922465 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207458188 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78154412 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207868483 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.171721243 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205762257 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204560766 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.299422037 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209120503 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.888283437 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20696413 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203681292 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207239635 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206575261 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204391638 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238275716 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.272844518 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301933004 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205107098 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208802033 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236822841 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207634396 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.411868465 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207948678 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.361846754 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264170254 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.419301449 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782663971 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207924563 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305052732 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323581074 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202870787 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205676906 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205404792 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205960516 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316571902 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204856727 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.624479778 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.380282927 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219861137 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.578238733 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306848777 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202929405 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.606242236 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209345673 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204442436 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.93451559 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299959196 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204188752 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.205329497 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205304667 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.625480467 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782664907 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.454226658 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210167283 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.635884399 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208619971 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.634473432 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757724498 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.875891274 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203605568 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320832252 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.382527979 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.2220152 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208498162 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.577681129 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.211590819 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271855974 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.205355222 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608362939 seconds)
  done (took 365.983962727 seconds)
done (took 590.318968505 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.834960189 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.822801092 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.949929329 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.817349916 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.779481461 seconds)
  done (took 10.337955057 seconds)
done (took 11.470864493 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400848847 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403319972 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272177258 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405911006 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245354817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.424888512 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385121798 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232617937 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313957813 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293974111 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315556231 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265147864 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738537341 seconds)
  done (took 18.830445437 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54774485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.209019468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270261503 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543617661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247200805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545428465 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413041488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.224806198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412107296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22208655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223477942 seconds)
  done (took 17.996332191 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564583707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.208072732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272678263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553790051 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249091496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551414397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.428323134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.225445176 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424953975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220684583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217441996 seconds)
  done (took 18.055137796 seconds)
done (took 56.018554344 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250707594 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420903029 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238210339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223353693 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216922656 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217458311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224792099 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218349185 seconds)
  done (took 11.148112851 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216325497 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.212227194 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220922728 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218207435 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214952413 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2173367 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215556718 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.215535784 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215909063 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.217875126 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214867459 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21526128 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215513245 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21283562 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214837134 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219978548 seconds)
  done (took 20.5945855 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218247931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217101498 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.217877874 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214862047 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214377158 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213610516 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216927541 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216540863 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.21843008 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218799351 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218890402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217324083 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216082124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215107566 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21657988 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217051242 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215969587 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215312857 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218734136 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21614152 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218083294 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218402434 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216271625 seconds)
  done (took 30.3470365 seconds)
done (took 63.2263566 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.210549995 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.225365816 seconds)
  done (took 5.575468887 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.279337886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.282479248 seconds)
  done (took 3.70511248 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219673937 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218573052 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220251768 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221786933 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22064468 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220266432 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.223732355 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222074379 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220681105 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220807864 seconds)
  done (took 13.349859124 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223158613 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220366334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221388681 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220638429 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.22085142 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.218176863 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219700032 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220241741 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219486901 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218262054 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.221796221 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219265616 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.220957433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.219431705 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219930038 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218104046 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.221507456 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218492652 seconds)
  done (took 23.101506381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233536463 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.242770736 seconds)
  done (took 3.616929104 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.349310423 seconds)
    (2/7) benchmarking "second"...
    done (took 1.259649013 seconds)
    (3/7) benchmarking "month"...
    done (took 1.329716574 seconds)
    (4/7) benchmarking "year"...
    done (took 1.317341781 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262752969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240566144 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.261016231 seconds)
  done (took 10.162952913 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224450683 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.413375091 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.512620115 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.856095297 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219793933 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.225961144 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090105847 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.228769258 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230584042 seconds)
  done (took 14.145180668 seconds)
done (took 74.797464727 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.214813564 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.233052485 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.230928843 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.234930836 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.557925515 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.233343916 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.220115416 seconds)
done (took 16.07100681 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.20987989 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.207073254 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.228029869 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.216227066 seconds)
  done (took 10.003950452 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.214660577 seconds)
    (2/2) benchmarking "read"...
    done (took 1.53975001 seconds)
  done (took 4.896760298 seconds)
done (took 16.044871103 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224961252 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.220195827 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222895611 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228219804 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.221404961 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.223470811 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.220439135 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219171169 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222013007 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.221281472 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224318104 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226209622 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.226569915 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.225810625 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225421892 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219958149 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222444344 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227618553 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223844808 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222186234 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222290244 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224695439 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223020225 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223520644 seconds)
  done (took 30.506134117 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226304957 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223256138 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.225313601 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221310544 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220497106 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.227933609 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225962878 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223812767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.225150409 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227121647 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220454327 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.222891614 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.225124908 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221736459 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222183521 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219520983 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224408448 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221472635 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226170271 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224127084 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223125833 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221980331 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2232078 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222566485 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221581988 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221266117 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226299665 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222686846 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223665021 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220296394 seconds)
  done (took 37.847262205 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231938087 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232883228 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228823983 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226858341 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.226195529 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22609079 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225884234 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.226591156 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223631815 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227112284 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228031044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227601138 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225302398 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.226915491 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227768947 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225607315 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225722971 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225010188 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226970957 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224816479 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226347577 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226500072 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226614544 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224118169 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226439094 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226666903 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224047758 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224141421 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227471648 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226594666 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.227059221 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225515527 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.227890155 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229638614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.227525626 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228666097 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230377906 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234308899 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227227045 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229548248 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227098116 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224371114 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226091665 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229804063 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226461962 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226501703 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225030017 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225568887 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230318488 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228180117 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229471794 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.226004921 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.224181795 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228985652 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.229428358 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227498656 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225767418 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226380454 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226661966 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228230221 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227930343 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226672384 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228710741 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228787694 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228171275 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.230284272 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232100584 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.229405569 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22698312 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230125622 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231638924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231569288 seconds)
  done (took 89.527649661 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233576235 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225468792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.227346402 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226402605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225871053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229741261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22894248 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22885723 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227643156 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229823464 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228110946 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226212607 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226410769 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231404995 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22732753 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226514777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23170059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226766196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232827597 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232320774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230559073 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227984177 seconds)
  done (took 28.182846998 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232609165 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234140612 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229228115 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23314214 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227868859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230239484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.231423188 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230937272 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229757617 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226557108 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227561926 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230298475 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233394305 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229726489 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229081809 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230427865 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229256974 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231803547 seconds)
  done (took 23.299581683 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229487098 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227189288 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229901663 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227127837 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23132714 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232926531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231239127 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235055273 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.232878627 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.230339396 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.23141386 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233418184 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232580355 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23164188 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232084975 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2298927 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235717311 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232492497 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232567927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228419453 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231595135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233544562 seconds)
  done (took 28.246440217 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235130705 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230739787 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232606326 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232745542 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230734288 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231317889 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235185258 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232171147 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.236591866 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234687695 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229356068 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234485131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234033583 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231638323 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.233768895 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232433426 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233156058 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232764515 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234690972 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231742856 seconds)
  done (took 25.813609977 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237416403 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235129908 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237433918 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23462411 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236022334 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236471985 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235530695 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233260348 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233495786 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237746113 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237903088 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238551119 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235054217 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236642241 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233862121 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234760688 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23375474 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233440435 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234397027 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233626147 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235567613 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232705749 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232857602 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233838306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235512203 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239300964 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236771009 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235269559 seconds)
  done (took 35.746414085 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238742307 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2371948 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234331231 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237330433 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.235349793 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236378022 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.235668478 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.232395061 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236163605 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233807691 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235772594 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233615781 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23582467 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235042162 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237450132 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.239688719 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240196806 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235315074 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234170371 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235006241 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23593036 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235884832 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237064752 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235087205 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235449658 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.238716926 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235155195 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235408581 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238483641 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232874153 seconds)
  done (took 38.236378207 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.286574777 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284194939 seconds)
  done (took 3.727872951 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23543604 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236715653 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238651151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235687294 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235193602 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236766672 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238335289 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237517037 seconds)
  done (took 11.05231752 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238887915 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.241360925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238955365 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239280135 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236341842 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23682901 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243718067 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257750963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236917637 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237711815 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.247552501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246761536 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23928378 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238261605 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236860623 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242079946 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23818014 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236881739 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238241613 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238113163 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237103131 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239761041 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240240708 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235465871 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239140501 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248932533 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.243314557 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240745444 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240595905 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245560049 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.24057772 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242101797 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245312639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.241960859 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244182302 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246798618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252530225 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264824063 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250839748 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244816244 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245899034 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245204334 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.244481066 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246563751 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248746225 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.248713156 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247594349 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244912141 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.244688907 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249372956 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251154683 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242361153 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242470542 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249717503 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.246074398 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250794745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26796429 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249808433 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255161147 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259732834 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261010909 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25584904 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251322528 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247766052 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256564277 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271069499 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252922969 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264847727 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.246900942 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.248185643 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251346517 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255135842 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273103035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.248738458 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249232442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.248732119 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248606358 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250248502 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254634173 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.268559225 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.25020394 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24956998 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258961448 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271475875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.250472244 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249281612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249419112 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248187146 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.248819414 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256201827 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.271923968 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250718765 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247554145 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.246943813 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250742123 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.25055348 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.248648067 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250916962 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.24765382 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252287544 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249808062 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254517471 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.257183321 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248615998 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250534492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25355938 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.2472679 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24443224 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254295954 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252293521 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249828098 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252372071 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253760853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248722695 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253643103 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.257044564 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.250168532 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.249399141 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.246016037 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247881519 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258459701 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276923249 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246776 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.253535732 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255892394 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262784015 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251992605 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254342069 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250431475 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244459134 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244714981 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250177427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.249692472 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.249568522 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248635168 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247545656 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246308041 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246607538 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248211964 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247859217 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.247250342 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247227014 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248007021 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247309153 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.248478061 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.248362411 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25346924 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246760229 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248555683 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.246685965 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24573655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248301329 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248840695 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248287892 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24711368 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248520392 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248866399 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24875794 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25161026 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250384567 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249453332 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248621408 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253818214 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.2487876 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.253688022 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.248249314 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247907133 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250853422 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.250401882 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247765853 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.250930759 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251441176 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25553938 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.257586599 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251185062 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249918117 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25146115 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252287419 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250075043 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253287138 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255343556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.26173788 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250498985 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25500851 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.249703198 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25441104 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254504342 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252278588 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248980889 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253856557 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257181621 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257948918 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262478982 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274031785 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252340129 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259189741 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25343119 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258143369 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259814377 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.25752706 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.257833476 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253723211 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254409544 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25537214 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.256733448 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254992272 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253829272 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256820807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253367853 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251485966 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257520552 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251947096 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254441324 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252897528 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254297543 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254894035 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256927636 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253158964 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.253059288 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.253639967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253838742 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.253047697 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.261183345 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250827767 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253237468 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254016932 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253377035 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250995147 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254752442 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253192533 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25202896 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259023884 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271058758 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252731076 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259296434 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272153642 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252436042 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255653524 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253438484 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252279813 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.2556795 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263454488 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254375825 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252778534 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258992579 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255305974 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256550192 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258599021 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.253427508 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.254684969 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.255688045 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255830461 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253090552 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254412065 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254431648 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253436861 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258619124 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25614877 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.255574943 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254268816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254888549 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257260003 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257904269 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259642613 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.262237597 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.25922936 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254136859 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.257778349 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255844859 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259036408 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254302638 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255159252 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257754033 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267486527 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.280439778 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26534711 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255689188 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256146691 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259182784 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258354438 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259443767 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255988334 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259233218 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254483245 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256393399 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255130086 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255698566 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260201427 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258987888 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260167733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264696441 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257465478 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257116823 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257504309 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258186092 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25951956 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256297088 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.262211449 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.259474015 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261022231 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255966443 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259612397 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263835658 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276035839 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261371418 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259989201 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25956964 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258590734 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258342834 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.259150694 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.264902433 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265178365 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265084687 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270522594 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262789961 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269855816 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25920028 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266442099 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266360557 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258983976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260136505 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.261250413 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.259449939 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265741274 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278664744 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262986118 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263127996 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259148049 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263754047 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26377755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262864394 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263477233 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260645275 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267392856 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282144575 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267194701 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261983842 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259813026 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264723722 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261502315 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.260108767 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26580528 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261235337 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263699953 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259087436 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259773978 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260642934 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263722278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.265405567 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257412259 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260798924 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266260197 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280296057 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265499021 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261503841 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267924723 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261961536 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266823836 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279654235 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261522784 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262975895 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262178659 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.26249258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260425669 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262419644 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261959645 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266232949 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268218731 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262844786 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265866032 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262551993 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26562467 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261495409 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272036117 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286608646 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263772285 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26642048 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260900075 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26331434 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.268478538 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263621355 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261142528 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.2654899 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272386688 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270696787 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261400879 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264498931 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263290105 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263227827 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264674459 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264295927 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263691859 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267740512 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265331536 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263921955 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266999188 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265055586 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263508604 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265632528 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265185309 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274043825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264542055 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265291295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267762972 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26916358 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262982126 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265300144 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265566097 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265533036 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266521845 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267139835 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271785154 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270868431 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267805177 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262994537 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267447156 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265192333 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265846231 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266117061 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268317365 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270603386 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.26560023 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266198242 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265786283 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265064773 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266982814 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26569784 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267790719 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268479926 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272541532 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266752144 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263321213 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267369932 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265382508 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264377203 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265699715 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.273650821 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269564266 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278607587 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274626391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27209754 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269744123 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27087437 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275877236 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265756786 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.27154833 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271192961 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270659508 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26669999 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272755744 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266867667 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271998483 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267709998 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267057233 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275122604 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288907177 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268508135 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270160616 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273272616 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268594839 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266697833 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269732256 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267998552 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275390054 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288280878 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271056612 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271115164 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268376887 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273648356 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273761378 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270654131 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273853801 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.270225578 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270357051 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270667843 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271438494 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267884568 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267776498 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.270475272 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272723602 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.277046995 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267914761 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272348156 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270300116 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270615492 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270163328 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271409546 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268227767 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266767354 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269040074 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270229779 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273839387 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270811786 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269088196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270608401 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272060677 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271687833 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278194846 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28583384 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27895478 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2688609 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269102238 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273128152 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275348514 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270964104 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274595209 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274774732 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270705246 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.272586833 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271133237 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274276661 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27415176 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286336865 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295756775 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272409951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273948067 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275905686 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271922041 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270244403 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274615338 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274480854 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27383879 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.280591261 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.275608767 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278000729 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291150869 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.27346418 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281174496 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.278918792 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.280159791 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274537688 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272085432 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27555164 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278573346 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288840069 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273939183 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28300695 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301741125 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292889476 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273687007 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273751793 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275865888 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274009352 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.276545924 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.27316833 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.273913767 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275665974 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274441939 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273717527 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281205638 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275784934 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276946575 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27281424 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273183297 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27420538 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273060163 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274844877 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.27498239 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275167156 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275897239 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274688654 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274815859 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287960847 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301490573 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276323137 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.275695421 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272471086 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278315201 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278979866 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287151762 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282684539 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.276539999 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278191011 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.27674922 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275305248 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276086674 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275191771 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275748059 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276316742 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27581612 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28864838 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286450088 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281565211 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274502338 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278127497 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278261167 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275669665 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277298946 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277298679 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278148471 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279378454 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280271775 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277553903 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277671978 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.28058523 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28445204 seconds)
  done (took 752.97343835 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275828653 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273810508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274958396 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275129249 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274907131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275703513 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275377008 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275146211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275299138 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276157614 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275678984 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275219178 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275086387 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276226265 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276466808 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275800298 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276459121 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276494057 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.275920743 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275640228 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276097782 seconds)
  done (took 27.981854209 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27828838 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276604714 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274936711 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278182174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276489524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279401819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275794157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279620789 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279213419 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276600658 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279005368 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279744769 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.276603638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276328655 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276346353 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28019984 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280894999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277876125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279483734 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277218079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27930475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280057141 seconds)
  done (took 29.31190532 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278800066 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28062484 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.278661127 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.277198356 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280356477 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.278227475 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.280901892 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.282586657 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282108245 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.279452656 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.278807194 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.28075518 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287455548 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.284352594 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.281191326 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.282327383 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280427331 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.2797427 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283345282 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.280121587 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285596183 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.279566857 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.279197838 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.279214695 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283563042 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287358949 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.283271448 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282097204 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.286217356 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285029822 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.284769498 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.28046432 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28469927 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.279547966 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.282815141 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285961108 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282485685 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.279192791 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.282336527 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293267786 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.303180504 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282411472 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28704493 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.282934629 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.283850059 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284798843 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289723943 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281557086 seconds)
  done (took 62.778077187 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282785778 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284474971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280878532 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282539077 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282797998 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283642686 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284347483 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283302615 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281009461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281642654 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282857507 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280944847 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281004678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284718509 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284471891 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281474586 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281283991 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282044203 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280253463 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281627371 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281865569 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28508218 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285029731 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281784185 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283665669 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282210143 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28244157 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285047722 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283353386 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282870742 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284172743 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285611862 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284762306 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.284515618 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283656814 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286341102 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283824995 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282225595 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285307919 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282557806 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.286825805 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285169026 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285505203 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286133714 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284316872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284841372 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283556566 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284283575 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282487877 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287010398 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28532548 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284505303 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286624055 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284756951 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28729649 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.287825002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284529597 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283764944 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287353967 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.284678678 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.286317077 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286924017 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284060629 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288009726 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286489982 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284608269 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28522326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287485654 seconds)
  done (took 88.522652406 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287039445 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287208094 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286729722 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286931027 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28794468 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.286365812 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28767927 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287327233 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289806469 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28875705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288305102 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288392755 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286875627 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292646942 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290827045 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288986052 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290467776 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287724932 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290695061 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287447844 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288341737 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290955084 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288634464 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290799095 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290899407 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288096753 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289141441 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28914767 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287679804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291152371 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28902742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289449021 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289297767 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294237331 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293479946 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292068047 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288974772 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29127775 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.289401557 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290065389 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288944155 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289664218 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291776255 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290026743 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289573828 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289022505 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289905052 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292886183 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290206371 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28985124 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293758593 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290196252 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290465803 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291857649 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293920929 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291517174 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290703389 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291116882 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294519345 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290710982 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294165255 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295976248 seconds)
  done (took 81.186433366 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29111566 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29208694 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288716587 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.289377565 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291891252 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289959691 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292009999 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.29143378 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292622313 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291833205 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294251728 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289316665 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291836013 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292741741 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290114581 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291202619 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290863823 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291430826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292103056 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289903206 seconds)
  done (took 27.030050542 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289185607 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291947435 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288810104 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289986004 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292145954 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291744382 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292992927 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292685738 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290264609 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294142351 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293830694 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292693421 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290450971 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291506643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294360619 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291152863 seconds)
  done (took 21.875859867 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291511455 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29485165 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291922053 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29559114 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291469995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291555285 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293477791 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292135334 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291692053 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295678546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.29442628 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294272701 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293637773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.293552881 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.292937243 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294131155 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.293538644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293015957 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29436622 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.295999684 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292500015 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291958386 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295310865 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295478243 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.293316169 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.29264355 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293403061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293444858 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292322464 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296273831 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293216257 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294032268 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292178915 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29246225 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294296989 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291842493 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296834515 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296255997 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294530174 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29610515 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29685815 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294700374 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296142948 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296788493 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29801391 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298460193 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.293433597 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293795655 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.2931714 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293203104 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.2963155 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296382349 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296000465 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297042679 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297381837 seconds)
  done (took 72.39612808 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296816858 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297226945 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294632531 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296624149 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299502809 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294742657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298172358 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29582142 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295589153 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297236314 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293702823 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298013379 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294334361 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297400275 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292958117 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29634509 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29341455 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293527466 seconds)
  done (took 24.538582076 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29470828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293791496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296995233 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293959389 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293170209 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29603743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295328101 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296710484 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297205784 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295517377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293884882 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297472268 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296570889 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298580006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295798335 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293646167 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297337729 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297392202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294159477 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294985979 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297140776 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297561021 seconds)
  done (took 29.717807917 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.294806763 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.293998052 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.293952872 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.311854165 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.314045759 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.294277273 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.294938 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.294909163 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.317683704 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.349320545 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.343388367 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.314796128 seconds)
  done (took 16.930162427 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296152099 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297981599 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294089463 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298515352 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298444243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295237563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294695469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295888153 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298090984 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296003028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295343885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297005936 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296278206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294375706 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296806059 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297261863 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29581972 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296446515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295084727 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298169969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294949977 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297874577 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293948045 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294948844 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295231148 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295391563 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298213507 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295940793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294371323 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296571456 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297193108 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2941631 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297690213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295081872 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298104276 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29794437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295171893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298176543 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296957649 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294190823 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29830084 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297626857 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297974222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293647363 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299945774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2946997 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29733514 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297358571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29739269 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298395459 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29822672 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296066223 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30230806 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29768636 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299173611 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299490374 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297597902 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297090063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299871376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298399988 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297702361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2977273 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296005741 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29702718 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299081064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297042386 seconds)
  done (took 86.806738597 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297492126 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29703106 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297586501 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29952579 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298593125 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298389556 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299374706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297175851 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29879268 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297257567 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299766488 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298760303 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297657532 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301210086 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298832062 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299076328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300924785 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303691095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303017812 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300984385 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297287423 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302305053 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302208804 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299043585 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300576516 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300715354 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299120553 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298922664 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299182835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298362152 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299288053 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298367059 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298949931 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300125053 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300407453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299922135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299331163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303962662 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302426019 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302266521 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299526878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302042618 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299546772 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299026935 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301175005 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300022467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298298665 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300353449 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302201688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30033936 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300930587 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304898868 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302180544 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303452892 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301998766 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303356828 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301279092 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302621056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301960067 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307220136 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305229759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306196314 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304808891 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30040024 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303710181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303995202 seconds)
  done (took 87.060703801 seconds)
done (took 1762.440444007 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468172313 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422358786 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304396709 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.308399954 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300990057 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.332813154 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314806418 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303546457 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303194111 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304469796 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300617581 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489456158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.296195963 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302044789 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304928436 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399528275 seconds)
  done (took 26.675354295 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332774424 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.308705622 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426411666 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.335001691 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333303831 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.506544699 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.3695043 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312354297 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.487882923 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359577305 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.304414835 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.330492786 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309076878 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.302170025 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334717487 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.499637027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.567483106 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.299419999 seconds)
  done (took 28.937848855 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.781220814 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.312521547 seconds)
  done (took 5.312481991 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330127826 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31091337 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308491709 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306591562 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.309985267 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.3000701 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309957206 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.301692295 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.302122937 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444635672 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316907876 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32127691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332590338 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312872374 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.310775349 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.352735179 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.465876664 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.308005906 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.30959861 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317423228 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.314970206 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.400161046 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352004052 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315452296 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44129325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.310287649 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.322910913 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315074968 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448272698 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311606211 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.309210804 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318519305 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311738055 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243117921 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.78782444 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.319718495 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342717146 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318810577 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311520822 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.470129863 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311710241 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.321672382 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.318265887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756781752 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.473213329 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438524775 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.339910081 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.318516872 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.317331548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.382940786 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318847426 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.320569141 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363546326 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.113446918 seconds)
  done (took 84.157809157 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.336819062 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.309042467 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480733007 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334701441 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300476613 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.310373503 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.31343831 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.611042798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326978685 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308193874 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.620928291 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838782821 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329542019 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.362011284 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.867044562 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.312810845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307374583 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.313608061 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.313568632 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.308376315 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827267684 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311873272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.31299526 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.476353887 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.345956353 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.776652898 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.31445998 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.316487889 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305596781 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.30428428 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784064501 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.32679829 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.350639731 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.30871587 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.585870868 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.674239811 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65637685 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.313621473 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.3217833 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.30879532 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.312102431 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.778110712 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.675688089 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312937536 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.328737912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785416263 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.31415676 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.314210138 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.311848054 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520912197 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.309610402 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.313165225 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.327370624 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313412315 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.310692427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.337814818 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377801108 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.803537173 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304151465 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.30605923 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349336048 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.310916336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309875662 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317051177 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.312625184 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657129233 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.444114583 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.312997008 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.663833443 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.773611916 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.330524831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.83731129 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321864308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.31797849 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.391535447 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314377991 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.322966379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788100842 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316049019 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.306858347 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649766453 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.308686794 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.601014549 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.330458685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307791084 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850489251 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.313151902 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.333712876 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.315017564 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.314296027 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325198425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335312645 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.592635096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.357731487 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314877318 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.312092411 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.313252589 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309906776 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.324332401 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.320694964 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845436299 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.33893713 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315598733 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318494254 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326751035 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315776201 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.311814095 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.316268292 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537618557 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.313858003 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.337580626 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316751178 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.308507148 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.317809062 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.463069631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.314701545 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.636666048 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316971701 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311923894 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324014859 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311011342 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.369791146 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308606155 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.319250909 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211103163 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519710272 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.33524329 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.315848265 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318608134 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331529354 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332010404 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31717066 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.344610785 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.315616285 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026550894 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.345357276 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.328512179 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.315150169 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.318435738 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317252017 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.345551311 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318439699 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608967667 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.588777049 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45434767 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.30773857 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.311775526 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035678538 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.339376125 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463611144 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338862609 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.296070006 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513248352 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.48730595 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.31862372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.311073907 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.316466549 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53617073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.320559199 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618208023 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.81905881 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.336879164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319158602 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.043249965 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.059461066 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.312919948 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.322259974 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.600695043 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.334387018 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.31958934 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.317757562 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.318543518 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.312489562 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.337593535 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.318028452 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.325184153 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.318390334 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.479584306 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491923424 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338582118 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319646672 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772034214 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.323353361 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324114076 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323758296 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.313338393 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.31513057 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.363657837 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.321440111 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.348610397 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.319278986 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.317940596 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786335856 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.313986078 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.322273119 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471243037 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962658729 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.339942233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320938593 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317316965 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.910266398 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83852923 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.348262156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643434618 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.326109542 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358116339 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320035195 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340307745 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84920063 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324784736 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324522987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.930756601 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.341466075 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.999628194 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.313770285 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.318158491 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867555572 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342783024 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.321636083 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.328278956 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32476067 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596086441 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.317834495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.366921174 seconds)
  done (took 492.146791501 seconds)
done (took 638.449771714 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323205114 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.321782143 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.31220061 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.321463618 seconds)
  done (took 10.51526192 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327700376 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.322349393 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.323021612 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318310277 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.324238268 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.319861309 seconds)
  done (took 9.170429392 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.313832532 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322292315 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.322576499 seconds)
  done (took 8.193858101 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.535907445 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.344773764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.659403322 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.33870436 seconds)
  done (took 9.120224685 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331454259 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329910457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.32672891 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.325432394 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326491942 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330137708 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.332201948 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325400766 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.330227428 seconds)
  done (took 13.19183734 seconds)
done (took 51.428345148 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.316264537 seconds)
    (2/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.446039146 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.308150857 seconds)
    (4/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.168403317 seconds)
    (5/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.353528404 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.542823087 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325446778 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.596159321 seconds)
    (9/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.32558935 seconds)
    (10/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.303203026 seconds)
    (11/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.346151955 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.358733872 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.444016699 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348933185 seconds)
    (15/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.405119518 seconds)
    (16/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.303727669 seconds)
    (17/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.427370057 seconds)
    (18/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.256080084 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.707786946 seconds)
    (20/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.350518357 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174668993 seconds)
    (22/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.30469767 seconds)
    (23/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.732802573 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.315721129 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.307232926 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.318940813 seconds)
    (27/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.329455506 seconds)
    (28/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.314272529 seconds)
    (29/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.327370202 seconds)
    (30/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.318624262 seconds)
    (31/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.355764503 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 2.31837816 seconds)
    (33/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.327643703 seconds)
    (34/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.351759459 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.2943245 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.458801278 seconds)
    (37/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.308121985 seconds)
    (38/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.32288499 seconds)
    (39/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.328460525 seconds)
    (40/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.31626673 seconds)
    (41/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.316498572 seconds)
    (42/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.324923842 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.459677199 seconds)
    (44/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.599125793 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.306436509 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.255632699 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.326972397 seconds)
    (48/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.956995472 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.226943291 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386191918 seconds)
    (51/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.406032492 seconds)
    (52/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.952833939 seconds)
    (53/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.316513562 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.927266874 seconds)
    (55/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.370886201 seconds)
    (56/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.328133311 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.332253605 seconds)
    (58/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.521956233 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.743473898 seconds)
    (60/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.331370049 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.122613593 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.330836747 seconds)
    (63/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.309980103 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.588063227 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.371364958 seconds)
    (66/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.442018406 seconds)
    (67/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.318171352 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357421243 seconds)
    (69/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.383196803 seconds)
    (70/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.00458063 seconds)
    (71/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.722924357 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 2.328973639 seconds)
    (73/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.33009796 seconds)
    (74/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342291825 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.346333193 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.188382781 seconds)
    (77/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.330975899 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.357366078 seconds)
    (79/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.31801808 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.339697875 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.309830219 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.327851778 seconds)
    (83/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.317312695 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.44372874 seconds)
    (85/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.309487262 seconds)
    (86/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.309348431 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.734359371 seconds)
    (88/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.453532384 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.312422009 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.408319628 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.354529309 seconds)
    (92/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.348550393 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.21614976 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.317769118 seconds)
    (95/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.340172216 seconds)
    (96/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.332894032 seconds)
    (97/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419050828 seconds)
    (98/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338453245 seconds)
    (99/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.313383442 seconds)
    (100/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.318943241 seconds)
    (101/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.358763014 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.341423172 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.561739713 seconds)
    (104/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.325177204 seconds)
    (105/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.32755338 seconds)
    (106/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.310640888 seconds)
    (107/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.336342692 seconds)
    (108/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.332932029 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.324578532 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348790469 seconds)
    (111/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.311724377 seconds)
    (112/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.320971562 seconds)
    (113/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.343353838 seconds)
    (114/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.525969802 seconds)
    (115/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.331428229 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.008085883 seconds)
    (117/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.450435357 seconds)
    (118/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310964918 seconds)
    (119/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.320051042 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.852388686 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.356711859 seconds)
    (122/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.604466729 seconds)
    (123/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.321011876 seconds)
    (124/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.356260637 seconds)
    (125/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.327144082 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.134184599 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.608851226 seconds)
    (128/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.325564826 seconds)
    (129/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.319445499 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.3647776 seconds)
    (131/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.315281073 seconds)
    (132/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.335790487 seconds)
    (133/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.839921553 seconds)
    (134/286) benchmarking ("sort", Int8, false)...
    done (took 2.33097555 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.443735095 seconds)
    (136/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.316327441 seconds)
    (137/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.333263995 seconds)
    (138/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412958531 seconds)
    (139/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411393489 seconds)
    (140/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.26311079 seconds)
    (141/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.352080534 seconds)
    (142/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.36008691 seconds)
    (143/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.337847518 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.151797099 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360931776 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.409012051 seconds)
    (147/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.322527305 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.338399197 seconds)
    (149/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.322012643 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.320249016 seconds)
    (151/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.43633725 seconds)
    (152/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.353965271 seconds)
    (153/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.521413488 seconds)
    (154/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.323464891 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.147557749 seconds)
    (156/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.600418821 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.331232664 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.340578545 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.357642194 seconds)
    (160/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.31333469 seconds)
    (161/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.192585967 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.32206997 seconds)
    (163/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.463798915 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.978111802 seconds)
    (165/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.326276356 seconds)
    (166/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.222213328 seconds)
    (167/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.364023175 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.310431646 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.335761318 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.320664912 seconds)
    (171/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.860052084 seconds)
    (172/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.336420074 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.359279394 seconds)
    (174/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.354051633 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.35029229 seconds)
    (176/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.326954198 seconds)
    (177/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.42115554 seconds)
    (178/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.722114284 seconds)
    (179/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.209915706 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.079710596 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.339454445 seconds)
    (182/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.726379017 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.363930066 seconds)
    (184/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.496146055 seconds)
    (185/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.329020957 seconds)
    (186/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.373610617 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.323613103 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.332020415 seconds)
    (189/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.326268235 seconds)
    (190/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.256899687 seconds)
    (191/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.318939086 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.335959588 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 2.337774071 seconds)
    (194/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.394075489 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.329799438 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.419286715 seconds)
    (197/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.872499843 seconds)
    (198/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.461733393 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.32047488 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.536147654 seconds)
    (201/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.434700629 seconds)
    (202/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.436439989 seconds)
    (203/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.325664256 seconds)
    (204/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.31696114 seconds)
    (205/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.224903509 seconds)
    (206/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.334994543 seconds)
    (207/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.330469805 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.337878586 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.719420862 seconds)
    (210/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.331185624 seconds)
    (211/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.335637566 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.362318906 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.44928443 seconds)
    (214/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.39363819 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.317326566 seconds)
    (216/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.382092431 seconds)
    (217/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.355833092 seconds)
    (218/286) benchmarking ("sort", BigInt, true)...
    done (took 2.342331173 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374887408 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.263240977 seconds)
    (221/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.339805184 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.326931075 seconds)
    (223/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.336880432 seconds)
    (224/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.326562356 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.323537747 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374721519 seconds)
    (227/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.395801761 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.748024402 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.227224333 seconds)
    (230/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.383874545 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.218745952 seconds)
    (232/286) benchmarking ("sort", Float32, true)...
    done (took 2.330907953 seconds)
    (233/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.436632736 seconds)
    (234/286) benchmarking ("sort", Float64, true)...
    done (took 2.331666079 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.317909652 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.326509448 seconds)
    (237/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.319747036 seconds)
    (238/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.430361195 seconds)
    (239/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.456017177 seconds)
    (240/286) benchmarking ("sort", Int8, true)...
    done (took 2.33138792 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.338066715 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.555956073 seconds)
    (243/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.725635706 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.740558694 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.365180038 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.319710041 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.362622828 seconds)
    (248/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.356633719 seconds)
    (249/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.426389669 seconds)
    (250/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.933418119 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.829268644 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.339758939 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.721847415 seconds)
    (254/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.392460804 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.321390934 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.101314225 seconds)
    (257/286) benchmarking ("sort", Float64, false)...
    done (took 2.353767634 seconds)
    (258/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.32384556 seconds)
    (259/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.333931495 seconds)
    (260/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.32191282 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.8174144 seconds)
    (262/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.344958319 seconds)
    (263/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.34723872 seconds)
    (264/286) benchmarking ("sort", BigInt, false)...
    done (took 2.34233596 seconds)
    (265/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.145472462 seconds)
    (266/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.331505996 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.417877147 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.419255954 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.417020283 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.478135886 seconds)
    (271/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.605884935 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.753049543 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.349425399 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.334328124 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.396026937 seconds)
    (276/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.865699305 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.332283335 seconds)
    (278/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.329037171 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358669643 seconds)
    (280/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.986433855 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.34481214 seconds)
    (282/286) benchmarking ("sort", Float32, false)...
    done (took 2.341742886 seconds)
    (283/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.400233579 seconds)
    (284/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.551585431 seconds)
    (285/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.322644698 seconds)
    (286/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.371535501 seconds)
  done (took 567.811313327 seconds)
done (took 569.049614232 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.364746602 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356865669 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344275463 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368919236 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.457915342 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.522832718 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.35571309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.34946668 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.393597215 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.395580124 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.345475715 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.522754779 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347636654 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34559194 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.347727658 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357158434 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.337016832 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355360126 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.363013657 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355820011 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.36201908 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345681315 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39708239 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.522922541 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352070384 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.34715728 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35090355 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366664674 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459744107 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350712051 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.348752625 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.358850551 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.336465303 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354491527 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.342891053 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367793838 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358832101 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.358125735 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351231764 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.378289849 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.337549119 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35470488 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.347500981 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347775429 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.348635859 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.353156216 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348984714 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353399838 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363121698 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363226204 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.337605638 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369075861 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.351795437 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.349760439 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.359849469 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350058797 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.352093655 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367085492 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369174888 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365631045 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.347204764 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.360068306 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.351866312 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.365320514 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356860483 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340989689 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.353965955 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.3531578 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.33915606 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.362974621 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.340432226 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.36492849 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.350174429 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.362708796 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.381056027 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.340277392 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351939023 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349409097 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.357556692 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.349099085 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359890749 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362783658 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.355881869 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.352161828 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363308168 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.526896584 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.360470364 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.349605903 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.360729763 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.369181878 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.356199672 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.363260315 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353447668 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.345694886 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359831562 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.356414906 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.353385785 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.354289742 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35780913 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363647467 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.340471517 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378005685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.349485767 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.349585355 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.351321579 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.366512358 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.339761658 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.360232194 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.375527183 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.397462921 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.353483251 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.355047123 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355151975 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368068799 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.360991228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.356202443 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349038155 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.354872731 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.344417115 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373188451 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353447812 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.35064813 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369409869 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.354876209 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347337914 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.342421617 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.352248528 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.367431299 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.472771832 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365307851 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.386008808 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.350368168 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.357967173 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385736782 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370816039 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.383876915 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.356782189 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373846806 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.371216837 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352028293 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.364086021 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.365315158 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.355329854 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.359244883 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.34946054 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.38839788 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367055395 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371267096 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.374681705 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.477218643 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353124617 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358446184 seconds)
done (took 224.780431624 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.419350868 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.351259565 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442648776 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352317321 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.452064071 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.457555565 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350414415 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.351051078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349136009 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.734226655 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.347788949 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352243737 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.348015276 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.354194044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.434097616 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354347817 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349645772 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694675036 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353183044 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.434090222 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.3511249 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35555871 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354018403 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.733481974 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.350600068 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.35037746 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.433955472 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353777995 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.697102298 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.343899669 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.356034988 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699950621 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451376311 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370286388 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364004072 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362957429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.457342223 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.368567809 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.442938538 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434651569 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441343311 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.392692752 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.349030863 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.351910015 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.353605998 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.35576392 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355383547 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.382599063 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.351647909 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.353100272 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697285941 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363870351 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362748801 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352648387 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352389607 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374688843 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.352872659 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355426248 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.452795937 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.354639616 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.426534064 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.734292722 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.732253965 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354290964 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.352350739 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.353368674 seconds)
  done (took 105.839783373 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421898335 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429474964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469859411 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.356621392 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.406705261 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.475980969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.357664333 seconds)
  done (took 11.181578092 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.362352914 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357082359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.404346646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406245094 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355847414 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.534660038 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355475962 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382135744 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355904698 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.405646962 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358482529 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.359605992 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364366274 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.350366914 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41050389 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.367099234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.471515941 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.357679577 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356825992 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.513138032 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355496088 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365203192 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.406133534 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367327127 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.358916809 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.363911354 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.212616381 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357723929 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355000702 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357896669 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354275139 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.441933314 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357631786 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.350556099 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354998266 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469883075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357911963 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35651081 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.357103138 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.358304111 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359226831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359668608 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360273368 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35524341 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359520432 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38260462 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357157556 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358869264 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.364797268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36095464 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.407921464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361232551 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.356600247 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.355938689 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41095267 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36653445 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358594767 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357262296 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360766754 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357034796 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.516948665 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405714996 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360222118 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405640236 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360718799 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360082449 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360015759 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358924037 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411952358 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.361149268 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.407557412 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357331093 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.545954713 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384513987 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364330625 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363783104 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.363911544 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361079134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.357425131 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369971223 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358457386 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.362100902 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.367721439 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358096174 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359500811 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.543912363 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467635287 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.35911049 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.374309203 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36870449 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361420115 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414560818 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360397491 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361373181 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412089906 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.478483313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413555083 seconds)
  done (took 140.163500478 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366605196 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368985753 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.36447587 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.385102029 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360423879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.360659554 seconds)
  done (took 9.47737818 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364886267 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364975938 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362141384 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.362359613 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361972051 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.365103001 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.363448899 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366352678 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.36246581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361203331 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364381371 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364124752 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365008432 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.363580689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364222799 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.363047242 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.362327457 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.360498129 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363535183 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363169988 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.361242316 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.362392106 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362587333 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362123678 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.365788584 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36004204 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367973131 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.361603711 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363311857 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.369373104 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.365425691 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.363464721 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.3618322 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369401852 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.36850337 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.363897378 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369809089 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.365582418 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362666086 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.36490093 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.365697317 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365257801 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365652384 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367516433 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.363397456 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366694995 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.368962811 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368461219 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362065208 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363936033 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.368622559 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.36193622 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.362338257 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.364204147 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364830759 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382948399 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368737231 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360732888 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361213942 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.359561968 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361394943 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360772572 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362750734 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.362749641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.358416755 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.363480088 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.359703213 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365003583 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358560825 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359699076 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361756784 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358006263 seconds)
  done (took 100.478287235 seconds)
done (took 368.404041622 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.846530668 seconds)
  done (took 4.116866885 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.426177415 seconds)
  done (took 3.701704984 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.804101322 seconds)
  done (took 23.082604603 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.390346084 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.435373156 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.365696529 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.362753949 seconds)
  done (took 10.831459617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.603565502 seconds)
  done (took 3.873473596 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.358815652 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.354996011 seconds)
  done (took 5.988448769 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.613937043 seconds)
  done (took 3.882037595 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.747482937 seconds)
  done (took 4.020927103 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.36518682 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.388089957 seconds)
  done (took 6.035236282 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.351747344 seconds)
  done (took 3.626903233 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.91189601 seconds)
  done (took 17.184565378 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.359080705 seconds)
  done (took 3.633200655 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.40634003 seconds)
  done (took 3.675002826 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.930239975 seconds)
  done (took 6.204314488 seconds)
done (took 101.126086099 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.360248772 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.352615358 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.357044195 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.351037199 seconds)
  done (took 10.693235666 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398666166 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.414190114 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411936427 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409514686 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398994892 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410756593 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388824152 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.40376619 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407166358 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397160468 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399125286 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398072276 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.39730348 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.38605929 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397046746 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.395629992 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405262845 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415505468 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.399478931 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.404377151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363065858 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.405292909 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.407780595 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363511587 seconds)
  done (took 34.844695034 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.882499241 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.433670949 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.514151774 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418777146 seconds)
  done (took 7.521322592 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42188157 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.415759196 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428542928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.461618343 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.495748697 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.427211713 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.388708362 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.383047794 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371749244 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.415231801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493443904 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.43181106 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509859522 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.360400875 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549658832 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363566989 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362576778 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416205026 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467083535 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479589641 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.360496258 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414069488 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.416499102 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.432095962 seconds)
  done (took 35.539508918 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.3579893 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375660262 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.357294364 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.355521352 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.364291062 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.356730101 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.358535998 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.358619208 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.357856273 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.363171448 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.355707669 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.370056075 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.357319179 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.357746555 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.364723639 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.357965722 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36307827 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.357716845 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.358940998 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.362695008 seconds)
  done (took 28.483860096 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.352568346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.350896784 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.704359681 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.610650251 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.357183549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.352674308 seconds)
  done (took 13.995958212 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.426697876 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.570330932 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.366699483 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.708729256 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.795986145 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.36646266 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.360040314 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.600793572 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917852748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.896018955 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.423072122 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.430524757 seconds)
  done (took 20.133981242 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.356511506 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.359599269 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.360170235 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376037234 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.413233997 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.363165154 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365472148 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.351776253 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.420402092 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.417235152 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362949241 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.414815246 seconds)
  done (took 21.831395026 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442567733 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355102332 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356172754 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355326008 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354699694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566267037 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377061177 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062550665 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.358828574 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629222945 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363420987 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451978406 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611628369 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354064407 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365573195 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341326223 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580667999 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843813683 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35833752 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368975604 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381151843 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362419932 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371133065 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.569773273 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573076115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354568976 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.616946351 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355042375 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638142007 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369436257 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366097455 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355474404 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63058707 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014399497 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477867777 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567286626 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357655832 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374384772 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.368107021 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.368768442 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358431461 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359467285 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368431385 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356954868 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356729445 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362731662 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099440155 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.3719183 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.355412205 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357275826 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623821651 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453823827 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.361980623 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357642571 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416272732 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357732292 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.363141856 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455706623 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950145039 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357142216 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370437884 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.365750557 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358090954 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372915585 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979409065 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.365265522 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.362989936 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364663849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359233228 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371452823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384054612 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358192389 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.384169118 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360441139 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051056482 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371156494 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368490484 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906274142 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377144343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.367262908 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587277823 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359121427 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361319502 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.357069829 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359422444 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068408236 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37022593 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.344708822 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381908454 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06895515 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590927879 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389101023 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385732402 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584162537 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.346759721 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359603537 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.360370628 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372100055 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382485728 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073357597 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380244361 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366222086 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616389911 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.572889389 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367176065 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.356037481 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86496326 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378817073 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386642002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360508592 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582435548 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.94524476 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377092299 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359736523 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389077621 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361461464 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101206248 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362089767 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390845653 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369444168 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634075204 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154662937 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371852966 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429095728 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366772296 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362631244 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362012728 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386807815 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361263767 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.565416971 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392502235 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381308644 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.362339045 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362684684 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.367607914 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370716965 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.371889858 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586577329 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362642872 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645693621 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362319279 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364109688 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363820653 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587272197 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.370528994 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.369173292 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624415356 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368568133 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374872545 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382437659 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383481804 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463644592 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386127464 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.378267546 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62665339 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.368361246 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367762117 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363739853 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373643081 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371259928 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369856983 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36563323 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943846865 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342953736 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373602127 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253816775 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.379566838 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433053235 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370714026 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57864079 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.372336219 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38716101 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.370866219 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.365396086 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595714468 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375635159 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.364842795 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468060675 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.839970913 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959981554 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387294079 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.365470675 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.362734818 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.362380993 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366492244 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365011937 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365266234 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578463162 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388342489 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374326244 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948424283 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375553226 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367503359 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396516148 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379481406 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.373038441 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367675296 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.364180559 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391008398 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387781944 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38628713 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510757914 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.379629222 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36844837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884332801 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37290196 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368100691 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368820421 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402183047 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366591796 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204298303 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627279 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376963589 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62755054 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391376686 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.392046804 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.367223934 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374417664 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377116478 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.407383721 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393264639 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.379508137 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368298199 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379160031 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937601953 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09780025 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900888652 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381941201 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.388996817 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375946323 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082624291 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386595789 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368813024 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603171747 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090247506 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392052106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853524215 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.374431986 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12449207 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639306938 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611108495 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374351999 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.398911097 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647390894 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597698955 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409592622 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386260326 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383016905 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.360141207 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932524473 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393727974 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463176269 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090641261 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399442066 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384850483 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.422969418 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.392459767 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781699333 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399611327 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376033191 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374472869 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399382778 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191681635 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381911706 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375793416 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997110137 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390017882 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.866605446 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401206195 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589608084 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.39660562 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.381408345 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.38422789 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.383999045 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639899362 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634883687 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377082451 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379846308 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919515772 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23625348 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383223774 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376502469 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119263443 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385534121 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665762844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.388554016 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.382429749 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387185414 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377327767 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376105486 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.374946974 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384104245 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354606639 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862718591 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.38359183 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400318052 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378234291 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23175297 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633376387 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.391747895 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957272748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605077208 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380370695 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402630629 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.381478667 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37840622 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.391437549 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377552716 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613845622 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397114858 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600967515 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388667147 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.36506453 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387171429 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590381409 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378320839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37912019 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629425868 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.385624243 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.400385545 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105318957 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409212104 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379346837 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404857691 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380059795 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401891669 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447490419 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592606426 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.400140194 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.392281506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787114564 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405486847 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390401051 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.39439538 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473225723 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379122736 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.389928538 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.162164048 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966328916 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112428645 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.968919674 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649769312 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389109805 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384259829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381391729 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530247071 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379051145 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654966543 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379986519 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.389797287 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405586681 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379227249 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383332947 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600817507 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656735088 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379440076 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391174815 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389585385 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.38187333 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391196692 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.592511596 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870490595 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936393149 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384075005 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382040743 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106256906 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655223591 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381262229 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382661139 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382176788 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.382914824 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402416331 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.409756676 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38393419 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538821717 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639888747 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047136065 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411766914 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.412278472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.156876552 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382381056 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647082055 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379758535 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599954057 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9777189 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087225056 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648459154 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454703003 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600467489 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.39179397 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533033417 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.381303521 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392068141 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383994292 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229256252 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.380435481 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.393412061 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975001615 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649206063 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.388603875 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.38900002 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408284921 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.395344079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610760849 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103197407 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610803287 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395955798 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393593569 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385086153 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972650198 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657582819 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386396564 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.389390312 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626612772 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626275851 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410518578 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.838696509 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.382850282 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9367732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.359816642 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406527281 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395398173 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098699987 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976452028 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.394794208 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881718436 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390102136 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402300167 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669106654 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.39313537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396978755 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670972467 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.390910752 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392060149 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614901887 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.978544355 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14720611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.416912634 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406616671 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.397563668 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387784023 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436976603 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38820742 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395461227 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.811890123 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41595315 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389129121 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400058927 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.39916483 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408097472 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.392941421 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388705489 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.394641983 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.378863145 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.374752458 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413615991 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49196019 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954615061 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408256897 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.063025708 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740460622 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645767532 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392136261 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.384211501 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.392751136 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388783953 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389609098 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390109519 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390043952 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946006113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.395340871 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.407872955 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392602256 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.605047466 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602135805 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390088754 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616012746 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402767812 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412591132 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.376779942 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38964039 seconds)
  done (took 971.749994002 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.426311098 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.399581796 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.40747078 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.412470638 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420300141 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.399670337 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.457275644 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493034582 seconds)
  done (took 20.718200608 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.399236083 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.405770576 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.396422427 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.399073094 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.394587578 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.854723988 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.410495311 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.398272209 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.397976835 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.388390006 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.400495261 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.036133927 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.398159171 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.393103464 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.388520985 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.399604343 seconds)
  done (took 32.762768753 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.405298412 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.552876298 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.229707408 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.418065858 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.409184123 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.401194323 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.605502005 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.405883363 seconds)
  done (took 26.732185455 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.400859195 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402445214 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.399953952 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.400046686 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.400879479 seconds)
  done (took 8.307855138 seconds)
done (took 1234.591543974 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.39481979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.397017289 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.395172538 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.3977195 seconds)
  done (took 6.887120132 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.377776914 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.378100302 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.377694182 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.390935638 seconds)
  done (took 9.82721574 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.094613461 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.01546074 seconds)
  done (took 5.411924099 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.929909381 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.152605555 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.12639861 seconds)
  done (took 7.511121765 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.686172249 seconds)
  done (took 2.98744846 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.808644462 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.758530297 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.583824896 seconds)
  done (took 6.452406236 seconds)
done (took 40.379385768 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392878981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.641256893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.54455567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.387957354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.550409352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.547407324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.1263822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.395395615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389628938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.415905889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.387244718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.548667593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.111815627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.636023871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.110764176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.634110598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.548104575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397618647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.389228277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.402993479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.129930174 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401082562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.399141552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394236409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.557842723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.533574195 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393870002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.637030341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398258798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.391266396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.558275878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.389191414 seconds)
  done (took 83.043663717 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39982877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.389380418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.397727257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390500929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390056168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.397522253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.391162594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389690258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.390932357 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.389582275 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.407487012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.38983901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.390972714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.40101955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394122895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.402338542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.403795233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398875513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419594485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391065482 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.391681019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391744404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391276843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414267689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.392733004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.400778661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401985059 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.399003071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391840867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403706702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.40246402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.391608474 seconds)
  done (took 78.003748755 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391674601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409238371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.408163009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39143585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39161067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402894118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.395073284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.392476396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407587926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400639244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409812074 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.407713017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.393031414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.392905148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.393458939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.39312313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413958898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392985222 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.393085197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.407222574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.394286023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392343522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.391808073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394468977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399182031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.393935548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393342249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.392440354 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398729107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393953666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394027556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39495539 seconds)
  done (took 78.027090058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.588492378 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402136295 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.402277773 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.359183538 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.402477324 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.402251436 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.395839721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.592076466 seconds)
  done (took 14.852702659 seconds)
done (took 255.229454141 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.398349082 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.398128008 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.599944609 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421531015 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.394226338 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.422750328 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.422052937 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.595064378 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.337742528 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.59704659 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.396675812 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.420156346 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.39638167 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.42129892 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.675873117 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.524875772 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.272618775 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.372156161 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.740806057 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.414928002 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.662817197 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.395140393 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.5975357 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.350986725 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.415405807 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.397275064 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.396803589 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.266389006 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.424286478 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.74256931 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.404276307 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.385488548 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482247067 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.464277286 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.527758643 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.520604472 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.418163309 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.462146029 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.608843669 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.405810658 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.397568051 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.153284916 seconds)
  done (took 83.410962462 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.402706357 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.515446819 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.406844928 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.404597868 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.405590116 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.509713544 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.490545154 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.405155234 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.405147685 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.404520669 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.403851336 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.405247069 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.406246826 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.406840504 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.406449536 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.40561092 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.402724951 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.406582919 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.406362567 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.443515987 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.514295796 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.408742874 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.3996414 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.406484464 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.488546702 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.505908548 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.400669462 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.395403914 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.43637212 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.402590122 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.406104657 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.433854341 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.39488838 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.397766109 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.500355366 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.480844329 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.39944511 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.395319863 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.502568054 seconds)
  done (took 57.02534627 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.39807333 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.646727894 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.813616892 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.403559736 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.395949065 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.402365795 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.474108418 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.398794193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.401735939 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.401676723 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.564331334 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.401504337 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431055174 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.845214776 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.402039115 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399836421 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.399589549 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.398511054 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.648961143 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409056016 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.495318808 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398823193 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.475576647 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.409329712 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.421016042 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400804502 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.404090082 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.966342601 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.401924541 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.566161873 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.182894131 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.481197317 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.922615981 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.824497464 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.181637564 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.409921387 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.404206912 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.563096599 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.394074401 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.39254467 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.466245991 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.392643011 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.814594231 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059180059 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.403831574 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.385955183 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.981942208 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.555219235 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.62582546 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39615832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.833365925 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.382227761 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.381225939 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.382570298 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.61775418 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.394874107 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.380766019 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.944496863 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.395952467 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.450733278 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.383287537 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.375628601 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.633818621 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375238997 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.620224209 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.377679792 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.383518425 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.394418223 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.800458784 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.378834531 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.056177075 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390215351 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.371755982 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.539284825 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.620196048 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.991134816 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.37715617 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.639614957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.903415103 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.448675463 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381327813 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.941863375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.453058683 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380395136 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.375974853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.375179126 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.373259555 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.420307135 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.446771102 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.994773968 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051297808 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.990696189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.470457978 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38699313 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.37434629 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.951353114 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.394554491 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.374953288 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.795160613 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080662115 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.3919718 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.381919453 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.065268027 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.394588291 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.452760363 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.380322596 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.806303156 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.376086948 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.420494934 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.374388932 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.381703995 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.397703461 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.452958455 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.378964322 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.375116697 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.033888288 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.571685354 seconds)
  done (took 182.595760414 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.369294346 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.387201439 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.385069496 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.368390504 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.371016999 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.376139904 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.368288913 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.369581394 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.374993882 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.368540839 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.36925555 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.370968589 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.368969822 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.377056979 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.381133045 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.376316539 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.368915726 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.369946526 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.370751815 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.369020586 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.369537303 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.390291916 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.371082209 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.369866311 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.369116562 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.370006581 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.379279528 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.372476538 seconds)
  done (took 63.738162587 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.377670284 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.928130231 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.386983058 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.504919148 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.403501466 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.374882231 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504997707 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.441424335 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.378814647 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.374788751 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.376256167 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.670841797 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.378723769 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.881002405 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.57073042 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.53330802 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.877274014 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.396212644 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.376204014 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.376108798 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.508334535 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.391997593 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.671355356 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925545673 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.380577627 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.927049189 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.370673785 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.379386358 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.377803112 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.931162423 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.378243362 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.673180314 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.455266468 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.436559649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930313735 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.885768573 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.907285911 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.529091301 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.386451101 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.378511518 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.376619095 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.370930769 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.932421848 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.381192505 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37975525 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.926752836 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397622274 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.38160566 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.384960434 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.379596398 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436743912 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438710463 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.678881463 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936403825 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.455579656 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.392428929 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.50833423 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.789050571 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.383017247 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.885082386 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.375820341 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.936051777 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.400795091 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.371932759 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.380222599 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.386324379 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.527484476 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.509784707 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.89252473 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.398732611 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.883062191 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.543643907 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.388735017 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.379877087 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.382708101 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.936490717 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.886024111 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.543615489 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.520832093 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.577689716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.37355739 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.381534843 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.37238265 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.457622576 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.382264372 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.936720959 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.907880109 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.407392753 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.383236289 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.382540165 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.383178022 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.554782442 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939718643 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.458928769 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.913173326 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.706175798 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.682744814 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.384622947 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.439623765 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.399114881 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.682931206 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.385433157 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.438212069 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.848437451 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.68404593 seconds)
  done (took 164.150599419 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.624712073 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.403343872 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.473335688 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.533549688 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.972445604 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.976410502 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.378234383 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.502992353 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.494155377 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.638849865 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.37923585 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.492127853 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.594518999 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.458438108 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.116670448 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450058304 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.4729962 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.526223799 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.521699573 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.378609263 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.011333509 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.672690317 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.575064151 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.403127871 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.486022348 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.148173699 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.959430418 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.91601963 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.565640914 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.391700711 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.930007455 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.3920876 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.292132386 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.058827402 seconds)
  done (took 64.484716979 seconds)
done (took 616.713003707 seconds)
SAVING RESULT...
DONE!
